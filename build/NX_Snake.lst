0000000000000000 T __code_start
0000000000000000 0000000000000008 D _glapi_tls_Dispatch
0000000000000000 A __start__
0000000000000000 T _start
0000000000000000 d _TLS_MODULE_BASE_
0000000000000008 0000000000000008 b _egl_TLS
0000000000000010 0000000000000008 B _glapi_tls_Context
0000000000000018 0000000000000401 B __nx_dev_path_buf
0000000000000108 T __nx_exit
0000000000000118 T __nx_mod0
0000000000000140 0000000000000034 W __gnu_cxx::__throw_concurrence_lock_error()
0000000000000174 0000000000000034 W __gnu_cxx::__throw_concurrence_unlock_error()
00000000000001a8 0000000000000034 W __gnu_cxx::__throw_concurrence_broadcast_error()
00000000000001dc 0000000000000034 T std::__throw_bad_alloc()
0000000000000210 0000000000000034 T std::__throw_bad_array_new_length()
0000000000000244 0000000000000034 T std::__throw_bad_cast()
0000000000000278 0000000000000054 T std::__throw_logic_error(char const*)
00000000000002cc 0000000000000054 T std::__throw_length_error(char const*)
0000000000000320 0000000000000054 T std::__throw_out_of_range(char const*)
0000000000000374 0000000000000054 T std::__throw_runtime_error(char const*)
00000000000003c8 0000000000000180 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_cold(char*, unsigned long, char const*, unsigned long, unsigned long)
000000000000041c 0000000000000004 b fsdev_last_result
0000000000000420 0000000000000004 b g_fsPriority
0000000000000424 0000000000000004 B g_bsdErrno
0000000000000428 0000000000000004 B g_bsdResult
0000000000000548 0000000000000194 W std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_replace_cold(wchar_t*, unsigned long, wchar_t const*, unsigned long, unsigned long)
00000000000006dc 0000000000000034 T __cxa_throw_bad_array_new_length
0000000000000710 00000000000000a0 T std::__throw_ios_failure(char const*)
00000000000007b0 000000000000000c t _GLOBAL__sub_D_builtin_functions.cpp
00000000000007c0 00000000000008a0 t _GLOBAL__sub_D_glsl_types.cpp
0000000000001060 000000000000006c t _GLOBAL__sub_D_builtin_types.cpp
00000000000010d0 000000000000000c t _GLOBAL__sub_D.00090_globals_io.cc
00000000000010e0 0000000000000034 t _GLOBAL__sub_D_eh_globals.cc
0000000000001120 0000000000000034 T exit
0000000000001160 0000000000000048 T main
00000000000011b0 0000000000000024 t _GLOBAL__sub_I_fastmix.cpp
00000000000011e0 0000000000000014 t _GLOBAL__sub_I_builtin_functions.cpp
0000000000001200 0000000000001f80 t _GLOBAL__sub_I_glsl_types.cpp
0000000000003180 0000000000000044 t _GLOBAL__sub_I_ir_to_mesa.cpp
00000000000031d0 0000000000000090 t _GLOBAL__sub_I_st_glsl_to_tgsi.cpp
0000000000003260 0000000000000f08 t _GLOBAL__sub_I_builtin_types.cpp
0000000000004170 0000000000000048 t _GLOBAL__sub_I_nv50_ir_ra.cpp
00000000000041c0 000000000000000c t _GLOBAL__sub_I.00090_globals_io.cc
00000000000041d0 00000000000000a4 t _GLOBAL__sub_I_cxx11_locale_inst.cc
0000000000004280 00000000000000a4 t _GLOBAL__sub_I_cxx11_wlocale_inst.cc
0000000000004330 0000000000000108 t _GLOBAL__sub_I_locale_inst.cc
0000000000004440 0000000000000108 t _GLOBAL__sub_I_wlocale_inst.cc
0000000000004550 0000000000000204 t _GLOBAL__sub_I_eh_alloc.cc
0000000000004760 0000000000000038 t _GLOBAL__sub_I_eh_globals.cc
00000000000047a0 t __do_global_dtors_aux
00000000000047f0 t frame_dummy
0000000000004820 0000000000000008 W std::ctype<char>::do_widen(char) const
0000000000004830 0000000000000104 T CApp::_AppTimerTimeCallback(unsigned int, CApp*)
0000000000004940 000000000000042c t CApp::DrawAndAnimate() [clone .part.0]
0000000000004d70 00000000000000f4 T CApp::~CApp()
0000000000004d70 00000000000000f4 T CApp::~CApp()
0000000000004e70 00000000000000d8 T CApp::ResetGameState()
0000000000004f50 000000000000027c t CApp::Run() [clone .part.0]
00000000000051d0 0000000000000628 T CApp::CApp()
00000000000051d0 0000000000000628 T CApp::CApp()
0000000000005800 0000000000000010 T CContainer::CContainer(void* (*)(void*))
0000000000005800 0000000000000010 T CContainer::CContainer(void* (*)(void*))
0000000000005810 00000000000000ac T CContainer::~CContainer()
0000000000005810 00000000000000ac T CContainer::~CContainer()
00000000000058c0 0000000000000008 T CContainer::Card()
00000000000058d0 00000000000000e4 T CContainer::Pushback(void*)
00000000000059c0 000000000000000c T CContainer::Getback()
00000000000059d0 0000000000000058 T CContainer::Popfront()
0000000000005a30 0000000000000064 T CSnake::InitGraph(SDL_Renderer*, char*, char*, char*)
0000000000005aa0 0000000000000050 T CSnake::ReleaseGraph()
0000000000005af0 0000000000000070 T CSnake::~CSnake()
0000000000005af0 0000000000000070 T CSnake::~CSnake()
0000000000005b60 00000000000001d0 T CSnake::GrowUp()
0000000000005d30 0000000000000088 T CSnake::CSnake()
0000000000005d30 0000000000000088 T CSnake::CSnake()
0000000000005dc0 00000000000000b8 T CSnake::Draw(SDL_Renderer*)
0000000000005e80 00000000000000d0 T CSnake::Move()
0000000000005f50 00000000000000f0 T CSnake::ChangeDirection(unsigned int)
0000000000006040 000000000000002c T CSnake::IsFoodDetected(SDL_Point)
0000000000006070 000000000000005c T CSnake::Shrink()
00000000000060d0 000000000000003c T CSnake::IsOnCell(int, int)
0000000000006110 0000000000000048 T CSnake::IsBiteHimself()
0000000000006160 00000000000000d0 T CSound::CSound()
0000000000006160 00000000000000d0 T CSound::CSound()
0000000000006230 0000000000000034 T CSound::~CSound()
0000000000006230 0000000000000034 T CSound::~CSound()
0000000000006270 0000000000000004 T CSound::MusicPlay()
0000000000006280 0000000000000004 T CSound::MusicPause()
0000000000006290 0000000000000014 T CSound::CollectPlay()
00000000000062b0 0000000000000014 T CSound::PoisonPlay()
00000000000062d0 0000000000000014 T CSound::PausePlay()
00000000000062f0 0000000000000094 T CText::CText(SDL_Renderer*, SDL_Point, char*)
00000000000062f0 0000000000000094 T CText::CText(SDL_Renderer*, SDL_Point, char*)
0000000000006390 0000000000000010 T CText::~CText()
0000000000006390 0000000000000010 T CText::~CText()
00000000000063a0 000000000000004c T CText::InitGraph(char*, SDL_Color, int)
00000000000063f0 000000000000001c T CText::ReleaseGraph()
0000000000006410 0000000000000014 T CText::Draw(SDL_Renderer*)
0000000000006430 0000000000000038 T CText::DeleteFunc(CText*)
0000000000006470 00000000000000cc T IMG_Init
0000000000006540 00000000000001b4 T IMG_LoadTyped_RW
0000000000006700 0000000000000060 T IMG_Load
0000000000006760 000000000000005c T IMG_LoadTexture
00000000000067c0 00000000000000b4 t IMG_isICOCUR
0000000000006880 00000000000006d8 t LoadICOCUR_RW.constprop.0
0000000000006f60 00000000000000ac T IMG_isBMP
0000000000007010 0000000000000008 T IMG_isICO
0000000000007020 0000000000000008 T IMG_isCUR
0000000000007030 0000000000000be8 T IMG_LoadBMP_RW
0000000000007c20 0000000000000008 T IMG_LoadICO_RW
0000000000007c30 0000000000000008 T IMG_LoadCUR_RW
0000000000007c40 0000000000000078 t GetDataBlock
0000000000007cc0 00000000000000b0 t ReadColorMap
0000000000007d70 0000000000000150 t GetCode.part.0
0000000000007ec0 00000000000003d8 t LWZReadByte.part.1
00000000000082a0 00000000000006a0 t ReadImage.isra.2
0000000000008940 00000000000000e4 T IMG_isGIF
0000000000008a30 00000000000004d4 T IMG_LoadGIF_RW
0000000000008f10 0000000000000004 t init_source
0000000000008f20 000000000000005c t fill_input_buffer
0000000000008f80 000000000000007c t skip_input_data
0000000000009000 0000000000000018 t my_error_exit
0000000000009020 0000000000000004 t output_no_message
0000000000009030 0000000000000004 t term_source
0000000000009040 00000000000000c4 T IMG_InitJPG
0000000000009110 00000000000001ac T IMG_isJPG
00000000000092c0 00000000000002e0 T IMG_LoadJPG_RW
00000000000095a0 00000000000000e4 T IMG_isLBM
0000000000009690 0000000000000ad4 T IMG_LoadLBM_RW
000000000000a170 00000000000000a8 T IMG_isPCX
000000000000a220 0000000000000544 T IMG_LoadPCX_RW
000000000000a770 000000000000002c t png_read_data
000000000000a7a0 0000000000000160 T IMG_InitPNG
000000000000a900 00000000000000c0 T IMG_isPNG
000000000000a9c0 0000000000000568 T IMG_LoadPNG_RW
000000000000af30 00000000000000e8 t ReadNumber
000000000000b020 00000000000000ac T IMG_isPNM
000000000000b0d0 0000000000000424 T IMG_LoadPNM_RW
000000000000b500 000000000000007c t nsvg__xformMultiply
000000000000b580 0000000000000108 t nsvg__xformInverse
000000000000b690 0000000000000128 t nsvg__convertToPixels
000000000000b7c0 00000000000000d8 t nsvg__parseUnits
000000000000b8a0 0000000000000048 t nsvg__scaleGradient
000000000000b8f0 0000000000000020 t nsvg__cmpEdge
000000000000b910 0000000000000058 t nsvg__applyOpacity
000000000000b970 00000000000002f4 t nsvg__parseElement
000000000000bc70 0000000000000050 t nsvg__strndup
000000000000bcc0 0000000000000108 t nsvg__content
000000000000bdd0 0000000000000048 t nsvg__xformPremultiply
000000000000be20 000000000000026c t nsvg__parseColor
000000000000c090 0000000000000048 t nsvg__parseOpacity
000000000000c0e0 000000000000004c t nsvg__parseCoordinateRaw
000000000000c130 0000000000000040 t nsvg__actualLength
000000000000c170 00000000000002b8 t nsvg__createGradient
000000000000c430 0000000000000068 t nsvg__normalize
000000000000c4a0 00000000000001d8 t nsvg__atof
000000000000c680 0000000000000084 t nsvg__addPoint
000000000000c710 00000000000000a0 t nsvg__lineTo
000000000000c7b0 000000000000005c t nsvg__cubicBezTo
000000000000c810 0000000000000034 t nsvg__moveTo
000000000000c850 00000000000000e8 t nsvg__addPathPoint
000000000000c940 00000000000001a0 t nsvg__flattenCubicBez
000000000000cae0 0000000000000080 t nsvg__appendPathPoint
000000000000cb60 00000000000000a4 t nsvg__vecang
000000000000cc10 0000000000000048 t nsvg__deletePaths
000000000000cc60 00000000000002f4 t nsvg__curveBounds
000000000000cf60 00000000000001fc t nsvg__addPath
000000000000d160 00000000000003bc t nsvg__initPaint.part.9
000000000000d520 00000000000000b4 t nsvg__endElement
000000000000d5e0 00000000000001a0 t nsvg__prepareStroke.isra.12
000000000000d780 00000000000000e4 t nsvg__addEdge
000000000000d870 00000000000001bc t nsvg__roundCap.isra.23
000000000000da30 00000000000001b4 t nsvg__getLocalBounds.isra.26
000000000000dbf0 000000000000033c t nsvg__addShape
000000000000df30 00000000000000d8 t nsvg__fillScanline.constprop.30
000000000000e010 00000000000008d0 t nsvg__rasterizeSortedEdges
000000000000e8e0 000000000000020c t nsvg__parseNumber.constprop.34
000000000000eaf0 0000000000000168 t nsvg__parseTransformArgs.constprop.33
000000000000ec60 0000000000000408 t nsvg__parseTransform
000000000000f070 0000000000000988 t nsvg__parseAttr
000000000000fa00 00000000000001a4 t nsvg__parseNameValue
000000000000fbb0 0000000000000114 t nsvg__parseStyle
000000000000fcd0 0000000000000070 t nsvg__parseAttribs
000000000000fd40 000000000000015c t nsvg__parseGradientStop
000000000000fea0 0000000000000314 t nsvg__parseGradient
00000000000101c0 00000000000000b4 t nsvg__getNextPathItem
0000000000010280 0000000000000134 t nsvg__parsePoly
00000000000103c0 0000000000001c40 t nsvg__startElement
0000000000012000 00000000000007d8 t nsvg__expandStroke
00000000000127e0 0000000000000164 T nsvg__parseXML
0000000000012950 00000000000000b0 T nsvgDelete
0000000000012a00 00000000000005c0 T nsvgParse
0000000000012fc0 0000000000000074 T nsvgDeleteRasterizer
0000000000013040 0000000000000050 T nsvgCreateRasterizer
0000000000013090 0000000000000aec T nsvgRasterize
0000000000013b80 00000000000000b8 T IMG_isSVG
0000000000013c40 0000000000000100 T IMG_LoadSVG_RW
0000000000013d40 00000000000006dc T IMG_LoadTGA_RW
0000000000014420 0000000000000020 T IMG_InitTIF
0000000000014440 0000000000000008 T IMG_isTIF
0000000000014450 0000000000000008 T IMG_LoadTIF_RW
0000000000014460 0000000000000040 t free_xcf_header
00000000000144a0 0000000000000050 t load_xcf_tile_none
00000000000144f0 0000000000000128 t xcf_read_property
0000000000014620 00000000000000b4 t read_string
00000000000146e0 0000000000000204 t load_xcf_tile_rle
00000000000148f0 00000000000000ac T IMG_isXCF
00000000000149a0 0000000000000d2c T IMG_LoadXCF_RW
00000000000156d0 00000000000000a8 t get_colorhash.isra.0
0000000000015780 00000000000001a4 t get_next_line.part.1
0000000000015930 0000000000000788 t load_xpm
00000000000160c0 00000000000000ac T IMG_isXPM
0000000000016170 0000000000000014 T IMG_LoadXPM_RW
0000000000016190 0000000000000088 t get_line.constprop.0
0000000000016220 000000000000010c t get_header
0000000000016330 0000000000000078 T IMG_isXV
00000000000163b0 0000000000000148 T IMG_LoadXV_RW
0000000000016500 0000000000000170 t webp_getinfo
0000000000016670 0000000000000040 T IMG_InitWEBP
00000000000166b0 0000000000000008 T IMG_isWEBP
00000000000166c0 0000000000000234 T IMG_LoadWEBP_RW
0000000000016900 000000000000006c t RWread
0000000000016970 0000000000000148 t UTF8_getch
0000000000016ac0 00000000000001f4 t TTF_initFontMetrics
0000000000016cc0 0000000000000044 t Flush_Glyph
0000000000016d10 000000000000087c t Find_Glyph
0000000000017590 000000000000023c t TTF_SizeUTF8_Internal
00000000000177d0 0000000000000064 T TTF_Init
0000000000017840 000000000000009c T TTF_CloseFont
00000000000178e0 0000000000000020 T TTF_SetFontKerning
0000000000017900 000000000000037c T TTF_OpenFontIndexRW
0000000000017c80 000000000000004c T TTF_OpenFontIndex
0000000000017cd0 0000000000000008 T TTF_OpenFont
0000000000017ce0 0000000000000444 T TTF_RenderUTF8_Blended
0000000000018130 00000000000000e8 T TTF_RenderText_Blended
0000000000018220 0000000000000028 T TTF_Quit
0000000000018250 000000000000007c t _Mix_remove_all_effects
00000000000182d0 0000000000000044 t _Mix_channel_done_playing
0000000000018320 00000000000000d4 t Mix_DoEffects
0000000000018400 00000000000000b0 t add_chunk_decoder
00000000000184b0 000000000000061c T Mix_LoadWAV_RW
0000000000018ad0 00000000000000bc T Mix_FreeChunk
0000000000018b90 00000000000000b4 T Mix_Volume
0000000000018b90 00000000000000b4 t Mix_Volume.localalias.9
0000000000018c50 00000000000003ec t mix_channels
0000000000019040 00000000000000ec T Mix_HaltChannel
0000000000019040 00000000000000ec t Mix_HaltChannel.localalias.8
0000000000019130 00000000000000bc T Mix_Playing
00000000000191f0 0000000000000200 T Mix_PlayChannelTimed
00000000000193f0 0000000000000060 t _Mix_UnregisterAllEffects_locked
0000000000019450 0000000000000040 T Mix_UnregisterAllEffects
0000000000019490 00000000000000d4 T Mix_CloseAudio
0000000000019570 00000000000001cc T Mix_OpenAudioDevice
0000000000019740 000000000000000c T Mix_OpenAudio
0000000000019750 0000000000000100 T Mix_AllocateChannels
0000000000019850 000000000000000c t Mix_LockAudio
0000000000019860 000000000000000c t Mix_UnlockAudio
0000000000019870 0000000000000058 t music_internal_halt
00000000000198d0 000000000000006c t music_internal_playing
0000000000019940 00000000000000b0 t add_music_decoder
00000000000199f0 0000000000000308 t open_music_type.part.0
0000000000019d00 0000000000000008 t get_num_music_interfaces
0000000000019d10 0000000000000010 t get_music_interface
0000000000019d20 0000000000000100 t music_pcm_getaudio
0000000000019e20 00000000000001b4 T music_mixer
0000000000019fe0 0000000000000108 t load_music_type
000000000001a0f0 000000000000001c t open_music_type
000000000001a110 00000000000000b4 t detect_music_type_from_magic
000000000001a1d0 0000000000000350 T Mix_LoadMUSType_RW
000000000001a520 00000000000003e0 T Mix_LoadMUS
000000000001a900 0000000000000220 T Mix_FadeInMusicPos
000000000001ab20 000000000000000c T Mix_PlayMusic
000000000001ab30 0000000000000078 T Mix_VolumeMusic
000000000001abb0 000000000000008c t open_music
000000000001ac40 000000000000003c T Mix_HaltMusic
000000000001ac80 0000000000000050 T Mix_PauseMusic
000000000001acd0 0000000000000054 T Mix_ResumeMusic
000000000001ad30 0000000000000080 T Mix_SetMusicCMD
000000000001adb0 00000000000000a0 t close_music
000000000001ae50 0000000000000068 t MODPLUG_Load
000000000001aec0 0000000000000018 t MODPLUG_Unload
000000000001aee0 00000000000000dc t MODPLUG_Open
000000000001afc0 0000000000000014 t MODPLUG_SetVolume
000000000001afe0 0000000000000030 t MODPLUG_Play
000000000001b010 0000000000000038 t MODPLUG_Seek
000000000001b050 000000000000004c t MODPLUG_Delete
000000000001b0a0 0000000000000168 T MODPLUG_CreateFromRW
000000000001b210 0000000000000010 t MODPLUG_GetAudio
000000000001b220 00000000000000e4 t MODPLUG_GetSome
000000000001b310 00000000000000b8 t MPG123_Load
000000000001b3d0 0000000000000018 t MPG123_Unload
000000000001b3f0 0000000000000010 t rwops_read
000000000001b400 0000000000000008 t rwops_seek
000000000001b410 0000000000000004 t rwops_cleanup
000000000001b420 0000000000000008 t MPG123_SetVolume
000000000001b430 000000000000000c t MPG123_Close
000000000001b440 0000000000000074 t MPG123_Delete
000000000001b4c0 0000000000000034 t MPG123_Open
000000000001b500 0000000000000010 t MPG123_GetAudio
000000000001b510 0000000000000028 t mpg_err
000000000001b540 0000000000000074 t MPG123_Seek
000000000001b5c0 000000000000000c t MPG123_Play
000000000001b5d0 000000000000020c t MPG123_CreateFromRW
000000000001b7e0 00000000000001e4 t MPG123_GetSome
000000000001b9d0 000000000000007c t OGG_Load
000000000001ba50 0000000000000018 t OGG_Unload
000000000001ba70 000000000000001c t sdl_read_func
000000000001ba90 0000000000000018 t sdl_seek_func
000000000001bab0 0000000000000010 t sdl_tell_func
000000000001bac0 0000000000000008 t OGG_SetVolume
000000000001bad0 0000000000000060 t OGG_Delete
000000000001bb30 00000000000001dc t set_ov_error
000000000001bd10 0000000000000050 t OGG_Seek
000000000001bd60 000000000000000c t OGG_Play
000000000001bd70 0000000000000010 t OGG_GetAudio
000000000001bd80 000000000000010c t OGG_UpdateSection
000000000001be90 0000000000000304 t OGG_CreateFromRW
000000000001c1a0 00000000000001d0 t OGG_GetSome
000000000001c370 000000000000005c t OPUS_Load
000000000001c3d0 0000000000000018 t OPUS_Unload
000000000001c3f0 0000000000000020 t sdl_read_func
000000000001c410 000000000000001c t sdl_seek_func
000000000001c430 0000000000000010 t sdl_tell_func
000000000001c440 0000000000000008 t OPUS_SetVolume
000000000001c450 0000000000000060 t OPUS_Delete
000000000001c4b0 00000000000001f8 t set_op_error
000000000001c6b0 0000000000000050 t OPUS_Seek
000000000001c700 000000000000000c t OPUS_Play
000000000001c710 0000000000000010 t OPUS_GetAudio
000000000001c720 0000000000000108 t OPUS_UpdateSection
000000000001c830 0000000000000144 t OPUS_CreateFromRW
000000000001c980 0000000000000140 t OPUS_GetSome
000000000001cac0 0000000000000044 t TIMIDITY_Delete
000000000001cb10 0000000000000124 T TIMIDITY_CreateFromRW
000000000001cc40 0000000000000004 t TIMIDITY_Close
000000000001cc50 0000000000000030 t TIMIDITY_Seek
000000000001cc80 0000000000000010 t TIMIDITY_GetAudio
000000000001cc90 0000000000000038 t TIMIDITY_Play
000000000001ccd0 0000000000000008 t TIMIDITY_SetVolume
000000000001cce0 0000000000000004 t TIMIDITY_Open
000000000001ccf0 000000000000011c t TIMIDITY_GetSome
000000000001ce10 0000000000000008 t WAV_SetVolume
000000000001ce20 0000000000000074 t WAV_Play
000000000001cea0 000000000000005c t WAV_Delete
000000000001cf00 0000000000000010 t WAV_GetAudio
000000000001cf10 000000000000022c t WAV_GetSome
000000000001d140 0000000000000738 t WAV_CreateFromRW
000000000001d880 0000000000000164 t recompute_freq
000000000001d9f0 0000000000000114 t recompute_amp
000000000001db10 00000000000000a0 t adjust_volume
000000000001dbb0 00000000000000c0 t do_compute_data
000000000001dc70 0000000000000140 t compute_data
000000000001ddb0 0000000000000324 t start_note
000000000001e0e0 0000000000000048 t finish_note.part.2
000000000001e130 00000000000000b4 t note_off
000000000001e1f0 00000000000000a4 t Timidity_Start
000000000001e2a0 0000000000000280 t Timidity_Seek
000000000001e520 0000000000000630 t Timidity_PlaySome
000000000001eb50 00000000000000c4 t Timidity_SetVolume
000000000001ec20 0000000000000810 t read_config_file
000000000001f430 00000000000000b4 t Timidity_Init_NoConfig
000000000001f4f0 00000000000000a4 t Timidity_Init
000000000001f5a0 0000000000000390 t Timidity_LoadSong
000000000001f930 0000000000000074 t Timidity_FreeSong
000000000001f9b0 00000000000000e4 t Timidity_Exit
000000000001faa0 000000000000002c t _Mix_InitEffects
000000000001fad0 0000000000000004 t _Mix_DeinitEffects
000000000001fae0 000000000000059c t Mix_LoadAIFF_RW
0000000000020080 0000000000000538 t voc_get_block.isra.0
00000000000205c0 0000000000000334 t Mix_LoadVOC_RW
0000000000020900 0000000000000184 t open_file
0000000000020a90 0000000000000004 t safe_malloc
0000000000020aa0 0000000000000080 t add_to_pathlist
0000000000020b20 000000000000004c t free_pathlist
0000000000020b70 0000000000000074 t free_instrument
0000000000020bf0 000000000000099c t load_instrument.isra.5
0000000000021590 0000000000000198 t fill_bank
0000000000021730 0000000000000088 t load_missing_instruments
00000000000217c0 00000000000000a4 t free_instruments
0000000000021870 0000000000000058 t set_default_instrument
00000000000218d0 00000000000000dc t recompute_envelope
00000000000219b0 0000000000000108 t apply_envelope_to_amp
0000000000021ac0 0000000000000168 t update_signal
0000000000021c30 0000000000000780 t mix_voice
00000000000223b0 0000000000000048 T s32tos8
0000000000022400 000000000000004c T s32tou8
0000000000022450 0000000000000048 T s32tos16
00000000000224a0 000000000000004c T s32tou16
00000000000224f0 000000000000004c T s32tos16x
0000000000022540 0000000000000050 T s32tou16x
0000000000022590 0000000000000038 T s32tof32
00000000000225d0 0000000000000030 T s32tos32
0000000000022600 0000000000000034 T s32tos32x
0000000000022640 00000000000008e8 t read_track
0000000000022f30 0000000000000754 t read_midi_file
0000000000023690 00000000000001b8 t update_vibrato.isra.2
0000000000023850 0000000000000874 t resample_voice
00000000000240d0 00000000000002f0 t pre_resample
00000000000243c0 000000000000007c t _Eff_PositionDeinit
0000000000024440 0000000000000204 T SDL_InitSubSystem
0000000000024650 0000000000000004 T SDL_Init
0000000000024660 0000000000000278 T SDL_QuitSubSystem
00000000000248e0 0000000000000090 T SDL_WasInit
0000000000024970 0000000000000054 T SDL_Quit
00000000000249d0 000000000000000c T SDL_GetPlatform
00000000000249e0 0000000000000080 t debug_print
0000000000024a60 00000000000002dc t SDL_PromptAssertion
0000000000024d40 000000000000002c T SDL_ResetAssertionReport
0000000000024d70 00000000000000e0 T SDL_AssertionsQuit
0000000000024e50 00000000000000e4 T SDL_SetError
0000000000024f40 0000000000000028 T SDL_GetError
0000000000024f70 0000000000000018 T SDL_ClearError
0000000000024f90 0000000000000068 T SDL_Error
0000000000025000 000000000000014c T SDL_SetHintWithPriority
0000000000025150 0000000000000080 T SDL_GetHint
00000000000251d0 0000000000000048 T SDL_GetStringBoolean
0000000000025220 0000000000000024 T SDL_GetHintBoolean
0000000000025250 00000000000000b0 T SDL_DelHintCallback
0000000000025300 0000000000000168 T SDL_AddHintCallback
0000000000025470 0000000000000070 T SDL_ClearHints
00000000000254e0 0000000000000040 t SDL_LogOutput
0000000000025520 0000000000000070 T SDL_LogGetPriority
0000000000025590 0000000000000068 T SDL_LogResetPriorities
0000000000025600 00000000000000f0 T SDL_LogMessageV
00000000000256f0 0000000000000080 T SDL_Log
0000000000025770 0000000000000078 T SDL_LogDebug
00000000000257f0 0000000000000078 T SDL_LogInfo
0000000000025870 0000000000000078 T SDL_LogWarn
00000000000258f0 0000000000000020 T SDL_AtomicTryLock
0000000000025910 000000000000006c T SDL_AtomicLock
0000000000025980 0000000000000008 T SDL_AtomicUnlock
0000000000025990 0000000000000004 t SDL_AudioThreadInit_Default
00000000000259a0 0000000000000008 t SDL_AudioGetDeviceBuf_Default
00000000000259b0 0000000000000008 t SDL_AudioCaptureFromDevice_Default
00000000000259c0 0000000000000004 t SDL_AudioDeinitialize_Default
00000000000259d0 0000000000000008 t SDL_AudioOpenDevice_Default
00000000000259e0 000000000000017c t add_audio_device
0000000000025b60 000000000000000c t SDL_BufferQueueFillCallback
0000000000025b70 0000000000000060 t SDL_BufferQueueDrainCallback
0000000000025bd0 0000000000000044 t SDL_AudioUnlockDevice_Default
0000000000025c20 0000000000000044 t SDL_AudioLockDevice_Default
0000000000025c70 0000000000000290 t SDL_RunAudio
0000000000025f00 00000000000000e4 t close_audio_device
0000000000025ff0 0000000000000004 t SDL_AudioFreeDeviceHandle_Default
0000000000026000 0000000000000004 t SDL_AudioLockOrUnlockDeviceWithNoMixerLock
0000000000026010 0000000000000004 t SDL_AudioThreadDeinit_Default
0000000000026020 0000000000000004 t SDL_AudioBeginLoopIteration_Default
0000000000026030 0000000000000004 t SDL_AudioWaitDevice_Default
0000000000026040 0000000000000004 t SDL_AudioPlayDevice_Default
0000000000026050 0000000000000004 t SDL_AudioFlushCapture_Default
0000000000026060 0000000000000004 t SDL_AudioPrepareToClose_Default
0000000000026070 0000000000000004 t SDL_AudioCloseDevice_Default
0000000000026080 00000000000000b8 T SDL_AddAudioDevice
0000000000026140 0000000000000048 t SDL_AudioDetectDevices_Default
0000000000026190 00000000000000d4 T SDL_OpenedAudioDeviceDisconnected
0000000000026270 0000000000000250 t SDL_CaptureAudio
00000000000264c0 0000000000000094 T SDL_PauseAudioDevice
0000000000026560 0000000000000038 T SDL_LockAudioDevice
00000000000265a0 0000000000000038 T SDL_UnlockAudioDevice
00000000000265e0 0000000000000040 T SDL_CloseAudioDevice
0000000000026620 0000000000000164 T SDL_AudioQuit
0000000000026790 00000000000003e8 T SDL_AudioInit
0000000000026b80 0000000000000028 T SDL_SilenceValueForFormat
0000000000026bb0 0000000000000044 T SDL_CalculateAudioSpec
0000000000026c00 0000000000000ba4 t open_audio_device
00000000000277b0 0000000000000008 T SDL_OpenAudioDevice
00000000000277c0 0000000000000080 t SDL_ConvertStereoToMono
0000000000027840 00000000000000c4 t SDL_Convert51ToStereo
0000000000027910 0000000000000090 t SDL_ConvertQuadToStereo
00000000000279a0 00000000000000e0 t SDL_Convert71To51
0000000000027a80 00000000000000c8 t SDL_Convert51ToQuad
0000000000027b50 000000000000006c t SDL_ConvertMonoToStereo
0000000000027bc0 0000000000000098 t SDL_ConvertStereoTo51
0000000000027c60 00000000000000ac t SDL_ConvertQuadTo51
0000000000027d10 000000000000006c t SDL_ConvertStereoToQuad
0000000000027d80 0000000000000100 t SDL_Convert51To71
0000000000027e80 000000000000023c t SDL_Convert_Byteswap
00000000000280c0 0000000000000008 t SDL_CleanupAudioStreamResampler
00000000000280d0 0000000000000014 t SDL_ResetAudioStreamResampler
00000000000280f0 00000000000002a4 t SDL_ResampleAudioStream
00000000000283a0 00000000000003b0 t SDL_ResampleCVT_c2
0000000000028750 00000000000003b0 t SDL_ResampleCVT_c4
0000000000028b00 0000000000000380 t SDL_ResampleCVT_c1
0000000000028e80 00000000000003c4 t SDL_ResampleCVT_c6
0000000000029250 00000000000003b8 t SDL_ResampleCVT_c8
0000000000029610 0000000000000260 T SDL_PrepareResampleFilter
0000000000029870 0000000000000038 T SDL_FreeResampleFilter
00000000000298b0 000000000000004c T SDL_ConvertAudio
0000000000029900 0000000000000298 t SDL_AudioStreamPutInternal
0000000000029ba0 0000000000000c34 T SDL_BuildAudioCVT
000000000002a7e0 00000000000003c0 T SDL_AudioStreamPut
000000000002aba0 0000000000000114 T SDL_AudioStreamFlush
000000000002acc0 0000000000000078 T SDL_AudioStreamGet
000000000002ad40 0000000000000024 T SDL_AudioStreamAvailable
000000000002ad70 0000000000000064 T SDL_AudioStreamClear
000000000002ade0 0000000000000054 T SDL_FreeAudioStream
000000000002ae40 0000000000000280 T SDL_NewAudioStream
000000000002b0c0 000000000000024c t SDL_Convert_F32_to_S32_NEON
000000000002b310 00000000000001ac t SDL_Convert_F32_to_U16_NEON
000000000002b4c0 0000000000000194 t SDL_Convert_F32_to_S16_NEON
000000000002b660 00000000000001e0 t SDL_Convert_F32_to_U8_NEON
000000000002b840 00000000000001c0 t SDL_Convert_F32_to_S8_NEON
000000000002ba00 00000000000001ac t SDL_Convert_S32_to_F32_NEON
000000000002bbb0 0000000000000160 t SDL_Convert_U16_to_F32_NEON
000000000002bd10 0000000000000148 t SDL_Convert_S16_to_F32_NEON
000000000002be60 000000000000017c t SDL_Convert_U8_to_F32_NEON
000000000002bfe0 000000000000015c t SDL_Convert_S8_to_F32_NEON
000000000002c140 0000000000000108 T SDL_ChooseAudioConverters
000000000002c250 0000000000000dd4 T SDL_MixAudioFormat
000000000002d030 0000000000000128 t MS_ADPCM_CalculateSampleFrames
000000000002d160 0000000000000150 t IMA_ADPCM_CalculateSampleFrames
000000000002d2b0 000000000000279c T SDL_LoadWAV_RW
000000000002fa50 0000000000000064 T SDL_HasAltiVec
000000000002fac0 0000000000000064 T SDL_HasMMX
000000000002fb30 0000000000000064 T SDL_Has3DNow
000000000002fba0 0000000000000064 T SDL_HasSSE
000000000002fc10 0000000000000064 T SDL_HasSSE2
000000000002fc80 0000000000000064 T SDL_HasARMSIMD
000000000002fcf0 0000000000000064 T SDL_HasNEON
000000000002fd60 000000000000006c T SDL_SIMDGetAlignment
000000000002fdd0 0000000000000070 T SDL_SIMDAlloc
000000000002fe40 0000000000000010 T SDL_SIMDFree
000000000002fe50 000000000000009c t SDL_EventLoggingChanged
000000000002fef0 000000000000003c t SDL_AutoUpdateSensorsChanged
000000000002ff30 000000000000004c t SDL_AutoUpdateJoysticksChanged
000000000002ff80 0000000000000198 T SDL_StopEventLoop
0000000000030120 0000000000001320 T SDL_PeepEvents
0000000000031440 0000000000000134 T SDL_FlushEvents
0000000000031580 0000000000000008 T SDL_FlushEvent
0000000000031590 000000000000006c T SDL_PumpEvents
0000000000031600 00000000000000e8 T SDL_WaitEventTimeout
00000000000316f0 0000000000000008 T SDL_PollEvent
0000000000031700 00000000000001c4 T SDL_PushEvent
00000000000318d0 00000000000000a8 T SDL_AddEventWatch
0000000000031980 0000000000000104 T SDL_DelEventWatch
0000000000031a90 0000000000000118 T SDL_FilterEvents
0000000000031bb0 00000000000001a0 T SDL_EventState
0000000000031d50 0000000000000090 T SDL_StartEventLoop
0000000000031de0 0000000000000054 T SDL_SendAppEvent
0000000000031e40 0000000000000090 T SDL_EventsInit
0000000000031ed0 000000000000005c T SDL_EventsQuit
0000000000031f30 0000000000000104 t dollarDifference
0000000000032040 00000000000000bc t SDL_AddDollarGesture_one
0000000000032100 0000000000000364 t dollarNormalize.isra.0
0000000000032470 0000000000000028 T SDL_GestureQuit
00000000000324a0 000000000000008c T SDL_GestureAddTouch
0000000000032530 00000000000000d4 T SDL_GestureDelTouch
0000000000032610 00000000000006a0 T SDL_GestureProcessEvent
0000000000032cb0 000000000000002c T SDL_KeyboardInit
0000000000032ce0 000000000000000c T SDL_GetKeyboardFocus
0000000000032cf0 00000000000001ec T SDL_SendKeyboardKey
0000000000032ee0 0000000000000058 T SDL_ResetKeyboard
0000000000032f40 00000000000000ec T SDL_SetKeyboardFocus
0000000000033030 000000000000013c T SDL_ReleaseAutoReleaseKeys
0000000000033170 0000000000000098 T SDL_SendKeyboardText
0000000000033210 0000000000000004 T SDL_KeyboardQuit
0000000000033220 000000000000002c t SDL_TouchMouseEventsChanged
0000000000033250 000000000000004c t SDL_MouseTouchEventsChanged
00000000000332a0 000000000000004c t SDL_MouseRelativeSpeedScaleChanged
00000000000332f0 000000000000004c t SDL_MouseNormalSpeedScaleChanged
0000000000033340 0000000000000048 t SDL_MouseDoubleClickRadiusChanged
0000000000033390 0000000000000048 t SDL_MouseDoubleClickTimeChanged
00000000000333e0 000000000000000c T SDL_GetMouse
00000000000333f0 00000000000000cc T SDL_MouseInit
00000000000334c0 0000000000000018 T SDL_GetMouseFocus
00000000000334e0 0000000000000040 T SDL_GetMouseState
0000000000033520 0000000000000018 T SDL_GetRelativeMouseMode
0000000000033540 00000000000000d8 T SDL_CaptureMouse
0000000000033620 00000000000000c4 T SDL_SetCursor
00000000000336f0 0000000000000074 T SDL_SetMouseFocus
0000000000033770 000000000000012c T SDL_SendMouseMotion
00000000000338a0 0000000000000088 T SDL_WarpMouseInWindow
0000000000033930 00000000000003d4 t SDL_PrivateSendMouseMotion
0000000000033d10 00000000000000f4 t SDL_UpdateMouseFocus.isra.0
0000000000033e10 0000000000000398 T SDL_SendMouseButton
00000000000341b0 0000000000000168 T SDL_SetRelativeMouseMode
0000000000034320 00000000000000a0 T SDL_FreeCursor
00000000000343c0 000000000000005c T SDL_ShowCursor
0000000000034420 00000000000000b8 T SDL_MouseQuit
00000000000344e0 0000000000000040 t SDL_HandleSIG
0000000000034520 0000000000000080 T SDL_QuitInit
00000000000345a0 000000000000006c T SDL_QuitQuit
0000000000034610 0000000000000010 T SDL_SendQuit
0000000000034620 0000000000000014 T SDL_SendPendingSignalEvents
0000000000034640 0000000000000008 T SDL_TouchInit
0000000000034650 00000000000000b0 T SDL_GetTouch
0000000000034700 0000000000000124 T SDL_AddTouch
0000000000034830 0000000000000430 T SDL_SendTouch
0000000000034c60 0000000000000244 T SDL_SendTouchMotion
0000000000034eb0 0000000000000100 T SDL_DelTouch
0000000000034fb0 0000000000000078 T SDL_TouchQuit
0000000000035030 000000000000003c t RemovePendingExposedEvents
0000000000035070 000000000000003c t RemovePendingMoveEvents
00000000000350b0 0000000000000044 t RemovePendingSizeChangedAndResizedEvents
0000000000035100 0000000000000374 T SDL_SendWindowEvent
0000000000035480 0000000000000010 t mem_size
0000000000035490 0000000000000020 t mem_writeconst
00000000000354b0 0000000000000088 t mem_read
0000000000035540 00000000000000b0 t mem_seek
00000000000355f0 0000000000000084 t stdio_seek
0000000000035680 0000000000000060 t stdio_read
00000000000356e0 0000000000000060 t stdio_write
0000000000035740 0000000000000048 T SDL_AllocRW
0000000000035790 000000000000006c T SDL_RWFromFP
0000000000035800 0000000000000078 T SDL_RWFromFile
0000000000035880 00000000000000c4 T SDL_RWFromConstMem
0000000000035950 0000000000000004 T SDL_FreeRW
0000000000035960 0000000000000058 t stdio_close
00000000000359c0 0000000000000024 t mem_close
00000000000359f0 000000000000000c T SDL_RWsize
0000000000035a00 000000000000000c T SDL_RWseek
0000000000035a10 0000000000000064 t stdio_size
0000000000035a80 0000000000000014 T SDL_RWtell
0000000000035aa0 000000000000000c T SDL_RWread
0000000000035ab0 000000000000000c T SDL_RWclose
0000000000035ac0 000000000000011c T SDL_LoadFile_RW
0000000000035be0 0000000000000030 T SDL_LoadFile
0000000000035c10 0000000000000028 T SDL_ReadLE16
0000000000035c40 000000000000002c T SDL_ReadBE16
0000000000035c70 0000000000000028 T SDL_ReadLE32
0000000000035ca0 000000000000002c T SDL_ReadBE32
0000000000035cd0 000000000000001c T SDL_HapticInit
0000000000035cf0 0000000000000068 T SDL_HapticDestroyEffect
0000000000035d60 0000000000000160 T SDL_HapticClose
0000000000035ec0 0000000000000030 T SDL_HapticQuit
0000000000035ef0 0000000000000114 t SDL_LoadVIDPIDListFromHint
0000000000036010 0000000000000010 t SDL_GameControllerIgnoreDevicesExceptChanged
0000000000036020 0000000000000010 t SDL_GameControllerIgnoreDevicesChanged
0000000000036030 0000000000000188 t UpdateEventsForDeviceRemoval
00000000000361c0 00000000000000e8 t SDL_PrivateAppendToMappingString.part.0.constprop.0
00000000000362b0 00000000000000f4 t SDL_PrivateGameControllerButton.isra.0
00000000000363b0 000000000000009c T SDL_GameControllerGetAxisFromString
0000000000036450 0000000000000080 T SDL_GameControllerGetButtonFromString
00000000000364d0 00000000000002c4 t SDL_PrivateGameControllerParseElement
00000000000367a0 0000000000000214 t SDL_PrivateLoadButtonMapping
00000000000369c0 00000000000002ac t SDL_PrivateAddMappingForGUID
0000000000036c70 000000000000027c t SDL_PrivateGameControllerAddMapping
0000000000036ef0 00000000000001c8 t SDL_CreateMappingForHIDAPIController
00000000000370c0 00000000000004e4 t SDL_PrivateGetControllerMapping
00000000000375b0 0000000000000008 T SDL_GameControllerAddMapping
00000000000375c0 00000000000001e0 T SDL_GameControllerAddMappingsFromRW
00000000000377a0 0000000000000154 T SDL_GameControllerInitMappings
0000000000037900 000000000000001c T SDL_IsGameController
0000000000037920 000000000000008c T SDL_GameControllerInit
00000000000379b0 0000000000000198 T SDL_GameControllerOpen
0000000000037b50 00000000000001a4 T SDL_GameControllerGetAxis
0000000000037d00 0000000000000148 T SDL_GameControllerGetButton
0000000000037e50 00000000000008b4 t SDL_GameControllerEventWatcher
0000000000038710 00000000000000c8 T SDL_GameControllerClose
00000000000387e0 000000000000003c T SDL_GameControllerQuit
0000000000038820 00000000000000dc T SDL_GameControllerQuitMappings
0000000000038900 00000000000000b4 T SDL_GameControllerHandleDelayedGuideButton
00000000000389c0 0000000000000020 t SDL_JoystickAllowBackgroundEventsChanged
00000000000389e0 0000000000000014 T SDL_LockJoysticks
0000000000038a00 0000000000000014 T SDL_UnlockJoysticks
0000000000038a20 000000000000008c T SDL_JoystickInit
0000000000038ab0 000000000000004c T SDL_NumJoysticks
0000000000038b00 00000000000000a8 T SDL_GetDriverAndJoystickIndex
0000000000038bb0 0000000000000054 T SDL_JoystickNameForIndex
0000000000038c10 000000000000002c T SDL_PrivateJoystickValid
0000000000038c40 000000000000005c T SDL_PrivateJoystickGetAutoGamepadMapping
0000000000038ca0 0000000000000060 T SDL_JoystickGetAxis
0000000000038d00 0000000000000058 T SDL_JoystickGetHat
0000000000038d60 0000000000000058 T SDL_JoystickGetButton
0000000000038dc0 0000000000000030 T SDL_JoystickInstanceID
0000000000038df0 000000000000004c T SDL_JoystickFromInstanceID
0000000000038e40 00000000000000e8 T SDL_JoystickRumble
0000000000038f30 00000000000000e8 T SDL_JoystickRumbleTriggers
0000000000039020 0000000000000164 T SDL_JoystickClose
0000000000039190 00000000000000d8 T SDL_JoystickQuit
0000000000039270 00000000000001a0 T SDL_PrivateJoystickAxis
0000000000039270 00000000000001a0 t SDL_PrivateJoystickAxis.localalias
0000000000039410 00000000000000d4 T SDL_PrivateJoystickHat
00000000000394f0 0000000000000100 T SDL_PrivateJoystickButton
00000000000395f0 000000000000017c T SDL_JoystickUpdate
0000000000039770 00000000000000ac T SDL_JoystickEventState
0000000000039820 0000000000000050 T SDL_GetJoystickGUIDInfo
0000000000039870 00000000000003a8 T SDL_GetJoystickGameControllerType
0000000000039c20 0000000000000034 T SDL_IsJoystickXboxOneElite
0000000000039c60 000000000000002c T SDL_IsJoystickXboxOneSeriesX
0000000000039c90 00000000000001f0 T SDL_IsJoystickNintendoSwitchPro
0000000000039e80 00000000000001f0 T SDL_IsJoystickSteamController
000000000003a070 0000000000000010 T SDL_IsJoystickXInput
000000000003a080 0000000000000088 T SDL_GetJoystickGameControllerTypeFromGUID
000000000003a110 0000000000000010 T SDL_IsJoystickWGI
000000000003a120 0000000000000010 T SDL_IsJoystickHIDAPI
000000000003a130 0000000000000010 T SDL_IsJoystickRAWINPUT
000000000003a140 0000000000000068 T SDL_JoystickGetDeviceGUID
000000000003a1b0 0000000000000058 T SDL_JoystickGetDeviceInstanceID
000000000003a210 0000000000000048 T SDL_JoystickGetGUID
000000000003a260 0000000000000028 T SDL_JoystickGetVendor
000000000003a290 0000000000000028 T SDL_JoystickGetProduct
000000000003a2c0 00000000000002e8 T SDL_JoystickOpen
000000000003a5b0 0000000000000130 T SDL_JoystickGetGUIDFromString
000000000003a6e0 00000000000000e4 t QueueCmdSetClipRect
000000000003a7d0 0000000000000110 t QueueCmdSetViewport
000000000003a8e0 00000000000001d4 t QueueCmdFillRects
000000000003aac0 00000000000001bc t PrepQueueCmdDrawTexture
000000000003ac80 00000000000001b8 t PrepQueueCmdDrawSolid
000000000003ae40 000000000000031c t RenderDrawLinesWithRectsF
000000000003b160 00000000000000ec T SDL_AllocateRenderVertices
000000000003b250 0000000000000008 T SDL_GetNumRenderDrivers
000000000003b260 0000000000000080 T SDL_GetRenderDriverInfo
000000000003b2e0 000000000000000c T SDL_GetRenderer
000000000003b2f0 0000000000000064 T SDL_GetRendererInfo
000000000003b360 0000000000000070 T SDL_QueryTexture
000000000003b3d0 0000000000000094 T SDL_GetRendererOutputSize
000000000003b470 00000000000000c0 T SDL_SetTextureColorMod
000000000003b530 00000000000000a4 T SDL_SetTextureAlphaMod
000000000003b5e0 00000000000000d0 T SDL_SetTextureBlendMode
000000000003b6b0 0000000000000274 T SDL_LockTexture
000000000003b930 00000000000001c4 T SDL_UnlockTexture
000000000003bb00 00000000000003f4 T SDL_UpdateTexture
000000000003bf00 0000000000000020 T SDL_RenderTargetSupported
000000000003bf20 0000000000000280 T SDL_SetRenderTarget
000000000003c1a0 0000000000000008 T SDL_GetRenderTarget
000000000003c1b0 0000000000000168 T SDL_RenderSetViewport
000000000003c320 00000000000003a8 T SDL_CreateRenderer
000000000003c6d0 000000000000008c T SDL_RenderGetViewport
000000000003c760 000000000000004c T SDL_RenderSetScale
000000000003c7b0 000000000000024c t UpdateLogicalSize
000000000003ca00 00000000000005bc t SDL_RendererEventWatch
000000000003cfc0 000000000000005c T SDL_SetRenderDrawColor
000000000003d020 0000000000000134 T SDL_RenderClear
000000000003d160 0000000000000390 T SDL_RenderDrawLinesF
000000000003d4f0 00000000000000bc T SDL_RenderDrawRectF
000000000003d5b0 0000000000000028 T SDL_RenderDrawRect
000000000003d5e0 0000000000000284 T SDL_RenderCopyF
000000000003d870 0000000000000028 T SDL_RenderCopy
000000000003d8a0 00000000000000c0 T SDL_RenderPresent
000000000003d960 0000000000000144 T SDL_DestroyTexture
000000000003dab0 0000000000000724 T SDL_CreateTexture
000000000003dab0 0000000000000724 t SDL_CreateTexture.localalias
000000000003e1e0 0000000000000620 T SDL_CreateTextureFromSurface
000000000003e800 00000000000000f0 T SDL_DestroyRenderer
000000000003e8f0 0000000000000040 T SDL_GetBlendModeSrcColorFactor
000000000003e930 0000000000000040 T SDL_GetBlendModeDstColorFactor
000000000003e970 0000000000000030 T SDL_GetBlendModeColorOperation
000000000003e9a0 0000000000000040 T SDL_GetBlendModeSrcAlphaFactor
000000000003e9e0 0000000000000040 T SDL_GetBlendModeDstAlphaFactor
000000000003ea20 0000000000000030 T SDL_GetBlendModeAlphaOperation
000000000003ea50 000000000000052c T SDL_SW_UpdateYUVTexture
000000000003ef80 00000000000000e0 T SDL_SW_LockYUVTexture
000000000003f060 00000000000001fc T SDL_SW_CopyYUVToRGB
000000000003f260 0000000000000040 T SDL_SW_DestroyYUVTexture
000000000003f2a0 0000000000000350 T SDL_SW_CreateYUVTexture
000000000003f5f0 0000000000000020 t GLES2_WindowEvent
000000000003f610 0000000000000008 t GLES2_QueueSetViewport
000000000003f620 00000000000000a0 t GLES2_LockTexture
000000000003f6c0 0000000000000110 t GLES2_SetTextureScaleMode
000000000003f7d0 0000000000000008 t GLES2_RenderPresent
000000000003f7e0 000000000000001c t GLES2_GetOutputSize
000000000003f800 0000000000000120 t GLES2_SupportsBlendMode
000000000003f920 0000000000000348 t GLES2_RenderReadPixels
000000000003fc70 00000000000000a4 t GLES2_SetRenderTarget
000000000003fd20 0000000000000d44 t GLES2_CreateTexture
0000000000040a70 00000000000002b4 t GLES2_CacheShader
0000000000040d30 00000000000001c8 t GLES2_QueueCopyEx
0000000000040f00 00000000000000e0 t GLES2_QueueCopy
0000000000040fe0 00000000000000a4 t GLES2_QueueFillRects
0000000000041090 0000000000000100 t GLES2_QueueDrawPoints
0000000000041190 00000000000001b4 t GLES2_QueueDrawLines
0000000000041350 0000000000000184 t GLES2_TexSubImage2D.isra.0
00000000000414e0 000000000000007c t GLES2_UnbindTexture
0000000000041560 00000000000000a4 t GLES2_BindTexture
0000000000041610 00000000000000f0 t GLES2_DestroyTexture
0000000000041700 000000000000026c t GLES2_UpdateTextureYUV
0000000000041970 00000000000003c0 t GLES2_UpdateTexture
0000000000041d30 0000000000000030 t GLES2_UnlockTexture
0000000000041d60 00000000000002b8 t GLES2_DestroyRenderer
0000000000042020 0000000000000c0c t GLES2_CreateRenderer
0000000000042c30 0000000000000be8 t SetDrawState
0000000000043820 0000000000000720 t GLES2_RunCommandQueue
0000000000043f40 00000000000000e8 T GLES2_GetShader
0000000000044030 000000000000001c t SW_WindowEvent
0000000000044050 0000000000000040 t SW_LockTexture
0000000000044090 0000000000000004 t SW_UnlockTexture
00000000000440a0 0000000000000004 t SW_SetTextureScaleMode
00000000000440b0 0000000000000028 t SW_SetRenderTarget
00000000000440e0 0000000000000008 t SW_QueueSetViewport
00000000000440f0 0000000000000008 t SW_DestroyTexture
0000000000044100 0000000000000010 t SW_RenderPresent
0000000000044110 00000000000003f4 t SW_QueueFillRects
0000000000044510 00000000000001c4 t SW_QueueDrawPoints
00000000000446e0 000000000000010c t SW_QueueCopyEx
00000000000447f0 00000000000000d8 t SW_QueueCopy
00000000000448d0 00000000000000f8 t SW_UpdateTexture
00000000000449d0 00000000000000c4 t SW_CreateTexture
0000000000044aa0 0000000000000068 t SW_GetOutputSize
0000000000044b10 0000000000000028 t SW_DestroyRenderer
0000000000044b40 00000000000000a0 t PrepTextureForCopy.isra.0
0000000000044be0 0000000000000110 t SW_RenderReadPixels
0000000000044cf0 0000000000000cf8 t SW_RunCommandQueue
00000000000459f0 00000000000001c8 T SW_CreateRendererForSurface
0000000000045bc0 0000000000000020 t SW_CreateRenderer
0000000000045be0 00000000000000e0 t computeSourceIncrements90
0000000000045cc0 00000000000006ac T SDLgfx_rotozoomSurfaceSizeTrig
0000000000046370 0000000000000eb4 T SDLgfx_rotateSurface
0000000000047230 0000000000000014 T SDL_LockSensors
0000000000047250 0000000000000014 T SDL_UnlockSensors
0000000000047270 0000000000000058 T SDL_SensorInit
00000000000472d0 00000000000000c8 T SDL_SensorClose
00000000000473a0 000000000000006c T SDL_SensorQuit
0000000000047410 00000000000000c4 T SDL_SensorUpdate
00000000000474e0 0000000000000018 T SDL_getenv
0000000000047500 000000000000004c T SDL_malloc
0000000000047550 000000000000005c T SDL_calloc
00000000000475b0 000000000000007c T SDL_realloc
0000000000047630 0000000000000030 T SDL_free
0000000000047660 0000000000000004 T SDL_qsort
0000000000047670 0000000000000004 T SDL_atan2
0000000000047680 0000000000000004 T SDL_atan2f
0000000000047690 0000000000000004 T SDL_acosf
00000000000476a0 0000000000000008 T SDL_ceil
00000000000476b0 0000000000000008 T SDL_ceilf
00000000000476c0 0000000000000004 T SDL_cos
00000000000476d0 0000000000000004 T SDL_cosf
00000000000476e0 0000000000000008 T SDL_fabs
00000000000476f0 0000000000000008 T SDL_fabsf
0000000000047700 0000000000000008 T SDL_floor
0000000000047710 0000000000000008 T SDL_floorf
0000000000047720 0000000000000008 T SDL_truncf
0000000000047730 0000000000000004 T SDL_fmodf
0000000000047740 0000000000000004 T SDL_pow
0000000000047750 0000000000000004 T SDL_sin
0000000000047760 0000000000000004 T SDL_sinf
0000000000047770 0000000000000014 T SDL_sqrt
0000000000047790 0000000000000014 T SDL_sqrtf
00000000000477b0 0000000000000004 T SDL_tanf
00000000000477c0 000000000000000c T SDL_abs
00000000000477d0 0000000000000018 T SDL_isdigit
00000000000477f0 0000000000000018 T SDL_isspace
0000000000047810 0000000000000024 T SDL_toupper
0000000000047840 0000000000000004 T SDL_memset
0000000000047850 0000000000000004 T SDL_memcpy
0000000000047860 0000000000000004 T SDL_memmove
0000000000047870 0000000000000038 T SDL_memcmp
00000000000478b0 0000000000000004 T SDL_strlen
00000000000478c0 0000000000000004 T SDL_strlcpy
00000000000478d0 00000000000000f8 T SDL_utf8strlcpy
00000000000479d0 0000000000000004 T SDL_strlcat
00000000000479e0 000000000000004c T SDL_strdup
0000000000047a30 0000000000000004 T SDL_strchr
0000000000047a40 0000000000000004 T SDL_strrchr
0000000000047a50 0000000000000004 T SDL_strstr
0000000000047a60 0000000000000004 T SDL_itoa
0000000000047a70 0000000000000004 T SDL_atoi
0000000000047a80 0000000000000004 T SDL_atof
0000000000047a90 0000000000000004 T SDL_strtol
0000000000047aa0 0000000000000004 T SDL_strtoll
0000000000047ab0 0000000000000004 T SDL_strtoull
0000000000047ac0 0000000000000004 T SDL_strcmp
0000000000047ad0 0000000000000004 T SDL_strncmp
0000000000047ae0 0000000000000004 T SDL_strcasecmp
0000000000047af0 0000000000000004 T SDL_strncasecmp
0000000000047b00 0000000000000024 T SDL_vsscanf
0000000000047b30 000000000000006c T SDL_sscanf
0000000000047ba0 0000000000000034 T SDL_vsnprintf
0000000000047be0 000000000000006c T SDL_snprintf
0000000000047c50 0000000000000024 T SDL_TLSCreate
0000000000047c80 0000000000000054 T SDL_TLSGet
0000000000047ce0 0000000000000114 T SDL_TLSSet
0000000000047e00 00000000000000c4 T SDL_Generic_GetTLSData
0000000000047ed0 00000000000000fc T SDL_Generic_SetTLSData
0000000000047fd0 0000000000000100 T SDL_GetErrBuf
00000000000480d0 00000000000000f0 T SDL_RunThread
00000000000481c0 00000000000000c8 T SDL_CreateThreadWithStackSize
0000000000048290 0000000000000004 T SDL_CreateThreadInternal
00000000000482a0 0000000000000004 T SDL_SetThreadPriority
00000000000482b0 0000000000000048 T SDL_WaitThread
0000000000048300 000000000000020c t SDL_TimerThread
0000000000048510 00000000000000d8 T SDL_TimerQuit
00000000000485f0 00000000000000b8 T SDL_TimerInit
00000000000486b0 00000000000000e0 T SDL_RemoveTimer
0000000000048790 0000000000000170 T SDL_AddTimer
0000000000048900 0000000000000378 t SDL_FillRect1
0000000000048c80 0000000000000138 t SDL_FillRect2
0000000000048dc0 000000000000026c t SDL_FillRect3
0000000000049030 0000000000000070 t SDL_FillRect4
00000000000490a0 0000000000000198 T SDL_FillRects
0000000000049240 000000000000004c T SDL_FillRect
0000000000049290 0000000000000490 T SDL_GetPixelFormatName
0000000000049720 00000000000001e0 T SDL_PixelFormatEnumToMasks
0000000000049900 0000000000000594 T SDL_MasksToPixelFormatEnum
0000000000049ea0 00000000000001e8 T SDL_InitFormat
000000000004a090 0000000000000128 T SDL_AllocFormat
000000000004a1c0 00000000000000ac T SDL_AllocPalette
000000000004a270 0000000000000060 T SDL_FreePalette
000000000004a2d0 00000000000000d0 T SDL_FreeFormat
000000000004a3a0 00000000000000ac T SDL_SetPixelFormatPalette
000000000004a450 0000000000000098 T SDL_DitherColors
000000000004a4f0 0000000000000090 T SDL_FindColor
000000000004a580 00000000000000dc t Map1to1
000000000004a660 000000000000005c t MapNto1.isra.0
000000000004a6c0 000000000000008c T SDL_DetectPalette
000000000004a750 0000000000000078 T SDL_MapRGB
000000000004a7d0 000000000000008c T SDL_MapRGBA
000000000004a860 0000000000000104 T SDL_GetRGBA
000000000004a970 0000000000000044 T SDL_AllocBlitMap
000000000004a9c0 0000000000000070 T SDL_InvalidateMap
000000000004aa30 000000000000003c T SDL_InvalidateAllBlitMap
000000000004aa70 0000000000000620 T SDL_MapSurface
000000000004b090 000000000000002c T SDL_FreeBlitMap
000000000004b0c0 000000000000010c T SDL_IntersectRect
000000000004b1d0 0000000000000204 T SDL_EnclosePoints
000000000004b3e0 0000000000000484 T SDL_IntersectRectAndLine
000000000004b870 0000000000000134 T SDL_GetSpanEnclosingRect
000000000004b9b0 0000000000000494 T SDL_SoftStretch
000000000004be50 000000000000004c T SDL_SetSurfacePalette
000000000004bea0 0000000000000058 T SDL_SetSurfaceRLE
000000000004bf00 00000000000000e4 T SDL_SetColorKey
000000000004bff0 000000000000001c T SDL_HasColorKey
000000000004c010 0000000000000044 T SDL_GetColorKey
000000000004c060 0000000000000084 T SDL_SetSurfaceColorMod
000000000004c0f0 0000000000000044 T SDL_GetSurfaceColorMod
000000000004c140 0000000000000064 T SDL_SetSurfaceAlphaMod
000000000004c1b0 0000000000000024 T SDL_GetSurfaceAlphaMod
000000000004c1e0 00000000000000f8 T SDL_SetSurfaceBlendMode
000000000004c2e0 000000000000008c T SDL_GetSurfaceBlendMode
000000000004c370 0000000000000054 T SDL_SetClipRect
000000000004c3d0 00000000000000bc T SDL_LowerBlit
000000000004c490 0000000000000204 T SDL_UpperBlit
000000000004c6a0 00000000000000e0 T SDL_LowerBlitScaled
000000000004c780 0000000000000464 T SDL_UpperBlitScaled
000000000004cbf0 0000000000000068 T SDL_LockSurface
000000000004cc60 0000000000000030 T SDL_UnlockSurface
000000000004cc90 0000000000000350 T SDL_ConvertPixels
000000000004cfe0 00000000000000d8 T SDL_FreeSurface
000000000004d0c0 000000000000025c T SDL_CreateRGBSurfaceWithFormat
000000000004d320 0000000000000084 T SDL_CreateRGBSurface
000000000004d3b0 0000000000000088 T SDL_CreateRGBSurfaceFrom
000000000004d440 0000000000000704 T SDL_ConvertSurface
000000000004d440 0000000000000704 t SDL_ConvertSurface.localalias
000000000004db50 0000000000000084 t cmpmodes
000000000004dbe0 0000000000000350 t SDL_GetClosestDisplayModeForDisplay
000000000004df30 000000000000013c t SDL_SetDisplayModeForDisplay
000000000004e070 000000000000000c T SDL_GetVideoDevice
000000000004e080 0000000000000108 T SDL_AddVideoDisplay
000000000004e190 000000000000004c T SDL_GetIndexOfDisplay
000000000004e1e0 0000000000000010 T SDL_IsVideoContextExternal
000000000004e1f0 00000000000000dc T SDL_GetDisplayBounds
000000000004e1f0 00000000000000dc t SDL_GetDisplayBounds.localalias
000000000004e2d0 0000000000000170 T SDL_AddDisplayMode
000000000004e440 0000000000000200 T SDL_GetWindowDisplayIndex
000000000004e640 0000000000000038 T SDL_GetDisplayForWindow
000000000004e680 0000000000000134 T SDL_GetWindowDisplayMode
000000000004e7c0 0000000000000094 T SDL_ToggleDragAndDropSupport
000000000004e860 0000000000000020 T SDL_HasWindows
000000000004e880 000000000000005c T SDL_GetWindowID
000000000004e8e0 0000000000000034 T SDL_GetWindowFromID
000000000004e920 000000000000005c T SDL_GetWindowFlags
000000000004e980 00000000000000c4 T SDL_SetWindowTitle
000000000004ea50 0000000000000158 T SDL_SetWindowData
000000000004ebb0 0000000000000060 t SDL_DestroyWindowTexture
000000000004ec10 00000000000000c4 T SDL_GetWindowData
000000000004ece0 00000000000000e0 t SDL_UpdateWindowTexture
000000000004edc0 00000000000003c0 t SDL_CreateWindowTexture
000000000004f180 0000000000000054 T SDL_GetWindowSize
000000000004f1e0 0000000000000094 T SDL_ShowWindow
000000000004f280 000000000000005c T SDL_RaiseWindow
000000000004f2e0 000000000000005c T SDL_MaximizeWindow
000000000004f340 0000000000000060 T SDL_RestoreWindow
000000000004f3a0 0000000000000144 T SDL_GetWindowSurface
000000000004f4f0 0000000000000088 T SDL_UpdateWindowSurfaceRects
000000000004f580 0000000000000070 T SDL_UpdateWindowSurface
000000000004f5f0 00000000000000c0 T SDL_UpdateWindowGrab
000000000004f6b0 000000000000006c T SDL_SetWindowGrab
000000000004f720 0000000000000014 T SDL_OnWindowResized
000000000004f740 000000000000032c t SDL_UpdateFullscreenMode
000000000004fa70 00000000000000b0 T SDL_HideWindow
000000000004fb20 000000000000009c T SDL_MinimizeWindow
000000000004fbc0 00000000000000d8 T SDL_SetWindowFullscreen
000000000004fca0 00000000000000e0 t SDL_FinishWindowCreation
000000000004fd80 0000000000000008 T SDL_OnWindowHidden
000000000004fd90 0000000000000184 T SDL_SetWindowSize
000000000004ff20 0000000000000008 T SDL_OnWindowMinimized
000000000004ff30 0000000000000020 T SDL_OnWindowRestored
000000000004ff50 0000000000000004 T SDL_OnWindowShown
000000000004ff60 0000000000000024 T SDL_OnWindowEnter
000000000004ff90 0000000000000004 T SDL_OnWindowLeave
000000000004ffa0 0000000000000088 T SDL_OnWindowFocusGained
0000000000050030 000000000000007c T SDL_OnWindowFocusLost
00000000000500b0 000000000000002c T SDL_GetFocusWindow
00000000000500e0 000000000000002c T SDL_EnableScreenSaver
0000000000050110 0000000000000030 T SDL_DisableScreenSaver
0000000000050140 00000000000000d0 T SDL_GL_LoadLibrary
0000000000050210 0000000000000074 T SDL_GL_GetProcAddress
0000000000050290 0000000000000044 T SDL_GL_UnloadLibrary
00000000000502e0 000000000000016c T SDL_GL_ExtensionSupported
0000000000050450 0000000000000098 T SDL_GL_ResetAttributes
00000000000504f0 0000000000000178 T SDL_GL_SetAttribute
00000000000504f0 0000000000000178 t SDL_GL_SetAttribute.localalias
0000000000050670 0000000000000414 T SDL_GL_GetAttribute
0000000000050670 0000000000000414 t SDL_GL_GetAttribute.localalias
0000000000050a90 00000000000000e4 T SDL_GL_CreateContext
0000000000050b80 0000000000000034 T SDL_GL_GetCurrentWindow
0000000000050bc0 0000000000000034 T SDL_GL_GetCurrentContext
0000000000050c00 0000000000000150 T SDL_GL_MakeCurrent
0000000000050d50 000000000000005c T SDL_GL_GetDrawableSize
0000000000050db0 0000000000000080 T SDL_GL_SetSwapInterval
0000000000050e30 000000000000004c T SDL_GL_GetSwapInterval
0000000000050e80 00000000000000b0 T SDL_GL_SwapWindow
0000000000050f30 0000000000000068 T SDL_GL_DeleteContext
0000000000050fa0 0000000000000078 T SDL_StartTextInput
0000000000051020 0000000000000028 T SDL_IsTextInputActive
0000000000051050 0000000000000064 T SDL_StopTextInput
00000000000510c0 0000000000000024 T SDL_HasScreenKeyboardSupport
00000000000510f0 0000000000000170 T SDL_ShowMessageBox
0000000000051260 00000000000000a8 T SDL_Vulkan_LoadLibrary
0000000000051310 0000000000000044 T SDL_Vulkan_UnloadLibrary
0000000000051360 0000000000000338 T SDL_RecreateWindow
00000000000516a0 00000000000001d4 T SDL_DestroyWindow
0000000000051880 0000000000000420 T SDL_CreateWindow
0000000000051ca0 00000000000001bc T SDL_VideoQuit
0000000000051e60 0000000000000234 T SDL_VideoInit
00000000000520a0 00000000000001ac t SDL_ConvertPixels_SwapUVPlanes
0000000000052250 0000000000000338 t SDL_ConvertPixels_PackUVPlanes_to_NV
0000000000052590 0000000000000344 t SDL_ConvertPixels_SplitNV_to_UVPlanes
00000000000528e0 00000000000001e4 t GetYUVPlanes.isra.0
0000000000052ad0 000000000000000c T SDL_GetYUVConversionMode
0000000000052ae0 0000000000000034 T SDL_GetYUVConversionModeForResolution
0000000000052b20 00000000000043dc t SDL_ConvertPixels_ARGB8888_to_YUV
0000000000056f00 00000000000008c4 T SDL_ConvertPixels_YUV_to_RGB
0000000000056f00 00000000000008c4 t SDL_ConvertPixels_YUV_to_RGB.localalias
00000000000577d0 0000000000000130 T SDL_ConvertPixels_RGB_to_YUV
0000000000057900 00000000000025ec T SDL_ConvertPixels_YUV_to_YUV
0000000000059ef0 0000000000000530 T yuv420_rgb565_std
000000000005a420 00000000000004b0 T yuv420_rgb24_std
000000000005a8d0 0000000000000514 T yuv420_rgba_std
000000000005adf0 0000000000000514 T yuv420_bgra_std
000000000005b310 00000000000004fc T yuv420_argb_std
000000000005b810 00000000000004f4 T yuv420_abgr_std
000000000005bd10 0000000000000250 T yuv422_rgb565_std
000000000005bf60 0000000000000220 T yuv422_rgb24_std
000000000005c180 0000000000000244 T yuv422_rgba_std
000000000005c3d0 0000000000000244 T yuv422_bgra_std
000000000005c620 0000000000000238 T yuv422_argb_std
000000000005c860 0000000000000238 T yuv422_abgr_std
000000000005caa0 0000000000000530 T yuvnv12_rgb565_std
000000000005cfd0 00000000000004b0 T yuvnv12_rgb24_std
000000000005d480 0000000000000514 T yuvnv12_rgba_std
000000000005d9a0 0000000000000514 T yuvnv12_bgra_std
000000000005dec0 00000000000004fc T yuvnv12_argb_std
000000000005e3c0 00000000000004f4 T yuvnv12_abgr_std
000000000005e8c0 0000000000000018 t RunThread
000000000005e8e0 00000000000000b0 T SDL_SYS_CreateThread
000000000005e990 000000000000001c T SDL_SYS_SetupThread
000000000005e9b0 0000000000000004 T SDL_ThreadID
000000000005e9c0 0000000000000050 T SDL_SYS_SetThreadPriority
000000000005ea10 000000000000000c T SDL_SYS_WaitThread
000000000005ea20 0000000000000078 T SDL_CreateSemaphore
000000000005eaa0 000000000000002c T SDL_DestroySemaphore
000000000005ead0 000000000000002c T SDL_SemTryWait
000000000005eb00 0000000000000060 T SDL_SemWait
000000000005eb60 000000000000012c T SDL_SemWaitTimeout
000000000005ec90 0000000000000054 T SDL_SemPost
000000000005ecf0 0000000000000090 T SDL_CreateMutex
000000000005ed80 000000000000002c T SDL_DestroyMutex
000000000005edb0 0000000000000038 T SDL_LockMutex
000000000005edf0 0000000000000038 T SDL_UnlockMutex
000000000005ee30 00000000000000b0 T SDL_SYS_GetTLSData
000000000005eee0 0000000000000044 T SDL_SYS_SetTLSData
000000000005ef30 0000000000000008 T SWITCH_CreateWindowFrom
000000000005ef40 0000000000000004 T SWITCH_SetWindowTitle
000000000005ef50 0000000000000004 T SWITCH_SetWindowIcon
000000000005ef60 00000000000001a8 t SWITCH_CreateDevice
000000000005f110 0000000000000034 t SWITCH_Destroy
000000000005f150 000000000000009c T SWITCH_VideoInit
000000000005f1f0 0000000000000040 T SWITCH_VideoQuit
000000000005f230 0000000000000060 T SWITCH_GetDisplayModes
000000000005f290 0000000000000090 T SWITCH_DestroyWindow
000000000005f320 00000000000000a0 T SWITCH_SetDisplayMode
000000000005f3c0 00000000000000b8 T SWITCH_SetWindowSize
000000000005f480 0000000000000128 T SWITCH_CreateWindow
000000000005f5b0 00000000000000c4 T SWITCH_PumpEvents
000000000005f680 0000000000000004 T SWITCH_RestoreWindow
000000000005f690 0000000000000004 T SWITCH_SetWindowPosition
000000000005f6a0 0000000000000004 T SWITCH_ShowWindow
000000000005f6b0 0000000000000004 T SWITCH_HideWindow
000000000005f6c0 0000000000000004 T SWITCH_RaiseWindow
000000000005f6d0 0000000000000004 T SWITCH_MaximizeWindow
000000000005f6e0 0000000000000004 T SWITCH_MinimizeWindow
000000000005f6f0 0000000000000014 t SWITCHAUDIO_GetDeviceBuf
000000000005f710 0000000000000004 t SWITCHAUDIO_ThreadInit
000000000005f720 0000000000000054 t SWITCHAUDIO_Init
000000000005f780 0000000000000044 t SWITCHAUDIO_CloseDevice
000000000005f7d0 0000000000000014 t SWITCHAUDIO_WaitDevice
000000000005f7f0 0000000000000054 t SWITCHAUDIO_PlayDevice
000000000005f850 0000000000000300 t SWITCHAUDIO_OpenDevice
000000000005fb50 0000000000000008 t SWITCH_JoystickGetCount
000000000005fb60 0000000000000004 t SWITCH_JoystickDetect
000000000005fb70 000000000000000c t SWITCH_JoystickGetDeviceName
000000000005fb80 0000000000000008 t SWITCH_JoystickGetDevicePlayerIndex
000000000005fb90 0000000000000004 t SWITCH_JoystickSetDevicePlayerIndex
000000000005fba0 0000000000000004 t SWITCH_JoystickGetDeviceInstanceID
000000000005fbb0 0000000000000024 t SWITCH_JoystickOpen
000000000005fbe0 0000000000000008 t SWITCH_JoystickHasLED
000000000005fbf0 0000000000000008 t SWITCH_JoystickSetLED
000000000005fc00 0000000000000004 t SWITCH_JoystickClose
000000000005fc10 0000000000000184 t SWITCH_UpdateControllerSupport
000000000005fda0 000000000000025c t SWITCH_JoystickUpdate
0000000000060000 0000000000000008 t SWITCH_JoystickSetSensorsEnabled
0000000000060010 0000000000000008 t SWITCH_JoystickRumbleTriggers
0000000000060020 00000000000000c0 t SWITCH_JoystickRumble
00000000000600e0 000000000000008c t SWITCH_JoystickGetDeviceGUID
0000000000060170 0000000000000158 t SWITCH_JoystickInit
00000000000602d0 0000000000000004 t SWITCH_JoystickQuit
00000000000602e0 000000000000000c T SDL_TicksQuit
00000000000602f0 0000000000000008 T SDL_GetPerformanceCounter
0000000000060300 0000000000000038 T SDL_TicksInit
0000000000060340 0000000000000008 T SDL_GetPerformanceFrequency
0000000000060350 0000000000000054 T SDL_GetTicks
00000000000603b0 0000000000000010 T SDL_Delay
00000000000603c0 0000000000000008 t VIRTUAL_JoystickInit
00000000000603d0 0000000000000020 t VIRTUAL_JoystickGetCount
00000000000603f0 0000000000000004 t VIRTUAL_JoystickDetect
0000000000060400 0000000000000044 t VIRTUAL_JoystickGetDeviceName
0000000000060450 0000000000000008 t VIRTUAL_JoystickGetDevicePlayerIndex
0000000000060460 0000000000000004 t VIRTUAL_JoystickSetDevicePlayerIndex
0000000000060470 0000000000000030 t VIRTUAL_JoystickGetDeviceInstanceID
00000000000604a0 0000000000000008 t VIRTUAL_JoystickHasLED
00000000000604b0 0000000000000014 t VIRTUAL_JoystickClose
00000000000604d0 0000000000000008 t VIRTUAL_JoystickGetGamepadMapping
00000000000604e0 0000000000000008 t VIRTUAL_JoystickSetSensorsEnabled
00000000000604f0 0000000000000008 t VIRTUAL_JoystickSetLED
0000000000060500 0000000000000008 t VIRTUAL_JoystickRumble
0000000000060510 00000000000000d8 t VIRTUAL_JoystickUpdate
00000000000605f0 0000000000000074 t VIRTUAL_JoystickOpen
0000000000060670 000000000000004c t VIRTUAL_JoystickGetDeviceGUID
00000000000606c0 0000000000000008 t VIRTUAL_JoystickRumbleTriggers
00000000000606d0 0000000000000094 t VIRTUAL_JoystickQuit
0000000000060770 0000000000000008 T SDL_SYS_HapticInit
0000000000060780 0000000000000004 T SDL_SYS_HapticClose
0000000000060790 0000000000000004 T SDL_SYS_HapticQuit
00000000000607a0 000000000000000c T SDL_SYS_HapticDestroyEffect
00000000000607b0 0000000000000008 t SDL_DUMMY_SensorInit
00000000000607c0 0000000000000004 t SDL_DUMMY_SensorDetect
00000000000607d0 0000000000000008 t SDL_DUMMY_SensorGetDeviceName
00000000000607e0 0000000000000008 t SDL_DUMMY_SensorGetDeviceType
00000000000607f0 0000000000000008 t SDL_DUMMY_SensorGetDeviceNonPortableType
0000000000060800 0000000000000004 t SDL_DUMMY_SensorUpdate
0000000000060810 0000000000000008 t SDL_DUMMY_SensorOpen
0000000000060820 0000000000000004 t SDL_DUMMY_SensorClose
0000000000060830 0000000000000008 t SDL_DUMMY_SensorGetDeviceInstanceID
0000000000060840 0000000000000008 t SDL_DUMMY_SensorGetCount
0000000000060850 0000000000000004 t SDL_DUMMY_SensorQuit
0000000000060860 00000000000000a8 T SDL_NewDataQueue
0000000000060910 000000000000005c T SDL_FreeDataQueue
0000000000060970 00000000000000a0 T SDL_ClearDataQueue
0000000000060a10 0000000000000174 T SDL_WriteToDataQueue
0000000000060b90 0000000000000104 T SDL_ReadFromDataQueue
0000000000060ca0 0000000000000014 T SDL_CountDataQueue
0000000000060cc0 0000000000000020 T SDL_AtomicCAS
0000000000060ce0 0000000000000018 T SDL_AtomicSet
0000000000060d00 000000000000001c T SDL_AtomicAdd
0000000000060d20 0000000000000008 T SDL_AtomicGet
0000000000060d30 00000000000000b0 T SDL_SendDisplayEvent
0000000000060de0 000000000000083c T SDL_uclibc_pow
0000000000061620 0000000000000208 T SDL_uclibc_sqrt
0000000000061830 0000000000000010 T SDL_uclibc_fabs
0000000000061840 0000000000000128 T SDL_uclibc_scalbln
0000000000061970 0000000000000008 T SDL_uclibc_scalbn
0000000000061980 0000000000001548 t SDL_BlendFillRect_RGB555
0000000000062ed0 0000000000001528 t SDL_BlendFillRect_RGB565
0000000000064400 0000000000001030 t SDL_BlendFillRect_RGB888
0000000000065430 0000000000001328 t SDL_BlendFillRect_ARGB8888
0000000000066760 0000000000003f00 t SDL_BlendFillRect_RGB
000000000006a660 000000000000262c t SDL_BlendFillRect_RGBA
000000000006cc90 00000000000001e0 T SDL_BlendFillRects
000000000006ce70 0000000000002250 t SDL_BlendLine_RGB2
000000000006f0c0 0000000000001584 t SDL_BlendLine_RGB555
0000000000070650 0000000000001574 t SDL_BlendLine_RGB565
0000000000071bd0 00000000000021a8 t SDL_BlendLine_RGB4
0000000000073d80 000000000000264c t SDL_BlendLine_RGBA4
00000000000763d0 00000000000023d0 t SDL_BlendLine_RGB888
00000000000787a0 0000000000002d94 t SDL_BlendLine_ARGB8888
000000000007b540 000000000000025c T SDL_BlendLines
000000000007b7a0 0000000000000294 t SDL_BlendPoint_RGB555
000000000007ba40 0000000000000290 t SDL_BlendPoint_RGB565
000000000007bcd0 00000000000001fc t SDL_BlendPoint_RGB888
000000000007bed0 000000000000025c t SDL_BlendPoint_ARGB8888
000000000007c130 0000000000000758 t SDL_BlendPoint_RGB
000000000007c890 00000000000004cc t SDL_BlendPoint_RGBA
000000000007cd60 0000000000000120 T SDL_BlendPoint
000000000007ce80 00000000000001fc T SDL_BlendPoints
000000000007d080 000000000000056c t SDL_DrawLine4
000000000007d5f0 00000000000005ac t SDL_DrawLine2
000000000007dba0 0000000000000288 t SDL_DrawLine1
000000000007de30 00000000000001c0 T SDL_DrawLines
000000000007dff0 00000000000000e8 T SDL_DrawPoint
000000000007e0e0 0000000000000110 T SDL_DrawPoints
000000000007e1f0 00000000000000c4 t copy_opaque_16
000000000007e2c0 00000000000000e0 t uncopy_opaque_16
000000000007e3a0 00000000000005f8 t copy_transl_565
000000000007e9a0 00000000000005f8 t copy_transl_555
000000000007efa0 00000000000000e0 t uncopy_transl_16
000000000007f080 000000000000050c t copy_32
000000000007f590 00000000000000d4 t uncopy_32
000000000007f670 0000000000000008 t getpix_8
000000000007f680 0000000000000008 t getpix_16
000000000007f690 0000000000000010 t getpix_24
000000000007f6a0 0000000000000008 t getpix_32
000000000007f6b0 0000000000001720 t SDL_RLEAlphaBlit
0000000000080dd0 0000000000003c18 t SDL_RLEBlit
00000000000849f0 000000000000027c T SDL_UnRLESurface
0000000000084c70 0000000000000f7c T SDL_RLESurface
0000000000085bf0 0000000000000268 t SDL_SoftBlit
0000000000085e60 00000000000003b0 T SDL_CalculateBlit
0000000000086210 000000000000018c t BlitBto1
00000000000863a0 00000000000000ec t BlitBto2
0000000000086490 00000000000000d0 t BlitBto3
0000000000086560 00000000000000ec t BlitBto4
0000000000086650 0000000000000130 t BlitBto1Key
0000000000086780 00000000000000c4 t BlitBto2Key
0000000000086850 00000000000000c8 t BlitBto4Key
0000000000086920 000000000000073c t BlitBtoNAlpha
0000000000087060 0000000000000788 t BlitBtoNAlphaKey
00000000000877f0 0000000000000100 t BlitBto3Key
00000000000878f0 00000000000000a4 T SDL_CalculateBlit0
00000000000879a0 00000000000001dc t Blit1to1
0000000000087b80 00000000000001f4 t Blit1to2
0000000000087d80 00000000000003cc t Blit1to3
0000000000088150 0000000000000214 t Blit1to4
0000000000088370 00000000000004cc t Blit1to1Key
0000000000088840 00000000000002f8 t Blit1to2Key
0000000000088b40 0000000000000474 t Blit1to3Key
0000000000088fc0 00000000000002c4 t Blit1to4Key
0000000000089290 0000000000001b50 t Blit1toNAlpha
000000000008ade0 0000000000003a4c t Blit1toNAlphaKey
000000000008e830 0000000000000094 T SDL_CalculateBlit1
000000000008e8d0 0000000000000df8 t BlitNto1SurfaceAlpha
000000000008f6d0 0000000000000fd0 t BlitNto1PixelAlpha
00000000000906a0 0000000000001c98 t BlitNto1SurfaceAlphaKey
0000000000092340 000000000000056c t BlitRGBtoRGBSurfaceAlpha
00000000000928b0 000000000000045c t BlitRGBtoRGBPixelAlpha
0000000000092d10 0000000000000330 t Blit16to16SurfaceAlpha128
0000000000093040 00000000000002ac t Blit565to565SurfaceAlpha
00000000000932f0 00000000000002ac t Blit555to555SurfaceAlpha
00000000000935a0 000000000000050c t BlitARGBto565PixelAlpha
0000000000093ab0 000000000000050c t BlitARGBto555PixelAlpha
0000000000093fc0 00000000000021ac t BlitNtoNSurfaceAlpha
0000000000096170 00000000000020ac t BlitNtoNSurfaceAlphaKey
0000000000098220 0000000000002644 t BlitNtoNPixelAlpha
000000000009a870 000000000000029c T SDL_CalculateBlitA
000000000009ab10 00000000000006c8 t Blit_RGB888_index8
000000000009b1e0 00000000000006c8 t Blit_RGB101010_index8
000000000009b8b0 000000000000034c t Blit_RGB888_RGB555
000000000009bc00 000000000000034c t Blit_RGB888_RGB565
000000000009bf50 00000000000003c8 t Blit_RGB565_32
000000000009c320 000000000000000c t Blit_RGB565_ARGB8888
000000000009c330 000000000000000c t Blit_RGB565_ABGR8888
000000000009c340 000000000000000c t Blit_RGB565_RGBA8888
000000000009c350 000000000000000c t Blit_RGB565_BGRA8888
000000000009c360 0000000000001f10 t BlitNto1
000000000009e270 00000000000003d8 t Blit4to4MaskAlpha
000000000009e650 0000000000000198 t Blit4to4CopyAlpha
000000000009e7f0 0000000000000164 t get_permutation
000000000009e960 0000000000002c4c t BlitNtoN
00000000000a15b0 0000000000000b4c t BlitNtoNCopyAlpha
00000000000a2100 0000000000002588 t BlitNto1Key
00000000000a4690 00000000000002c4 t Blit2to2Key
00000000000a4960 0000000000003d8c t BlitNtoNKey
00000000000a86f0 0000000000003528 t BlitNtoNKeyCopyAlpha
00000000000abc20 0000000000000f38 t Blit2101010toN
00000000000acb60 0000000000001760 t BlitNto2101010
00000000000ae2c0 000000000000073c t Blit_3or4_to_3or4__same_rgb
00000000000aea00 0000000000000b38 t Blit_3or4_to_3or4__inversed_rgb
00000000000af540 000000000000034c T SDL_CalculateBlitN
00000000000af890 0000000000000104 t SDL_Blit_RGB888_RGB888_Scale
00000000000af9a0 00000000000006a4 t SDL_Blit_RGB888_RGB888_Blend
00000000000b0050 0000000000000238 t SDL_Blit_RGB888_RGB888_Blend_Scale
00000000000b0290 000000000000042c t SDL_Blit_RGB888_RGB888_Modulate
00000000000b06c0 00000000000001e0 t SDL_Blit_RGB888_RGB888_Modulate_Scale
00000000000b08a0 00000000000007fc t SDL_Blit_RGB888_RGB888_Modulate_Blend
00000000000b10a0 0000000000000314 t SDL_Blit_RGB888_RGB888_Modulate_Blend_Scale
00000000000b13c0 000000000000012c t SDL_Blit_RGB888_BGR888_Scale
00000000000b14f0 00000000000006e4 t SDL_Blit_RGB888_BGR888_Blend
00000000000b1be0 0000000000000238 t SDL_Blit_RGB888_BGR888_Blend_Scale
00000000000b1e20 0000000000000464 t SDL_Blit_RGB888_BGR888_Modulate
00000000000b2290 00000000000001e0 t SDL_Blit_RGB888_BGR888_Modulate_Scale
00000000000b2470 00000000000007f8 t SDL_Blit_RGB888_BGR888_Modulate_Blend
00000000000b2c70 0000000000000314 t SDL_Blit_RGB888_BGR888_Modulate_Blend_Scale
00000000000b2f90 000000000000010c t SDL_Blit_RGB888_ARGB8888_Scale
00000000000b30a0 00000000000004cc t SDL_Blit_RGB888_ARGB8888_Blend
00000000000b3570 0000000000000268 t SDL_Blit_RGB888_ARGB8888_Blend_Scale
00000000000b37e0 0000000000000474 t SDL_Blit_RGB888_ARGB8888_Modulate
00000000000b3c60 0000000000000204 t SDL_Blit_RGB888_ARGB8888_Modulate_Scale
00000000000b3e70 00000000000008ac t SDL_Blit_RGB888_ARGB8888_Modulate_Blend
00000000000b4720 000000000000032c t SDL_Blit_RGB888_ARGB8888_Modulate_Blend_Scale
00000000000b4a50 0000000000000004 t SDL_Blit_BGR888_RGB888_Scale
00000000000b4a60 00000000000006e4 t SDL_Blit_BGR888_RGB888_Blend
00000000000b5150 0000000000000238 t SDL_Blit_BGR888_RGB888_Blend_Scale
00000000000b5390 0000000000000464 t SDL_Blit_BGR888_RGB888_Modulate
00000000000b5800 00000000000001e0 t SDL_Blit_BGR888_RGB888_Modulate_Scale
00000000000b59e0 0000000000000804 t SDL_Blit_BGR888_RGB888_Modulate_Blend
00000000000b61f0 0000000000000314 t SDL_Blit_BGR888_RGB888_Modulate_Blend_Scale
00000000000b6510 0000000000000004 t SDL_Blit_BGR888_BGR888_Scale
00000000000b6520 00000000000006a4 t SDL_Blit_BGR888_BGR888_Blend
00000000000b6bd0 0000000000000238 t SDL_Blit_BGR888_BGR888_Blend_Scale
00000000000b6e10 000000000000042c t SDL_Blit_BGR888_BGR888_Modulate
00000000000b7240 00000000000001e0 t SDL_Blit_BGR888_BGR888_Modulate_Scale
00000000000b7420 00000000000007f0 t SDL_Blit_BGR888_BGR888_Modulate_Blend
00000000000b7c10 0000000000000314 t SDL_Blit_BGR888_BGR888_Modulate_Blend_Scale
00000000000b7f30 0000000000000130 t SDL_Blit_BGR888_ARGB8888_Scale
00000000000b8060 000000000000050c t SDL_Blit_BGR888_ARGB8888_Blend
00000000000b8570 0000000000000268 t SDL_Blit_BGR888_ARGB8888_Blend_Scale
00000000000b87e0 00000000000004a4 t SDL_Blit_BGR888_ARGB8888_Modulate
00000000000b8c90 0000000000000204 t SDL_Blit_BGR888_ARGB8888_Modulate_Scale
00000000000b8ea0 00000000000008ac t SDL_Blit_BGR888_ARGB8888_Modulate_Blend
00000000000b9750 000000000000032c t SDL_Blit_BGR888_ARGB8888_Modulate_Blend_Scale
00000000000b9a80 000000000000010c t SDL_Blit_ARGB8888_RGB888_Scale
00000000000b9b90 00000000000009e8 t SDL_Blit_ARGB8888_RGB888_Blend
00000000000ba580 00000000000002dc t SDL_Blit_ARGB8888_RGB888_Blend_Scale
00000000000ba860 0000000000000004 t SDL_Blit_ARGB8888_RGB888_Modulate
00000000000ba870 0000000000000004 t SDL_Blit_ARGB8888_RGB888_Modulate_Scale
00000000000ba880 000000000000096c t SDL_Blit_ARGB8888_RGB888_Modulate_Blend
00000000000bb1f0 000000000000035c t SDL_Blit_ARGB8888_RGB888_Modulate_Blend_Scale
00000000000bb550 0000000000000004 t SDL_Blit_ARGB8888_BGR888_Scale
00000000000bb560 00000000000009e8 t SDL_Blit_ARGB8888_BGR888_Blend
00000000000bbf50 000000000000034c t SDL_Blit_ARGB8888_BGR888_Blend_Scale
00000000000bc2a0 0000000000000004 t SDL_Blit_ARGB8888_BGR888_Modulate
00000000000bc2b0 0000000000000004 t SDL_Blit_ARGB8888_BGR888_Modulate_Scale
00000000000bc2c0 000000000000096c t SDL_Blit_ARGB8888_BGR888_Modulate_Blend
00000000000bcc30 0000000000000358 t SDL_Blit_ARGB8888_BGR888_Modulate_Blend_Scale
00000000000bcf90 0000000000000004 t SDL_Blit_ARGB8888_ARGB8888_Scale
00000000000bcfa0 0000000000000a58 t SDL_Blit_ARGB8888_ARGB8888_Blend
00000000000bda00 0000000000000310 t SDL_Blit_ARGB8888_ARGB8888_Blend_Scale
00000000000bdd10 00000000000006ec t SDL_Blit_ARGB8888_ARGB8888_Modulate
00000000000be400 00000000000001bc t SDL_Blit_ARGB8888_ARGB8888_Modulate_Scale
00000000000be5c0 0000000000000a10 t SDL_Blit_ARGB8888_ARGB8888_Modulate_Blend
00000000000befd0 0000000000000378 t SDL_Blit_ARGB8888_ARGB8888_Modulate_Blend_Scale
00000000000bf350 000000000000010c t SDL_Blit_RGBA8888_RGB888_Scale
00000000000bf460 00000000000009e0 t SDL_Blit_RGBA8888_RGB888_Blend
00000000000bfe40 00000000000002dc t SDL_Blit_RGBA8888_RGB888_Blend_Scale
00000000000c0120 0000000000000424 t SDL_Blit_RGBA8888_RGB888_Modulate
00000000000c0550 00000000000001e0 t SDL_Blit_RGBA8888_RGB888_Modulate_Scale
00000000000c0730 000000000000096c t SDL_Blit_RGBA8888_RGB888_Modulate_Blend
00000000000c10a0 000000000000035c t SDL_Blit_RGBA8888_RGB888_Modulate_Blend_Scale
00000000000c1400 000000000000012c t SDL_Blit_RGBA8888_BGR888_Scale
00000000000c1530 00000000000009e0 t SDL_Blit_RGBA8888_BGR888_Blend
00000000000c1f10 000000000000034c t SDL_Blit_RGBA8888_BGR888_Blend_Scale
00000000000c2260 000000000000046c t SDL_Blit_RGBA8888_BGR888_Modulate
00000000000c26d0 00000000000001e0 t SDL_Blit_RGBA8888_BGR888_Modulate_Scale
00000000000c28b0 000000000000096c t SDL_Blit_RGBA8888_BGR888_Modulate_Blend
00000000000c3220 0000000000000358 t SDL_Blit_RGBA8888_BGR888_Modulate_Blend_Scale
00000000000c3580 0000000000000104 t SDL_Blit_RGBA8888_ARGB8888_Scale
00000000000c3690 0000000000000a58 t SDL_Blit_RGBA8888_ARGB8888_Blend
00000000000c40f0 0000000000000310 t SDL_Blit_RGBA8888_ARGB8888_Blend_Scale
00000000000c4400 000000000000075c t SDL_Blit_RGBA8888_ARGB8888_Modulate
00000000000c4b60 00000000000001b8 t SDL_Blit_RGBA8888_ARGB8888_Modulate_Scale
00000000000c4d20 0000000000000a10 t SDL_Blit_RGBA8888_ARGB8888_Modulate_Blend
00000000000c5730 0000000000000378 t SDL_Blit_RGBA8888_ARGB8888_Modulate_Blend_Scale
00000000000c5ab0 0000000000000004 t SDL_Blit_ABGR8888_RGB888_Scale
00000000000c5ac0 00000000000009e8 t SDL_Blit_ABGR8888_RGB888_Blend
00000000000c64b0 00000000000002dc t SDL_Blit_ABGR8888_RGB888_Blend_Scale
00000000000c6790 0000000000000004 t SDL_Blit_ABGR8888_RGB888_Modulate
00000000000c67a0 0000000000000004 t SDL_Blit_ABGR8888_RGB888_Modulate_Scale
00000000000c67b0 000000000000096c t SDL_Blit_ABGR8888_RGB888_Modulate_Blend
00000000000c7120 000000000000035c t SDL_Blit_ABGR8888_RGB888_Modulate_Blend_Scale
00000000000c7480 0000000000000004 t SDL_Blit_ABGR8888_BGR888_Scale
00000000000c7490 00000000000009e8 t SDL_Blit_ABGR8888_BGR888_Blend
00000000000c7e80 000000000000034c t SDL_Blit_ABGR8888_BGR888_Blend_Scale
00000000000c81d0 0000000000000004 t SDL_Blit_ABGR8888_BGR888_Modulate
00000000000c81e0 0000000000000004 t SDL_Blit_ABGR8888_BGR888_Modulate_Scale
00000000000c81f0 000000000000096c t SDL_Blit_ABGR8888_BGR888_Modulate_Blend
00000000000c8b60 0000000000000358 t SDL_Blit_ABGR8888_BGR888_Modulate_Blend_Scale
00000000000c8ec0 000000000000012c t SDL_Blit_ABGR8888_ARGB8888_Scale
00000000000c8ff0 0000000000000a50 t SDL_Blit_ABGR8888_ARGB8888_Blend
00000000000c9a40 0000000000000308 t SDL_Blit_ABGR8888_ARGB8888_Blend_Scale
00000000000c9d50 000000000000079c t SDL_Blit_ABGR8888_ARGB8888_Modulate
00000000000ca4f0 00000000000001bc t SDL_Blit_ABGR8888_ARGB8888_Modulate_Scale
00000000000ca6b0 0000000000000a10 t SDL_Blit_ABGR8888_ARGB8888_Modulate_Blend
00000000000cb0c0 0000000000000378 t SDL_Blit_ABGR8888_ARGB8888_Modulate_Blend_Scale
00000000000cb440 0000000000000004 t SDL_Blit_BGRA8888_RGB888_Scale
00000000000cb450 00000000000009e0 t SDL_Blit_BGRA8888_RGB888_Blend
00000000000cbe30 00000000000002dc t SDL_Blit_BGRA8888_RGB888_Blend_Scale
00000000000cc110 000000000000046c t SDL_Blit_BGRA8888_RGB888_Modulate
00000000000cc580 00000000000001e0 t SDL_Blit_BGRA8888_RGB888_Modulate_Scale
00000000000cc760 000000000000096c t SDL_Blit_BGRA8888_RGB888_Modulate_Blend
00000000000cd0d0 000000000000035c t SDL_Blit_BGRA8888_RGB888_Modulate_Blend_Scale
00000000000cd430 0000000000000004 t SDL_Blit_BGRA8888_BGR888_Scale
00000000000cd440 00000000000009e8 t SDL_Blit_BGRA8888_BGR888_Blend
00000000000cde30 000000000000034c t SDL_Blit_BGRA8888_BGR888_Blend_Scale
00000000000ce180 0000000000000424 t SDL_Blit_BGRA8888_BGR888_Modulate
00000000000ce5b0 00000000000001e0 t SDL_Blit_BGRA8888_BGR888_Modulate_Scale
00000000000ce790 000000000000096c t SDL_Blit_BGRA8888_BGR888_Modulate_Blend
00000000000cf100 0000000000000358 t SDL_Blit_BGRA8888_BGR888_Modulate_Blend_Scale
00000000000cf460 000000000000010c t SDL_Blit_BGRA8888_ARGB8888_Scale
00000000000cf570 0000000000000a50 t SDL_Blit_BGRA8888_ARGB8888_Blend
00000000000cffc0 0000000000000308 t SDL_Blit_BGRA8888_ARGB8888_Blend_Scale
00000000000d02d0 00000000000007bc t SDL_Blit_BGRA8888_ARGB8888_Modulate
00000000000d0a90 00000000000001b8 t SDL_Blit_BGRA8888_ARGB8888_Modulate_Scale
00000000000d0c50 0000000000000a10 t SDL_Blit_BGRA8888_ARGB8888_Modulate_Blend
00000000000d1660 0000000000000378 t SDL_Blit_BGRA8888_ARGB8888_Modulate_Blend_Scale
00000000000d19e0 0000000000000160 T SDL_BlitCopy
00000000000d1b40 00000000000009d8 T SDL_Blit_Slow
00000000000d2520 0000000000000090 t SDL_EGL_GetVersion
00000000000d25b0 0000000000000134 T SDL_EGL_SetErrorEx
00000000000d26f0 0000000000000134 T SDL_EGL_HasExtension
00000000000d2830 000000000000011c T SDL_EGL_GetProcAddress
00000000000d2950 0000000000000080 T SDL_EGL_UnloadLibrary
00000000000d29d0 0000000000000284 T SDL_EGL_LoadLibraryOnly
00000000000d2c60 0000000000000198 T SDL_EGL_LoadLibrary
00000000000d2e00 00000000000003f4 T SDL_EGL_ChooseConfig
00000000000d3200 00000000000000b4 T SDL_EGL_MakeCurrent
00000000000d32c0 000000000000007c T SDL_EGL_SetSwapInterval
00000000000d3340 0000000000000030 T SDL_EGL_GetSwapInterval
00000000000d3370 0000000000000060 T SDL_EGL_SwapBuffers
00000000000d33d0 0000000000000024 T SDL_EGL_DeleteContext
00000000000d3400 00000000000003f4 T SDL_EGL_CreateContext
00000000000d3800 00000000000000d0 T SDL_EGL_CreateSurface
00000000000d38d0 0000000000000024 T SDL_EGL_DestroySurface
00000000000d3900 0000000000000004 T SWITCH_InitKeyboard
00000000000d3910 00000000000000c4 T SWITCH_PollKeyboard
00000000000d39e0 0000000000000004 T SWITCH_QuitKeyboard
00000000000d39f0 0000000000000008 t SWITCH_SetRelativeMouseMode
00000000000d3a00 0000000000000020 T SWITCH_InitMouse
00000000000d3a20 0000000000000154 T SWITCH_PollMouse
00000000000d3b80 0000000000000004 T SWITCH_QuitMouse
00000000000d3b90 0000000000000018 T SWITCH_GLES_DefaultProfileConfig
00000000000d3bb0 000000000000000c T SWITCH_GLES_LoadLibrary
00000000000d3bc0 000000000000000c T SWITCH_GLES_CreateContext
00000000000d3bd0 0000000000000010 T SWITCH_GLES_MakeCurrent
00000000000d3be0 000000000000000c T SWITCH_GLES_SwapWindow
00000000000d3bf0 0000000000000004 t SWITCH_CancelCb
00000000000d3c00 0000000000000030 t SWITCH_EnterCb
00000000000d3c30 0000000000000004 T SWITCH_InitSwkb
00000000000d3c40 000000000000004c T SWITCH_PollSwkb
00000000000d3c90 0000000000000040 T SWITCH_QuitSwkb
00000000000d3cd0 0000000000000008 T SWITCH_HasScreenKeyboardSupport
00000000000d3ce0 000000000000000c T SWITCH_IsScreenKeyboardShown
00000000000d3cf0 0000000000000100 T SWITCH_StartTextInput
00000000000d3df0 000000000000003c T SWITCH_StopTextInput
00000000000d3e30 0000000000000064 T SWITCH_InitTouch
00000000000d3ea0 0000000000000004 T SWITCH_QuitTouch
00000000000d3eb0 0000000000000524 T SWITCH_PollTouch
00000000000d43e0 0000000000000028 T SDL_LoadFunction
00000000000d4410 0000000000000004 T SDL_UnloadObject
00000000000d4420 0000000000000024 T SDL_uclibc_copysign
00000000000d4450 000000000000009c t op_granpos_add
00000000000d44f0 0000000000000148 t op_get_next_page
00000000000d4640 00000000000002e4 t op_fetch_headers_impl
00000000000d4930 000000000000009c t op_fetch_headers
00000000000d49d0 0000000000000054 t op_get_packet_duration
00000000000d4a30 00000000000000e8 t op_collect_audio_packets
00000000000d4b20 00000000000000d8 t op_clear
00000000000d4c00 0000000000000080 t op_seek_helper
00000000000d4c80 00000000000000ac t op_decode
00000000000d4d30 0000000000000078 t op_rescale64.part.0
00000000000d4db0 0000000000000084 t op_granpos_diff
00000000000d4e40 0000000000000268 t op_find_initial_pcm_offset
00000000000d50b0 0000000000000278 t op_find_final_pcm_offset
00000000000d5330 00000000000000d8 t op_update_gain.part.7
00000000000d5410 000000000000011c t op_make_decode_ready.part.8
00000000000d5530 0000000000000660 t op_fetch_and_process_page
00000000000d5b90 0000000000000340 t op_read_native.part.9
00000000000d5ed0 0000000000000a0c t op_open_seekable2
00000000000d68e0 0000000000000074 t op_open2
00000000000d6960 0000000000000268 T op_test_callbacks
00000000000d6bd0 000000000000004c T op_open_callbacks
00000000000d6c20 000000000000002c T op_free
00000000000d6c50 0000000000000008 T op_seekable
00000000000d6c60 0000000000000040 T op_head
00000000000d6ca0 0000000000000cf8 T op_pcm_seek
00000000000d79a0 0000000000000018 T op_read
00000000000d79c0 0000000000000058 t op_strdup_with_len
00000000000d7a20 00000000000000d4 t op_tags_ensure_capacity
00000000000d7b00 0000000000000280 t opus_tags_parse_impl
00000000000d7d80 00000000000001b0 T opus_head_parse
00000000000d7f30 000000000000000c T opus_tags_init
00000000000d7f40 0000000000000078 T opus_tags_clear
00000000000d7fc0 000000000000009c T opus_tags_parse
00000000000d8060 000000000000003c T opus_tagncompare
00000000000d80a0 0000000000000128 t opus_tags_get_gain.isra.0.constprop.1
00000000000d81d0 0000000000000018 T opus_tags_get_album_gain
00000000000d81f0 0000000000000018 T opus_tags_get_track_gain
00000000000d8210 000000000000005c t op_strncasecmp
00000000000d8270 0000000000000328 T opus_pcm_soft_clip
00000000000d85a0 000000000000009c T opus_packet_get_samples_per_frame
00000000000d8640 0000000000000438 t opus_packet_parse_impl
00000000000d8a80 0000000000000084 t smooth_fade
00000000000d8b10 0000000000000cd4 t opus_decode_frame
00000000000d97f0 000000000000006c T opus_decoder_get_size
00000000000d9860 0000000000000124 T opus_decoder_init
00000000000d9990 000000000000020c T opus_decoder_ctl
00000000000d9ba0 0000000000000044 T opus_packet_get_bandwidth
00000000000d9bf0 0000000000000010 T opus_packet_get_nb_channels
00000000000d9c00 00000000000005e4 t opus_decode_native
00000000000da1f0 000000000000004c T opus_packet_get_nb_frames
00000000000da240 0000000000000060 T opus_packet_get_nb_samples
00000000000da2a0 00000000000000f8 t opus_copy_channel_out_short
00000000000da3a0 0000000000000074 T opus_multistream_decoder_get_size
00000000000da420 0000000000000160 T opus_multistream_decoder_init
00000000000da580 0000000000000130 T opus_multistream_decoder_create
00000000000da6b0 0000000000000394 t opus_multistream_decoder_ctl_va_list
00000000000daa50 0000000000000078 T opus_multistream_decoder_ctl
00000000000daad0 000000000000048c t opus_multistream_decode_native
00000000000daf60 0000000000000034 T opus_multistream_decode
00000000000dafa0 0000000000000004 T opus_multistream_decoder_destroy
00000000000dafb0 0000000000000038 t celt_fatal
00000000000daff0 0000000000000088 t resampling_factor
00000000000db080 0000000000000234 t comb_filter
00000000000db2c0 0000000000000068 t init_caps
00000000000db330 00000000000001c8 t deemphasis
00000000000db500 000000000000042c t celt_synthesis
00000000000db930 00000000000009a0 t celt_decode_lost
00000000000dc2d0 00000000000002ec t validate_celt_decoder
00000000000dc5c0 0000000000000060 t celt_decoder_get_size
00000000000dc620 0000000000001088 t celt_decode_with_ec
00000000000dd6b0 00000000000002f8 t opus_custom_decoder_ctl
00000000000dd9b0 00000000000000f0 t celt_decoder_init
00000000000ddaa0 000000000000004c t ec_tell_frac
00000000000ddaf0 000000000000007c t ec_dec_normalize
00000000000ddb70 0000000000000060 t ec_dec_init
00000000000ddbd0 000000000000002c t ec_decode
00000000000ddc00 0000000000000034 t ec_decode_bin
00000000000ddc40 0000000000000044 t ec_dec_update
00000000000ddc90 0000000000000044 t ec_dec_bit_logp
00000000000ddce0 0000000000000058 t ec_dec_icdf
00000000000ddd40 0000000000000074 t ec_dec_bits
00000000000dddc0 0000000000000110 t ec_dec_uint
00000000000dded0 000000000000021c t clt_mdct_backward_c
00000000000de0f0 0000000000000050 t opus_custom_mode_create
00000000000de140 00000000000000e8 t find_best_pitch
00000000000de230 000000000000023c t pitch_downsample
00000000000de470 0000000000000254 t pitch_search
00000000000de6d0 0000000000000128 t _celt_lpc
00000000000de800 0000000000000270 t celt_fir_c
00000000000dea70 0000000000000368 t celt_iir
00000000000dede0 0000000000000184 t _celt_autocorr
00000000000def70 0000000000000218 t unquant_coarse_energy
00000000000df190 0000000000000120 t unquant_fine_energy
00000000000df2b0 0000000000000168 t unquant_energy_finalise
00000000000df420 0000000000000d04 t clt_compute_allocation
00000000000e0130 00000000000000a4 t exp_rotation1
00000000000e01e0 000000000000017c t exp_rotation.part.0
00000000000e0360 000000000000023c t op_pvq_search_c
00000000000e05a0 00000000000001e8 t alg_quant
00000000000e0790 0000000000000180 t alg_unquant
00000000000e0910 000000000000009c t renormalise_vector
00000000000e09b0 000000000000024c t stereo_itheta
00000000000e0c00 0000000000000228 t celt_pitch_xcorr_float_neon
00000000000e0e30 00000000000000bc t celt_inner_prod_neon
00000000000e0ef0 00000000000000f4 t dual_inner_prod_neon
00000000000e0ff0 0000000000000010 t silk_Get_Decoder_Size
00000000000e1000 0000000000000038 t silk_InitDecoder
00000000000e1040 0000000000000acc t silk_Decode
00000000000e1b10 0000000000000264 t silk_stereo_MS_to_LR
00000000000e1d80 00000000000003a0 t silk_resampler_init
00000000000e2120 00000000000001ac t silk_resampler
00000000000e22d0 00000000000006b8 t silk_resampler_private_down_FIR
00000000000e2990 00000000000001b8 t silk_resampler_private_IIR_FIR
00000000000e2b50 0000000000000174 t silk_resampler_private_up2_HQ
00000000000e2cd0 0000000000000004 t silk_resampler_private_up2_HQ_wrapper
00000000000e2ce0 0000000000000130 t silk_stereo_decode_pred
00000000000e2e10 0000000000000030 t silk_stereo_decode_mid_only
00000000000e2e40 0000000000000064 t validate_layout
00000000000e2eb0 0000000000000070 t get_left_channel
00000000000e2f20 0000000000000074 t get_right_channel
00000000000e2fa0 0000000000000074 t get_mono_channel
00000000000e3020 00000000000000bc t intensity_stereo.isra.0
00000000000e30e0 000000000000014c t deinterleave_hadamard
00000000000e3230 00000000000000a8 t special_hybrid_folding.isra.1
00000000000e32e0 0000000000000108 t quant_band_n1.isra.2
00000000000e33f0 0000000000000018 t celt_lcg_rand
00000000000e3410 000000000000006c t bitexact_log2tan
00000000000e3480 00000000000008f0 t compute_theta
00000000000e3d70 00000000000005b0 t quant_partition
00000000000e4320 00000000000001e4 t denormalise_bands
00000000000e4510 000000000000033c t anti_collapse
00000000000e4850 000000000000007c t haar1
00000000000e48d0 00000000000004fc t quant_band
00000000000e4dd0 000000000000056c t quant_band_stereo
00000000000e5340 0000000000001024 t quant_all_bands
00000000000e6370 000000000000013c t encode_pulses
00000000000e64b0 00000000000002d0 t decode_pulses
00000000000e6780 00000000000000a0 t ec_enc_carry_out.part.0
00000000000e6820 00000000000000b0 t ec_encode
00000000000e68d0 0000000000000098 t ec_enc_bit_logp
00000000000e6970 00000000000000a0 t ec_enc_bits
00000000000e6a10 0000000000000090 t ec_enc_uint
00000000000e6aa0 0000000000000768 t opus_fft_impl
00000000000e7210 0000000000000194 t ec_laplace_decode
00000000000e73b0 0000000000000048 t isqrt32
00000000000e7400 000000000000004c t silk_init_decoder
00000000000e7450 0000000000000220 t silk_decode_frame
00000000000e7670 0000000000000260 t silk_decode_parameters
00000000000e78d0 00000000000003e0 t silk_decode_indices
00000000000e7cb0 0000000000000284 t silk_decode_pulses
00000000000e7f40 0000000000000284 t silk_decoder_set_fs
00000000000e81d0 00000000000000f4 t silk_gains_dequant
00000000000e82d0 0000000000000178 t silk_NLSF_decode
00000000000e8450 0000000000000028 t silk_PLC_Reset
00000000000e8480 0000000000000aa4 t silk_PLC
00000000000e8f30 00000000000001f0 t silk_PLC_glue_frames
00000000000e9120 0000000000000420 t silk_shell_decoder
00000000000e9540 00000000000000a0 t silk_NLSF_unpack
00000000000e95e0 0000000000000074 t silk_bwexpander
00000000000e9660 000000000000012c t silk_decode_pitch
00000000000e9790 000000000000006c t silk_log2lin
00000000000e9800 0000000000000174 t silk_LPC_analysis_filter
00000000000e9980 000000000000036c t silk_NLSF2A
00000000000e9cf0 00000000000002e8 t silk_NLSF_stabilize
00000000000e9fe0 0000000000000054 t silk_resampler_private_AR2
00000000000ea040 0000000000000084 t silk_insertion_sort_increasing_all_values_int16
00000000000ea0d0 0000000000000128 t silk_sum_sqr_shift
00000000000ea200 0000000000000220 t silk_LPC_fit
00000000000ea420 0000000000000640 t silk_LPC_inverse_pred_gain_neon
00000000000eaa60 000000000000004c t silk_CNG_Reset
00000000000eaab0 00000000000006b4 t silk_CNG
00000000000eb170 0000000000000108 t silk_decode_signs
00000000000eb280 0000000000000990 t silk_decode_core
00000000000ebc10 0000000000000060 t silk_bwexpander_32
00000000000ebc70 00000000000003b4 t silk_LPC_inverse_pred_gain_c
00000000000ec030 00000000000000d8 T jpeg_CreateCompress
00000000000ec110 0000000000000004 T jpeg_destroy_compress
00000000000ec120 0000000000000094 T jpeg_suppress_tables
00000000000ec1c0 0000000000000180 T jpeg_finish_compress
00000000000ec340 00000000000000a4 T jpeg_start_compress
00000000000ec3f0 00000000000000f0 T jpeg_write_scanlines
00000000000ec4e0 00000000000000dc T jinit_compress_master
00000000000ec5c0 0000000000000054 t start_pass_main
00000000000ec620 0000000000000134 t process_data_simple_main
00000000000ec760 00000000000000d0 T jinit_c_main_controller
00000000000ec830 0000000000000074 t write_marker_byte
00000000000ec8b0 00000000000000c8 t write_file_trailer
00000000000ec980 00000000000001a4 t write_marker_header
00000000000ecb30 00000000000004d0 t emit_sof
00000000000ed000 00000000000003a4 t emit_dqt
00000000000ed3b0 0000000000000188 t write_frame_header
00000000000ed540 0000000000000324 t emit_dht
00000000000ed870 0000000000000200 t write_tables_only
00000000000eda70 0000000000000bd4 t write_scan_header
00000000000ee650 0000000000000ba0 t write_file_header
00000000000ef1f0 0000000000000080 T jinit_marker_writer
00000000000ef270 00000000000006dc t validate_script
00000000000ef950 0000000000000040 t pass_startup
00000000000ef990 00000000000000c4 t finish_pass_master
00000000000efa60 0000000000000258 t per_scan_setup
00000000000efcc0 0000000000000144 t select_scan_parameters
00000000000efe10 00000000000001f8 t prepare_for_pass
00000000000f0010 000000000000039c T jinit_c_master_control
00000000000f03b0 000000000000005c T jpeg_abort
00000000000f0410 0000000000000034 T jpeg_destroy
00000000000f0450 0000000000000028 T jpeg_alloc_quant_table
00000000000f0480 0000000000000028 T jpeg_alloc_huff_table
00000000000f04b0 00000000000000d0 t add_huff_table.part.0
00000000000f0580 00000000000000fc T jpeg_add_quant_table
00000000000f0680 000000000000005c T jpeg_set_linear_quality
00000000000f06e0 0000000000000040 T jpeg_quality_scaling
00000000000f0720 0000000000000034 T jpeg_set_quality
00000000000f0760 000000000000029c T jpeg_set_colorspace
00000000000f0a00 0000000000000068 T jpeg_default_colorspace
00000000000f0a70 0000000000000198 T jpeg_set_defaults
00000000000f0c10 000000000000006c t encode_mcu_AC_first_prepare
00000000000f0c80 000000000000009c t encode_mcu_AC_refine_prepare
00000000000f0d20 00000000000001fc t start_pass_phuff
00000000000f0f20 0000000000000144 t emit_bits.constprop.0
00000000000f1070 0000000000000170 t emit_bits
00000000000f11e0 0000000000000244 t emit_eobrun
00000000000f1430 0000000000000058 t finish_pass_phuff
00000000000f1490 0000000000000228 t finish_pass_gather_phuff
00000000000f16c0 0000000000000134 t emit_restart
00000000000f1800 000000000000021c t encode_mcu_DC_refine
00000000000f1a20 0000000000000478 t encode_mcu_AC_refine
00000000000f1ea0 0000000000000338 t encode_mcu_AC_first
00000000000f21e0 00000000000001b8 t encode_mcu_DC_first
00000000000f23a0 0000000000000054 T jinit_phuff_encoder
00000000000f2400 0000000000000050 t start_pass_prep
00000000000f2450 000000000000027c t pre_process_data
00000000000f26d0 0000000000000284 t pre_process_context
00000000000f2960 0000000000000338 T jinit_c_prep_controller
00000000000f2ca0 0000000000000004 t start_pass_downsample
00000000000f2cb0 000000000000009c t sep_downsample
00000000000f2d50 000000000000032c t int_downsample
00000000000f3080 00000000000000f0 t h2v1_downsample
00000000000f3170 0000000000000110 t h2v2_downsample
00000000000f3280 00000000000005cc t h2v2_smooth_downsample
00000000000f3850 00000000000001e4 t fullsize_smooth_downsample
00000000000f3a40 00000000000000a4 t fullsize_downsample
00000000000f3af0 0000000000000274 T jinit_downsampler
00000000000f3d70 0000000000000118 T jpeg_CreateDecompress
00000000000f3e90 0000000000000004 T jpeg_destroy_decompress
00000000000f3ea0 0000000000000284 T jpeg_consume_input
00000000000f4130 0000000000000090 T jpeg_read_header
00000000000f41c0 00000000000000ec T jpeg_finish_decompress
00000000000f42b0 0000000000000158 t output_pass_setup
00000000000f4410 000000000000010c T jpeg_start_decompress
00000000000f4520 00000000000000dc T jpeg_read_scanlines
00000000000f4600 0000000000000014 t finish_input_pass
00000000000f4620 0000000000000058 t reset_input_controller
00000000000f4680 000000000000048c t start_input_pass
00000000000f4b10 000000000000036c t consume_markers
00000000000f4e80 0000000000000068 T jinit_input_controller
00000000000f4ef0 00000000000003cc t get_sof
00000000000f52c0 0000000000000250 t examine_app0
00000000000f5510 0000000000000128 t skip_variable
00000000000f5640 0000000000000134 t next_marker
00000000000f5780 0000000000000020 t reset_marker_reader
00000000000f57a0 00000000000003bc t get_dht
00000000000f5b60 0000000000000c50 t read_markers
00000000000f67b0 00000000000000dc t examine_app14
00000000000f6890 00000000000001c8 t get_interesting_appn
00000000000f6a60 00000000000000bc t read_restart_marker
00000000000f6b20 000000000000015c T jpeg_resync_to_restart
00000000000f6c80 00000000000000bc T jinit_marker_reader
00000000000f6d40 00000000000001bc t prepare_for_output_pass
00000000000f6f00 000000000000003c t finish_output_pass
00000000000f6f40 00000000000000f4 t use_merged_upsample.part.0
00000000000f7040 00000000000004f4 T jpeg_calc_output_dimensions
00000000000f7540 00000000000003e0 T jinit_master_decompress
00000000000f7920 0000000000000014 t start_pass_merged_upsample
00000000000f7940 0000000000000050 t merged_1v_upsample
00000000000f7990 00000000000007bc t h2v1_merged_upsample
00000000000f8150 0000000000000c58 t h2v2_merged_upsample
00000000000f8db0 000000000000017c t h2v1_merged_upsample_565
00000000000f8f30 00000000000001d8 t h2v1_merged_upsample_565D
00000000000f9110 0000000000000254 t h2v2_merged_upsample_565
00000000000f9370 0000000000000318 t h2v2_merged_upsample_565D
00000000000f9690 000000000000011c t merged_2v_upsample
00000000000f97b0 0000000000000244 T jinit_merged_upsampler
00000000000f9a00 00000000000003e8 t start_pass_phuff_decoder
00000000000f9df0 0000000000000534 t decode_mcu_AC_refine
00000000000fa330 0000000000000188 t decode_mcu_DC_refine
00000000000fa4c0 0000000000000330 t decode_mcu_AC_first
00000000000fa7f0 000000000000033c t decode_mcu_DC_first
00000000000fab30 00000000000000b8 T jinit_phuff_decoder
00000000000fabf0 000000000000011c t start_pass_dpost
00000000000fad10 000000000000008c t post_process_1pass
00000000000fada0 00000000000000f8 t post_process_prepass
00000000000faea0 00000000000000e8 t post_process_2pass
00000000000faf90 00000000000000d0 T jinit_d_post_controller
00000000000fb060 0000000000000014 t start_pass_upsample
00000000000fb080 000000000000014c t sep_upsample
00000000000fb1d0 0000000000000008 t fullsize_upsample
00000000000fb1e0 0000000000000008 t noop_upsample
00000000000fb1f0 00000000000001c8 t h2v1_upsample
00000000000fb3c0 00000000000003d4 t h2v1_fancy_upsample
00000000000fb7a0 00000000000000ac t h1v2_fancy_upsample
00000000000fb850 0000000000000144 t h2v2_fancy_upsample
00000000000fb9a0 0000000000000118 t int_upsample
00000000000fbac0 0000000000000214 t h2v2_upsample
00000000000fbce0 0000000000000334 T jinit_upsampler
00000000000fc020 0000000000000070 t emit_message
00000000000fc090 0000000000000010 t reset_error_mgr
00000000000fc0a0 00000000000000cc t format_message
00000000000fc170 0000000000000044 t output_message
00000000000fc1c0 000000000000002c t error_exit
00000000000fc1f0 0000000000000058 T jpeg_std_error
00000000000fc250 00000000000001d8 t create_colorindex
00000000000fc430 0000000000000098 t color_quantize
00000000000fc4d0 0000000000000078 t color_quantize3
00000000000fc550 00000000000000e0 t quantize3_ord_dither
00000000000fc630 0000000000000004 t finish_pass_1_quant
00000000000fc640 0000000000000018 t new_color_map_1_quant
00000000000fc660 0000000000000680 t start_pass_1_quant
00000000000fcce0 000000000000023c t quantize_fs_dither
00000000000fcf20 0000000000000180 t quantize_ord_dither
00000000000fd0a0 0000000000000520 T jinit_1pass_quantizer
00000000000fd5c0 00000000000000a4 t prescan_quantize
00000000000fd670 00000000000009a8 t fill_inverse_cmap
00000000000fe020 000000000000011c t pass2_no_dither
00000000000fe140 0000000000000354 t pass2_fs_dither
00000000000fe4a0 0000000000000114 t init_error_limit
00000000000fe5c0 0000000000000004 t finish_pass2
00000000000fe5d0 0000000000000010 t new_color_map_2_quant
00000000000fe5e0 0000000000000160 t start_pass_2_quant
00000000000fe740 00000000000005f8 t update_box.isra.0
00000000000fed40 00000000000003e0 t finish_pass1
00000000000ff120 00000000000001b8 T jinit_2pass_quantizer
00000000000ff2e0 0000000000000010 T jdiv_round_up
00000000000ff2f0 0000000000000018 T jround_up
00000000000ff310 0000000000000060 T jcopy_sample_rows
00000000000ff370 0000000000000014 T jcopy_block_row
00000000000ff390 000000000000000c T jzero_far
00000000000ff3a0 00000000000001d0 t alloc_small
00000000000ff570 0000000000000098 t request_virt_barray
00000000000ff610 0000000000000098 t request_virt_sarray
00000000000ff6b0 0000000000000158 t free_pool
00000000000ff810 0000000000000048 t self_destruct
00000000000ff860 0000000000000158 t alloc_large
00000000000ff9c0 00000000000000e4 t alloc_barray
00000000000ffab0 000000000000011c t alloc_sarray
00000000000ffbd0 0000000000000274 t realize_virt_arrays
00000000000ffe50 00000000000003bc t access_virt_sarray
0000000000100210 00000000000003c4 t access_virt_barray
00000000001005e0 0000000000000170 T jinit_memory_mgr
0000000000100750 0000000000000008 T jpeg_get_small
0000000000100760 0000000000000008 T jpeg_free_small
0000000000100770 0000000000000008 T jpeg_get_large
0000000000100780 0000000000000008 T jpeg_free_large
0000000000100790 0000000000000020 T jpeg_mem_available
00000000001007b0 0000000000000018 T jpeg_open_backing_store
00000000001007d0 0000000000000008 T jpeg_mem_init
00000000001007e0 0000000000000004 T jpeg_mem_term
00000000001007f0 0000000000000228 t start_pass
0000000000100a20 000000000000046c t arith_encode
0000000000100e90 000000000000046c t arith_encode.constprop.0
0000000000101300 000000000000046c t arith_encode.constprop.1
0000000000101770 000000000000059c t finish_pass
0000000000101d10 0000000000000198 t emit_restart
0000000000101eb0 000000000000047c t encode_mcu
0000000000102330 0000000000000288 t encode_mcu_AC_refine
00000000001025c0 00000000000000b4 t encode_mcu_DC_refine
0000000000102680 00000000000002dc t encode_mcu_AC_first
0000000000102960 000000000000025c t encode_mcu_DC_first
0000000000102bc0 000000000000007c T jinit_arith_encoder
0000000000102c40 00000000000003ec t start_pass
0000000000103030 0000000000000108 t process_restart
0000000000103140 0000000000000280 t arith_decode
00000000001033c0 00000000000003c0 t decode_mcu
0000000000103780 0000000000000214 t decode_mcu_AC_refine
00000000001039a0 00000000000000d4 t decode_mcu_DC_refine
0000000000103a80 0000000000000278 t decode_mcu_AC_first
0000000000103d00 0000000000000294 t decode_mcu_DC_first
0000000000103fa0 00000000000000e8 T jinit_arith_decoder
0000000000104090 000000000000016c t init_simd.part.0
0000000000104200 0000000000000044 T jsimd_can_rgb_ycc
0000000000104250 0000000000000044 T jsimd_can_rgb_gray
00000000001042a0 0000000000000044 T jsimd_can_ycc_rgb
00000000001042f0 0000000000000044 T jsimd_can_ycc_rgb565
0000000000104340 00000000000000f4 T jsimd_rgb_ycc_convert
0000000000104440 00000000000000e4 T jsimd_rgb_gray_convert
0000000000104530 00000000000000f4 T jsimd_ycc_rgb_convert
0000000000104630 0000000000000008 T jsimd_ycc_rgb565_convert
0000000000104640 0000000000000044 T jsimd_can_h2v2_downsample
0000000000104690 0000000000000044 T jsimd_can_h2v1_downsample
00000000001046e0 0000000000000020 T jsimd_h2v2_downsample
0000000000104700 0000000000000020 T jsimd_h2v1_downsample
0000000000104720 0000000000000044 T jsimd_can_h2v2_upsample
0000000000104770 0000000000000044 T jsimd_can_h2v1_upsample
00000000001047c0 000000000000000c T jsimd_h2v2_upsample
00000000001047d0 000000000000000c T jsimd_h2v1_upsample
00000000001047e0 0000000000000044 T jsimd_can_h2v2_fancy_upsample
0000000000104830 0000000000000044 T jsimd_can_h2v1_fancy_upsample
0000000000104880 0000000000000044 T jsimd_can_h1v2_fancy_upsample
00000000001048d0 000000000000000c T jsimd_h2v2_fancy_upsample
00000000001048e0 000000000000000c T jsimd_h2v1_fancy_upsample
00000000001048f0 000000000000000c T jsimd_h1v2_fancy_upsample
0000000000104900 0000000000000044 T jsimd_can_h2v2_merged_upsample
0000000000104950 0000000000000044 T jsimd_can_h2v1_merged_upsample
00000000001049a0 00000000000000e4 T jsimd_h2v2_merged_upsample
0000000000104a90 00000000000000e4 T jsimd_h2v1_merged_upsample
0000000000104b80 0000000000000044 T jsimd_can_convsamp
0000000000104bd0 0000000000000008 T jsimd_can_convsamp_float
0000000000104be0 0000000000000004 T jsimd_convsamp
0000000000104bf0 0000000000000004 T jsimd_convsamp_float
0000000000104c00 0000000000000044 T jsimd_can_fdct_islow
0000000000104c50 0000000000000044 T jsimd_can_fdct_ifast
0000000000104ca0 0000000000000008 T jsimd_can_fdct_float
0000000000104cb0 0000000000000004 T jsimd_fdct_islow
0000000000104cc0 0000000000000004 T jsimd_fdct_ifast
0000000000104cd0 0000000000000004 T jsimd_fdct_float
0000000000104ce0 0000000000000044 T jsimd_can_quantize
0000000000104d30 0000000000000008 T jsimd_can_quantize_float
0000000000104d40 0000000000000004 T jsimd_quantize
0000000000104d50 0000000000000004 T jsimd_quantize_float
0000000000104d60 0000000000000044 T jsimd_can_idct_2x2
0000000000104db0 0000000000000044 T jsimd_can_idct_4x4
0000000000104e00 0000000000000014 T jsimd_idct_2x2
0000000000104e20 0000000000000014 T jsimd_idct_4x4
0000000000104e40 0000000000000044 T jsimd_can_idct_islow
0000000000104e90 0000000000000044 T jsimd_can_idct_ifast
0000000000104ee0 0000000000000008 T jsimd_can_idct_float
0000000000104ef0 0000000000000014 T jsimd_idct_islow
0000000000104f10 0000000000000014 T jsimd_idct_ifast
0000000000104f30 0000000000000004 T jsimd_idct_float
0000000000104f40 000000000000004c T jsimd_can_huff_encode_one_block
0000000000104f90 0000000000000014 T jsimd_huff_encode_one_block
0000000000104fb0 0000000000000044 T jsimd_can_encode_mcu_AC_first_prepare
0000000000105000 0000000000000004 T jsimd_encode_mcu_AC_first_prepare
0000000000105010 0000000000000044 T jsimd_can_encode_mcu_AC_refine_prepare
0000000000105060 0000000000000004 T jsimd_encode_mcu_AC_refine_prepare
0000000000105070 0000000000000130 t start_pass_coef
00000000001051a0 0000000000000298 t compress_output
0000000000105440 0000000000000294 t compress_first_pass
00000000001056e0 0000000000000510 t compress_data
0000000000105bf0 0000000000000134 T jinit_c_coef_controller
0000000000105d30 00000000000000d0 t rgb_ycc_start
0000000000105e00 0000000000000608 t rgb_ycc_convert
0000000000106410 00000000000003a8 t rgb_gray_convert
00000000001067c0 000000000000148c t rgb_rgb_convert
0000000000107c50 0000000000000108 t cmyk_ycck_convert
0000000000107d60 00000000000005c0 t grayscale_convert
0000000000108320 0000000000000afc t null_convert
0000000000108e20 0000000000000004 t null_method
0000000000108e30 00000000000003ac T jinit_color_converter
00000000001091e0 0000000000000338 t convsamp
0000000000109520 000000000000014c t quantize
0000000000109670 00000000000000ac t forward_DCT
0000000000109720 0000000000000438 t convsamp_float
0000000000109b60 0000000000000188 t quantize_float
0000000000109cf0 00000000000000ac t forward_DCT_float
0000000000109da0 0000000000000130 t compute_reciprocal
0000000000109ed0 0000000000000388 t start_pass_fdctmgr
000000000010a260 0000000000000244 T jinit_forward_dct
000000000010a4b0 0000000000000244 t encode_mcu_gather
000000000010a700 00000000000001bc t flush_bits
000000000010a8c0 0000000000000088 t finish_pass_huff
000000000010a950 000000000000f1ec t encode_mcu_huff
0000000000119b40 00000000000002c8 T jpeg_make_c_derived_tbl
0000000000119e10 00000000000001d0 t start_pass_huff
0000000000119fe0 00000000000003c8 T jpeg_gen_optimal_table
000000000011a3b0 0000000000000100 t finish_pass_gather
000000000011a4b0 0000000000000058 T jinit_huff_encoder
000000000011a510 0000000000000054 t start_input_pass
000000000011a570 0000000000000008 t dummy_consume_data
000000000011a580 00000000000002b4 t consume_data
000000000011a840 0000000000000278 t decompress_data
000000000011aac0 00000000000002f0 t start_output_pass
000000000011adb0 0000000000000360 t decompress_onepass
000000000011b110 0000000000001e74 t decompress_smooth_data
000000000011cf90 0000000000000198 T jinit_d_coef_controller
000000000011d130 0000000000000118 t build_ycc_rgb_table
000000000011d250 00000000000004e0 t ycc_rgb_convert
000000000011d730 0000000000000090 t rgb_gray_convert
000000000011d7c0 0000000000000694 t null_convert
000000000011de60 0000000000001384 t gray_rgb_convert
000000000011f1f0 0000000000001744 t rgb_rgb_convert
0000000000120940 00000000000000e0 t ycck_cmyk_convert
0000000000120a20 0000000000000244 t ycc_rgb565_convert
0000000000120c70 00000000000002c0 t ycc_rgb565D_convert
0000000000120f30 000000000000068c t rgb_rgb565_convert
00000000001215c0 00000000000001fc t rgb_rgb565D_convert
00000000001217c0 00000000000002d8 t gray_rgb565_convert
0000000000121aa0 000000000000013c t gray_rgb565D_convert
0000000000121be0 0000000000000004 t start_pass_dcolor
0000000000121bf0 0000000000000018 t grayscale_convert
0000000000121c10 00000000000003f0 T jinit_color_deconverter
0000000000122000 00000000000006a4 t start_pass
00000000001226b0 00000000000000c4 T jinit_inverse_dct
0000000000122780 00000000000000d0 t add_huff_table.part.0
0000000000122850 00000000000006d0 T jpeg_make_d_derived_tbl
0000000000122f20 000000000000044c t start_pass_huff_decoder
0000000000123370 0000000000000150 T jpeg_fill_bit_buffer
00000000001234c0 000000000000016c T jpeg_huff_decode
0000000000123630 000000000000128c t decode_mcu
00000000001248c0 0000000000000130 T jinit_huff_decoder
00000000001249f0 00000000000000a8 t process_data_simple_main
0000000000124aa0 0000000000000334 t process_data_context_main
0000000000124de0 0000000000000028 t process_data_crank_post
0000000000124e10 000000000000030c t start_pass_main
0000000000125120 00000000000001d0 T jinit_d_main_controller
00000000001252f0 0000000000000438 T jpeg_fdct_float
0000000000125730 00000000000002f0 T jpeg_fdct_ifast
0000000000125a20 0000000000000338 T jpeg_fdct_islow
0000000000125d60 000000000000033c T jpeg_idct_float
00000000001260a0 0000000000000408 T jpeg_idct_ifast
00000000001264b0 0000000000000430 T jpeg_idct_islow
00000000001268e0 0000000000000a20 T jpeg_idct_7x7
0000000000127300 00000000000004a0 T jpeg_idct_6x6
00000000001277a0 0000000000000624 T jpeg_idct_5x5
0000000000127dd0 00000000000001f0 T jpeg_idct_3x3
0000000000127fc0 0000000000000a44 T jpeg_idct_9x9
0000000000128a10 0000000000000aa4 T jpeg_idct_10x10
00000000001294c0 00000000000004b8 T jpeg_idct_11x11
0000000000129980 0000000000000db8 T jpeg_idct_12x12
000000000012a740 00000000000005cc T jpeg_idct_13x13
000000000012ad10 0000000000000fdc T jpeg_idct_14x14
000000000012bcf0 0000000000000558 T jpeg_idct_15x15
000000000012c250 0000000000000620 T jpeg_idct_16x16
000000000012c870 00000000000002b0 T jpeg_idct_4x4
000000000012cb20 0000000000000224 T jpeg_idct_2x2
000000000012cd50 0000000000000030 T jpeg_idct_1x1
000000000012cd80 00000000000001bc T jsimd_rgb_gray_convert_neon
000000000012cd80 00000000000001bc t jsimd_rgb_gray_convert_neon.localalias
000000000012cf40 0000000000000004 T jsimd_extrgb_gray_convert_neon
000000000012cf50 00000000000001bc T jsimd_extrgbx_gray_convert_neon
000000000012d110 00000000000001bc T jsimd_extbgr_gray_convert_neon
000000000012d2d0 00000000000001bc T jsimd_extbgrx_gray_convert_neon
000000000012d490 00000000000001bc T jsimd_extxbgr_gray_convert_neon
000000000012d650 00000000000001bc T jsimd_extxrgb_gray_convert_neon
000000000012d810 000000000000052c T jsimd_encode_mcu_AC_first_prepare_neon
000000000012dd40 00000000000006b4 T jsimd_encode_mcu_AC_refine_prepare_neon
000000000012e400 0000000000000090 T jsimd_h2v1_downsample_neon
000000000012e490 00000000000000b4 T jsimd_h2v2_downsample_neon
000000000012e550 0000000000000418 T jsimd_h2v1_merged_upsample_neon
000000000012e550 0000000000000418 t jsimd_h2v1_merged_upsample_neon.localalias
000000000012e970 0000000000000678 T jsimd_h2v2_merged_upsample_neon
000000000012e970 0000000000000678 t jsimd_h2v2_merged_upsample_neon.localalias
000000000012eff0 0000000000000004 T jsimd_h2v1_extrgb_merged_upsample_neon
000000000012f000 0000000000000004 T jsimd_h2v2_extrgb_merged_upsample_neon
000000000012f010 00000000000004a0 T jsimd_h2v1_extrgbx_merged_upsample_neon
000000000012f4b0 0000000000000730 T jsimd_h2v2_extrgbx_merged_upsample_neon
000000000012fbe0 0000000000000418 T jsimd_h2v1_extbgr_merged_upsample_neon
0000000000130000 0000000000000678 T jsimd_h2v2_extbgr_merged_upsample_neon
0000000000130680 00000000000004a0 T jsimd_h2v1_extbgrx_merged_upsample_neon
0000000000130b20 0000000000000740 T jsimd_h2v2_extbgrx_merged_upsample_neon
0000000000131260 0000000000000494 T jsimd_h2v1_extxbgr_merged_upsample_neon
0000000000131700 0000000000000750 T jsimd_h2v2_extxbgr_merged_upsample_neon
0000000000131e50 0000000000000494 T jsimd_h2v1_extxrgb_merged_upsample_neon
00000000001322f0 0000000000000750 T jsimd_h2v2_extxrgb_merged_upsample_neon
0000000000132a40 0000000000000154 T jsimd_h2v1_fancy_upsample_neon
0000000000132ba0 00000000000002d8 T jsimd_h2v2_fancy_upsample_neon
0000000000132e80 00000000000000b8 T jsimd_h1v2_fancy_upsample_neon
0000000000132f40 000000000000005c T jsimd_h2v1_upsample_neon
0000000000132fa0 0000000000000078 T jsimd_h2v2_upsample_neon
0000000000133020 00000000000001c8 T jsimd_fdct_ifast_neon
00000000001331f0 0000000000000110 T jsimd_idct_2x2_neon
0000000000133300 00000000000003bc T jsimd_idct_4x4_neon
00000000001336c0 0000000000000068 T jsimd_convsamp_neon
0000000000133730 00000000000001e4 T jsimd_quantize_neon
0000000000133920 0000000000000578 T jsimd_idct_ifast_neon
0000000000133ea0 t jsimd_idct_islow_neon
000000000013457c T jsimd_ycc_extrgb_convert_neon
00000000001347e4 T jsimd_ycc_extbgr_convert_neon
0000000000134a4c T jsimd_ycc_extrgbx_convert_neon
0000000000134cb4 T jsimd_ycc_extbgrx_convert_neon
0000000000134f1c T jsimd_ycc_extxbgr_convert_neon
0000000000135184 T jsimd_ycc_extxrgb_convert_neon
00000000001353ec t jsimd_ycc_rgb565_convert_neon
0000000000135660 T jsimd_ycc_extrgb_convert_neon_slowst3
0000000000135980 T jsimd_ycc_extbgr_convert_neon_slowst3
0000000000135ca0 T jsimd_extrgb_ycc_convert_neon
0000000000135f64 T jsimd_extbgr_ycc_convert_neon
0000000000136228 T jsimd_extrgbx_ycc_convert_neon
00000000001364ec T jsimd_extbgrx_ycc_convert_neon
00000000001367b0 T jsimd_extxbgr_ycc_convert_neon
0000000000136a74 T jsimd_extxrgb_ycc_convert_neon
0000000000136d38 T jsimd_extrgb_ycc_convert_neon_slowld3
00000000001370b4 T jsimd_extbgr_ycc_convert_neon_slowld3
0000000000137430 t jsimd_fdct_islow_neon
00000000001377b4 t jsimd_huff_encode_one_block_neon
0000000000137f8c t jsimd_huff_encode_one_block_neon_slowtbl
0000000000138920 0000000000000110 t png_colorspace_endpoints_match
0000000000138a30 0000000000000010 T png_zalloc
0000000000138a40 0000000000000004 T png_zfree
0000000000138a50 00000000000000e0 t png_colorspace_set_xy_and_XYZ
0000000000138b30 0000000000000248 t png_icc_profile_error
0000000000138d80 0000000000000070 T png_sig_cmp
0000000000138df0 0000000000000030 T png_reset_crc
0000000000138e20 00000000000000a4 T png_calculate_crc
0000000000138ed0 0000000000000118 T png_user_version_check
0000000000138ff0 000000000000015c T png_create_png_struct
0000000000139150 0000000000000050 T png_create_info_struct
00000000001391a0 000000000000048c T png_free_data
0000000000139630 000000000000006c T png_destroy_info_struct
00000000001396a0 0000000000000014 T png_get_io_ptr
00000000001396c0 0000000000000004 T png_save_int_32
00000000001396d0 0000000000000054 T png_handle_as_unknown
0000000000139730 0000000000000028 T png_chunk_unknown_handling
0000000000139760 0000000000000100 T png_zstream_error
0000000000139860 000000000000005c T png_colorspace_sync_info
00000000001398c0 000000000000002c T png_colorspace_sync
00000000001398f0 0000000000000090 T png_icc_check_length
0000000000139980 000000000000038c T png_icc_check_header
0000000000139d10 00000000000000f0 T png_icc_check_tag_table
0000000000139e00 00000000000002cc T png_check_IHDR
000000000013a0d0 0000000000000198 T png_check_fp_number
000000000013a270 0000000000000060 T png_check_fp_string
000000000013a2d0 0000000000000084 T png_muldiv
000000000013a360 0000000000000180 t png_xy_from_XYZ
000000000013a4e0 0000000000000168 T png_colorspace_set_rgb_coefficients
000000000013a650 0000000000000058 T png_reciprocal
000000000013a6b0 0000000000000338 t png_XYZ_from_xy
000000000013a9f0 00000000000000e4 T png_colorspace_set_chromaticities
000000000013aae0 0000000000000018 T png_gamma_significant
000000000013ab00 00000000000000c0 t png_colorspace_check_gamma
000000000013abc0 00000000000000bc T png_colorspace_set_gamma
000000000013ac80 0000000000000150 T png_colorspace_set_sRGB
000000000013add0 00000000000001dc T png_icc_set_sRGB
000000000013afb0 000000000000017c t png_build_16bit_table
000000000013b130 000000000000006c T png_reciprocal2
000000000013b1a0 0000000000000064 T png_gamma_8bit_correct
000000000013b210 00000000000000bc t png_build_8bit_table
000000000013b2d0 0000000000000068 T png_gamma_16bit_correct
000000000013b340 0000000000000030 T png_gamma_correct
000000000013b370 0000000000000158 T png_destroy_gamma_table
000000000013b4d0 0000000000000448 T png_build_gamma_table
000000000013b920 00000000000000e8 t png_format_buffer.isra.0
000000000013ba10 0000000000000058 T png_safecat
000000000013ba70 0000000000000168 T png_format_number
000000000013bbe0 0000000000000090 T png_warning
000000000013bc70 0000000000000030 T png_warning_parameter
000000000013bca0 00000000000000ac T png_warning_parameter_signed
000000000013bd50 0000000000000130 T png_formatted_warning
000000000013be80 0000000000000034 T png_chunk_warning
000000000013bec0 0000000000000078 T png_free_jmpbuf
000000000013bf40 0000000000000024 T png_longjmp
000000000013bf70 0000000000000070 T png_error
000000000013bfe0 0000000000000018 T png_app_warning
000000000013c000 0000000000000018 T png_app_error
000000000013c020 0000000000000028 T png_chunk_error
000000000013c050 0000000000000018 T png_chunk_benign_error
000000000013c070 0000000000000028 T png_chunk_report
000000000013c0a0 0000000000000058 T png_benign_error
000000000013c100 00000000000000c0 T png_set_longjmp_fn
000000000013c1c0 0000000000000010 T png_set_error_fn
000000000013c1d0 0000000000000014 T png_get_error_ptr
000000000013c1f0 0000000000000020 T png_get_valid
000000000013c210 000000000000001c T png_get_channels
000000000013c230 0000000000000090 T png_get_IHDR
000000000013c2c0 0000000000000040 T png_get_PLTE
000000000013c300 0000000000000078 T png_get_tRNS
000000000013c380 000000000000002c T png_malloc_base
000000000013c3b0 000000000000003c T png_malloc_array
000000000013c3f0 00000000000000e4 T png_realloc_array
000000000013c4e0 0000000000000040 T png_malloc
000000000013c520 0000000000000038 T png_calloc
000000000013c560 0000000000000048 T png_malloc_warn
000000000013c5b0 0000000000000018 T png_free_default
000000000013c5d0 0000000000000024 T png_free
000000000013c600 0000000000000064 T png_destroy_png_struct
000000000013c670 0000000000000014 T png_set_mem_fn
000000000013c690 0000000000000050 T png_create_read_struct_2
000000000013c6e0 0000000000000010 T png_create_read_struct
000000000013c6f0 00000000000004a0 T png_read_info
000000000013cb90 0000000000000050 T png_read_update_info
000000000013cbe0 0000000000000020 T png_start_read_image
000000000013cc00 000000000000042c T png_read_row
000000000013d030 00000000000000ec T png_read_image
000000000013d120 0000000000000588 T png_read_end
000000000013d6b0 000000000000015c T png_destroy_read_struct
000000000013d810 000000000000004c T png_default_read_data
000000000013d860 0000000000000024 T png_read_data
000000000013d890 0000000000000058 T png_set_read_fn
000000000013d8f0 00000000000001e0 t png_do_gray_to_rgb
000000000013dad0 0000000000000548 t png_do_expand
000000000013e020 0000000000000034 T png_set_strip_16
000000000013e060 0000000000000038 T png_set_expand
000000000013e0a0 0000000000000038 T png_set_palette_to_rgb
000000000013e0e0 0000000000000034 T png_set_expand_gray_1_2_4_to_8
000000000013e120 0000000000000038 T png_set_tRNS_to_alpha
000000000013e160 0000000000000058 T png_set_gray_to_rgb
000000000013e1c0 0000000000000014 T png_set_read_user_transform_fn
000000000013e1e0 0000000000000c94 T png_init_read_transformations
000000000013ee80 00000000000002bc T png_read_transform_info
000000000013f140 0000000000002a20 T png_do_read_transformations
0000000000141b60 0000000000000044 t png_read_filter_row_sub
0000000000141bb0 0000000000000030 t png_read_filter_row_up
0000000000141be0 0000000000000078 t png_read_filter_row_avg
0000000000141c60 000000000000007c t png_read_filter_row_paeth_1byte_pixel
0000000000141ce0 00000000000000b0 t png_read_filter_row_paeth_multibyte_pixel
0000000000141d90 0000000000000148 t png_inflate_claim
0000000000141ee0 00000000000000b4 t png_read_buffer
0000000000141fa0 0000000000000028 T png_get_uint_31
0000000000141fd0 00000000000000f0 T png_read_sig
00000000001420c0 0000000000000048 T png_crc_read
0000000000142110 000000000000008c T png_crc_error
00000000001421a0 00000000000000a0 T png_crc_finish
0000000000142240 00000000000000d8 t png_cache_unknown_chunk
0000000000142320 0000000000000040 T png_zlib_inflate
0000000000142360 0000000000000164 t png_inflate.constprop.0
00000000001424d0 0000000000000250 t png_decompress_chunk.constprop.0
0000000000142720 0000000000000134 t png_inflate_read.constprop.0.isra.0
0000000000142860 0000000000000158 T png_handle_IHDR
00000000001429c0 0000000000000278 T png_handle_PLTE
0000000000142c40 000000000000006c T png_handle_IEND
0000000000142cb0 00000000000000c0 T png_handle_gAMA
0000000000142d70 00000000000001cc T png_handle_sBIT
0000000000142f40 00000000000001c0 T png_handle_cHRM
0000000000143100 00000000000000e8 T png_handle_sRGB
00000000001431f0 000000000000058c T png_handle_iCCP
0000000000143780 00000000000002c8 T png_handle_sPLT
0000000000143a50 00000000000001e8 T png_handle_tRNS
0000000000143c40 0000000000000240 T png_handle_bKGD
0000000000143e80 00000000000001c4 T png_handle_eXIf
0000000000144050 0000000000000148 T png_handle_hIST
00000000001441a0 00000000000000f4 T png_handle_pHYs
00000000001442a0 0000000000000110 T png_handle_oFFs
00000000001443b0 0000000000000314 T png_handle_pCAL
00000000001446d0 000000000000029c T png_handle_sCAL
0000000000144970 00000000000000e0 T png_handle_tIME
0000000000144a50 000000000000019c T png_handle_tEXt
0000000000144bf0 000000000000023c T png_handle_zTXt
0000000000144e30 000000000000032c T png_handle_iTXt
0000000000145160 00000000000001bc T png_handle_unknown
0000000000145320 0000000000000058 T png_check_chunk_name
0000000000145380 00000000000000d8 T png_check_chunk_length
0000000000145460 000000000000008c T png_read_chunk_header
00000000001454f0 0000000000000520 T png_combine_row
0000000000145a10 0000000000000428 T png_do_read_interlace
0000000000145e40 00000000000000c0 T png_read_filter_row
0000000000145f00 000000000000021c T png_read_IDAT_data
0000000000146120 0000000000000094 T png_read_finish_IDAT
00000000001461c0 0000000000000100 T png_read_finish_row
00000000001462c0 0000000000000438 T png_read_start_row
0000000000146700 000000000000006c t check_location
0000000000146770 0000000000000030 T png_set_bKGD
00000000001467a0 00000000000000b4 T png_set_eXIf_1
0000000000146860 00000000000000cc T png_set_hIST
0000000000146930 0000000000000100 T png_set_IHDR
0000000000146a30 0000000000000024 T png_set_oFFs
0000000000146a60 00000000000002b0 T png_set_pCAL
0000000000146d10 000000000000018c T png_set_sCAL_s
0000000000146ea0 0000000000000024 T png_set_pHYs
0000000000146ed0 0000000000000144 T png_set_PLTE
0000000000147020 0000000000000030 T png_set_sBIT
0000000000147050 0000000000000348 T png_set_text_2
00000000001473a0 0000000000000088 T png_set_tIME
0000000000147430 00000000000001c4 T png_set_tRNS
0000000000147600 00000000000001c0 T png_set_sPLT
00000000001477c0 0000000000000154 T png_set_unknown_chunks
0000000000147920 000000000000006c T png_set_rows
0000000000147990 00000000000001d4 T png_check_keyword
0000000000147b70 0000000000000014 T png_set_bgr
0000000000147b90 0000000000000024 T png_set_swap
0000000000147bc0 0000000000000028 T png_set_packing
0000000000147bf0 0000000000000020 T png_set_packswap
0000000000147c10 0000000000000028 T png_set_shift
0000000000147c40 0000000000000030 T png_set_interlace_handling
0000000000147c70 0000000000000088 T png_set_filler
0000000000147d00 0000000000000014 T png_set_swap_alpha
0000000000147d20 0000000000000014 T png_set_invert_alpha
0000000000147d40 0000000000000014 T png_set_invert_mono
0000000000147d60 00000000000000ac T png_do_invert
0000000000147e10 0000000000000048 T png_do_swap
0000000000147e60 000000000000006c T png_do_packswap
0000000000147ed0 0000000000000230 T png_do_strip_channel
0000000000148100 0000000000000118 T png_do_bgr
0000000000148220 000000000000018c T png_do_check_palette_indexes
00000000001483b0 000000000000004c T png_default_write_data
0000000000148400 0000000000000010 T png_default_flush
0000000000148410 0000000000000024 T png_write_data
0000000000148440 0000000000000014 T png_flush
0000000000148460 000000000000004c T png_set_write_fn
00000000001484b0 00000000000000e4 t write_unknown_chunks.part.0
00000000001485a0 0000000000000178 T png_write_info_before_PLTE
0000000000148720 0000000000000334 T png_write_info
0000000000148a60 00000000000001b8 T png_write_end
0000000000148c20 000000000000007c T png_create_write_struct_2
0000000000148ca0 0000000000000010 T png_create_write_struct
0000000000148cb0 0000000000000394 T png_write_row
0000000000149050 0000000000000080 T png_write_image
00000000001490d0 0000000000000058 T png_write_flush
0000000000149130 00000000000000b8 T png_destroy_write_struct
00000000001491f0 0000000000000160 T png_write_png
0000000000149350 0000000000000798 T png_do_write_transformations
0000000000149af0 0000000000000174 t png_image_size
0000000000149c70 0000000000000258 t png_deflate_claim
0000000000149ed0 00000000000000b8 t optimize_cmf.part.0
0000000000149f90 0000000000000204 t png_text_compress.constprop.0
000000000014a1a0 000000000000000c T png_save_uint_32
000000000014a1b0 000000000000000c T png_save_uint_16
000000000014a1c0 000000000000006c T png_write_sig
000000000014a230 0000000000000060 T png_write_chunk_data
000000000014a290 0000000000000078 t png_write_compressed_data_out
000000000014a310 000000000000004c T png_write_chunk_end
000000000014a360 00000000000000c8 t png_write_complete_chunk
000000000014a430 00000000000000d4 T png_write_chunk
000000000014a510 0000000000000040 T png_free_buffer_list
000000000014a550 00000000000002b4 T png_write_IHDR
000000000014a810 0000000000000174 T png_write_PLTE
000000000014a990 0000000000000234 T png_compress_IDAT
000000000014abd0 00000000000000b0 T png_write_IEND
000000000014ac80 00000000000000b8 T png_write_gAMA_fixed
000000000014ad40 00000000000000c4 T png_write_sRGB
000000000014ae10 000000000000019c T png_write_iCCP
000000000014afb0 00000000000001e8 T png_write_sPLT
000000000014b1a0 00000000000000d0 T png_write_sBIT
000000000014b270 0000000000000114 T png_write_cHRM_fixed
000000000014b390 0000000000000174 T png_write_tRNS
000000000014b510 0000000000000174 T png_write_bKGD
000000000014b690 00000000000000d8 T png_write_eXIf
000000000014b770 00000000000000f4 T png_write_hIST
000000000014b870 0000000000000170 T png_write_tEXt
000000000014b9e0 0000000000000168 T png_write_zTXt
000000000014bb50 0000000000000398 T png_write_iTXt
000000000014bef0 00000000000000ec T png_write_oFFs
000000000014bfe0 00000000000002b0 T png_write_pCAL
000000000014c290 00000000000000d0 T png_write_sCAL_s
000000000014c360 00000000000000ec T png_write_pHYs
000000000014c450 00000000000000b8 T png_write_tIME
000000000014c510 00000000000001a4 T png_write_start_row
000000000014c6c0 0000000000000144 T png_write_finish_row
000000000014c810 0000000000000310 T png_do_write_interlace
000000000014cb20 000000000000075c T png_write_find_filter
000000000014d280 0000000000000070 T png_init_filter_functions_neon
000000000014d2f0 0000000000000040 T png_read_filter_row_up_neon
000000000014d330 0000000000000060 T png_read_filter_row_sub3_neon
000000000014d390 0000000000000050 T png_read_filter_row_sub4_neon
000000000014d3e0 0000000000000084 T png_read_filter_row_avg3_neon
000000000014d470 0000000000000068 T png_read_filter_row_avg4_neon
000000000014d4e0 000000000000014c T png_read_filter_row_paeth3_neon
000000000014d630 0000000000000140 T png_read_filter_row_paeth4_neon
000000000014d770 0000000000000064 T png_riffle_palette_neon
000000000014d7e0 00000000000000e4 T png_do_expand_palette_rgba8_neon
000000000014d8d0 0000000000000140 T png_do_expand_palette_rgb8_neon
000000000014da10 000000000000003c T FT_Add_Default_Modules
000000000014da50 0000000000000174 T FT_Set_Default_Properties
000000000014dbd0 0000000000000074 T FT_Init_FreeType
000000000014dc50 0000000000000038 T FT_Done_FreeType
000000000014dc90 0000000000000068 t FT_GlyphLoader_Adjust_Points
000000000014dd00 0000000000000028 t hash_str_lookup
000000000014dd30 0000000000000038 t hash_num_lookup
000000000014dd70 0000000000000014 t hash_num_compare
000000000014dd90 0000000000000090 t hash_bucket
000000000014de20 0000000000000078 t destroy_size
000000000014dea0 00000000000000ac t find_unicode_charmap
000000000014df50 000000000000004c t memory_stream_close
000000000014dfa0 0000000000000010 t ft_raccess_sort_ref_by_id
000000000014dfb0 00000000000000dc t ft_trig_pseudo_rotate
000000000014e090 00000000000000fc t ft_trig_pseudo_polarize
000000000014e190 000000000000003c t hash_str_compare
000000000014e1d0 0000000000000154 t ft_property_do
000000000014e330 00000000000000a8 t destroy_charmaps.part.0
000000000014e3e0 00000000000000c0 t raccess_guess_darwin_hfsplus
000000000014e4a0 00000000000000c0 t raccess_guess_darwin_newvfs
000000000014e560 00000000000000dc t raccess_make_file_name
000000000014e640 0000000000000054 t raccess_guess_linux_cap
000000000014e6a0 0000000000000054 t raccess_guess_vfat
000000000014e700 0000000000000018 T FT_RoundFix
000000000014e720 0000000000000064 T FT_MulDiv
000000000014e790 0000000000000060 t FT_MulDiv_No_Round
000000000014e7f0 0000000000000014 T FT_MulFix
000000000014e810 000000000000007c t ft_recompute_scaled_metrics
000000000014e890 0000000000000080 T FT_DivFix
000000000014e910 00000000000000d8 T FT_Matrix_Multiply
000000000014e9f0 00000000000000ac T FT_Matrix_Invert
000000000014eaa0 00000000000000fc t FT_Matrix_Multiply_Scaled
000000000014eba0 000000000000016c t FT_Matrix_Check
000000000014ed10 0000000000000098 t FT_Vector_Transform_Scaled
000000000014edb0 000000000000017c t FT_Vector_NormLen
000000000014ef30 000000000000001c t ft_corner_orientation
000000000014ef50 00000000000000d8 t ft_corner_is_flat
000000000014f030 000000000000003c t FT_MulAddFix
000000000014f070 000000000000002c T FT_Get_Font_Format
000000000014f0a0 000000000000002c t FT_GlyphLoader_Rewind
000000000014f0d0 00000000000000cc t FT_GlyphLoader_Reset
000000000014f1a0 000000000000003c t FT_GlyphLoader_Done
000000000014f1e0 0000000000000088 t FT_GlyphLoader_Prepare
000000000014f270 00000000000000ac t FT_GlyphLoader_Add
000000000014f320 0000000000000080 t ft_hash_str_init
000000000014f3a0 0000000000000080 t ft_hash_num_init
000000000014f420 0000000000000080 t ft_hash_str_free
000000000014f4a0 0000000000000024 t ft_hash_str_lookup
000000000014f4d0 0000000000000028 t ft_hash_num_lookup
000000000014f500 00000000000000e0 t ft_lcd_padding
000000000014f5e0 0000000000000058 t ft_service_list_lookup
000000000014f640 0000000000000014 t ft_validator_init
000000000014f660 0000000000000018 t ft_validator_error
000000000014f680 0000000000000064 t FT_Stream_Free
000000000014f6f0 0000000000000068 t ft_glyphslot_free_bitmap
000000000014f760 0000000000000114 t ft_glyphslot_done
000000000014f880 000000000000005c t ft_glyphslot_set_bitmap
000000000014f8e0 00000000000000a0 t FT_Done_GlyphSlot
000000000014f980 0000000000000138 t FT_Match_Size
000000000014fac0 0000000000000064 t ft_synthesize_vertical_metrics
000000000014fb30 00000000000000b4 t FT_Select_Metrics
000000000014fbf0 00000000000002c8 t FT_Request_Metrics
000000000014fec0 0000000000000064 T FT_Select_Size
000000000014ff30 00000000000000b0 T FT_Request_Size
000000000014ffe0 000000000000009c T FT_Set_Char_Size
0000000000150080 0000000000000120 T FT_Get_Kerning
00000000001501a0 0000000000000088 T FT_Select_Charmap
0000000000150230 000000000000004c T FT_Get_Char_Index
0000000000150280 000000000000009c T FT_Get_Next_Char
0000000000150320 00000000000000f4 T FT_Get_Glyph_Name
0000000000150420 0000000000000070 T FT_Get_CMap_Format
0000000000150490 00000000000000a4 T FT_Set_Charmap
0000000000150540 0000000000000034 T FT_Activate_Size
0000000000150580 000000000000004c t FT_Lookup_Renderer
00000000001505d0 000000000000009c T FT_Get_Module
0000000000150670 0000000000000020 t FT_Get_Module_Interface
0000000000150690 00000000000000bc t ft_module_get_service
0000000000150750 000000000000000c t ft_property_string_set
0000000000150760 0000000000000080 T FT_New_Library
00000000001507e0 0000000000000048 T FT_Get_Color_Glyph_Layer
0000000000150830 000000000000039c T FT_Outline_Decompose
0000000000150bd0 0000000000000084 T FT_Outline_Check
0000000000150c60 00000000000000c4 T FT_Outline_Copy
0000000000150d30 00000000000000a0 T FT_Outline_Done
0000000000150dd0 0000000000000084 T FT_Outline_Get_CBox
0000000000150e60 00000000000002a0 t ft_glyphslot_preset_bitmap
0000000000151100 0000000000000048 T FT_Outline_Translate
0000000000151150 000000000000007c T FT_Vector_Transform
00000000001511d0 0000000000000064 T FT_Outline_Transform
0000000000151240 00000000000001b0 T FT_Outline_Get_Orientation
00000000001513f0 00000000000003a4 T FT_Outline_EmboldenXY
00000000001517a0 000000000000022c T ps_property_set
00000000001519d0 00000000000000cc T ps_property_get
0000000000151aa0 00000000000000f0 t FT_Raccess_Guess
0000000000151b90 0000000000000014 t FT_Stream_OpenMemory
0000000000151bb0 0000000000000018 t FT_Stream_Close
0000000000151bd0 000000000000005c t FT_Stream_Seek
0000000000151c30 0000000000000070 t FT_Stream_Skip
0000000000151ca0 0000000000000008 t FT_Stream_Pos
0000000000151cb0 000000000000009c t FT_Stream_Read
0000000000151d50 0000000000000094 t FT_Stream_ReadAt
0000000000151df0 000000000000008c t FT_Stream_TryRead
0000000000151e80 0000000000000040 t FT_Stream_ReleaseFrame
0000000000151ec0 0000000000000170 t FT_Stream_EnterFrame
0000000000152030 0000000000000034 t FT_Stream_ExtractFrame
0000000000152070 0000000000000040 t FT_Stream_ExitFrame
00000000001520b0 0000000000000024 t FT_Stream_GetByte
00000000001520e0 0000000000000034 t FT_Stream_GetUShort
0000000000152120 000000000000002c t FT_Stream_GetUShortLE
0000000000152150 0000000000000030 t FT_Stream_GetULong
0000000000152180 000000000000002c t FT_Stream_GetULongLE
00000000001521b0 0000000000000094 t FT_Stream_ReadByte
0000000000152250 00000000000000a8 t FT_Stream_ReadUShort
0000000000152300 0000000000000324 t FT_Raccess_Get_HeaderInfo
0000000000152630 00000000000000a0 t FT_Stream_ReadUShortLE
00000000001526d0 00000000000000b8 t FT_Stream_ReadUOffset
0000000000152790 00000000000000a4 t FT_Stream_ReadULong
0000000000152840 0000000000000450 t FT_Raccess_Get_DataOffsets
0000000000152c90 0000000000000198 t raccess_guess_apple_generic.constprop.0
0000000000152e30 0000000000000024 t raccess_guess_apple_double
0000000000152e60 0000000000000024 t raccess_guess_apple_single
0000000000152e90 00000000000000a0 t FT_Stream_ReadULongLE
0000000000152f30 000000000000028c t FT_Stream_ReadFields
00000000001531c0 0000000000000028 T FT_Tan
00000000001531f0 000000000000008c T FT_Atan2
0000000000153280 0000000000000044 T FT_Vector_Unit
00000000001532d0 0000000000000020 T FT_Cos
00000000001532f0 0000000000000020 T FT_Sin
0000000000153310 0000000000000164 T FT_Vector_Rotate
0000000000153480 0000000000000118 T FT_Vector_Length
00000000001535a0 0000000000000020 t FT_Hypot
00000000001535c0 0000000000000018 T FT_Vector_From_Polar
00000000001535e0 0000000000000048 T FT_Angle_Diff
0000000000153630 0000000000000088 t ft_mem_alloc
00000000001536c0 0000000000000160 t FT_Stream_New
0000000000153820 000000000000007c t ft_glyphslot_alloc_bitmap
00000000001538a0 0000000000000228 t open_face
0000000000153ad0 000000000000020c t FT_New_GlyphSlot
0000000000153ce0 0000000000000254 t FT_Render_Glyph_Internal
0000000000153f40 0000000000000028 T FT_Render_Glyph
0000000000153f70 00000000000005f8 T FT_Load_Glyph
0000000000154570 000000000000019c T FT_Get_Advances
0000000000154710 0000000000000148 T FT_Get_Advance
0000000000154860 00000000000000e8 t raccess_guess_linux_double_from_file_name
0000000000154950 00000000000000b8 t raccess_guess_linux_netatalk
0000000000154a10 00000000000000b8 t raccess_guess_linux_double
0000000000154ad0 00000000000000b8 t raccess_guess_darwin_ufs_export
0000000000154b90 000000000000005c t ft_mem_qalloc
0000000000154bf0 00000000000000dc t ft_mem_qrealloc
0000000000154cd0 000000000000016c t FT_CMap_New
0000000000154e40 0000000000000094 t ft_mem_realloc
0000000000154ee0 000000000000008c t FT_GlyphLoader_CreateExtra
0000000000154f70 000000000000025c t FT_GlyphLoader_CheckPoints
00000000001551d0 00000000000000a0 t FT_GlyphLoader_CheckSubGlyphs
0000000000155270 0000000000000184 T FT_Outline_New
0000000000155400 000000000000013c t hash_insert
0000000000155540 0000000000000004 t ft_hash_str_insert
0000000000155550 0000000000000008 t ft_hash_num_insert
0000000000155560 0000000000000014 t ft_mem_free
0000000000155580 00000000000000ac t ft_mem_strdup
0000000000155630 0000000000000040 t ft_mem_strcpyn
0000000000155670 0000000000000030 T FT_List_Find
00000000001556a0 0000000000000030 T FT_List_Add
00000000001556d0 0000000000000184 T FT_New_Size
0000000000155860 0000000000000034 T FT_List_Remove
00000000001558a0 00000000000000ec T FT_Done_Size
0000000000155990 0000000000000060 T FT_List_Iterate
00000000001559f0 0000000000000084 T FT_List_Finalize
0000000000155a80 0000000000000108 t destroy_face
0000000000155b90 00000000000000c0 T FT_Done_Face
0000000000155c50 0000000000000914 t ft_open_face_internal
0000000000156570 0000000000000118 t open_face_from_buffer
0000000000156690 0000000000000388 t open_face_PS_from_sfnt_stream.constprop.0
0000000000156a20 000000000000079c t IsMacResource
00000000001571c0 0000000000000008 T FT_Open_Face
00000000001571d0 00000000000001dc T FT_Remove_Module
00000000001573b0 00000000000002f0 T FT_Add_Module
00000000001576a0 0000000000000134 T FT_Done_Library
00000000001577e0 0000000000000038 t ft_bitmap_glyph_bbox
0000000000157820 0000000000000034 t ft_outline_glyph_prepare
0000000000157860 0000000000000020 t ft_bitmap_glyph_copy
0000000000157880 000000000000000c t ft_bitmap_glyph_done
0000000000157890 00000000000000ac t ft_bitmap_glyph_init
0000000000157940 0000000000000008 t ft_outline_glyph_bbox
0000000000157950 0000000000000068 t ft_outline_glyph_copy
00000000001579c0 0000000000000090 t ft_outline_glyph_init
0000000000157a50 000000000000000c t ft_outline_glyph_done
0000000000157a60 00000000000000ac t ft_svg_glyph_prepare
0000000000157b10 00000000000000e0 t ft_svg_glyph_transform
0000000000157bf0 00000000000000e4 t ft_svg_glyph_copy
0000000000157ce0 00000000000000fc t ft_svg_glyph_init
0000000000157de0 0000000000000030 t ft_svg_glyph_done
0000000000157e10 0000000000000044 t ft_outline_glyph_transform
0000000000157e60 00000000000000e4 T FT_New_Glyph
0000000000157f50 0000000000000074 T FT_Glyph_Transform
0000000000157fd0 0000000000000040 T FT_Done_Glyph
0000000000158010 0000000000000108 T FT_Glyph_Copy
0000000000158120 0000000000000114 T FT_Get_Glyph
0000000000158240 0000000000000268 T FT_Glyph_To_Bitmap
00000000001584b0 00000000000000fc t ft_stroke_border_close
00000000001585b0 0000000000000094 t ft_stroke_border_get_counts
0000000000158650 00000000000000e4 t ft_stroke_border_grow
0000000000158740 0000000000000088 t ft_stroke_border_cubicto
00000000001587d0 000000000000019c t ft_stroke_border_arcto
0000000000158970 00000000000000ec t ft_stroke_border_lineto
0000000000158a60 00000000000003ec t ft_stroker_process_corner
0000000000158e50 0000000000000098 t ft_stroker_cap.part.0.constprop.0
0000000000158ef0 00000000000000d8 t ft_stroker_subpath_start
0000000000158fd0 00000000000007d4 t FT_Stroker_CubicTo.part.0
00000000001597b0 00000000000005c0 t FT_Stroker_ConicTo.part.0
0000000000159d70 00000000000000a0 T FT_Stroker_New
0000000000159e10 0000000000000024 T FT_Stroker_Rewind
0000000000159e40 0000000000000024 T FT_Stroker_Set
0000000000159e70 00000000000000ac T FT_Stroker_Done
0000000000159f20 0000000000000144 T FT_Stroker_LineTo
000000000015a070 000000000000001c T FT_Stroker_ConicTo
000000000015a090 0000000000000024 T FT_Stroker_CubicTo
000000000015a0c0 0000000000000064 T FT_Stroker_BeginSubPath
000000000015a130 0000000000000280 T FT_Stroker_EndSubPath
000000000015a3b0 0000000000000098 T FT_Stroker_GetCounts
000000000015a450 0000000000000134 T FT_Stroker_ExportBorder
000000000015a590 0000000000000038 T FT_Stroker_Export
000000000015a5d0 0000000000000314 T FT_Stroker_ParseOutline
000000000015a8f0 0000000000000148 T FT_Glyph_Stroke
000000000015aa40 000000000000003c t tt_get_kerning
000000000015aa80 000000000000007c t tt_get_metrics_incremental
000000000015ab00 0000000000000074 t TT_Load_Glyph_Header
000000000015ab80 00000000000000a8 t tt_loader_set_pp
000000000015ac30 0000000000000428 t ft_var_get_value_pointer
000000000015b060 0000000000000014 t tt_cvt_ready_iterator
000000000015b080 0000000000000060 t tt_get_var_blend
000000000015b0e0 000000000000004c t TT_MulFix14
000000000015b130 000000000000006c t TT_DotFix14
000000000015b1a0 0000000000000008 t Current_Ppem
000000000015b1b0 000000000000000c t Read_CVT
000000000015b1c0 0000000000000068 t Direct_Move_X
000000000015b230 0000000000000060 t Direct_Move_Y
000000000015b290 0000000000000018 t Direct_Move_Orig_X
000000000015b2b0 000000000000001c t Direct_Move_Orig_Y
000000000015b2d0 0000000000000028 t Round_None
000000000015b300 000000000000003c t Round_To_Grid
000000000015b340 0000000000000040 t Round_To_Half_Grid
000000000015b380 0000000000000034 t Round_Down_To_Grid
000000000015b3c0 000000000000003c t Round_Up_To_Grid
000000000015b400 000000000000003c t Round_To_Double_Grid
000000000015b440 0000000000000054 t Round_Super
000000000015b4a0 0000000000000054 t Round_Super_45
000000000015b500 000000000000002c t Project
000000000015b530 000000000000002c t Dual_Project
000000000015b560 0000000000000008 t Project_x
000000000015b570 0000000000000008 t Project_y
000000000015b580 000000000000012c t Compute_Funcs
000000000015b6b0 0000000000000090 t SkipCode
000000000015b740 00000000000000c0 t Move_Zp2_Point
000000000015b800 0000000000000020 t tt_size_init
000000000015b820 0000000000000014 t tt_driver_init
000000000015b840 0000000000000004 t tt_driver_done
000000000015b850 00000000000000f8 t tt_face_get_location
000000000015b950 0000000000000018 t compare_ppem
000000000015b970 0000000000000114 t ft_var_apply_tuple
000000000015ba90 00000000000000b4 t Direct_Move_Orig
000000000015bb50 000000000000011c t Direct_Move
000000000015bc70 0000000000000090 t TT_Done_Context
000000000015bd00 0000000000000078 t tt_glyphzone_done
000000000015bd80 0000000000000090 t tt_size_done_bytecode
000000000015be10 0000000000000024 t tt_size_done
000000000015be40 0000000000000040 t tt_var_done_delta_set_index_map
000000000015be80 00000000000000ec t tt_var_done_item_variation_store
000000000015bf70 0000000000000268 t TT_Hint_Glyph
000000000015c1e0 0000000000000068 t TT_Access_Glyph_Frame
000000000015c250 0000000000000008 t TT_Forget_Glyph_Frame
000000000015c260 00000000000001ec t ft_var_readpackedpoints
000000000015c450 000000000000019c t ft_var_readpackeddeltas
000000000015c5f0 0000000000000094 t Current_Ratio
000000000015c690 000000000000000c t tt_slot_init
000000000015c6a0 000000000000067c t tt_face_vary_cvt
000000000015cd20 0000000000000104 t tt_face_load_cvt
000000000015ce30 00000000000005ec t tt_var_load_item_variation_store
000000000015d420 0000000000000258 t tt_var_load_delta_set_index_mapping
000000000015d680 00000000000002c4 t ft_var_load_avar
000000000015d950 000000000000021c t tt_var_get_item_delta
000000000015db70 00000000000002e0 t ft_var_to_normalized
000000000015de50 00000000000001a0 t tt_apply_mvar
000000000015dff0 00000000000009b4 t TT_Get_MM_Var
000000000015e9b0 000000000000020c t ft_var_load_hvvar
000000000015ebc0 00000000000000f4 t tt_hvadvance_adjust
000000000015ecc0 0000000000000008 t tt_vadvance_adjust
000000000015ecd0 0000000000000008 t tt_hadvance_adjust
000000000015ece0 0000000000000288 t TT_Load_Composite_Glyph
000000000015ef70 000000000000004c t tt_property_get
000000000015efc0 000000000000009c t TT_Get_VMetrics
000000000015f060 0000000000000134 t tt_get_advances
000000000015f1a0 0000000000000188 t tt_delta_interpolate.part.0
000000000015f330 0000000000000d28 t TT_Vary_Apply_Glyph_Deltas
0000000000160060 0000000000000198 t iup_worker_interpolate_
0000000000160200 0000000000000088 t tt_get_interface
0000000000160290 00000000000000a8 t tt_property_set
0000000000160340 00000000000001c0 t Ins_DELTAP.constprop.0
0000000000160500 00000000000003cc t Ins_IP.constprop.0
00000000001608d0 000000000000026c t Ins_ISECT.constprop.0
0000000000160b40 000000000000027c t Ins_MIRP.constprop.0
0000000000160dc0 0000000000000134 t Ins_MIAP.constprop.0
0000000000160f00 0000000000000138 t Compute_Point_Displacement.constprop.0
0000000000161040 0000000000000084 t Ins_JMPR.constprop.0
00000000001610d0 0000000000000110 t SetSuperRound.constprop.0
00000000001611e0 00000000000001fc t tt_size_reset
00000000001613e0 000000000000006c t tt_size_select
0000000000161450 0000000000000020 t tt_size_reset_iterator
0000000000161470 0000000000000114 t tt_size_request
0000000000161590 00000000000002bc t Ins_IUP.constprop.0
0000000000161850 00000000000007a8 t tt_set_mm_blend
0000000000162000 0000000000000044 t TT_Set_MM_Blend
0000000000162050 000000000000026c t TT_Set_Var_Design
00000000001622c0 0000000000000158 t TT_Set_Named_Instance
0000000000162420 0000000000000980 t tt_face_init
0000000000162da0 00000000000000f4 t TT_Get_Var_Design
0000000000162ea0 00000000000000f4 t TT_Get_MM_Blend
0000000000162fa0 0000000000000100 t Ins_SxVTL.constprop.0
00000000001630a0 000000000000021c t tt_done_blend
00000000001632c0 00000000000000c4 t tt_face_done
0000000000163390 0000000000000098 t Current_Ppem_Stretched
0000000000163430 000000000000009c t Read_CVT_Stretched
00000000001634d0 00000000000000d8 t Write_CVT
00000000001635b0 00000000000000e0 t Move_CVT
0000000000163690 00000000000000fc t Write_CVT_Stretched
0000000000163790 0000000000000108 t Move_CVT_Stretched
00000000001638a0 0000000000000250 t TT_Load_Context
0000000000163af0 0000000000000170 t tt_size_run_prep
0000000000163c60 0000000000000110 t Ins_UNKNOWN.constprop.0
0000000000163d70 00000000000010a4 t load_truetype_glyph
0000000000164e20 000000000000040c t TT_Load_Simple_Glyph
0000000000165230 00000000000029f4 T TT_RunIns
0000000000167c30 0000000000000098 T TT_New_Context
0000000000167cd0 0000000000000e9c t TT_Load_Glyph
0000000000168b70 00000000000000c8 t tt_glyph_load
0000000000168c40 0000000000000020 t compare_kern_pairs
0000000000168c60 0000000000000008 t t1_get_ps_name
0000000000168c70 0000000000000024 t t1_ps_get_font_info
0000000000168ca0 0000000000000010 t t1_ps_get_font_extra
0000000000168cb0 0000000000000008 t t1_ps_has_glyph_names
0000000000168cc0 0000000000000044 t t1_ps_get_font_private
0000000000168d10 0000000000000068 t T1_Get_Multi_Master
0000000000168d80 00000000000000e8 t T1_Set_MM_WeightVector
0000000000168e70 00000000000000ac t T1_Get_MM_WeightVector
0000000000168f20 0000000000000038 t parse_buildchar
0000000000168f60 0000000000000010 t parse_private
0000000000168f70 00000000000000d0 t read_binary_data
0000000000169040 0000000000000010 t T1_GlyphSlot_Done
0000000000169050 000000000000007c t T1_Driver_Init
00000000001690d0 0000000000000004 t T1_Driver_Done
00000000001690e0 0000000000000054 t T1_GlyphSlot_Init
0000000000169140 00000000000001d0 t T1_Parse_Glyph_And_Get_Char_String
0000000000169310 0000000000000060 t T1_Parse_Glyph
0000000000169370 0000000000000144 t T1_Compute_Max_Advance
00000000001694c0 000000000000012c t T1_Get_Advances
00000000001695f0 0000000000000174 t T1_Done_Blend
0000000000169770 00000000000004b4 t parse_encoding
0000000000169c30 000000000000043c t T1_Load_Glyph
000000000016a070 000000000000007c t t1_get_name_index
000000000016a0f0 00000000000001ec t t1_allocate_blend
000000000016a2e0 0000000000000164 t parse_weight_vector
000000000016a450 00000000000002b0 t parse_blend_design_positions
000000000016a700 00000000000005ac t parse_dict
000000000016acb0 000000000000009c t read_pfb_tag
000000000016ad50 0000000000000634 t parse_charstrings
000000000016b390 00000000000003d8 t parse_subrs
000000000016b770 00000000000000a4 t mm_axis_unmap
000000000016b820 0000000000000130 t t1_parse_font_matrix
000000000016b950 000000000000000c t Get_Interface
000000000016b960 00000000000000e8 t T1_Get_Track_Kerning
000000000016ba50 0000000000000754 t t1_ps_get_font_value
000000000016c1b0 0000000000000028 t t1_get_glyph_name
000000000016c1e0 000000000000015c t mm_weights_unmap
000000000016c340 0000000000000098 t T1_Get_MM_Blend
000000000016c3e0 00000000000000d0 t T1_Get_Var_Design
000000000016c4b0 0000000000000264 t T1_Get_MM_Var
000000000016c720 00000000000000c4 t t1_get_index
000000000016c7f0 00000000000000a4 t check_type1_format.part.0
000000000016c8a0 0000000000000090 t Get_Kerning
000000000016c930 0000000000000058 t T1_Size_Get_Globals_Funcs.isra.0
000000000016c990 0000000000000060 t T1_Size_Init
000000000016c9f0 000000000000004c t T1_Size_Done
000000000016ca40 0000000000000070 t T1_Size_Request
000000000016cab0 000000000000011c t t1_set_mm_blend.isra.0
000000000016cbd0 00000000000001bc t T1_Set_MM_Design
000000000016cd90 000000000000007c t T1_Set_Var_Design
000000000016ce10 0000000000000044 t T1_Set_MM_Blend
000000000016ce60 0000000000000a98 t T1_Open_Face
000000000016d900 0000000000000420 t T1_Face_Init
000000000016dd20 000000000000003c t T1_Reset_MM_Blend
000000000016dd60 00000000000001b4 t T1_Face_Done
000000000016df20 00000000000003e4 t T1_Read_Metrics
000000000016e310 00000000000001a4 t parse_blend_axis_types
000000000016e4c0 0000000000000274 t parse_blend_design_map
000000000016e740 000000000000001c t cff_cmap_encoding_init
000000000016e760 0000000000000008 t cff_cmap_encoding_done
000000000016e770 000000000000001c t cff_cmap_encoding_char_index
000000000016e790 0000000000000040 t cff_cmap_encoding_char_next
000000000016e7d0 000000000000004c t cff_cmap_unicode_init
000000000016e820 0000000000000018 t cff_cmap_unicode_char_index
000000000016e840 0000000000000018 t cff_cmap_unicode_char_next
000000000016e860 000000000000003c t cff_get_kerning
000000000016e8a0 000000000000000c t cff_ps_has_glyph_names
000000000016e8b0 000000000000002c t cff_get_is_cid
000000000016e8e0 0000000000000048 t cff_get_cid_from_glyph_index
000000000016e930 0000000000000010 t cff_set_mm_blend
000000000016e940 0000000000000010 t cff_get_mm_blend
000000000016e950 0000000000000010 t cff_set_mm_weightvector
000000000016e960 0000000000000010 t cff_get_mm_weightvector
000000000016e970 0000000000000010 t cff_get_mm_var
000000000016e980 0000000000000010 t cff_set_var_design
000000000016e990 0000000000000010 t cff_get_var_design
000000000016e9a0 0000000000000010 t cff_set_instance
000000000016e9b0 0000000000000010 t cff_load_item_variation_store
000000000016e9c0 0000000000000010 t cff_load_delta_set_index_mapping
000000000016e9d0 0000000000000010 t cff_get_item_delta
000000000016e9e0 0000000000000010 t cff_done_item_variation_store
000000000016e9f0 0000000000000010 t cff_done_delta_set_index_map
000000000016ea00 0000000000000010 t cff_hadvance_adjust
000000000016ea10 0000000000000010 t cff_metrics_adjust
000000000016ea20 00000000000000cc t cff_parse_integer
000000000016eaf0 0000000000000020 t cff_get_standard_encoding
000000000016eb10 00000000000000ac t cff_fd_select_get
000000000016ebc0 0000000000000010 t cff_get_var_blend
000000000016ebd0 0000000000000018 t cff_done_blend
000000000016ebf0 0000000000000010 t cff_slot_done
000000000016ec00 000000000000007c t cff_driver_init
000000000016ec80 0000000000000004 t cff_driver_done
000000000016ec90 0000000000000034 t cff_cmap_unicode_done
000000000016ecd0 00000000000000c4 t cff_vstore_done
000000000016eda0 0000000000000058 t cff_slot_init
000000000016ee00 0000000000000178 t cff_make_private_dict
000000000016ef80 0000000000000050 t cff_index_done
000000000016efd0 00000000000000a0 t cff_get_cmap_info
000000000016f070 000000000000007c t cff_get_ps_name
000000000016f0f0 00000000000003c0 t cff_parse_real
000000000016f4b0 000000000000012c t cff_get_name_index
000000000016f5e0 00000000000000f0 t cff_charset_compute_cids
000000000016f6d0 0000000000000064 t cff_blend_check_vector
000000000016f740 0000000000000290 t cff_blend_build_vector
000000000016f9d0 0000000000000408 t cff_index_get_pointers
000000000016fde0 0000000000000058 t cff_index_get_sid_string
000000000016fe40 00000000000000c4 t cff_get_ros
000000000016ff10 0000000000000114 t cff_ps_get_font_info
0000000000170030 00000000000000d4 t cff_get_glyph_name
0000000000170110 0000000000000144 t cff_ps_get_font_extra
0000000000170260 0000000000000068 t cff_subfont_done.part.0
00000000001702d0 000000000000007c t cff_get_interface
0000000000170350 000000000000005c t cff_size_get_globals_funcs.isra.0
00000000001703b0 0000000000000178 t cff_size_init
0000000000170530 000000000000008c t cff_size_done
00000000001705c0 0000000000000108 t cff_size_select
00000000001706d0 00000000000001a0 t cff_size_request
0000000000170870 00000000000001ec t cff_face_done
0000000000170a60 0000000000000308 t cff_parse_font_matrix
0000000000170d70 0000000000000064 t cff_parse_num.isra.0
0000000000170de0 000000000000008c t cff_parse_private_dict
0000000000170e70 0000000000000080 t cff_parse_multiple_master
0000000000170ef0 0000000000000084 t cff_parse_cid_ros
0000000000170f80 0000000000000060 t cff_parse_vsindex
0000000000170fe0 0000000000000058 t cff_free_glyph_data
0000000000171040 0000000000000300 t cff_parse_blend
0000000000171340 0000000000000260 t cff_index_access_element
00000000001715a0 0000000000000058 t cff_get_glyph_data
0000000000171600 000000000000088c t cff_slot_load
0000000000171e90 0000000000000040 t cff_glyph_load
0000000000171ed0 0000000000000218 t cff_get_advances
00000000001720f0 00000000000000d8 t cff_index_get_name
00000000001721d0 00000000000001c4 t cff_index_init
00000000001723a0 0000000000000424 t cff_parser_run
00000000001727d0 0000000000000234 t cff_load_private_dict
0000000000172a10 00000000000001b8 t cff_parse_font_bbox
0000000000172bd0 0000000000000060 t cff_sid_to_glyph_name
0000000000172c30 00000000000000a4 t cff_parse_maxstack
0000000000172ce0 000000000000036c t cff_subfont_load
0000000000173050 0000000000001cfc t cff_face_init
0000000000174d50 0000000000000054 t parse_expansion_factor
0000000000174db0 0000000000000004 t parse_font_name
0000000000174dc0 0000000000000010 t cid_slot_done
0000000000174dd0 000000000000007c t cid_driver_init
0000000000174e50 0000000000000004 t cid_driver_done
0000000000174e60 0000000000000018 t cid_get_postscript_name
0000000000174e80 0000000000000024 t cid_ps_get_font_info
0000000000174eb0 0000000000000010 t cid_ps_get_font_extra
0000000000174ec0 000000000000002c t cid_get_ros
0000000000174ef0 0000000000000014 t cid_get_is_cid
0000000000174f10 0000000000000010 t cid_get_cid_from_glyph_index
0000000000174f20 0000000000000054 t cid_slot_init
0000000000174f80 00000000000004b4 t cid_load_glyph
0000000000175440 00000000000003dc t cid_slot_load_glyph
0000000000175820 0000000000000158 t cid_face_done
0000000000175980 0000000000000164 t cid_parse_font_matrix
0000000000175af0 0000000000000100 t parse_fd_array
0000000000175bf0 000000000000000c t cid_get_interface
0000000000175c00 0000000000000058 t cid_size_get_globals_funcs.isra.0
0000000000175c60 0000000000000070 t cid_size_init
0000000000175cd0 000000000000004c t cid_size_done
0000000000175d20 000000000000006c t cid_size_request
0000000000175d90 0000000000000d20 t cid_face_open
0000000000176ab0 0000000000000298 t cid_face_init
0000000000176d50 0000000000000060 t pfr_cmap_init
0000000000176db0 000000000000000c t pfr_cmap_done
0000000000176dc0 0000000000000070 t pfr_cmap_char_index
0000000000176e30 00000000000000c0 t pfr_cmap_char_next
0000000000176ef0 0000000000000048 t pfr_get_advance
0000000000176f40 00000000000000a8 t pfr_glyph_close_contour
0000000000176ff0 00000000000001e4 t pfr_face_get_kerning
00000000001771e0 0000000000000224 t pfr_extra_item_load_bitmap_info
0000000000177410 0000000000000058 t pfr_slot_done
0000000000177470 0000000000000034 t pfr_slot_init
00000000001774b0 0000000000000110 t pfr_extra_item_load_stem_snaps
00000000001775c0 000000000000014c t pfr_extra_item_load_kerning_pairs
0000000000177710 000000000000009c t pfr_extra_item_load_font_id
00000000001777b0 00000000000000e8 t pfr_aux_name_load
00000000001778a0 000000000000000c t pfr_get_service
00000000001778b0 0000000000000090 t pfr_get_metrics
0000000000177940 000000000000007c t pfr_get_kerning
00000000001779c0 0000000000000104 t pfr_face_done
0000000000177ad0 000000000000008c t pfr_glyph_line_to.isra.0
0000000000177b60 0000000000000a80 t pfr_glyph_load_rec
00000000001785e0 0000000000000a18 t pfr_slot_load
0000000000179000 0000000000000cb8 t pfr_face_init
0000000000179cc0 0000000000000008 t t42_get_ps_font_name
0000000000179cd0 0000000000000024 t t42_ps_get_font_info
0000000000179d00 0000000000000010 t t42_ps_get_font_extra
0000000000179d10 0000000000000008 t t42_ps_has_glyph_names
0000000000179d20 0000000000000004 t T42_Driver_Done
0000000000179d30 000000000000006c t T42_Size_Select
0000000000179da0 000000000000006c t T42_Size_Request
0000000000179e10 0000000000000148 t T42_GlyphSlot_Load
0000000000179f60 000000000000000c t T42_GlyphSlot_Done
0000000000179f70 0000000000000098 t T42_GlyphSlot_Init
000000000017a010 000000000000005c t T42_Size_Init
000000000017a070 0000000000000138 t T42_Face_Done
000000000017a1b0 000000000000004c t T42_Driver_Init
000000000017a200 0000000000000510 t t42_parse_charstrings
000000000017a710 00000000000000ac t t42_get_name_index
000000000017a7c0 0000000000000504 t t42_parse_sfnts
000000000017acd0 0000000000000120 t t42_parse_font_matrix
000000000017adf0 000000000000000c t T42_Get_Interface
000000000017ae00 0000000000000028 t t42_get_glyph_name
000000000017ae30 0000000000000040 t T42_Size_Done
000000000017ae70 0000000000000a50 t T42_Face_Init
000000000017b8c0 0000000000000478 t t42_parse_encoding
000000000017bd40 000000000000002c t fnt_cmap_init
000000000017bd70 0000000000000014 t fnt_cmap_char_index
000000000017bd90 0000000000000050 t fnt_cmap_char_next
000000000017bde0 0000000000000048 t winfnt_get_header
000000000017be30 0000000000000058 t FNT_Size_Select
000000000017be90 0000000000000250 t FNT_Load_Glyph
000000000017c0e0 0000000000000064 t fnt_font_done
000000000017c150 00000000000000d4 t fnt_font_load
000000000017c230 000000000000000c t winfnt_get_service
000000000017c240 0000000000000a9c t FNT_Face_Init
000000000017cce0 0000000000000040 t FNT_Face_Done
000000000017cd20 0000000000000100 t FNT_Size_Request
000000000017ce20 0000000000000018 t pcf_cmap_init
000000000017ce40 0000000000000008 t pcf_cmap_done
000000000017ce50 0000000000000058 t pcf_cmap_char_index
000000000017ceb0 00000000000000c0 t pcf_cmap_char_next
000000000017cf70 000000000000001c t pcf_get_charset_id
000000000017cf90 0000000000000008 t pcf_property_set
000000000017cfa0 0000000000000008 t pcf_property_get
000000000017cfb0 0000000000000008 t pcf_driver_init
000000000017cfc0 0000000000000004 t pcf_driver_done
000000000017cfd0 000000000000004c t PCF_Size_Select
000000000017d020 00000000000002a8 t PCF_Glyph_Load
000000000017d2d0 000000000000000c t pcf_driver_requester
000000000017d2e0 0000000000000168 t PCF_Face_Done.part.0
000000000017d450 000000000000000c t PCF_Face_Done
000000000017d460 000000000000008c t pcf_find_property.isra.0
000000000017d4f0 0000000000000070 t pcf_get_bdf_property
000000000017d560 00000000000000f0 t PCF_Size_Request
000000000017d650 0000000000000230 t pcf_get_accel
000000000017d880 000000000000143c t pcf_load_font
000000000017ecc0 0000000000000270 t PCF_Face_Init
000000000017ef30 00000000000000bc t bdf_atol_
000000000017eff0 00000000000000c0 t bdf_atos_
000000000017f0b0 0000000000000018 t by_encoding
000000000017f0d0 0000000000000008 t bdf_parse_end_
000000000017f0e0 000000000000001c t bdf_cmap_init
000000000017f100 0000000000000008 t bdf_cmap_done
000000000017f110 0000000000000078 t bdf_cmap_char_index
000000000017f190 00000000000000c8 t bdf_cmap_char_next
000000000017f260 000000000000001c t bdf_get_charset_id
000000000017f280 0000000000000048 t BDF_Size_Select
000000000017f2d0 000000000000014c t BDF_Glyph_Load
000000000017f420 0000000000000094 t bdf_list_ensure_
000000000017f4c0 0000000000000088 t bdf_add_comment_
000000000017f550 000000000000000c t bdf_driver_requester
000000000017f560 000000000000008c t bdf_atoul_
000000000017f5f0 0000000000000088 t bdf_atous_
000000000017f680 00000000000001c4 t bdf_free_font.part.0
000000000017f850 00000000000000a4 t BDF_Face_Done
000000000017f900 0000000000000258 t bdf_list_split_.part.0
000000000017fb60 0000000000000528 t bdf_add_property_.constprop.0
0000000000180090 00000000000000a4 t bdf_list_join_.constprop.0
0000000000180140 0000000000000058 t bdf_list_shift_.constprop.0
00000000001801a0 00000000000000f0 t BDF_Size_Request
0000000000180290 00000000000000b0 t bdf_get_bdf_property
0000000000180340 000000000000041c t bdf_parse_properties_
0000000000180760 000000000000101c t BDF_Face_Init
0000000000181780 0000000000000898 t bdf_parse_start_
0000000000182020 0000000000000c80 t bdf_parse_glyphs_
0000000000182ca0 0000000000000098 t premultiply_data
0000000000182d40 0000000000000048 t convert_bytes_to_data
0000000000182d90 0000000000000004 t warning_callback
0000000000182da0 0000000000000094 t get_sfnt_table
0000000000182e40 000000000000005c t sfnt_table_info
0000000000182ea0 0000000000000034 t sfnt_is_postscript
0000000000182ee0 0000000000000028 t sfnt_is_alphanumeric
0000000000182f10 00000000000000d4 t sfnt_get_name_id
0000000000182ff0 0000000000000020 t compare_offsets
0000000000183010 0000000000000010 t tt_cmap_init
0000000000183020 0000000000000020 t tt_cmap0_char_index
0000000000183040 0000000000000038 t tt_cmap0_char_next
0000000000183080 0000000000000020 t tt_cmap0_get_info
00000000001830a0 0000000000000058 t tt_cmap2_get_subheader
0000000000183100 000000000000008c t tt_cmap2_char_index
0000000000183190 00000000000001a0 t tt_cmap2_char_next
0000000000183330 0000000000000024 t tt_cmap2_get_info
0000000000183360 0000000000000028 t tt_cmap4_init
0000000000183390 0000000000000114 t tt_cmap4_set_range
00000000001834b0 0000000000000158 t tt_cmap4_next
0000000000183610 00000000000005f0 t tt_cmap4_char_map_binary
0000000000183c00 0000000000000024 t tt_cmap4_get_info
0000000000183c30 0000000000000040 t tt_cmap6_char_index
0000000000183c70 000000000000009c t tt_cmap6_char_next
0000000000183d10 0000000000000024 t tt_cmap6_get_info
0000000000183d40 000000000000008c t tt_cmap8_char_index
0000000000183dd0 0000000000000128 t tt_cmap8_char_next
0000000000183f00 0000000000000020 t tt_cmap8_get_info
0000000000183f20 000000000000004c t tt_cmap10_char_index
0000000000183f70 0000000000000088 t tt_cmap10_char_next
0000000000184000 0000000000000020 t tt_cmap10_get_info
0000000000184020 0000000000000020 t tt_cmap12_init
0000000000184040 00000000000000f8 t tt_cmap12_next
0000000000184140 000000000000015c t tt_cmap12_char_map_binary
00000000001842a0 0000000000000020 t tt_cmap12_char_index
00000000001842c0 0000000000000020 t tt_cmap12_get_info
00000000001842e0 0000000000000020 t tt_cmap13_init
0000000000184300 0000000000000090 t tt_cmap13_next
0000000000184390 0000000000000140 t tt_cmap13_char_map_binary
00000000001844d0 0000000000000020 t tt_cmap13_char_index
00000000001844f0 0000000000000020 t tt_cmap13_get_info
0000000000184510 0000000000000024 t tt_cmap14_init
0000000000184540 0000000000000008 t tt_cmap14_char_index
0000000000184550 000000000000000c t tt_cmap14_char_next
0000000000184560 0000000000000014 t tt_cmap14_get_info
0000000000184580 0000000000000074 t tt_cmap14_char_map_def_binary
0000000000184600 0000000000000074 t tt_cmap14_char_map_nondef_binary
0000000000184680 0000000000000070 t tt_cmap14_find_variant
00000000001846f0 000000000000007c t tt_cmap14_char_var_index
0000000000184770 0000000000000084 t tt_cmap14_char_var_isdefault
0000000000184800 0000000000000038 t tt_cmap_unicode_init
0000000000184840 0000000000000014 t tt_cmap_unicode_char_index
0000000000184860 0000000000000014 t tt_cmap_unicode_char_next
0000000000184880 000000000000001c t tt_get_cmap_info
00000000001848a0 0000000000000144 t tt_face_get_colr_layer
00000000001849f0 000000000000007c t get_child_table_pointer
0000000000184a70 00000000000000ec t get_deltas_for_var_index_base
0000000000184b60 00000000000000d4 t tt_face_get_colr_glyph_paint
0000000000184c40 00000000000000a8 t tt_face_get_paint_layers
0000000000184cf0 00000000000000a0 t tt_face_palette_set
0000000000184d90 000000000000002c t extract_svg_doc
0000000000184dc0 0000000000000190 t tt_face_get_kerning
0000000000184f50 00000000000000a8 t tt_sbit_decoder_load_metrics
0000000000185000 00000000000001ec t tt_sbit_decoder_load_byte_aligned
00000000001851f0 000000000000022c t tt_sbit_decoder_load_bit_aligned
0000000000185420 000000000000000c t sfnt_get_interface
0000000000185430 00000000000001b8 t tt_face_load_kern
00000000001855f0 0000000000000030 t tt_face_free_sbit
0000000000185620 00000000000001fc t tt_face_get_metrics
0000000000185820 00000000000000a0 t tt_name_ascii_from_other
00000000001858c0 00000000000000b4 t tt_name_ascii_from_utf16
0000000000185980 0000000000000040 t tt_face_free_svg
00000000001859c0 00000000000002a8 t tt_face_get_name
0000000000185c70 000000000000007c t tt_face_free_colr
0000000000185cf0 0000000000000040 t tt_face_free_cpal
0000000000185d30 00000000000000b4 t tt_face_free_ps_names
0000000000185df0 0000000000000164 t tt_face_load_gasp
0000000000185f60 00000000000000e4 t tt_face_free_name
0000000000186050 00000000000001fc t sfnt_done_face
0000000000186250 0000000000000030 t sfnt_stream_close
0000000000186280 0000000000000038 t tt_cmap14_done
00000000001862c0 0000000000000034 t tt_cmap_unicode_done
0000000000186300 00000000000002b0 t tt_face_load_svg_doc
00000000001865b0 0000000000000154 t tt_face_load_svg
0000000000186710 00000000000003c4 t tt_face_colr_blend_layer
0000000000186ae0 00000000000003bc t tt_face_load_colr
0000000000186ea0 0000000000000080 t tt_face_load_hmtx
0000000000186f20 00000000000003b8 t tt_face_load_cpal
00000000001872e0 0000000000000298 t tt_face_load_strike_metrics
0000000000187580 000000000000000c t tt_face_set_sbit_strike
0000000000187590 00000000000003b8 t tt_face_load_sbit
0000000000187950 0000000000000058 t tt_face_load_pclt
00000000001879b0 0000000000000398 t tt_face_load_name
0000000000187d50 00000000000000e0 t tt_face_load_maxp
0000000000187e30 0000000000000098 t tt_face_load_hhea
0000000000187ed0 0000000000000428 t Load_SBit_Png
0000000000188300 000000000000007c t tt_sbit_decoder_load_png
0000000000188380 000000000000003c t error_callback
00000000001883c0 00000000000000b8 t tt_cmap0_validate
0000000000188480 000000000000023c t tt_cmap2_validate
00000000001886c0 00000000000004e4 t tt_cmap4_validate
0000000000188bb0 00000000000000e0 t tt_cmap6_validate
0000000000188c90 0000000000000298 t tt_cmap8_validate
0000000000188f30 00000000000000e4 t tt_cmap10_validate
0000000000189020 0000000000000168 t tt_cmap12_validate
0000000000189190 0000000000000158 t tt_cmap13_validate
00000000001892f0 0000000000000374 t tt_cmap14_validate
0000000000189670 000000000000005c t tt_cmap12_char_next
00000000001896d0 000000000000005c t tt_cmap13_char_next
0000000000189730 0000000000000060 t tt_face_load_cmap
0000000000189790 0000000000000058 t tt_face_load_head
00000000001897f0 0000000000000084 t tt_face_load_post
0000000000189880 00000000000000fc t tt_face_load_os2
0000000000189980 0000000000000074 t read_data_from_FT_Stream
0000000000189a00 00000000000003d0 t tt_face_load_font_dir
0000000000189dd0 0000000000000ea4 t sfnt_init_face
000000000018ac80 0000000000000110 t get_apple_string.constprop.0
000000000018ad90 000000000000012c t get_win_string.constprop.0
000000000018aec0 0000000000000a50 t sfnt_get_ps_name
000000000018b910 0000000000000478 t load_post_names
000000000018bd90 0000000000000134 t tt_face_get_ps_name.part.0
000000000018bed0 0000000000000024 t tt_face_get_ps_name
000000000018bf00 0000000000000264 t tt_face_build_cmaps.isra.0
000000000018c170 0000000000000238 t tt_cmap4_char_map_linear.isra.0
000000000018c3b0 0000000000000094 t tt_cmap4_char_next
000000000018c450 0000000000000060 t tt_cmap4_char_index
000000000018c4b0 0000000000000058 t tt_face_load_bhed
000000000018c510 00000000000000bc t sfnt_get_name_index
000000000018c5d0 0000000000000048 t tt_get_glyph_name
000000000018c620 0000000000000088 t sfnt_get_glyph_name
000000000018c6b0 0000000000000058 t tt_face_goto_table
000000000018c710 0000000000000090 t tt_face_load_any
000000000018c7a0 000000000000032c t tt_face_find_bdf_prop
000000000018cad0 0000000000000098 t sfnt_get_charset_id
000000000018cb70 00000000000000e4 t tt_cmap14_variants
000000000018cc60 00000000000000f4 t tt_cmap14_get_nondef_chars
000000000018cd60 0000000000000158 t tt_cmap14_get_def_chars
000000000018cec0 00000000000003b0 t tt_cmap14_variant_chars
000000000018d270 0000000000000140 t tt_cmap14_char_variants
000000000018d3b0 0000000000000668 t tt_sbit_decoder_load_image
000000000018da20 0000000000000160 t tt_sbit_decoder_load_compound
000000000018db80 0000000000000534 t tt_face_load_sbit_image
000000000018e0c0 0000000000000c24 t sfnt_load_face
000000000018ecf0 00000000000001cc t tt_face_get_colorline_stops
000000000018eec0 000000000000035c t tt_face_get_color_glyph_clipbox
000000000018f220 0000000000000f68 t tt_face_get_paint
0000000000190190 000000000000001c t af_cjk_get_standard_widths
00000000001901b0 0000000000000078 t af_cjk_hints_init
0000000000190230 0000000000000078 t af_cjk_snap_width
0000000000190230 0000000000000078 t af_latin_snap_width
00000000001902b0 000000000000002c t af_dummy_hints_init
00000000001902e0 00000000000002d4 t af_sort_and_quantize_widths
00000000001905c0 000000000000001c t af_latin_get_standard_widths
00000000001905e0 000000000000019c t af_latin_hints_link_segments
0000000000190780 0000000000000078 t af_latin_hints_init
0000000000190800 0000000000000048 t af_autofitter_init
0000000000190850 0000000000000004 t af_autofitter_done
0000000000190860 0000000000000194 t af_cjk_hints_compute_blue_edges
0000000000190a00 000000000000077c t af_glyph_hints_reload
0000000000191180 00000000000007b0 t af_latin_hints_compute_segments
0000000000191930 00000000000001cc t af_axis_hints_new_edge
0000000000191b00 0000000000000260 t af_glyph_hints_align_strong_points
0000000000191d60 00000000000001a4 t af_cjk_metrics_scale_dim
0000000000191f10 0000000000000048 t af_cjk_metrics_scale
0000000000191f60 0000000000000440 t af_latin_hints_compute_edges
00000000001923a0 00000000000003c0 t af_latin_metrics_scale_dim
0000000000192760 0000000000000044 t af_latin_metrics_scale
00000000001927b0 00000000000000f0 t af_glyph_hints_done
00000000001928a0 00000000000000a0 t af_face_globals_free
0000000000192940 000000000000000c t af_get_interface
0000000000192950 00000000000006f8 t af_cjk_hints_detect_features
0000000000193050 0000000000000110 t af_iup_interp.part.0
0000000000193160 00000000000002a0 t af_glyph_hints_align_weak_points
0000000000193400 00000000000003bc t af_face_globals_new
00000000001937c0 00000000000002bc t af_property_set
0000000000193a80 0000000000000194 t af_cjk_compute_stem_width.constprop.0.isra.0
0000000000193c20 000000000000025c t af_hint_normal_stem
0000000000193e80 0000000000000278 t af_loader_compute_darkening.isra.0
0000000000194100 0000000000000830 t af_autofitter_load_glyph
0000000000194930 0000000000000240 t af_latin_compute_stem_width.isra.0
0000000000194b70 0000000000000044 t af_glyph_hints_save.isra.0
0000000000194bc0 0000000000000058 t af_dummy_hints_apply
0000000000194c20 000000000000001c t af_indic_get_standard_widths
0000000000194c40 0000000000000048 t af_indic_metrics_scale
0000000000194c90 0000000000000748 t af_cjk_hints_apply
00000000001953e0 0000000000000004 t af_indic_hints_apply
00000000001953f0 0000000000000c0c t af_latin_hints_apply
0000000000196000 0000000000000078 t af_indic_hints_init
0000000000196080 00000000000001c0 t af_property_get
0000000000196240 0000000000000154 t af_shaper_get_cluster
00000000001963a0 00000000000002dc t af_cjk_metrics_init_widths
0000000000196680 00000000000004ac t af_cjk_metrics_init_blues
0000000000196b30 00000000000002f0 t af_latin_metrics_init_widths
0000000000196e20 0000000000000a84 t af_latin_metrics_init_blues
00000000001978b0 0000000000000148 t af_latin_metrics_init
0000000000197a00 0000000000000104 t af_cjk_metrics_check_digits.constprop.0
0000000000197b10 000000000000007c t af_indic_metrics_init
0000000000197b90 0000000000000088 t af_cjk_metrics_init
0000000000197c20 00000000000000a8 t psh_hint_table_record
0000000000197cd0 0000000000000008 t pshinter_get_globals_funcs
0000000000197ce0 0000000000000008 t pshinter_get_t1_funcs
0000000000197cf0 0000000000000008 t pshinter_get_t2_funcs
0000000000197d00 0000000000000028 t t1_hints_open
0000000000197d30 0000000000000028 t t2_hints_open
0000000000197d60 00000000000000cc t psh_globals_scale_widths
0000000000197e30 00000000000002f4 t psh_globals_set_scale
0000000000198130 00000000000000c0 t ps_hinter_init
00000000001981f0 0000000000000078 t ps_mask_table_done
0000000000198270 00000000000000dc t ps_mask_table_alloc
0000000000198350 0000000000000088 t ps_mask_ensure
00000000001983e0 000000000000002c t psh_globals_destroy
0000000000198410 0000000000000138 t psh_blues_set_zones_0.constprop.0
0000000000198550 00000000000001e8 t psh_blues_set_zones
0000000000198740 0000000000000458 t psh_hint_align
0000000000198ba0 00000000000001f0 t ps_mask_table_merge_all
0000000000198d90 00000000000002a0 t psh_hint_table_find_strong_points.isra.0
0000000000199030 0000000000000224 t psh_hint_table_init.constprop.0
0000000000199260 0000000000000128 t psh_hint_table_activate_mask.isra.0
0000000000199390 00000000000000ac t ps_hints_close
0000000000199440 0000000000000088 t ps_hinter_done
00000000001994d0 0000000000000140 t ps_dimension_set_mask_bits
0000000000199610 00000000000000ac t ps_hints_t2counter
00000000001996c0 00000000000000ac t ps_hints_t2mask
0000000000199770 00000000000000b0 t ps_hints_t1reset
0000000000199820 0000000000001224 T ps_hints_apply
000000000019aa50 0000000000000250 t psh_globals_new
000000000019aca0 00000000000001cc t ps_dimension_add_t1stem
000000000019ae70 000000000000007c t t1_hints_stem
000000000019aef0 000000000000013c t t2_hints_stems
000000000019b030 000000000000028c t ps_hints_t1stem3
000000000019b2c0 0000000000000004 t gray_raster_reset
000000000019b2d0 0000000000000008 t gray_raster_set_mode
000000000019b2e0 0000000000000018 t ft_smooth_set_mode
000000000019b300 0000000000000048 t ft_smooth_init
000000000019b350 0000000000000070 t ft_smooth_lcd_spans
000000000019b3c0 0000000000000098 t ft_smooth_overlap_spans
000000000019b460 000000000000000c t gray_raster_done
000000000019b470 0000000000000084 t gray_convert_glyph_inner
000000000019b500 00000000000000b8 t gray_set_cell
000000000019b5c0 0000000000000304 t gray_render_line
000000000019b8d0 000000000000002c t gray_line_to
000000000019b900 000000000000004c t gray_move_to
000000000019b950 0000000000000640 t gray_convert_glyph
000000000019bf90 0000000000000144 t gray_raster_render
000000000019c0e0 0000000000000040 t gray_raster_new
000000000019c120 000000000000002c t ft_smooth_get_cbox
000000000019c150 0000000000000638 t ft_smooth_render
000000000019c790 0000000000000064 t ft_smooth_transform
000000000019c800 0000000000000210 t gray_render_cubic.isra.0
000000000019ca10 000000000000002c t gray_cubic_to
000000000019ca40 00000000000001a4 t gray_conic_to
000000000019cbf0 00000000000000b0 t New_Profile
000000000019cca0 0000000000000098 t End_Profile
000000000019cd40 00000000000000b4 t Insert_Y_Turn
000000000019ce00 0000000000000030 t Split_Conic
000000000019ce30 000000000000009c t Split_Cubic
000000000019ced0 000000000000020c t Bezier_Up
000000000019d0e0 000000000000021c t Conic_To
000000000019d300 000000000000009c t Sort
000000000019d3a0 000000000000001c t Vertical_Sweep_Init
000000000019d3c0 0000000000000138 t Vertical_Sweep_Span
000000000019d500 000000000000024c t Vertical_Sweep_Drop
000000000019d750 0000000000000014 t Vertical_Sweep_Step
000000000019d770 0000000000000004 t Horizontal_Sweep_Init
000000000019d780 00000000000000cc t Horizontal_Sweep_Span
000000000019d850 0000000000000264 t Horizontal_Sweep_Drop
000000000019dac0 0000000000000004 t Horizontal_Sweep_Step
000000000019dad0 0000000000000004 t ft_black_reset
000000000019dae0 0000000000000008 t ft_black_set_mode
000000000019daf0 0000000000000030 t ft_raster1_init
000000000019db20 0000000000000018 t ft_raster1_set_mode
000000000019db40 000000000000000c t ft_black_done
000000000019db50 0000000000000254 t Line_Up
000000000019ddb0 0000000000000250 t Line_To
000000000019e000 0000000000000040 t ft_black_new
000000000019e040 000000000000002c t ft_raster1_get_cbox
000000000019e070 00000000000001c4 t ft_raster1_render
000000000019e240 0000000000000064 t ft_raster1_transform
000000000019e2b0 0000000000000260 t Cubic_To
000000000019e510 0000000000000ae0 t Render_Single_Pass.constprop.0
000000000019eff0 0000000000000218 t ft_black_render
000000000019f210 0000000000000010 t ft_svg_init
000000000019f220 0000000000000038 t ft_svg_done
000000000019f260 0000000000000080 t ft_svg_preset_slot
000000000019f2e0 00000000000000e8 t ft_svg_transform
000000000019f3d0 000000000000000c t ft_svg_get_interface
000000000019f3e0 0000000000000050 t ft_svg_property_get
000000000019f430 00000000000000a4 t ft_svg_property_set
000000000019f4e0 0000000000000120 t ft_svg_render
000000000019f600 000000000000001c t ft_sdf_init
000000000019f620 0000000000000004 t ft_sdf_done
000000000019f630 0000000000000018 t ft_sdf_set_mode
000000000019f650 0000000000000004 t bsdf_raster_reset
000000000019f660 0000000000000008 t bsdf_raster_set_mode
000000000019f670 0000000000000118 t split_cubic
000000000019f790 000000000000002c t ft_sdf_get_cbox
000000000019f7c0 000000000000000c t bsdf_raster_done
000000000019f7d0 000000000000000c t sdf_raster_done
000000000019f7e0 00000000000002bc t ft_sdf_render
000000000019faa0 000000000000000c t ft_sdf_requester
000000000019fab0 00000000000000b4 t sdf_property_get
000000000019fb70 00000000000000e0 t sdf_property_set
000000000019fc50 00000000000001e0 t ft_bsdf_render
000000000019fe30 0000000000000090 t compare_neighbor
000000000019fec0 0000000000000078 t map_fixed_to_sdf
000000000019ff40 0000000000000040 t bsdf_raster_new
000000000019ff80 0000000000000040 t sdf_raster_new
000000000019ffc0 0000000000000068 t sdf_edge_new
00000000001a0030 00000000000000ac t sdf_cubic_to
00000000001a00e0 00000000000000a4 t sdf_line_to
00000000001a0190 00000000000000f0 t sdf_conic_to
00000000001a0280 0000000000000164 t split_sdf_conic
00000000001a03f0 0000000000000188 t split_sdf_cubic
00000000001a0580 0000000000000064 t ft_sdf_transform
00000000001a05f0 0000000000000068 t sdf_contour_done
00000000001a0660 00000000000001f4 t split_sdf_shape
00000000001a0860 0000000000000008 t sdf_raster_set_mode
00000000001a0870 0000000000000004 t sdf_raster_reset
00000000001a0880 0000000000000f08 t sdf_generate_bounding_box.isra.0
00000000001a1790 00000000000006d8 t sdf_raster_render
00000000001a1e70 000000000000007c t sdf_move_to
00000000001a1ef0 0000000000000c04 t bsdf_raster_render
00000000001a2b00 0000000000000004 t ft_gzip_free
00000000001a2b10 0000000000000130 t ft_gzip_check_header
00000000001a2c40 0000000000000020 t ft_gzip_alloc
00000000001a2c60 000000000000012c t ft_gzip_file_fill_output
00000000001a2d90 000000000000016c t ft_gzip_file_io
00000000001a2f00 0000000000000008 t ft_gzip_stream_io
00000000001a2f10 0000000000000090 t ft_gzip_stream_close
00000000001a2fa0 00000000000002d0 T FT_Stream_OpenGzip
00000000001a3270 0000000000000114 T FT_Gzip_Uncompress
00000000001a3390 0000000000000064 t ft_lzw_check_header
00000000001a3400 00000000000001a0 t ft_lzwstate_get_code
00000000001a35a0 00000000000000e8 t ft_lzwstate_stack_grow
00000000001a3690 0000000000000150 T FT_Stream_OpenLZW
00000000001a37e0 0000000000000088 t ft_lzwstate_done
00000000001a3870 0000000000000050 t ft_lzw_stream_close
00000000001a38c0 00000000000003cc t ft_lzwstate_io
00000000001a3c90 00000000000001dc t ft_lzw_stream_io
00000000001a3e70 0000000000000020 t ft_bzip2_alloc
00000000001a3e90 0000000000000004 t ft_bzip2_free
00000000001a3ea0 0000000000000068 t ft_bzip2_stream_close
00000000001a3f10 0000000000000134 t ft_bzip2_file_fill_output
00000000001a4050 000000000000018c t ft_bzip2_stream_io
00000000001a41e0 0000000000000070 t ft_bzip2_check_header
00000000001a4250 0000000000000158 T FT_Stream_OpenBzip2
00000000001a43b0 0000000000000020 t afm_compare_kern_pairs
00000000001a43d0 0000000000000130 t PS_Conv_Strtol
00000000001a4500 0000000000000090 t PS_Conv_ToInt
00000000001a4590 0000000000000084 t skip_spaces
00000000001a4620 000000000000010c t skip_literal_string
00000000001a4730 0000000000000098 t skip_string
00000000001a47d0 0000000000000008 t ps_parser_skip_spaces
00000000001a47e0 0000000000000018 t ps_parser_to_int
00000000001a4800 0000000000000160 t ps_parser_to_bytes
00000000001a4960 0000000000000040 t ps_parser_init
00000000001a49a0 0000000000000004 t ps_parser_done
00000000001a49b0 0000000000000024 t t1_builder_done
00000000001a49e0 000000000000012c t t1_builder_close_contour
00000000001a4b10 0000000000000024 t cff_builder_done
00000000001a4b40 0000000000000050 t cff_builder_add_point
00000000001a4b90 000000000000012c t cff_builder_close_contour
00000000001a4cc0 0000000000000024 t ps_builder_done
00000000001a4cf0 0000000000000010 t cff_random
00000000001a4d00 0000000000000010 t t1_cmap_std_done
00000000001a4d10 000000000000002c t t1_cmap_standard_init
00000000001a4d40 0000000000000030 t t1_cmap_expert_init
00000000001a4d70 0000000000000028 t t1_cmap_custom_init
00000000001a4da0 0000000000000008 t t1_cmap_custom_done
00000000001a4db0 0000000000000034 t t1_cmap_custom_char_index
00000000001a4df0 0000000000000064 t t1_cmap_custom_char_next
00000000001a4e60 000000000000000c t psaux_get_glyph_name
00000000001a4e70 0000000000000038 t t1_cmap_unicode_init
00000000001a4eb0 0000000000000014 t t1_cmap_unicode_char_index
00000000001a4ed0 0000000000000014 t t1_cmap_unicode_char_next
00000000001a4ef0 000000000000006c t cf2_stack_popInt
00000000001a4f60 0000000000000064 t cf2_stack_popFixed
00000000001a4fd0 000000000000006c t cf2_stack_getReal
00000000001a5040 0000000000000074 t ps_table_release
00000000001a50c0 0000000000000028 t afm_parser_done
00000000001a50f0 0000000000000034 t t1_cmap_unicode_done
00000000001a5130 00000000000000a8 t ps_table_realloc
00000000001a51e0 0000000000000008 t ps_table_done
00000000001a51f0 00000000000000e4 t ps_table_new
00000000001a52e0 00000000000000a4 t t1_builder_add_point
00000000001a5390 00000000000000e4 t cf2_arrstack_setNumElements
00000000001a5480 0000000000000068 t cf2_arrstack_push
00000000001a54f0 0000000000000114 t cf2_doStems
00000000001a5610 00000000000003d8 t PS_Conv_ToFixed
00000000001a59f0 00000000000001b8 t ps_tofixedarray
00000000001a5bb0 0000000000000030 t ps_parser_to_fixed_array
00000000001a5be0 000000000000013c t ps_parser_to_coord_array
00000000001a5d20 0000000000000020 t ps_parser_to_fixed
00000000001a5d40 00000000000000b4 t ps_builder_init
00000000001a5e00 00000000000000e4 t cf2_getSeacComponent
00000000001a5ef0 0000000000000208 t t1_make_subfont
00000000001a6100 00000000000000b4 t t1_builder_add_contour
00000000001a61c0 00000000000000ac t cff_builder_add_contour
00000000001a6270 00000000000000b4 t t1_builder_init
00000000001a6330 00000000000000c0 t cff_builder_init
00000000001a63f0 0000000000000064 t afm_parser_init
00000000001a6460 000000000000010c t cf2_hintmap_map
00000000001a6570 00000000000000e0 t cf2_glyphpath_hintPoint
00000000001a6650 000000000000034c t cf2_hintmap_insertHint
00000000001a69a0 00000000000001b4 t cf2_glyphpath_computeOffset
00000000001a6b60 0000000000000378 t t1_decoder_parse_metrics
00000000001a6ee0 00000000000000a0 t t1_lookup_glyph_by_stdcharcode_ps
00000000001a6f80 0000000000000098 t t1_cmap_std_char_index
00000000001a7020 0000000000000078 t t1_cmap_std_char_next
00000000001a70a0 00000000000000e0 t t1_decoder_init
00000000001a7180 00000000000000cc t afm_tokenize
00000000001a7250 00000000000000f8 t cff_decoder_prepare
00000000001a7350 0000000000000048 t cf2_free_instance
00000000001a73a0 0000000000000110 t ps_table_add
00000000001a74b0 00000000000004d0 t cf2_glyphpath_pushPrevElem
00000000001a7980 0000000000000220 t cf2_computeDarkening.part.0.constprop.0
00000000001a7ba0 00000000000000b4 t ps_builder_add_contour.constprop.0
00000000001a7c60 0000000000000034 t cff_check_points
00000000001a7ca0 000000000000002c t ps_builder_check_points.part.0.isra.0
00000000001a7cd0 0000000000000034 t t1_builder_check_points
00000000001a7d10 0000000000000040 t cf2_stack_pushFixed
00000000001a7d50 000000000000006c t afm_stream_skip_spaces.part.0.isra.0
00000000001a7dc0 0000000000000038 t cf2_freeT1SeacComponent.isra.0
00000000001a7e00 0000000000000074 t cf2_getT1SeacComponent.isra.0
00000000001a7e80 0000000000000128 t ps_builder_close_contour.isra.0
00000000001a7fb0 0000000000000020 t cf2_builder_moveTo
00000000001a7fd0 0000000000000064 t t1_decrypt
00000000001a8040 00000000000000b8 t afm_stream_read_one
00000000001a8100 00000000000000d4 t cff_decoder_init
00000000001a81e0 00000000000000e4 t afm_stream_read_string
00000000001a82d0 0000000000000188 t afm_parser_read_vals
00000000001a8460 0000000000000070 t afm_parser_next_key.constprop.0.isra.0
00000000001a84d0 0000000000000154 t skip_procedure
00000000001a8630 0000000000000204 t ps_parser_skip_PS_token
00000000001a8840 0000000000000184 t ps_parser_to_token
00000000001a89d0 0000000000000120 t ps_parser_to_token_array
00000000001a8af0 00000000000004e8 t ps_parser_load_field
00000000001a8fe0 0000000000000150 t ps_parser_load_field_table
00000000001a9130 0000000000000084 t t1_builder_add_point1
00000000001a91c0 000000000000006c t t1_builder_start_point
00000000001a9230 0000000000000044 t cf2_stack_setReal
00000000001a9280 0000000000000044 t cf2_stack_pushInt
00000000001a92d0 0000000000000060 t t1_decoder_done
00000000001a9330 00000000000000a4 t cf2_hintmask_read
00000000001a93e0 00000000000000b4 t cff_builder_add_point1
00000000001a94a0 0000000000000068 t cff_builder_start_point
00000000001a9510 0000000000000154 t cf2_hint_init
00000000001a9670 0000000000000984 t cf2_hintmap_build
00000000001aa000 0000000000000168 t ps_decoder_init
00000000001aa170 00000000000001d0 t cf2_builder_cubeTo
00000000001aa340 00000000000000f4 t cf2_glyphpath_moveTo
00000000001aa440 00000000000000a0 t cf2_glyphpath_pushMove
00000000001aa4e0 0000000000000180 t cf2_glyphpath_lineTo
00000000001aa660 00000000000001dc t cf2_glyphpath_curveTo
00000000001aa840 00000000000001a8 t cf2_doFlex
00000000001aa9f0 000000000000015c t cf2_builder_lineTo
00000000001aab50 0000000000000738 t afm_parser_parse
00000000001ab290 0000000000002da8 t cf2_interpT2CharString
00000000001ae040 0000000000000b1c t cf2_decoder_parse_charstrings
00000000001aeb60 0000000000000254 t ps_unicode_value
00000000001aedc0 0000000000000034 t compare_uni_maps
00000000001aee00 00000000000000ac t ps_unicodes_char_index
00000000001aeeb0 00000000000000cc t ps_unicodes_char_next
00000000001aef80 0000000000000028 t ps_get_macintosh_name
00000000001aefb0 000000000000002c t ps_get_standard_strings
00000000001aefe0 000000000000000c t psnames_get_service
00000000001aeff0 0000000000000294 t ps_unicodes_init
00000000001af290 000000000000002c t ft_ansi_stream_close
00000000001af2c0 0000000000000094 t ft_ansi_stream_io
00000000001af360 0000000000000008 t ft_alloc
00000000001af370 0000000000000008 t ft_free
00000000001af380 000000000000000c t ft_realloc
00000000001af390 00000000000000c8 t FT_Stream_Open
00000000001af460 000000000000003c t FT_New_Memory
00000000001af4a0 0000000000000004 t FT_Done_Memory
00000000001af4b0 0000000000000004 t FT_Trace_Disable
00000000001af4c0 0000000000000004 t FT_Trace_Enable
00000000001af4d0 0000000000000014 T FT_Bitmap_Init
00000000001af4f0 0000000000000014 T FT_Bitmap_New
00000000001af510 00000000000001c4 T FT_Bitmap_Copy
00000000001af6e0 0000000000000058 T FT_Bitmap_Done
00000000001af740 00000000000004b8 T FT_Bitmap_Convert
00000000001afc00 0000000000000010 t default_bzfree
00000000001afc10 000000000000000c t default_bzalloc
00000000001afc20 00000000000000f0 T BZ2_bzDecompressInit
00000000001afd10 0000000000000038 T BZ2_indexIntoF
00000000001afd50 0000000000000e6c T BZ2_bzDecompress
00000000001b0bc0 0000000000000088 T BZ2_bzDecompressEnd
00000000001b0c50 000000000000000c T BZ2_bzlibVersion
00000000001b0c60 0000000000000064 T BZ2_bz__AssertH__fail
00000000001b0cd0 0000000000002a3c T BZ2_decompress
00000000001b3710 0000000000000158 T BZ2_hbCreateDecodeTables
00000000001b3870 0000000000000394 T adler32_z
00000000001b3c10 0000000000000008 T adler32
00000000001b3c20 00000000000000e4 T adler32_combine
00000000001b3d10 00000000000000e4 T adler32_combine64
00000000001b3e00 000000000000000c T get_crc_table
00000000001b3e10 00000000000003cc T crc32_z
00000000001b41e0 0000000000000008 T crc32
00000000001b41f0 00000000000000c4 T crc32_combine64
00000000001b42c0 0000000000000004 T crc32_combine
00000000001b42d0 0000000000000084 T crc32_combine_gen64
00000000001b4360 0000000000000004 T crc32_combine_gen
00000000001b4370 0000000000000044 T crc32_combine_op
00000000001b43c0 000000000000007c t slide_hash
00000000001b4440 00000000000001dc t longest_match
00000000001b4620 00000000000000c8 t read_buf
00000000001b46f0 0000000000000268 t fill_window
00000000001b4960 00000000000000b0 t flush_pending
00000000001b4a10 0000000000000574 t deflate_slow
00000000001b4f90 0000000000000400 t deflate_fast
00000000001b5390 0000000000000570 t deflate_stored
00000000001b5900 000000000000007c t deflateStateCheck.part.0
00000000001b5980 000000000000008c t deflateStateCheck
00000000001b5a10 00000000000001dc T deflateSetDictionary
00000000001b5bf0 00000000000000d8 T deflateGetDictionary
00000000001b5cd0 00000000000000f0 T deflateResetKeep
00000000001b5dc0 00000000000000b8 T deflateReset
00000000001b5e80 0000000000000058 T deflateSetHeader
00000000001b5ee0 0000000000000068 T deflatePending
00000000001b5f50 00000000000000f4 T deflatePrime
00000000001b6050 0000000000000058 T deflateTune
00000000001b60b0 0000000000000158 T deflateBound
00000000001b6210 00000000000011a0 T deflate
00000000001b73b0 0000000000000170 T deflateParams
00000000001b7520 00000000000000a0 T deflateEnd
00000000001b75c0 00000000000002a4 T deflateInit2_
00000000001b7870 000000000000001c T deflateInit_
00000000001b7890 00000000000001c0 T deflateCopy
00000000001b7a50 0000000000000118 t updatewindow
00000000001b7b70 0000000000000050 t inflateStateCheck
00000000001b7bc0 0000000000000080 T inflateResetKeep
00000000001b7c40 0000000000000050 T inflateReset
00000000001b7c90 00000000000000b0 T inflateReset2
00000000001b7d40 0000000000000118 T inflateInit2_
00000000001b7e60 0000000000000010 T inflateInit_
00000000001b7e70 00000000000000b0 T inflatePrime
00000000001b7f20 00000000000018e0 T inflate
00000000001b9800 000000000000005c T inflateEnd
00000000001b9860 00000000000000d4 T inflateGetDictionary
00000000001b9940 00000000000000c0 T inflateSetDictionary
00000000001b9a00 0000000000000068 T inflateGetHeader
00000000001b9a70 00000000000002ac T inflateSync
00000000001b9d20 0000000000000070 T inflateSyncPoint
00000000001b9d90 00000000000001d4 T inflateCopy
00000000001b9f70 0000000000000060 T inflateUndermine
00000000001b9fd0 000000000000007c T inflateValidate
00000000001ba050 0000000000000090 T inflateMark
00000000001ba0e0 0000000000000064 T inflateCodesUsed
00000000001ba150 0000000000000498 t inflate_table
00000000001ba5f0 0000000000000078 t bi_windup
00000000001ba670 00000000000000f4 t pqdownheap
00000000001ba770 0000000000000510 t build_tree
00000000001bac80 0000000000000184 t scan_tree
00000000001bae10 0000000000000564 t send_tree
00000000001bb380 00000000000003cc t compress_block
00000000001bb750 0000000000000098 t _tr_init
00000000001bb7f0 0000000000000148 t _tr_stored_block
00000000001bb940 0000000000000088 t _tr_flush_bits
00000000001bb9d0 0000000000000148 t _tr_align
00000000001bbb20 0000000000000614 t _tr_flush_block
00000000001bc140 00000000000000dc T _tr_tally
00000000001bc220 000000000000000c T zlibVersion
00000000001bc230 0000000000000008 T zlibCompileFlags
00000000001bc240 0000000000000018 T zError
00000000001bc260 0000000000000008 T zcalloc
00000000001bc270 0000000000000008 T zcfree
00000000001bc280 00000000000004ac t inflate_fast
00000000001bc730 0000000000000138 t _get_next_page
00000000001bc870 00000000000000f0 t _initial_pcmoffset
00000000001bc960 0000000000000094 t _seek_helper
00000000001bca00 0000000000000094 t _make_decode_ready
00000000001bcaa0 0000000000000170 t _get_prev_page_serial
00000000001bcc10 0000000000000330 t _fetch_headers
00000000001bcf40 0000000000000490 t _bisect_forward_serialno
00000000001bd3d0 00000000000002f8 t _fetch_and_process_packet.constprop.11
00000000001bd6d0 0000000000000100 T ov_clear
00000000001bd7d0 0000000000000220 t _ov_open1
00000000001bd9f0 00000000000000a8 T ov_pcm_total
00000000001bdaa0 00000000000000c8 T ov_time_total
00000000001bdb70 0000000000000414 T ov_raw_seek
00000000001bdf90 0000000000000140 t _open_seekable2
00000000001be0d0 0000000000000090 T ov_open_callbacks
00000000001be160 0000000000000084 T rescale64
00000000001be1f0 000000000000068c T ov_pcm_seek_page
00000000001be880 000000000000034c T ov_pcm_seek
00000000001bebd0 0000000000000128 T ov_time_seek
00000000001bed00 000000000000001c T ov_pcm_tell
00000000001bed20 0000000000000060 T ov_info
00000000001bed80 000000000000005c T ov_comment
00000000001bede0 00000000000001bc T ov_read
00000000001befa0 0000000000000034 T vorbis_block_init
00000000001befe0 000000000000008c T _vorbis_block_alloc
00000000001bf070 0000000000000094 T _vorbis_block_ripcord
00000000001bf110 0000000000000058 T vorbis_block_clear
00000000001bf170 0000000000000054 T vorbis_synthesis_restart
00000000001bf1d0 000000000000012c T vorbis_dsp_clear
00000000001bf300 0000000000000290 T vorbis_synthesis_init
00000000001bf590 000000000000047c T vorbis_synthesis_blockin
00000000001bfa10 0000000000000070 T vorbis_synthesis_pcmout
00000000001bfa80 0000000000000030 T vorbis_synthesis_read
00000000001bfab0 00000000000000b4 T _vorbis_window
00000000001bfb70 000000000000015c T _vorbis_apply_window
00000000001bfcd0 0000000000000210 t _vorbis_synthesis1
00000000001bfee0 0000000000000008 T vorbis_synthesis
00000000001bfef0 0000000000000008 T vorbis_synthesis_trackonly
00000000001bff00 0000000000000098 T vorbis_packet_blocksize
00000000001bffa0 000000000000000c T vorbis_comment_init
00000000001bffb0 0000000000000088 T vorbis_comment_clear
00000000001c0040 0000000000000018 T vorbis_info_blocksize
00000000001c0060 0000000000000038 T vorbis_info_init
00000000001c00a0 00000000000001b0 T vorbis_info_clear
00000000001c0250 00000000000000cc T vorbis_synthesis_idheader
00000000001c0320 0000000000000738 T vorbis_synthesis_headerin
00000000001c0a60 0000000000000044 t bitreverse
00000000001c0ab0 0000000000000410 T vorbis_staticbook_unpack
00000000001c0ec0 000000000000016c T vorbis_book_decode
00000000001c1030 0000000000000418 T vorbis_book_decodevs_add
00000000001c1450 0000000000000388 T vorbis_book_decodev_add
00000000001c17e0 0000000000000394 T vorbis_book_decodev_set
00000000001c1b80 0000000000000390 T vorbis_book_decodevv_add
00000000001c1f10 0000000000000044 t bitreverse
00000000001c1f60 0000000000000020 t sort32a
00000000001c1f80 000000000000001c T _ilog
00000000001c1fa0 000000000000023c T _make_words
00000000001c21e0 00000000000000b8 T _book_maptype1_quantvals
00000000001c22a0 00000000000006e8 T _book_unquantize
00000000001c2990 0000000000000038 T vorbis_staticbook_destroy
00000000001c29d0 0000000000000070 T vorbis_book_clear
00000000001c2a40 0000000000000468 T vorbis_book_init_decode
00000000001c2eb0 0000000000000018 t icomp
00000000001c2ed0 00000000000001e0 t floor1_inverse2
00000000001c30b0 000000000000031c t floor1_inverse1
00000000001c33d0 000000000000000c t floor1_free_look
00000000001c33e0 000000000000000c t floor1_free_info
00000000001c33f0 0000000000000230 t floor1_look
00000000001c3620 0000000000000380 t floor1_unpack
00000000001c39a0 000000000000019c t floor0_inverse1
00000000001c3b40 000000000000000c t floor0_free_info
00000000001c3b50 0000000000000148 t floor0_unpack
00000000001c3ca0 0000000000000040 t floor0_free_look
00000000001c3ce0 0000000000000238 t floor0_look
00000000001c3f20 00000000000004dc T vorbis_lsp_to_curve
00000000001c4400 0000000000000074 t floor0_inverse2
00000000001c4480 000000000000000c T res0_free_info
00000000001c4490 0000000000000244 T res0_unpack
00000000001c46e0 0000000000000274 T res0_look
00000000001c4960 000000000000034c t _01inverse
00000000001c4cb0 000000000000004c T res0_inverse
00000000001c4d00 000000000000004c T res1_inverse
00000000001c4d50 000000000000025c T res2_inverse
00000000001c4fb0 0000000000000098 T res0_free_look
00000000001c5050 000000000000042c t mapping0_inverse
00000000001c5480 000000000000000c t mapping0_free_info
00000000001c5490 0000000000000180 t mapping0_look
00000000001c5610 0000000000000264 t mapping0_unpack
00000000001c5880 00000000000000a0 t mapping0_free_look
00000000001c5920 00000000000019ac T mdct_backward
00000000001c72d0 00000000000000f4 t _os_update_crc
00000000001c73d0 0000000000000114 t _packetout
00000000001c74f0 000000000000000c T ogg_page_version
00000000001c7500 0000000000000010 T ogg_page_continued
00000000001c7510 0000000000000010 T ogg_page_bos
00000000001c7520 0000000000000010 T ogg_page_eos
00000000001c7530 000000000000000c T ogg_page_granulepos
00000000001c7540 000000000000000c T ogg_page_serialno
00000000001c7550 000000000000000c T ogg_page_pageno
00000000001c7560 0000000000000040 T ogg_page_packets
00000000001c75a0 000000000000001c T ogg_stream_check
00000000001c75c0 0000000000000060 T ogg_stream_clear
00000000001c7620 00000000000000a4 T ogg_stream_init
00000000001c76d0 0000000000000090 t _os_body_expand
00000000001c7760 00000000000000a4 t _os_lacing_expand
00000000001c7810 0000000000000084 T ogg_page_checksum_set
00000000001c78a0 0000000000000014 T ogg_sync_init
00000000001c78c0 0000000000000040 T ogg_sync_clear
00000000001c7900 000000000000000c T ogg_sync_check
00000000001c7910 00000000000000f0 T ogg_sync_buffer
00000000001c7a00 000000000000004c T ogg_sync_wrote
00000000001c7a50 0000000000000190 T ogg_sync_pageseek
00000000001c7be0 000000000000039c T ogg_stream_pagein
00000000001c7f80 0000000000000034 T ogg_sync_reset
00000000001c7fc0 000000000000004c T ogg_stream_reset
00000000001c8010 0000000000000050 T ogg_stream_reset_serialno
00000000001c8060 0000000000000044 T ogg_stream_packetout
00000000001c80b0 0000000000000044 T ogg_stream_packetpeek
00000000001c8100 0000000000000014 T oggpack_readinit
00000000001c8120 00000000000000f8 T oggpack_look
00000000001c8220 000000000000006c T oggpack_adv
00000000001c8290 000000000000012c T oggpack_read
00000000001c83c0 0000000000000020 T oggpack_bytes
00000000001c83e0 0000000000000190 t conv_s16_to_s32
00000000001c8570 0000000000000290 t cap_fit
00000000001c8800 000000000000018c t enc_chan_fit
00000000001c8990 0000000000000020 T mpg123_rates
00000000001c89b0 0000000000000050 T mpg123_encsize
00000000001c8a00 0000000000000794 T INT123_frame_output_format
00000000001c91a0 000000000000007c T mpg123_fmt_none
00000000001c9220 000000000000003c T mpg123_format_none
00000000001c9260 0000000000000194 T mpg123_fmt_all
00000000001c9400 0000000000000330 T mpg123_fmt2
00000000001c9730 0000000000000010 T mpg123_fmt
00000000001c9740 000000000000003c T mpg123_format
00000000001c9780 0000000000000010 T INT123_invalidate_format
00000000001c9790 0000000000000018 T INT123_decoder_synth_bytes
00000000001c97b0 0000000000000018 T INT123_samples_to_bytes
00000000001c97d0 0000000000000018 T INT123_bytes_to_samples
00000000001c97f0 0000000000000044 T INT123_outblock_bytes
00000000001c9840 0000000000000704 T swap_endian
00000000001c9f50 0000000000001624 T INT123_postprocess_buffer
00000000001cb580 00000000000000ec t decode_the_frame
00000000001cb670 0000000000000158 t frame_buffercheck.part.0.constprop.0
00000000001cb7d0 0000000000000008 T mpg123_init
00000000001cb7e0 0000000000000004 T mpg123_exit
00000000001cb7f0 0000000000000090 T mpg123_parnew
00000000001cb880 0000000000000010 T mpg123_new
00000000001cb890 00000000000001f4 T INT123_decode_update
00000000001cba90 00000000000001bc t get_next_frame
00000000001cbc50 0000000000000108 t do_the_seek
00000000001cbd60 0000000000000064 T mpg123_feed
00000000001cbdd0 000000000000019c T mpg123_decode
00000000001cbf70 0000000000000018 T mpg123_read
00000000001cbf90 000000000000008c T mpg123_getformat2
00000000001cc020 0000000000000008 T mpg123_getformat
00000000001cc030 00000000000000dc T mpg123_tell
00000000001cc110 0000000000000200 T mpg123_scan
00000000001cc310 00000000000001d4 T mpg123_seek
00000000001cc4f0 0000000000000064 T mpg123_close
00000000001cc560 0000000000000058 T mpg123_open_handle
00000000001cc5c0 000000000000004c T mpg123_replace_reader_handle
00000000001cc610 0000000000000028 T mpg123_delete
00000000001cc640 0000000000000080 T mpg123_plain_strerror
00000000001cc6c0 0000000000000018 T mpg123_errcode
00000000001cc6e0 0000000000000010 T mpg123_strerror
00000000001cc6f0 0000000000000014 T INT123_fi_init
00000000001cc710 0000000000000028 T INT123_fi_exit
00000000001cc740 00000000000001a0 T INT123_fi_resize
00000000001cc8e0 00000000000001b4 T INT123_fi_add
00000000001ccaa0 0000000000000010 T INT123_fi_reset
00000000001ccab0 0000000000000008 T INT123_init_icy
00000000001ccac0 0000000000000020 T INT123_clear_icy
00000000001ccae0 0000000000000018 T INT123_reset_icy
00000000001ccb00 00000000000001c4 T INT123_ntom_val
00000000001cccd0 0000000000000188 T INT123_synth_ntom_set_step
00000000001cce60 000000000000001c T INT123_ntom_set_ntom
00000000001cce80 000000000000002c T INT123_ntom_frame_outsamples
00000000001cceb0 0000000000000170 T INT123_ntom_frmouts
00000000001cd020 0000000000000130 T INT123_ntom_ins2outs
00000000001cd150 000000000000012c T INT123_ntom_frameoff
00000000001cd280 000000000000000c T mpg123_init_string
00000000001cd290 0000000000000028 T mpg123_free_string
00000000001cd2c0 0000000000000094 T mpg123_resize_string
00000000001cd360 000000000000002c T mpg123_grow_string
00000000001cd390 000000000000006c T mpg123_move_string
00000000001cd400 0000000000000050 T mpg123_same_string
00000000001cd450 0000000000000010 T INT123_safe_realloc
00000000001cd460 0000000000000034 t bit_read_long
00000000001cd4a0 0000000000000728 t decode_header
00000000001cdbd0 0000000000000094 t forget_head_shift
00000000001cdc70 00000000000000a0 t getbits.constprop.0
00000000001cdd10 0000000000000018 T INT123_frame_freq
00000000001cdd30 00000000000000c4 T INT123_set_pointer
00000000001cde00 0000000000000024 T INT123_compute_bpf
00000000001cde30 00000000000019ac T INT123_read_frame
00000000001cf7e0 00000000000000f0 t frame_fuzzy_find.constprop.0
00000000001cf8d0 000000000000006c T mpg123_reset_eq
00000000001cf940 00000000000000e0 T INT123_frame_outbuffer
00000000001cfa20 00000000000000a8 T INT123_frame_index_setup
00000000001cfad0 000000000000015c T INT123_frame_buffers
00000000001cfc30 0000000000000084 T INT123_frame_buffers_reset
00000000001cfcc0 000000000000006c T INT123_frame_fill_toc
00000000001cfd30 00000000000000ac T INT123_frame_exit
00000000001cfde0 00000000000000cc T INT123_frame_index_find
00000000001cfeb0 0000000000000078 T INT123_frame_ins2outs
00000000001cff30 0000000000000084 T INT123_frame_outs
00000000001cffc0 000000000000007c T INT123_frame_expect_outsamples
00000000001d0040 0000000000000080 T INT123_frame_offset
00000000001d00c0 0000000000000060 T INT123_frame_gapless_init
00000000001d0120 0000000000000150 t frame_fixed_reset
00000000001d0270 00000000000001a0 T INT123_frame_init_par
00000000001d0410 000000000000003c T INT123_frame_reset
00000000001d0450 0000000000000058 T INT123_frame_gapless_realinit
00000000001d04b0 00000000000000e0 T INT123_frame_gapless_update
00000000001d0590 0000000000000120 T INT123_frame_set_frameseek
00000000001d06b0 0000000000000020 T INT123_frame_skip
00000000001d06d0 0000000000000088 T INT123_frame_set_seek
00000000001d0760 0000000000000150 T INT123_do_rva
00000000001d08b0 0000000000000180 t next_text
00000000001d0a30 0000000000000254 t promote_framename
00000000001d0c90 00000000000006f0 t convert_utf16bom
00000000001d1380 0000000000000330 t convert_latin1
00000000001d16b0 0000000000000064 t convert_utf8
00000000001d1720 00000000000001ac t add_id3_text
00000000001d18d0 0000000000000044 T INT123_init_id3
00000000001d1920 00000000000002e8 T INT123_exit_id3
00000000001d1c10 0000000000000018 T INT123_reset_id3
00000000001d1c30 0000000000000200 T INT123_id3_to_utf8
00000000001d1e30 0000000000000144 t store_id3_text.part.0
00000000001d1f80 000000000000011c T store_id3v2
00000000001d20a0 00000000000020b0 T INT123_parse_new_id3
00000000001d4150 0000000000000050 t synth_stereo_wrap
00000000001d41a0 0000000000000008 T INT123_defdec
00000000001d41b0 0000000000000020 T INT123_decclass
00000000001d41d0 000000000000036c T INT123_set_synth_functions
00000000001d4540 000000000000011c T INT123_dectype
00000000001d4660 0000000000000114 T INT123_frame_cpu_opt
00000000001d4780 0000000000000008 t nix_lseek
00000000001d4790 00000000000000bc t plain_fullread
00000000001d4850 0000000000000050 t generic_head_read
00000000001d48a0 0000000000000054 t generic_head_shift
00000000001d4900 000000000000002c t generic_read_frame_body
00000000001d4930 000000000000003c t generic_tell
00000000001d4970 000000000000004c t feed_skip_bytes
00000000001d49c0 0000000000000008 t feed_seek_frame
00000000001d49d0 0000000000000014 t bad_init
00000000001d49f0 0000000000000004 t bad_close
00000000001d4a00 0000000000000014 t bad_fullread
00000000001d4a20 0000000000000014 t bad_head_read
00000000001d4a40 0000000000000014 t bad_skip_bytes
00000000001d4a60 0000000000000014 t bad_read_frame_body
00000000001d4a80 0000000000000014 t bad_back_bytes
00000000001d4aa0 0000000000000014 t bad_tell
00000000001d4ac0 0000000000000038 t plain_read
00000000001d4b00 0000000000000170 t bc_give
00000000001d4c70 0000000000000024 t feed_read
00000000001d4ca0 0000000000000138 t bc_add
00000000001d4de0 0000000000000390 t icy_fullread
00000000001d5170 00000000000001ec t buffered_fullread
00000000001d5360 00000000000000f0 t stream_seek_frame
00000000001d5450 0000000000000004 t posix_lseek
00000000001d5460 0000000000000014 t posix_read
00000000001d5480 00000000000000d4 t buffered_forget
00000000001d5560 0000000000000034 t io_seek
00000000001d55a0 0000000000000070 t stream_rewind
00000000001d5610 0000000000000124 t stream_skip_bytes
00000000001d5740 000000000000004c t stream_back_bytes
00000000001d5790 00000000000002d4 t default_init
00000000001d5a70 0000000000000014 t bad_seek_frame
00000000001d5a90 0000000000000014 t bad_head_shift
00000000001d5ab0 0000000000000004 t bad_rewind
00000000001d5ac0 00000000000002f8 t bc_fill_pool.isra.0
00000000001d5dc0 000000000000004c t feed_init
00000000001d5e10 0000000000000078 t bc_reset
00000000001d5e90 0000000000000064 t stream_close
00000000001d5f00 0000000000000064 t feed_back_bytes
00000000001d5f70 0000000000000008 T INT123_bc_poolsize
00000000001d5f80 0000000000000024 T INT123_bc_prepare
00000000001d5fb0 00000000000000e4 T INT123_bc_cleanup
00000000001d60a0 0000000000000058 T INT123_feed_more
00000000001d6100 0000000000000050 T INT123_open_bad
00000000001d6150 000000000000009c T INT123_open_stream_handle
00000000001d61f0 00000000000002e4 T INT123_make_decode_tables
00000000001d64e0 0000000000000a80 T INT123_make_conv16to8_table
00000000001d6f60 00000000000000b8 t getbits
00000000001d7020 00000000000022f0 T INT123_do_layer1
00000000001d9310 00000000000000b8 t getbits
00000000001d93d0 0000000000000120 T INT123_init_layer12_stuff
00000000001d94f0 0000000000000060 T INT123_init_layer12_table
00000000001d9550 0000000000001954 T INT123_do_layer2
00000000001daeb0 00000000000002bc t III_get_scale_factors_2
00000000001db170 00000000000003b8 t dct12
00000000001db530 00000000000000b8 t getbits
00000000001db5f0 00000000000017b8 t III_dequantize_sample
00000000001dcdb0 0000000000001390 t III_get_scale_factors_1.isra.0
00000000001de140 0000000000000028 T INT123_init_layer3_gainpow2
00000000001de170 0000000000000478 T INT123_init_layer3_stuff
00000000001de5f0 000000000000055c T INT123_dct36
00000000001deb50 0000000000003494 T INT123_do_layer3
00000000001e1ff0 0000000000000508 T INT123_synth_1to1_8bit
00000000001e2500 00000000000000bc T INT123_synth_1to1_8bit_mono
00000000001e25c0 000000000000008c T INT123_synth_1to1_8bit_m2s
00000000001e2650 0000000000000140 T INT123_synth_1to1_8bit_wrap
00000000001e2790 000000000000011c T INT123_synth_1to1_8bit_wrap_mono
00000000001e28b0 0000000000000198 T INT123_synth_1to1_8bit_wrap_m2s
00000000001e2a50 0000000000000508 T INT123_synth_2to1_8bit
00000000001e2f60 00000000000000d4 T INT123_synth_2to1_8bit_mono
00000000001e3040 00000000000000bc T INT123_synth_2to1_8bit_m2s
00000000001e3100 00000000000004dc T INT123_synth_4to1_8bit
00000000001e35e0 0000000000000094 T INT123_synth_4to1_8bit_mono
00000000001e3680 000000000000007c T INT123_synth_4to1_8bit_m2s
00000000001e3700 00000000000009d8 T INT123_synth_ntom_8bit
00000000001e40e0 000000000000015c T INT123_synth_ntom_8bit_mono
00000000001e4240 0000000000000148 T INT123_synth_ntom_8bit_m2s
00000000001e4390 00000000000004c8 T INT123_synth_1to1
00000000001e4860 00000000000000bc T INT123_synth_1to1_mono
00000000001e4920 000000000000008c T INT123_synth_1to1_m2s
00000000001e49b0 00000000000004c8 T INT123_synth_2to1
00000000001e4e80 00000000000000d4 T INT123_synth_2to1_mono
00000000001e4f60 00000000000000bc T INT123_synth_2to1_m2s
00000000001e5020 00000000000008c0 T INT123_synth_4to1
00000000001e58e0 0000000000000094 T INT123_synth_4to1_mono
00000000001e5980 000000000000007c T INT123_synth_4to1_m2s
00000000001e5a00 0000000000000e54 T INT123_synth_ntom
00000000001e6860 0000000000000158 T INT123_synth_ntom_mono
00000000001e69c0 000000000000013c T INT123_synth_ntom_m2s
00000000001e6b00 00000000000004f0 T INT123_synth_1to1_s32
00000000001e6ff0 00000000000000bc T INT123_synth_1to1_s32_mono
00000000001e70b0 000000000000008c T INT123_synth_1to1_s32_m2s
00000000001e7140 00000000000004f0 T INT123_synth_2to1_s32
00000000001e7630 00000000000000d4 T INT123_synth_2to1_s32_mono
00000000001e7710 00000000000000bc T INT123_synth_2to1_s32_m2s
00000000001e77d0 0000000000000910 T INT123_synth_4to1_s32
00000000001e80e0 0000000000000094 T INT123_synth_4to1_s32_mono
00000000001e8180 000000000000007c T INT123_synth_4to1_s32_m2s
00000000001e8200 0000000000000e74 T INT123_synth_ntom_s32
00000000001e9080 0000000000000158 T INT123_synth_ntom_s32_mono
00000000001e91e0 000000000000013c T INT123_synth_ntom_s32_m2s
00000000001e9320 00000000000003a0 T INT123_synth_1to1_real
00000000001e96c0 00000000000000bc T INT123_synth_1to1_real_mono
00000000001e9780 000000000000008c T INT123_synth_1to1_real_m2s
00000000001e9810 000000000000039c T INT123_synth_2to1_real
00000000001e9bb0 00000000000000d4 T INT123_synth_2to1_real_mono
00000000001e9c90 00000000000000bc T INT123_synth_2to1_real_m2s
00000000001e9d50 0000000000000594 T INT123_synth_4to1_real
00000000001ea2f0 0000000000000094 T INT123_synth_4to1_real_mono
00000000001ea390 000000000000007c T INT123_synth_4to1_real_m2s
00000000001ea410 00000000000005bc T INT123_synth_ntom_real
00000000001ea9d0 0000000000000158 T INT123_synth_ntom_real_mono
00000000001eab30 000000000000013c T INT123_synth_ntom_real_m2s
00000000001eac70 0000000000000004 T INT123_compat_close
00000000001eac80 0000000000000630 T INT123_dct64
00000000001eb2b0 00000000000000b8 T INT123_do_equalizer
00000000001eb370 00000000000000f0 t ModPlug::UpdateSettings(bool)
00000000001eb460 00000000000000a4 T ModPlug_Load
00000000001eb510 0000000000000044 T ModPlug_Unload
00000000001eb560 0000000000000020 T ModPlug_Read
00000000001eb580 0000000000000008 T ModPlug_SetMasterVolume
00000000001eb590 0000000000000078 T ModPlug_Seek
00000000001eb610 0000000000000024 T ModPlug_GetSettings
00000000001eb640 000000000000002c T ModPlug_SetSettings
00000000001eb670 000000000000000c t _muldiv(long, long, long)
00000000001eb680 0000000000000010 t _muldivr(long, long, long)
00000000001eb690 000000000000010c T CSoundFile::InitPlayer(bool)
00000000001eb7a0 00000000000000d8 T CSoundFile::FadeSong(unsigned int)
00000000001eb880 0000000000000058 T CSoundFile::GlobalFadeSong(unsigned int)
00000000001eb8e0 00000000000002a8 T CSoundFile::ProcessRow()
00000000001ebb90 0000000000001588 T CSoundFile::ReadNote()
00000000001ed120 00000000000003fc T CSoundFile::Read(void*, unsigned int)
00000000001ed520 0000000000000130 T CSoundFile::CSoundFile()
00000000001ed520 0000000000000130 T CSoundFile::CSoundFile()
00000000001ed650 0000000000000040 T CSoundFile::AllocatePattern(unsigned int, unsigned int)
00000000001ed690 000000000000000c T CSoundFile::FreePattern(void*)
00000000001ed6a0 0000000000000028 T CSoundFile::AllocateSample(unsigned int)
00000000001ed6d0 0000000000000010 T CSoundFile::FreeSample(void*)
00000000001ed6e0 0000000000000144 T CSoundFile::Destroy()
00000000001ed830 0000000000000004 T CSoundFile::~CSoundFile()
00000000001ed830 0000000000000004 T CSoundFile::~CSoundFile()
00000000001ed840 0000000000000128 T CSoundFile::ResetMidiCfg()
00000000001ed970 0000000000000790 T CSoundFile::Create(unsigned char const*, unsigned int)
00000000001ee100 00000000000000b4 T CSoundFile::SetWaveConfig(unsigned int, unsigned int, unsigned int, bool)
00000000001ee1c0 0000000000000030 T CSoundFile::SetMixConfig(unsigned int, unsigned int)
00000000001ee1f0 000000000000005c T CSoundFile::SetResamplingMode(unsigned int)
00000000001ee250 0000000000000078 T CSoundFile::SetMasterVolume(unsigned int, bool)
00000000001ee2d0 0000000000000050 T CSoundFile::GetMaxPosition() const
00000000001ee320 0000000000000210 T CSoundFile::SetCurrentPos(unsigned int)
00000000001ee530 0000000000000344 T CSoundFile::AdjustSampleLoop(_MODINSTRUMENT*)
00000000001ee880 0000000000000948 T CSoundFile::ReadSample(_MODINSTRUMENT*, unsigned int, char const*, unsigned int)
00000000001ef1d0 000000000000003c T CSoundFile::TransposeToFrequency(int, int)
00000000001ef210 0000000000000034 T CSoundFile::FrequencyToTranspose(unsigned int)
00000000001ef250 0000000000000060 T CSoundFile::FrequencyToTranspose(_MODINSTRUMENT*)
00000000001ef2b0 0000000000000118 T CSoundFile::SetPatternName(unsigned int, char const*)
00000000001ef3d0 0000000000000184 T CSoundFile::DetectUnusedSamples(bool*)
00000000001ef560 00000000000000a8 T CSoundFile::DestroySample(unsigned int)
00000000001ef610 0000000000000804 T CSoundFile::GetLength(bool, bool)
00000000001efe20 00000000000003c0 T CSoundFile::InstrumentChange(_MODCHANNEL*, unsigned int, bool, bool, bool)
00000000001f01e0 00000000000000e8 T CSoundFile::GetNNAChannel(unsigned int) const
00000000001f02d0 00000000000000ac T CSoundFile::FinePortamentoUp(_MODCHANNEL*, unsigned int)
00000000001f0380 00000000000000b0 T CSoundFile::FinePortamentoDown(_MODCHANNEL*, unsigned int)
00000000001f0430 00000000000000a8 T CSoundFile::ExtraFinePortamentoUp(_MODCHANNEL*, unsigned int)
00000000001f04e0 00000000000000b0 T CSoundFile::ExtraFinePortamentoDown(_MODCHANNEL*, unsigned int)
00000000001f0590 000000000000012c T CSoundFile::TonePortamento(_MODCHANNEL*, unsigned int)
00000000001f06c0 0000000000000030 T CSoundFile::Vibrato(_MODCHANNEL*, unsigned int)
00000000001f06f0 000000000000002c T CSoundFile::FineVibrato(_MODCHANNEL*, unsigned int)
00000000001f0720 000000000000002c T CSoundFile::Panbrello(_MODCHANNEL*, unsigned int)
00000000001f0750 00000000000000cc T CSoundFile::PanningSlide(_MODCHANNEL*, unsigned int)
00000000001f0820 000000000000004c T CSoundFile::FineVolumeUp(_MODCHANNEL*, unsigned int)
00000000001f0870 0000000000000044 T CSoundFile::FineVolumeDown(_MODCHANNEL*, unsigned int)
00000000001f08c0 00000000000000f8 T CSoundFile::VolumeSlide(_MODCHANNEL*, unsigned int)
00000000001f09c0 0000000000000030 T CSoundFile::Tremolo(_MODCHANNEL*, unsigned int)
00000000001f09f0 00000000000000b8 T CSoundFile::ChannelVolSlide(_MODCHANNEL*, unsigned int)
00000000001f0ab0 0000000000000134 T CSoundFile::ExtendedChannelEffect(_MODCHANNEL*, unsigned int)
00000000001f0bf0 0000000000000398 T CSoundFile::ProcessMidiMacro(unsigned int, char const*, unsigned int)
00000000001f0f90 00000000000000d8 T CSoundFile::DoFreqSlide(_MODCHANNEL*, int)
00000000001f1070 0000000000000070 T CSoundFile::PortamentoUp(_MODCHANNEL*, unsigned int)
00000000001f10e0 0000000000000070 T CSoundFile::PortamentoDown(_MODCHANNEL*, unsigned int)
00000000001f1150 000000000000003c T CSoundFile::NoteCut(unsigned int, unsigned int)
00000000001f1190 0000000000000104 T CSoundFile::KeyOff(unsigned int)
00000000001f12a0 000000000000046c T CSoundFile::CheckNNA(unsigned int, unsigned int, int, bool)
00000000001f1710 000000000000005c T CSoundFile::SetTempo(unsigned int)
00000000001f1770 0000000000000084 T CSoundFile::PatternLoop(_MODCHANNEL*, unsigned int)
00000000001f1800 00000000000000c0 T CSoundFile::GlobalVolSlide(unsigned int)
00000000001f18c0 0000000000000118 T CSoundFile::IsSongFinished(unsigned int, unsigned int) const
00000000001f19e0 00000000000000cc T CSoundFile::SetSpeed(unsigned int)
00000000001f1ab0 000000000000017c T CSoundFile::IsValidBackwardJump(unsigned int, unsigned int, unsigned int, unsigned int) const
00000000001f1c30 00000000000001dc T CSoundFile::GetPeriodFromNote(unsigned int, int, unsigned int) const
00000000001f1e10 00000000000007c8 T CSoundFile::NoteChange(unsigned int, int, bool, bool)
00000000001f25e0 00000000000002dc T CSoundFile::RetrigNote(unsigned int, unsigned int)
00000000001f28c0 000000000000027c T CSoundFile::ExtendedMODCommands(unsigned int, unsigned int)
00000000001f2b40 000000000000048c T CSoundFile::ExtendedS3MCommands(unsigned int, unsigned int)
00000000001f2fd0 0000000000000e20 T CSoundFile::ProcessEffects()
00000000001f3df0 000000000000011c T CSoundFile::GetNoteFromPeriod(unsigned int) const
00000000001f3f10 00000000000000c4 T CSoundFile::GetFreqFromPeriod(unsigned int, unsigned int, int) const
00000000001f3fe0 0000000000000090 T CSoundFile::CutOffToFrequency(unsigned int, int) const
00000000001f4070 00000000000000ec T CSoundFile::SetupChannelFilter(_MODCHANNEL*, bool, int) const
00000000001f4160 0000000000000528 T CSoundFile::InitializeDSP(bool)
00000000001f4690 0000000000000554 T CSoundFile::ProcessStereoDSP(int)
00000000001f4bf0 0000000000000060 T CSoundFile::SetReverbParameters(unsigned int, unsigned int)
00000000001f4c50 000000000000006c T CSoundFile::SetXBassParameters(unsigned int, unsigned int)
00000000001f4cc0 0000000000000060 T CSoundFile::SetSurroundParameters(unsigned int, unsigned int)
00000000001f4d20 0000000000000088 T CSoundFile::SetWaveConfigEx(bool, bool, bool, bool, bool, bool, bool)
00000000001f4db0 0000000000000070 T Mono8BitMix(_MODCHANNEL*, int*, int*)
00000000001f4e20 000000000000006c T Mono16BitMix(_MODCHANNEL*, int*, int*)
00000000001f4e90 0000000000000084 T Mono8BitLinearMix(_MODCHANNEL*, int*, int*)
00000000001f4f20 0000000000000084 T Mono16BitLinearMix(_MODCHANNEL*, int*, int*)
00000000001f4fb0 00000000000000c0 T Mono8BitSplineMix(_MODCHANNEL*, int*, int*)
00000000001f5070 00000000000000c4 T Mono16BitSplineMix(_MODCHANNEL*, int*, int*)
00000000001f5140 0000000000000108 T Mono8BitFirFilterMix(_MODCHANNEL*, int*, int*)
00000000001f5250 0000000000000124 T Mono16BitFirFilterMix(_MODCHANNEL*, int*, int*)
00000000001f5380 0000000000000080 T Mono8BitRampMix(_MODCHANNEL*, int*, int*)
00000000001f5400 0000000000000084 T Mono16BitRampMix(_MODCHANNEL*, int*, int*)
00000000001f5490 0000000000000094 T Mono8BitLinearRampMix(_MODCHANNEL*, int*, int*)
00000000001f5530 000000000000009c T Mono16BitLinearRampMix(_MODCHANNEL*, int*, int*)
00000000001f55d0 00000000000000d0 T Mono8BitSplineRampMix(_MODCHANNEL*, int*, int*)
00000000001f56a0 00000000000000e0 T Mono16BitSplineRampMix(_MODCHANNEL*, int*, int*)
00000000001f5780 0000000000000130 T Mono8BitFirFilterRampMix(_MODCHANNEL*, int*, int*)
00000000001f58b0 0000000000000140 T Mono16BitFirFilterRampMix(_MODCHANNEL*, int*, int*)
00000000001f59f0 000000000000006c T FastMono8BitMix(_MODCHANNEL*, int*, int*)
00000000001f5a60 0000000000000068 T FastMono16BitMix(_MODCHANNEL*, int*, int*)
00000000001f5ad0 0000000000000080 T FastMono8BitLinearMix(_MODCHANNEL*, int*, int*)
00000000001f5b50 0000000000000080 T FastMono16BitLinearMix(_MODCHANNEL*, int*, int*)
00000000001f5bd0 000000000000007c T FastMono8BitRampMix(_MODCHANNEL*, int*, int*)
00000000001f5c50 0000000000000080 T FastMono16BitRampMix(_MODCHANNEL*, int*, int*)
00000000001f5cd0 0000000000000090 T FastMono8BitLinearRampMix(_MODCHANNEL*, int*, int*)
00000000001f5d60 0000000000000098 T FastMono16BitLinearRampMix(_MODCHANNEL*, int*, int*)
00000000001f5e00 0000000000000080 T Stereo8BitMix(_MODCHANNEL*, int*, int*)
00000000001f5e80 000000000000007c T Stereo16BitMix(_MODCHANNEL*, int*, int*)
00000000001f5f00 000000000000009c T Stereo8BitLinearMix(_MODCHANNEL*, int*, int*)
00000000001f5fa0 00000000000000a8 T Stereo16BitLinearMix(_MODCHANNEL*, int*, int*)
00000000001f6050 0000000000000110 T Stereo8BitSplineMix(_MODCHANNEL*, int*, int*)
00000000001f6160 0000000000000108 T Stereo16BitSplineMix(_MODCHANNEL*, int*, int*)
00000000001f6270 00000000000001bc T Stereo8BitFirFilterMix(_MODCHANNEL*, int*, int*)
00000000001f6430 00000000000001b8 T Stereo16BitFirFilterMix(_MODCHANNEL*, int*, int*)
00000000001f65f0 0000000000000090 T Stereo8BitRampMix(_MODCHANNEL*, int*, int*)
00000000001f6680 0000000000000094 T Stereo16BitRampMix(_MODCHANNEL*, int*, int*)
00000000001f6720 00000000000000ac T Stereo8BitLinearRampMix(_MODCHANNEL*, int*, int*)
00000000001f67d0 00000000000000c0 T Stereo16BitLinearRampMix(_MODCHANNEL*, int*, int*)
00000000001f6890 0000000000000130 T Stereo8BitSplineRampMix(_MODCHANNEL*, int*, int*)
00000000001f69c0 000000000000012c T Stereo16BitSplineRampMix(_MODCHANNEL*, int*, int*)
00000000001f6af0 00000000000001d8 T Stereo8BitFirFilterRampMix(_MODCHANNEL*, int*, int*)
00000000001f6cd0 00000000000001cc T Stereo16BitFirFilterRampMix(_MODCHANNEL*, int*, int*)
00000000001f6ea0 000000000000009c T FilterMono8BitMix(_MODCHANNEL*, int*, int*)
00000000001f6f40 000000000000009c T FilterMono16BitMix(_MODCHANNEL*, int*, int*)
00000000001f6fe0 00000000000000b0 T FilterMono8BitLinearMix(_MODCHANNEL*, int*, int*)
00000000001f7090 00000000000000b4 T FilterMono16BitLinearMix(_MODCHANNEL*, int*, int*)
00000000001f7150 00000000000000ec T FilterMono8BitSplineMix(_MODCHANNEL*, int*, int*)
00000000001f7240 00000000000000f4 T FilterMono16BitSplineMix(_MODCHANNEL*, int*, int*)
00000000001f7340 0000000000000148 T FilterMono8BitFirFilterMix(_MODCHANNEL*, int*, int*)
00000000001f7490 000000000000015c T FilterMono16BitFirFilterMix(_MODCHANNEL*, int*, int*)
00000000001f75f0 00000000000000b4 T FilterMono8BitRampMix(_MODCHANNEL*, int*, int*)
00000000001f76b0 00000000000000b4 T FilterMono16BitRampMix(_MODCHANNEL*, int*, int*)
00000000001f7770 00000000000000c8 T FilterMono8BitLinearRampMix(_MODCHANNEL*, int*, int*)
00000000001f7840 00000000000000c8 T FilterMono16BitLinearRampMix(_MODCHANNEL*, int*, int*)
00000000001f7910 0000000000000104 T FilterMono8BitSplineRampMix(_MODCHANNEL*, int*, int*)
00000000001f7a20 0000000000000114 T FilterMono16BitSplineRampMix(_MODCHANNEL*, int*, int*)
00000000001f7b40 0000000000000168 T FilterMono8BitFirFilterRampMix(_MODCHANNEL*, int*, int*)
00000000001f7cb0 0000000000000178 T FilterMono16BitFirFilterRampMix(_MODCHANNEL*, int*, int*)
00000000001f7e30 00000000000000d0 T FilterStereo8BitMix(_MODCHANNEL*, int*, int*)
00000000001f7f00 00000000000000cc T FilterStereo16BitMix(_MODCHANNEL*, int*, int*)
00000000001f7fd0 00000000000000ec T FilterStereo8BitLinearMix(_MODCHANNEL*, int*, int*)
00000000001f80c0 00000000000000fc T FilterStereo16BitLinearMix(_MODCHANNEL*, int*, int*)
00000000001f81c0 0000000000000178 T FilterStereo8BitSplineMix(_MODCHANNEL*, int*, int*)
00000000001f8340 0000000000000174 T FilterStereo16BitSplineMix(_MODCHANNEL*, int*, int*)
00000000001f84c0 0000000000000210 T FilterStereo8BitFirFilterMix(_MODCHANNEL*, int*, int*)
00000000001f86d0 0000000000000214 T FilterStereo16BitFirFilterMix(_MODCHANNEL*, int*, int*)
00000000001f88f0 00000000000000e8 T FilterStereo8BitRampMix(_MODCHANNEL*, int*, int*)
00000000001f89e0 00000000000000e4 T FilterStereo16BitRampMix(_MODCHANNEL*, int*, int*)
00000000001f8ad0 0000000000000114 T FilterStereo8BitLinearRampMix(_MODCHANNEL*, int*, int*)
00000000001f8bf0 0000000000000124 T FilterStereo16BitLinearRampMix(_MODCHANNEL*, int*, int*)
00000000001f8d20 0000000000000194 T FilterStereo8BitSplineRampMix(_MODCHANNEL*, int*, int*)
00000000001f8ec0 000000000000018c T FilterStereo16BitSplineRampMix(_MODCHANNEL*, int*, int*)
00000000001f9050 0000000000000224 T FilterStereo8BitFirFilterRampMix(_MODCHANNEL*, int*, int*)
00000000001f9280 0000000000000224 T FilterStereo16BitFirFilterRampMix(_MODCHANNEL*, int*, int*)
00000000001f94b0 00000000000001d4 t CzCUBICSPLINE::CzCUBICSPLINE()
00000000001f94b0 00000000000001d4 T CzCUBICSPLINE::CzCUBICSPLINE()
00000000001f9690 00000000000001c8 t CzWINDOWEDFIR::CzWINDOWEDFIR()
00000000001f9690 00000000000001c8 T CzWINDOWEDFIR::CzWINDOWEDFIR()
00000000001f9860 0000000000000084 T X86_Convert32To8(void*, int*, unsigned int, int*, int*)
00000000001f98f0 000000000000007c T X86_Convert32To16(void*, int*, unsigned int, int*, int*)
00000000001f9970 000000000000008c T X86_Convert32To24(void*, int*, unsigned int, int*, int*)
00000000001f9a00 000000000000007c T X86_Convert32To32(void*, int*, unsigned int, int*, int*)
00000000001f9a80 0000000000000004 t X86_InterleaveFrontRear(int*, int*, unsigned int)
00000000001f9a90 000000000000003c t X86_MonoFromStereo(int*, unsigned int)
00000000001f9ad0 000000000000007c t X86_StereoFill(int*, unsigned int, int*, int*)
00000000001f9b50 0000000000000078 t X86_EndChannelOfs(_MODCHANNEL*, int*, unsigned int)
00000000001f9bd0 00000000000006c4 T CSoundFile::CreateStereoMix(int)
00000000001fa2a0 000000000000007c t MMCMPBITBUFFER::GetBits(unsigned int) [clone .part.0]
00000000001fa320 0000000000000070 t _PPBITBUFFER::GetBits(unsigned int)
00000000001fa390 00000000000004c0 t PP20_Unpack(unsigned char const**, unsigned int*)
00000000001fa850 000000000000079c t MMCMP_Unpack(unsigned char const**, unsigned int*)
00000000001faff0 000000000000143c T CSoundFile::ReadXM(unsigned char const*, unsigned int)
00000000001fc430 0000000000000550 T CSoundFile::ReadWav(unsigned char const*, unsigned int)
00000000001fc980 0000000000000074 t get_fci(char const*, int*)
00000000001fca00 00000000000004cc T CSoundFile::ReadUMX(unsigned char const*, unsigned int)
00000000001fced0 00000000000006d8 T CSoundFile::ReadUlt(unsigned char const*, unsigned int)
00000000001fd5b0 0000000000000598 T CSoundFile::ReadSTM(unsigned char const*, unsigned int)
00000000001fdb50 0000000000000124 T CSoundFile::S3MConvert(_MODCOMMAND*, bool) const
00000000001fdc80 0000000000000898 T CSoundFile::ReadS3M(unsigned char const*, unsigned int)
00000000001fe520 00000000000004c0 T CSoundFile::ReadPTM(unsigned char const*, unsigned int)
00000000001fe9e0 00000000000006a0 T CSoundFile::ReadOKT(unsigned char const*, unsigned int)
00000000001ff080 000000000000056c T CSoundFile::ReadMTM(unsigned char const*, unsigned int)
00000000001ff5f0 0000000000000190 T CSoundFile::ConvertModCommand(_MODCOMMAND*) const
00000000001ff780 0000000000000a38 T CSoundFile::ReadMod(unsigned char const*, unsigned int)
00000000002001c0 0000000000000330 t MedConvert(_MODCOMMAND*, tagMMD0SONGHEADER const*)
00000000002004f0 0000000000000d84 T CSoundFile::ReadMed(unsigned char const*, unsigned int)
0000000000201280 0000000000000238 t ConvertMDLCommand(_MODCOMMAND*, unsigned int, unsigned int)
00000000002014c0 0000000000000268 t UnpackMDLTrack(_MODCOMMAND*, unsigned int, unsigned int, unsigned int, unsigned char const*, unsigned int)
0000000000201730 0000000000000f9c T CSoundFile::ReadMDL(unsigned char const*, unsigned int)
00000000002026d0 0000000000000068 t MDLReadBits(unsigned int&, unsigned int&, unsigned char*&, signed char)
0000000000202740 0000000000000508 T CSoundFile::ITInstrToMPT(void const*, _INSTRUMENTHEADER*, unsigned int)
0000000000202c50 000000000000007c t ITReadBits(unsigned int&, unsigned int&, unsigned char*&, signed char)
0000000000202cd0 000000000000023c t ITUnpack8Bit(signed char*, unsigned int, unsigned char*, unsigned int, bool)
0000000000202f10 0000000000000230 t ITUnpack16Bit(signed char*, unsigned int, unsigned char*, unsigned int, bool)
0000000000203140 00000000000001d8 T CSoundFile::LoadMixPlugins(void const*, unsigned int)
0000000000203320 000000000000108c T CSoundFile::ReadIT(unsigned char const*, unsigned int)
00000000002043b0 000000000000063c T CSoundFile::ReadFAR(unsigned char const*, unsigned int)
00000000002049f0 0000000000000534 T CSoundFile::ReadDSM(unsigned char const*, unsigned int)
0000000000204f30 0000000000000cd4 T CSoundFile::ReadDMF(unsigned char const*, unsigned int)
0000000000205c10 00000000000001f4 t DMFNewNode(DMF_HTREE*)
0000000000205e10 00000000000001d0 t DMFUnpack(unsigned char*, unsigned char*, unsigned char*, unsigned int)
0000000000205fe0 00000000000009f4 T CSoundFile::ReadDBM(unsigned char const*, unsigned int)
00000000002069e0 000000000000090c T CSoundFile::ReadAMS2(unsigned char const*, unsigned int)
00000000002072f0 0000000000000764 T CSoundFile::ReadAMS(unsigned char const*, unsigned int)
0000000000207a60 00000000000001c4 t AMSUnpack(char const*, unsigned int, char*, unsigned int, char)
0000000000207c30 0000000000000274 t AMF_Unpack(_MODCOMMAND*, unsigned char const*, unsigned int, unsigned int)
0000000000207eb0 00000000000008c0 T CSoundFile::ReadAMF(unsigned char const*, unsigned int)
0000000000208770 00000000000005f4 T CSoundFile::Read669(unsigned char const*, unsigned int)
0000000000208d70 00000000000000fc t ConvertMT2Command(CSoundFile*, _MODCOMMAND*, _MT2COMMAND const*)
0000000000208e70 0000000000000d7c T CSoundFile::ReadMT2(unsigned char const*, unsigned int)
0000000000209bf0 0000000000000800 T CSoundFile::ReadPSM(unsigned char const*, unsigned int)
000000000020a3f0 00000000000000f4 t abc_brokenrithm(char const*, int*, int*, int*, int)
000000000020a4f0 0000000000000090 t abc_pattracktime(_ABCHANDLE*, unsigned int)
000000000020a580 00000000000000e8 t abc_globalslide(_ABCHANDLE*, unsigned int, int)
000000000020a670 000000000000006c t abc_isvalidchar(char)
000000000020a6e0 0000000000000074 t abc_skip_word(char*)
000000000020a760 0000000000000170 t abc_parse_decorations(_ABCHANDLE*, _ABCTRACK*, char const*)
000000000020a8d0 00000000000001c0 t abc_MIDI_gchord(char const*, _ABCHANDLE*)
000000000020aa90 00000000000000c8 t abc_beat_vol(_ABCHANDLE*, int, int)
000000000020ab60 0000000000000078 t abc_MIDI_beatstring(_ABCHANDLE*, char const*)
000000000020abe0 00000000000001cc t abc_substitute(_ABCHANDLE*, char*, char*)
000000000020adb0 0000000000000070 t abc_message(char const*, char const*)
000000000020ae20 00000000000002b0 t ABC_Key(char const*)
000000000020b0d0 000000000000017c t abc_addchordname(char const*, int, int const*)
000000000020b250 00000000000001c8 t abc_partpat_to_orderlist(unsigned char (*) [2], char const*, _ABCHANDLE*, unsigned char**, int) [clone .constprop.0]
000000000020b420 0000000000000144 t abc_extractkeyvalue(char*, unsigned long, char*, unsigned long, char const*) [clone .constprop.0]
000000000020b570 0000000000000138 t abc_new_umacro(_ABCHANDLE*, char const*)
000000000020b6b0 0000000000000750 t ABC_ReadPatterns(_MODCOMMAND**, unsigned short*, _ABCHANDLE*, int, int)
000000000020be00 000000000000009c t ABC_CleanupMacros(_ABCHANDLE*)
000000000020bea0 0000000000000138 t abc_fgetbytes(MMFILE*, char*, unsigned int) [clone .part.0]
000000000020bfe0 0000000000000308 t abc_gets(_ABCHANDLE*, MMFILE*)
000000000020c2f0 00000000000000f0 t abc_MIDI_beat(_ABCHANDLE*, char const*)
000000000020c3e0 0000000000000098 t abc_MIDI_getnumber(char const*)
000000000020c480 0000000000000098 t abc_MIDI_getprog(char const*)
000000000020c520 00000000000000c8 t abc_add_event(_ABCHANDLE*, _ABCTRACK*, _ABCEVENT*) [clone .isra.0]
000000000020c5f0 0000000000000080 t abc_add_partbreak(_ABCHANDLE*, _ABCTRACK*, unsigned int) [clone .isra.0]
000000000020c670 0000000000000090 t abc_add_tempo_event(_ABCHANDLE*, _ABCTRACK*, unsigned int, int) [clone .isra.0]
000000000020c700 0000000000000090 t abc_add_noteoff(_ABCHANDLE*, _ABCTRACK*, unsigned int) [clone .isra.0]
000000000020c790 00000000000001cc t abc_add_dronenote(_ABCHANDLE*, _ABCTRACK*, unsigned int, int, int) [clone .isra.0]
000000000020c960 0000000000000084 t abc_add_setjumploop(_ABCHANDLE*, _ABCTRACK*, unsigned int, ABCEVENT_JUMPTYPE) [clone .isra.0]
000000000020c9f0 00000000000000bc t abc_add_sync(_ABCHANDLE*, _ABCTRACK*, unsigned int) [clone .isra.0]
000000000020cab0 0000000000000080 t abc_add_tocoda(_ABCHANDLE*, _ABCTRACK*, unsigned int) [clone .isra.0]
000000000020cb30 0000000000000988 t abc_transpose(char const*)
000000000020d4c0 0000000000000318 t abc_locate_track(_ABCHANDLE*, char const*, int)
000000000020d7e0 00000000000004e0 t abc_add_gchord(_ABCHANDLE*, unsigned int, unsigned int)
000000000020dcc0 0000000000000208 t abc_add_drum(_ABCHANDLE*, unsigned int, unsigned int)
000000000020ded0 0000000000000034 t abc_check_track(_ABCHANDLE*, _ABCTRACK*) [clone .part.0]
000000000020df10 000000000000071c t abc_add_noteon(_ABCHANDLE*, int, char const*, unsigned int, char*, int, ABCEVENT_X_EFFECT, int)
000000000020e630 00000000000001a8 t abc_getexpr(char const*, int*)
000000000020e7e0 00000000000000d4 t abc_M_field(char const*, int*, int*)
000000000020e8c0 0000000000000124 t abc_notelen(char const*, int*, int*)
000000000020e9f0 00000000000002ec t abc_extract_tempo(char const*, int)
000000000020ece0 00000000000004dc t abc_set_parts(char**, char*)
000000000020f1c0 00000000000009dc t abc_song_to_parts(_ABCHANDLE*, char**, unsigned char (*) [2])
000000000020fba0 0000000000001264 t abc_MIDI_command(_ABCHANDLE*, char*, char)
0000000000210e10 00000000000001a8 T CSoundFile::TestABC(unsigned char const*, unsigned int)
0000000000210fc0 0000000000005a6c T CSoundFile::ReadABC(unsigned char const*, unsigned int)
0000000000216a30 0000000000000070 t mid_message(char const*, char const*)
0000000000216aa0 0000000000000610 t MID_ReadPatterns(_MODCOMMAND**, unsigned short*, _MIDHANDLE*, int, int)
00000000002170b0 000000000000001c t mid_read_long(_MIDHANDLE*) [clone .isra.0]
00000000002170d0 0000000000000084 t mid_sync_track(_MIDTRACK*, unsigned int)
0000000000217160 0000000000000114 t mid_add_event(_MIDHANDLE*, _MIDTRACK*, _MIDEVENT*) [clone .constprop.0]
0000000000217280 0000000000000258 t mid_locate_track(_MIDHANDLE*, int, int)
00000000002174e0 000000000000005c t mid_add_noteoff(_MIDHANDLE*, _MIDTRACK*)
0000000000217540 00000000000000a0 t mid_add_wheel(_MIDHANDLE*, _MIDTRACK*, int)
00000000002175e0 0000000000000064 T CSoundFile::TestMID(unsigned char const*, unsigned int)
0000000000217650 0000000000001db8 T CSoundFile::ReadMID(unsigned char const*, unsigned int)
0000000000219410 00000000000000c8 t pat_sawtooth(int)
00000000002194e0 00000000000000ac t pat_setpat_attr(WaveHeader*, _MODINSTRUMENT*)
0000000000219590 000000000000008c t mmreadUBYTES(unsigned char*, long, MMFILE*)
0000000000219620 00000000000000ec t pat_build_path(char*, int)
0000000000219710 0000000000000330 t pat_setpat_inst(WaveHeader*, _INSTRUMENTHEADER*, int)
0000000000219a40 0000000000000078 t pat_square(int)
0000000000219ac0 0000000000000018 t pat_sinus(int)
0000000000219ae0 0000000000000178 t pat_read_waveheader(__sFILE*, WaveHeader*, int) [clone .constprop.0]
0000000000219c60 00000000000002b4 t pat_readpat(int, char*, int)
0000000000219f20 00000000000000f4 t dec_pat_Decompress8Bit(short*, int, int) [clone .isra.0]
000000000021a020 00000000000000a8 t pat_readpat_attr(int, WaveHeader*, int) [clone .constprop.0]
000000000021a0d0 0000000000000294 t PATsample(CSoundFile*, _MODINSTRUMENT*, int, int)
000000000021a370 0000000000000140 t pat_get_waveheader(MMFILE*, WaveHeader*, int)
000000000021a4b0 0000000000000050 t pat_resetsmp
000000000021a500 0000000000000024 t pat_smptogm
000000000021a530 000000000000005c t pat_gmtosmp
000000000021a590 0000000000000024 t pat_smplooped
000000000021a5c0 0000000000000058 t pat_gm_name
000000000021a620 0000000000000024 t pat_gm_drumnr
000000000021a650 0000000000000088 t pat_gm_drumnote
000000000021a6e0 0000000000000600 t pat_init_patnames
000000000021ace0 0000000000000080 T CSoundFile::TestPAT(unsigned char const*, unsigned int)
000000000021ad60 0000000000000008 t pat_modnote
000000000021ad70 00000000000002fc t PAT_Load_Instruments
000000000021b070 0000000000000800 T CSoundFile::ReadPAT(unsigned char const*, unsigned int)
000000000021b870 0000000000000488 t ParseHeadersInternal
000000000021bd00 0000000000000070 t WebPParseHeaders
000000000021bd70 00000000000001e8 t DecodeInto
000000000021bf60 00000000000000b0 T WebPDecodeRGBInto
000000000021c010 00000000000000b0 T WebPDecodeRGBAInto
000000000021c0c0 0000000000000040 T WebPGetFeaturesInternal
000000000021c100 00000000000001a0 t WebPIoInitFromOptions
000000000021c2a0 00000000000000ec t WebPRescalerInit
000000000021c390 0000000000000060 t WebPRescalerGetScaledDimensions
000000000021c3f0 0000000000000020 t WebPRescaleNeededLines
000000000021c410 0000000000000104 t WebPRescalerImport
000000000021c520 000000000000006c t WebPRescalerExport
000000000021c590 0000000000000160 t CheckDecBuffer
000000000021c6f0 00000000000000c0 t WebPFlipBuffer
000000000021c7b0 0000000000000250 t WebPAllocateDecBuffer
000000000021ca00 000000000000003c T WebPInitDecBufferInternal
000000000021ca40 000000000000004c T WebPFreeDecBuffer
000000000021ca90 0000000000000090 t Dither8x8
000000000021cb20 00000000000005b4 t ReconstructRow
000000000021d0e0 00000000000006f8 t FinishRow
000000000021d7e0 0000000000000100 t VP8InitDithering
000000000021d8e0 000000000000015c t VP8ProcessRow
000000000021da40 0000000000000248 t VP8EnterCritical
000000000021dc90 0000000000000068 t VP8ExitCritical
000000000021dd00 0000000000000024 t VP8GetThreadMethod
000000000021dd30 00000000000003b0 t VP8InitFrame
000000000021e0e0 0000000000000084 t GetAlphaSourceRow
000000000021e170 00000000000000f8 t EmitAlphaRGB
000000000021e270 00000000000000f8 t EmitAlphaRGBA4444
000000000021e370 0000000000000078 t CustomPut
000000000021e3f0 0000000000000028 t CustomTeardown
000000000021e420 0000000000000160 t EmitYUV
000000000021e580 00000000000001fc t EmitFancyRGB
000000000021e780 00000000000000e8 t EmitAlphaYUV
000000000021e870 000000000000006c t EmitSampledRGB
000000000021e8e0 0000000000000594 t CustomSetup
000000000021ee80 0000000000000178 t ExportAlpha
000000000021f000 0000000000000164 t ExportAlphaRGBA4444
000000000021f170 00000000000000b0 t EmitRescaledAlphaRGB
000000000021f220 00000000000001e0 t EmitRescaledRGB
000000000021f400 0000000000000174 t EmitRescaledAlphaYUV
000000000021f580 0000000000000170 t EmitRescaledYUV
000000000021f6f0 0000000000000024 t WebPInitCustomIo
000000000021f720 0000000000000058 t VP8Clear.part.0
000000000021f780 000000000000072c t GetLargeValue
000000000021feb0 000000000000046c t GetCoeffsAlt
0000000000220320 0000000000000398 t GetCoeffsFast
00000000002206c0 0000000000000038 t VP8InitIoInternal
0000000000220700 00000000000000b0 t VP8New
00000000002207b0 000000000000002c t VP8Delete
00000000002207e0 0000000000000018 t VP8SetError
0000000000220800 0000000000000040 T VP8CheckSignature
0000000000220840 000000000000063c t VP8GetHeaders.part.0.constprop.0
0000000000220e80 00000000000000bc T VP8GetInfo
0000000000220f40 0000000000000038 t VP8GetHeaders
0000000000220f80 0000000000000480 t VP8DecodeMB
0000000000221400 0000000000000018 t VP8InitScanline
0000000000221420 0000000000000234 t VP8Decode
0000000000221660 00000000000000d8 t ConvertToYUVA
0000000000221740 00000000000000bc t ApplyInverseTransforms
0000000000221800 0000000000000400 t ProcessRows
0000000000221c00 000000000000014c t ExtractPalettedAlphaRows
0000000000221d50 0000000000000098 t ReadImageInfo.part.0
0000000000221df0 0000000000000164 t ExtractAlphaRows
0000000000221f60 00000000000000b8 t VP8LClear.part.0
0000000000222020 0000000000000b04 t DecodeImageData
0000000000222b30 0000000000000490 t DecodeImageStream
0000000000222fc0 0000000000000940 t ReadHuffmanCodes
0000000000223900 0000000000000034 T VP8LCheckSignature
0000000000223940 00000000000000c8 T VP8LGetInfo
0000000000223a10 000000000000003c t VP8LNew
0000000000223a50 000000000000002c t VP8LDelete
0000000000223a80 00000000000001b8 t VP8LDecodeAlphaHeader
0000000000223c40 0000000000000608 t VP8LDecodeAlphaImageStream
0000000000224250 00000000000000e4 t VP8LDecodeHeader
0000000000224340 00000000000001fc t VP8LDecodeImage
0000000000224540 00000000000000ac T WebPMultARGBRow_C
00000000002245f0 000000000000006c T WebPMultRow_C
0000000000224660 0000000000000030 t HasAlpha8b_C
0000000000224690 0000000000000040 t HasAlpha32b_C
00000000002246d0 000000000000004c t PackRGB_C
0000000000224720 00000000000000b8 t ApplyAlphaMultiply_16b_C
00000000002247e0 0000000000000080 t WebPMultARGBRows
0000000000224860 0000000000000094 t WebPMultRows
0000000000224900 00000000000000c8 t WebPInitAlphaProcessing
00000000002249d0 000000000000000c t armCPUInfo
00000000002249e0 000000000000004c t TransformUV_C
0000000000224a30 0000000000000094 t TransformDCUV_C
0000000000224ad0 000000000000007c t HE4_C
0000000000224b50 00000000000000f4 t VR4_C
0000000000224c50 00000000000000f4 t VL4_C
0000000000224d50 00000000000000a4 t HU4_C
0000000000224e00 00000000000000f4 t HD4_C
0000000000224f00 000000000000005c t DitherCombine8x8_C
0000000000224f60 00000000000000dc t VP8DspInit
0000000000225040 0000000000000004 t VP8InitClipTables
0000000000225050 00000000000000a8 t GradientUnfilter_C
0000000000225100 0000000000000088 t VP8FiltersInit
0000000000225190 0000000000000008 t Predictor0_C
00000000002251a0 0000000000000004 t Predictor1_C
00000000002251b0 0000000000000008 t Predictor2_C
00000000002251c0 0000000000000008 t Predictor3_C
00000000002251d0 0000000000000008 t Predictor4_C
00000000002251e0 0000000000000030 t Predictor5_C
0000000000225210 000000000000001c t Predictor6_C
0000000000225230 000000000000001c t Predictor7_C
0000000000225250 000000000000001c t Predictor8_C
0000000000225270 000000000000001c t Predictor9_C
0000000000225290 0000000000000048 t Predictor10_C
00000000002252e0 0000000000000098 t Predictor11_C
0000000000225380 0000000000000098 t Predictor12_C
0000000000225420 00000000000000b8 t Predictor13_C
00000000002254e0 0000000000000038 t PredictorAdd0_C
0000000000225520 000000000000004c t PredictorAdd1_C
0000000000225570 0000000000000050 t PredictorAdd2_C
00000000002255c0 0000000000000050 t PredictorAdd3_C
0000000000225610 0000000000000050 t PredictorAdd4_C
0000000000225660 0000000000000070 t PredictorAdd6_C
00000000002256d0 0000000000000068 t PredictorAdd7_C
0000000000225740 0000000000000068 t PredictorAdd8_C
00000000002257b0 0000000000000068 t PredictorAdd9_C
0000000000225820 000000000000005c t MapARGB_C
0000000000225880 0000000000000054 t MapAlpha_C
00000000002258e0 0000000000000040 T VP8LConvertBGRAToRGBA4444_C
0000000000225920 0000000000000048 T VP8LConvertBGRAToRGB565_C
0000000000225970 00000000000000c0 t ColorIndexInverseTransform_C.isra.0
0000000000225a30 00000000000000a0 t PredictorAdd10_C
0000000000225ad0 0000000000000088 t PredictorAdd5_C
0000000000225b60 0000000000000100 t PredictorAdd11_C
0000000000225c60 00000000000000f0 t PredictorAdd12_C
0000000000225d50 000000000000010c t PredictorAdd13_C
0000000000225e60 0000000000000044 t VP8LAddGreenToBlueAndRed_C
0000000000225eb0 000000000000006c t VP8LTransformColorInverse_C
0000000000225f20 00000000000000c0 t VP8LColorIndexInverseTransformAlpha
0000000000225fe0 00000000000004ec t VP8LInverseTransform
00000000002264d0 0000000000000038 t VP8LConvertBGRAToRGB_C
0000000000226510 0000000000000040 t VP8LConvertBGRAToRGBA_C
0000000000226550 0000000000000038 t VP8LConvertBGRAToBGR_C
0000000000226590 0000000000000240 t VP8LConvertFromBGRA
00000000002267d0 0000000000000238 t VP8LDspInit
0000000000226a10 00000000000000c0 T WebPRescalerImportRowExpand_C
0000000000226ad0 00000000000000cc T WebPRescalerImportRowShrink_C
0000000000226ba0 0000000000000028 t WebPRescalerImportRow
0000000000226bd0 00000000000000d8 t WebPRescalerExportRow
0000000000226cb0 0000000000000088 t WebPRescalerDspInit
0000000000226d40 000000000000013c T WebPYuv444ToRgb565_C
0000000000226e80 00000000000000d8 T WebPYuv444ToBgr_C
0000000000226f60 00000000000000d8 T WebPYuv444ToRgb_C
0000000000227040 00000000000000ec T WebPYuv444ToBgra_C
0000000000227130 00000000000000ec T WebPYuv444ToRgba_C
0000000000227220 00000000000000ec T WebPYuv444ToArgb_C
0000000000227310 0000000000000150 T WebPYuv444ToRgba4444_C
0000000000227460 00000000000000b4 t WebPInitYUV444Converters
0000000000227520 0000000000000068 t WebPInitUpsamplers
0000000000227590 0000000000000050 t ConvertARGBToY_C
00000000002275e0 0000000000000054 t ConvertRGB24ToY_C
0000000000227640 0000000000000050 t ConvertBGR24ToY_C
0000000000227690 00000000000000a8 T WebPConvertRGBA32ToUV_C
0000000000227740 0000000000000198 t WebPConvertARGBToUV_C
00000000002278e0 000000000000030c t YuvToRgb565Row
0000000000227bf0 0000000000000300 t YuvToRgba4444Row
0000000000227ef0 0000000000000298 t YuvToBgraRow
0000000000228190 000000000000029c t YuvToArgbRow
0000000000228430 00000000000002a0 t YuvToBgrRow
00000000002286d0 00000000000002a0 t YuvToRgbRow
0000000000228970 000000000000029c t YuvToRgbaRow
0000000000228c10 00000000000000dc t WebPSamplerProcessPlane
0000000000228cf0 00000000000000b4 t WebPInitSamplers
0000000000228db0 00000000000000bc t WebPInitConvertARGBToYUV
0000000000228e70 0000000000000074 t ExtractGreen_NEON
0000000000228ef0 00000000000000d8 t ExtractAlpha_NEON
0000000000228fd0 00000000000000e8 t DispatchAlpha_NEON
00000000002290c0 00000000000000b0 t DispatchAlphaToGreen_NEON
0000000000229170 000000000000019c t ApplyAlphaMultiply_NEON
0000000000229310 0000000000000068 t WebPInitAlphaProcessingNEON
0000000000229380 0000000000000050 t DC4_NEON
00000000002293d0 0000000000000018 t DC8uvNoTopLeft_NEON
00000000002293f0 0000000000000020 t VE8uv_NEON
0000000000229410 0000000000000020 t HE8uv_NEON
0000000000229430 0000000000000020 t VE16_NEON
0000000000229450 0000000000000020 t HE16_NEON
0000000000229470 0000000000000018 t DC16NoTopLeft_NEON
0000000000229490 000000000000009c t TM16_NEON
0000000000229530 0000000000000028 t VE4_NEON
0000000000229560 0000000000000040 t LD4_NEON
00000000002295a0 0000000000000070 t RD4_NEON
0000000000229610 00000000000000f8 t Load4x8_NEON
0000000000229710 00000000000000ac t DoFilter4_NEON
00000000002297c0 000000000000010c t DoFilter6_NEON
00000000002298d0 00000000000001ac t VFilter8_NEON
0000000000229a80 0000000000000134 t TransformWHT_NEON
0000000000229bc0 0000000000000098 t SimpleVFilter16_NEON
0000000000229c60 000000000000002c t SimpleVFilter16i_NEON
0000000000229c90 0000000000000078 t TM8uv_NEON
0000000000229d10 0000000000000064 t TM4_NEON
0000000000229d80 0000000000000078 t DC8uv_NEON
0000000000229e00 00000000000000e0 t DC16TopLeft_NEON
0000000000229ee0 0000000000000038 t DC8uvNoLeft_NEON
0000000000229f20 0000000000000040 t DC16NoLeft_NEON
0000000000229f60 0000000000000060 t DC8uvNoTop_NEON
0000000000229fc0 000000000000005c t TransformDC_NEON
000000000022a020 0000000000000144 t Store2x16_NEON
000000000022a170 00000000000000e4 t TransformAC3_NEON
000000000022a260 000000000000011c t VFilter16i_NEON
000000000022a380 000000000000028c t TransformTwo_NEON
000000000022a610 0000000000000490 t HFilter16i_NEON
000000000022aaa0 0000000000000550 t HFilter8_NEON
000000000022aff0 00000000000000b8 t DC16NoTop_NEON
000000000022b0b0 0000000000000100 t VFilter16_NEON
000000000022b1b0 000000000000021c t SimpleHFilter16_NEON
000000000022b3d0 000000000000004c t SimpleHFilter16i_NEON
000000000022b420 0000000000000410 t HFilter8i_NEON
000000000022b830 0000000000000180 t VFilter8i_NEON
000000000022b9b0 00000000000001a4 t HFilter16_NEON
000000000022bb60 000000000000025c t VP8DspInitNEON
000000000022bdc0 0000000000000080 t PredictLine_NEON
000000000022be40 00000000000000d0 t HorizontalUnfilter_NEON
000000000022bf10 0000000000000094 t VerticalUnfilter_NEON
000000000022bfb0 000000000000016c t GradientFilter_NEON
000000000022c120 0000000000000074 t VerticalFilter_NEON
000000000022c1a0 0000000000000098 t HorizontalFilter_NEON
000000000022c240 0000000000000048 t VP8FiltersInitNEON
000000000022c290 0000000000000108 t TransformColorInverse_NEON
000000000022c3a0 0000000000000068 t AddGreenToBlueAndRed_NEON
000000000022c410 000000000000005c t ConvertBGRAToRGB_NEON
000000000022c470 000000000000005c t ConvertBGRAToBGR_NEON
000000000022c4d0 0000000000000050 t ConvertBGRAToRGBA_NEON
000000000022c520 000000000000006c t PredictorAdd0_NEON
000000000022c590 0000000000000070 t PredictorAdd2_NEON
000000000022c600 0000000000000070 t PredictorAdd3_NEON
000000000022c670 0000000000000070 t PredictorAdd4_NEON
000000000022c6e0 0000000000000078 t PredictorAdd8_NEON
000000000022c760 0000000000000078 t PredictorAdd9_NEON
000000000022c7e0 0000000000000084 t PredictorAdd1_NEON
000000000022c870 00000000000000d4 t PredictorAdd5_NEON
000000000022c950 00000000000000c0 t PredictorAdd6_NEON
000000000022ca10 00000000000000c0 t PredictorAdd7_NEON
000000000022cad0 00000000000000e0 t PredictorAdd10_NEON
000000000022cbb0 0000000000000148 t PredictorAdd13_NEON
000000000022cd00 00000000000000f0 t PredictorAdd12_NEON
000000000022cdf0 0000000000000118 t PredictorAdd11_NEON
000000000022cf10 0000000000000020 t Predictor5_NEON
000000000022cf30 0000000000000018 t Predictor6_NEON
000000000022cf50 0000000000000014 t Predictor7_NEON
000000000022cf70 0000000000000034 t Predictor13_NEON
000000000022cfb0 0000000000000148 t VP8LDspInitNEON
000000000022d100 000000000000019c t RescalerExportRowShrink_NEON
000000000022d2a0 00000000000001c8 t RescalerExportRowExpand_NEON
000000000022d470 000000000000002c t WebPRescalerDspInitNEON
000000000022d4a0 0000000000000064 t Upsample16Pixels_NEON
000000000022d510 000000000000087c t UpsampleRgba4444LinePair_NEON
000000000022dd90 0000000000000878 t UpsampleRgb565LinePair_NEON
000000000022e610 000000000000078c t UpsampleBgraLinePair_NEON
000000000022eda0 000000000000075c t UpsampleBgrLinePair_NEON
000000000022f500 00000000000007a8 t UpsampleArgbLinePair_NEON
000000000022fcb0 0000000000000754 t UpsampleRgbLinePair_NEON
0000000000230410 0000000000000784 t UpsampleRgbaLinePair_NEON
0000000000230ba0 000000000000005c t WebPInitUpsamplersNEON
0000000000230c00 0000000000000158 t ConvertARGBToUV_NEON
0000000000230d60 000000000000005c t ConvertRGBToY_NEON
0000000000230dc0 00000000000000bc t ConvertARGBToY_NEON
0000000000230e80 00000000000000c4 t ConvertRGB24ToY_NEON
0000000000230f50 00000000000000c0 t ConvertBGR24ToY_NEON
0000000000231010 00000000000000a8 t SharpYUVUpdateRGB_NEON
00000000002310c0 0000000000000184 t SharpYUVFilterRow_NEON
0000000000231250 00000000000000fc t SharpYUVUpdateY_NEON
0000000000231350 0000000000000198 t ConvertRGBA32ToUV_NEON
00000000002314f0 0000000000000068 t WebPInitConvertARGBToYUVNEON
0000000000231560 0000000000000040 t WebPInitSharpYUVNEON
00000000002315a0 0000000000000074 t ShiftBytes
0000000000231620 0000000000000088 t VP8InitBitReader
00000000002316b0 0000000000000068 t VP8LoadFinalBytes
0000000000231720 00000000000000dc t VP8GetValue
0000000000231800 0000000000000030 t VP8GetSignedValue
0000000000231830 0000000000000050 t VP8LInitBitReader
0000000000231880 0000000000000048 t VP8LDoFillBitWindow
00000000002318d0 0000000000000064 t VP8LReadBits
0000000000231940 0000000000000068 t VP8LColorCacheInit
00000000002319b0 0000000000000030 t VP8LColorCacheClear
00000000002319e0 000000000000001c t VP8LColorCacheCopy
0000000000231a00 0000000000000444 t BuildHuffmanTable
0000000000231e50 000000000000000c t VP8LHtreeGroupsNew
0000000000231e60 000000000000000c t VP8LHtreeGroupsFree
0000000000231e70 00000000000000c4 t VP8LBuildHuffmanTable
0000000000231f40 000000000000007c t VP8InitRandom
0000000000231fc0 0000000000000044 t Execute
0000000000232010 0000000000000010 t Init
0000000000232020 0000000000000074 t Sync
00000000002320a0 000000000000017c t Reset
0000000000232220 0000000000000080 t Launch
00000000002322a0 0000000000000098 t End
0000000000232340 000000000000000c T WebPGetWorkerInterface
0000000000232350 00000000000000bc t ThreadLoop
0000000000232410 0000000000000024 T WebPSafeMalloc
0000000000232440 0000000000000020 T WebPSafeCalloc
0000000000232460 0000000000000004 T WebPSafeFree
0000000000232470 000000000000004c t WebPDeallocateAlphaMemory
00000000002324c0 00000000000003f8 t VP8DecompressAlphaRows
00000000002328c0 0000000000000278 t VP8ParseQuant
0000000000232b40 0000000000000010 t VP8ResetProba
0000000000232b50 0000000000000ef8 t VP8ParseIntraModeRow
0000000000233a50 0000000000000260 t VP8ParseProba
0000000000233cb0 00000000000005c8 t WebPDequantizeLevels
0000000000234280 0000000000000038 T eglGetError
00000000002342c0 00000000000000e4 t _eglSetFuncName
00000000002343b0 0000000000000038 T eglQueryAPI
00000000002343f0 00000000000000f8 t _eglWaitClientCommon
00000000002344f0 000000000000003c T eglGetCurrentDisplay
0000000000234530 0000000000000044 T eglGetCurrentContext
0000000000234580 0000000000000008 t _eglFunctionCompare
0000000000234590 00000000000000e4 t _eglConvertIntsToAttribs
0000000000234680 0000000000000084 t _eglConvertAttribsToInt.part.0
0000000000234710 0000000000000068 t _eglAppendExtension.isra.0
0000000000234780 00000000000000d8 t _eglGetSyncAttribCommon
0000000000234860 00000000000000f4 t _eglDestroySync
0000000000234960 0000000000000148 t _eglDestroyImageCommon
0000000000234ab0 000000000000013c t _eglClientWaitSyncCommon
0000000000234bf0 0000000000000138 t _eglWaitSyncCommon
0000000000234d30 0000000000000198 t _eglCreateImageCommon
0000000000234ed0 00000000000000d4 T eglDestroySync
0000000000234fb0 00000000000000d4 t eglDestroyImageKHR
0000000000235090 00000000000000d4 T eglDestroyImage
0000000000235170 00000000000000d4 t eglDestroySyncKHR
0000000000235250 00000000000000c8 T eglWaitSync
0000000000235320 00000000000000c8 t eglWaitSyncKHR
00000000002353f0 000000000000018c t _eglSwapBuffersWithDamageCommon
0000000000235580 00000000000000fc t eglSwapBuffersWithDamageKHR
0000000000235680 00000000000000fc t eglSwapBuffersWithDamageEXT
0000000000235780 0000000000000100 t eglClientWaitSyncKHR
0000000000235880 0000000000000100 T eglClientWaitSync
0000000000235980 00000000000001c4 t _eglCreatePixmapSurfaceCommon
0000000000235b50 000000000000012c T eglGetSyncAttrib
0000000000235c80 00000000000001d8 t _eglCreateWindowSurfaceCommon
0000000000235e60 0000000000000150 t eglGetSyncAttribKHR
0000000000235fb0 0000000000000218 t _eglCreateSync
00000000002361d0 000000000000019c T eglSurfaceAttrib
0000000000236370 000000000000019c T eglQueryContext
0000000000236510 000000000000016c T eglCopyBuffers
0000000000236680 000000000000016c t eglSignalSyncKHR
00000000002367f0 000000000000016c T eglBindTexImage
0000000000236960 000000000000016c T eglReleaseTexImage
0000000000236ad0 000000000000018c T eglDestroyContext
0000000000236c60 000000000000018c T eglDestroySurface
0000000000236df0 00000000000001a4 t eglExportDMABUFImageQueryMESA
0000000000236fa0 00000000000001a4 t eglExportDRMImageMESA
0000000000237150 00000000000001a4 t eglExportDMABUFImageMESA
0000000000237300 00000000000001cc t eglPostSubBufferNV
00000000002374d0 00000000000001ac T eglQuerySurface
0000000000237680 0000000000000194 t eglDupNativeFenceFDANDROID
0000000000237820 00000000000001cc t eglGetSyncValuesCHROMIUM
00000000002379f0 00000000000001cc t eglSwapBuffersRegionNOK
0000000000237bc0 0000000000000208 T eglSwapBuffers
0000000000237dd0 000000000000020c T eglSwapInterval
0000000000237fe0 00000000000002b0 t eglSetDamageRegionKHR
0000000000238290 0000000000000330 T eglMakeCurrent
00000000002385c0 00000000000000c0 t eglQueryDevicesEXT
0000000000238680 0000000000000074 T eglGetDisplay
0000000000238700 00000000000000b0 T eglGetPlatformDisplay
00000000002387b0 0000000000000070 T eglWaitClient
0000000000238820 0000000000000070 T eglWaitGL
0000000000238890 0000000000000114 t eglQueryDeviceAttribEXT
00000000002389b0 00000000000000e0 T eglGetCurrentSurface
0000000000238a90 0000000000000108 t eglGetPlatformDisplayEXT
0000000000238ba0 00000000000000e0 T eglBindAPI
0000000000238c80 00000000000000e0 t eglQueryDeviceStringEXT
0000000000238d60 000000000000011c t eglQueryDebugKHR
0000000000238e80 00000000000000f8 T eglGetProcAddress
0000000000238f80 0000000000000160 t eglQueryDisplayAttribEXT
00000000002390e0 0000000000000164 t eglQueryDmaBufFormatsEXT
0000000000239250 000000000000012c T eglCreatePixmapSurface
0000000000239380 000000000000012c T eglCreateWindowSurface
00000000002394b0 000000000000012c t eglCreatePlatformPixmapSurfaceEXT
00000000002395e0 000000000000012c t eglCreatePlatformWindowSurfaceEXT
0000000000239710 0000000000000144 t eglDebugMessageControlKHR
0000000000239860 0000000000000184 t eglQueryDmaBufModifiersEXT
00000000002399f0 0000000000000140 t eglCreateImageKHR
0000000000239b30 0000000000000128 T eglCreateSync
0000000000239c60 0000000000000128 t eglCreateSync64KHR
0000000000239d90 0000000000000158 T eglWaitNative
0000000000239ef0 000000000000018c t eglLabelObjectKHR
000000000023a080 0000000000000150 T eglTerminate
000000000023a1d0 00000000000001c8 T eglCreatePlatformPixmapSurface
000000000023a3a0 00000000000001c8 T eglCreatePlatformWindowSurface
000000000023a570 0000000000000198 t eglCreateSyncKHR
000000000023a710 00000000000001d4 T eglCreateImage
000000000023a8f0 0000000000000168 t eglGetDisplayDriverConfig
000000000023aa60 0000000000000168 t eglGetDisplayDriverName
000000000023abd0 00000000000000d4 T eglReleaseThread
000000000023acb0 0000000000000194 T eglCreatePbufferFromClientBuffer
000000000023ae50 00000000000001e0 T eglGetConfigs
000000000023b030 00000000000001b4 t eglCreateDRMImageMESA
000000000023b1f0 00000000000001bc t eglBindWaylandDisplayWL
000000000023b3b0 0000000000000200 T eglChooseConfig
000000000023b5b0 00000000000001bc t eglUnbindWaylandDisplayWL
000000000023b770 00000000000001f8 T eglGetConfigAttrib
000000000023b970 00000000000001e4 t eglQueryWaylandBufferWL
000000000023bb60 0000000000000190 t eglSetBlobCacheFuncsANDROID
000000000023bcf0 00000000000001f0 t eglCreateWaylandBufferFromImageWL
000000000023bee0 0000000000000228 T eglCreatePbufferSurface
000000000023c110 000000000000028c T eglCreateContext
000000000023c3a0 000000000000027c T eglQueryString
000000000023c620 0000000000000890 T eglInitialize
000000000023ceb0 0000000000000190 t _eglOffsetOfConfig
000000000023d040 0000000000000134 t _eglSortConfigs
000000000023d180 0000000000000010 t _eglFlattenConfig
000000000023d190 0000000000000048 t _eglInitConfig
000000000023d1e0 0000000000000050 t _eglLinkConfig
000000000023d230 000000000000001c t _eglLookupConfig
000000000023d250 00000000000002fc t _eglValidateConfig
000000000023d550 0000000000000268 t _eglMatchConfig
000000000023d7c0 0000000000000004 t _eglFallbackMatch
000000000023d7d0 00000000000001d8 t _eglParseConfigAttribList
000000000023d9b0 0000000000000174 t _eglCompareConfigs
000000000023db30 0000000000000008 t _eglFallbackCompare
000000000023db40 0000000000000130 t _eglFilterConfigArray
000000000023dc70 0000000000000094 t _eglChooseConfig
000000000023dd10 00000000000000b4 t _eglGetConfigAttrib
000000000023ddd0 0000000000000044 t _eglGetConfigs
000000000023de20 0000000000000728 t _eglInitContext
000000000023e550 00000000000000dc t _eglQueryContext
000000000023e630 000000000000029c t _eglBindContext
000000000023e8d0 0000000000000078 t _eglGetCurrentThread
000000000023e950 0000000000000048 t _eglDestroyCurrentThread
000000000023e9a0 0000000000000034 t _eglIsCurrentThreadDummy
000000000023e9e0 0000000000000078 t _eglGetCurrentContext
000000000023ea60 00000000000003cc t _eglDebugReport
000000000023ee30 00000000000000b8 t _eglError
000000000023eef0 0000000000000044 T _eglFiniDevice
000000000023ef40 0000000000000090 t _eglCheckDeviceHandle
000000000023efd0 0000000000000024 t _eglDeviceSupports
000000000023f000 0000000000000024 t _eglQueryDeviceAttribEXT
000000000023f030 0000000000000038 t _eglQueryDeviceStringEXT
000000000023f070 00000000000000e4 t _eglQueryDevicesEXT
000000000023f160 000000000000012c t _eglGetNativePlatform
000000000023f290 000000000000009c T _eglFiniDisplay
000000000023f330 00000000000001e4 t _eglFindDisplay
000000000023f520 00000000000001d0 t _eglReleaseDisplayResources
000000000023f6f0 0000000000000034 t _eglCleanupDisplay
000000000023f730 0000000000000090 t _eglCheckDisplayHandle
000000000023f7c0 0000000000000040 t _eglCheckResource
000000000023f800 0000000000000038 t _eglInitResource
000000000023f840 0000000000000010 t _eglGetResource
000000000023f850 0000000000000018 t _eglPutResource
000000000023f870 000000000000002c t _eglLinkResource
000000000023f8a0 0000000000000074 t _eglUnlinkResource
000000000023f920 00000000000001a4 t _eglGetDeviceDisplay
000000000023fad0 0000000000000078 t _eglGetDriver
000000000023fb50 00000000000000c8 t _eglMatchDriver
000000000023fc20 000000000000004c t _eglGetDriverProc
000000000023fc70 0000000000000028 T _eglUnloadDrivers
000000000023fca0 000000000000000c t _eglPointerIsDereferencable
000000000023fcb0 00000000000001f4 t _eglLog
000000000023feb0 00000000000005cc t _eglInitSurface
0000000000240480 0000000000000424 t _eglQuerySurface
00000000002408b0 0000000000000200 t _eglSurfaceAttrib
0000000000240ab0 0000000000000008 t _eglSwapInterval
0000000000240ac0 0000000000000100 t _eglGetSyncAttrib
0000000000240bc0 0000000000000008 t switch_st_framebuffer_flush_front
0000000000240bd0 0000000000000008 t switch_st_framebuffer_flush_swapbuffers
0000000000240be0 0000000000000008 t switch_create_pixmap_surface
0000000000240bf0 0000000000000008 t switch_create_pbuffer_surface
0000000000240c00 0000000000000008 t switch_st_get_param
0000000000240c10 0000000000000008 t switch_get_proc_address
0000000000240c20 00000000000000e4 t switch_swap_buffers
0000000000240d10 0000000000000020 t switch_swap_interval
0000000000240d30 000000000000018c t switch_create_context
0000000000240ec0 000000000000005c t switch_terminate
0000000000240f20 000000000000004c t switch_destroy_context
0000000000240f70 00000000000001c4 t switch_st_framebuffer_validate
0000000000241140 000000000000012c t switch_egl_surface_cleanup
0000000000241270 0000000000000244 t switch_create_window_surface
00000000002414c0 0000000000000050 t switch_destroy_surface
0000000000241510 0000000000000128 t switch_make_current
0000000000241640 0000000000000478 t switch_initialize
0000000000241ac0 0000000000000084 t _eglInitDriver
0000000000241b50 000000000000009c t st_framebuffer_update_attachments
0000000000241bf0 0000000000000004 t st_framebuffer_iface_hash
0000000000241c00 000000000000000c t st_framebuffer_iface_equal
0000000000241c10 000000000000002c t st_api_get_current
0000000000241c40 0000000000000004 t st_api_destroy
0000000000241c50 00000000000000b4 t st_context_validate
0000000000241d10 0000000000000004 t st_context_destroy
0000000000241d20 0000000000000024 t st_context_share
0000000000241d50 0000000000000010 t st_context_copy
0000000000241d60 0000000000000048 t st_manager_destroy
0000000000241db0 00000000000000d4 t get_version
0000000000241e90 000000000000009c t st_api_query_versions
0000000000241f30 0000000000000078 t st_api_destroy_drawable
0000000000241fb0 00000000000000f0 t st_framebuffers_purge
00000000002420a0 00000000000002b8 t st_context_teximage
0000000000242360 000000000000022c t st_framebuffer_add_renderbuffer
0000000000242590 0000000000000520 t st_visual_to_context_mode
0000000000242ab0 00000000000002f0 t st_framebuffer_reuse_or_create.constprop.0
0000000000242da0 0000000000000354 t st_api_create_context
0000000000243100 0000000000000230 t st_set_ws_renderbuffer_surface
0000000000243330 00000000000002f8 t st_framebuffer_validate
0000000000243630 0000000000000184 t st_api_make_current
00000000002437c0 0000000000000014 t st_framebuffer_reference
00000000002437e0 00000000000000a4 t st_manager_flush_frontbuffer
0000000000243890 0000000000000100 t st_context_flush
0000000000243990 0000000000000108 t st_manager_validate_framebuffers
0000000000243aa0 0000000000000078 t st_manager_flush_swapbuffers
0000000000243b20 00000000000000cc t st_manager_add_color_renderbuffer
0000000000243bf0 000000000000000c t st_gl_api_create
0000000000243c00 00000000000000cc t st_texture_release_all_sampler_views.part.0
0000000000243cd0 0000000000000220 t st_texture_set_sampler_view
0000000000243ef0 0000000000000058 t st_texture_get_current_sampler_view
0000000000243f50 00000000000000b8 t st_texture_release_context_sampler_view
0000000000244010 0000000000000010 t st_texture_release_all_sampler_views
0000000000244020 0000000000000058 t st_delete_texture_sampler_views
0000000000244080 0000000000000754 t st_get_texture_sampler_view_from_stobj
00000000002447e0 000000000000013c t st_get_buffer_sampler_view_from_stobj
0000000000244920 0000000000000018 t u_surface_default_template
0000000000244940 00000000000000e8 t util_copy_box
0000000000244a30 00000000000002f8 t util_resource_copy_region
0000000000244d30 000000000000006c t nouveau_drm_screen_unref
0000000000244da0 0000000000000110 T nouveau_switch_screen_create
0000000000244eb0 0000000000000008 T nouveau_switch_resource_get_syncpoint
0000000000244ec0 00000000000001fc T nouveau_switch_resource_get_buffer
00000000002450c0 000000000000013c t nvc0_screen_get_shader_param
0000000000245200 00000000000000a4 t nvc0_screen_get_paramf
00000000002452b0 0000000000000054 t nvc0_screen_get_sample_pixel_grid
0000000000245310 0000000000000054 t nvc0_screen_fence_emit
0000000000245370 000000000000000c t nvc0_screen_fence_update
0000000000245380 0000000000000444 t nvc0_screen_get_param
00000000002457d0 00000000000001c8 t nvc0_screen_is_format_supported
00000000002459a0 000000000000025c t nvc0_screen_get_compute_param
0000000000245c00 0000000000000028 t PUSH_SPACE.isra.0
0000000000245c30 0000000000000164 t nvc0_screen_destroy
0000000000245da0 00000000000000f8 t nvc0_graph_set_macro.isra.0
0000000000245ea0 000000000000017c t nvc0_screen_resize_text_area
0000000000246020 000000000000022c t nvc0_screen_bind_cb_3d
0000000000246250 00000000000020a8 t nvc0_screen_create
0000000000248300 000000000000007c t nvc0_screen_tic_alloc
0000000000248380 000000000000007c t nvc0_screen_tsc_alloc
0000000000248400 0000000000000004 t nvc0_flush_resource
0000000000248410 0000000000000334 t nvc0_clear_buffer_push_nve4
0000000000248750 0000000000000378 t nvc0_clear_buffer_push_nvc0
0000000000248ad0 0000000000000080 t nvc0_clear_buffer_push
0000000000248b50 0000000000000084 t gm200_evaluate_depth_buffer
0000000000248be0 00000000000003b0 t nvc0_2d_texture_set
0000000000248f90 0000000000000508 t nvc0_resource_copy_region
00000000002494a0 0000000000000698 t nvc0_clear_buffer
0000000000249b40 00000000000004ec t nvc0_clear_depth_stencil
000000000024a030 000000000000056c t nvc0_clear_render_target
000000000024a5a0 00000000000026ac t nvc0_blit
000000000024cc50 00000000000004d8 T nvc0_clear
000000000024d130 0000000000000124 t nvc0_blitter_create
000000000024d260 0000000000000084 t nvc0_blitter_destroy
000000000024d2f0 0000000000000050 t nvc0_blitctx_create
000000000024d340 0000000000000008 t nvc0_blitctx_destroy
000000000024d350 0000000000000074 t nvc0_init_surface_functions
000000000024d3d0 0000000000000034 t nve4_delete_image_handle
000000000024d410 00000000000000c0 t nve4_make_texture_handle_resident
000000000024d4d0 0000000000000178 t gm107_make_image_handle_resident
000000000024d650 00000000000000e0 t nvc0_get_surface_dims
000000000024d730 0000000000000068 t gm107_delete_image_handle
000000000024d7a0 0000000000000124 t nve4_delete_texture_handle
000000000024d8d0 00000000000005fc t gf100_create_texture_view
000000000024ded0 00000000000006e0 t gm107_create_texture_view
000000000024e5b0 00000000000001f0 t nve4_create_texture_handle
000000000024e7a0 0000000000000030 T nvc0_create_sampler_view
000000000024e7d0 00000000000000d8 t gm107_create_texture_view_from_image
000000000024e8b0 0000000000000144 t gm107_create_image_handle
000000000024ea00 0000000000000014 t nvc0_create_texture_view
000000000024ea20 000000000000009c t nvc0_update_tic
000000000024eac0 0000000000000414 t nvc0_validate_tic
000000000024eee0 00000000000003b8 T nvc0_validate_textures
000000000024f2a0 00000000000002e0 t nvc0_validate_tsc
000000000024f580 00000000000001a0 t nve4_validate_tsc
000000000024f720 00000000000000ec T nvc0_validate_samplers
000000000024f810 0000000000000094 t nvc0_upload_tsc0
000000000024f8b0 0000000000000190 T nve4_set_tex_handles
000000000024fa40 00000000000000b4 t nvc0_mark_image_range_valid
000000000024fb00 00000000000000f0 t nve4_make_image_handle_resident
000000000024fbf0 00000000000002e8 t nve4_set_surface_info
000000000024fee0 000000000000019c t nve4_create_image_handle
0000000000250080 00000000000005b4 t nvc0_validate_suf
0000000000250640 00000000000004dc T nvc0_validate_surfaces
0000000000250b20 0000000000000088 t nvc0_init_bindless_functions
0000000000250bb0 0000000000000224 t nvc0_m2mf_copy_linear
0000000000250de0 0000000000000204 t nve4_p2mf_push_linear
0000000000250ff0 0000000000000254 t nvc0_m2mf_push_linear
0000000000251250 0000000000000190 t nve4_m2mf_copy_linear
00000000002513e0 000000000000050c t nvc0_m2mf_transfer_rect
00000000002518f0 0000000000000364 t nve4_m2mf_transfer_rect
0000000000251c60 00000000000005b8 T nvc0_miptree_transfer_map
0000000000252220 0000000000000160 T nvc0_miptree_transfer_unmap
0000000000252380 00000000000001a4 t nvc0_cb_bo_push
0000000000252530 00000000000000e8 t nvc0_cb_push
0000000000252620 000000000000007c t nvc0_init_transfer_functions
00000000002526a0 000000000000016c t nve4_upload_indirect_desc
0000000000252810 00000000000000ac t nve4_compute_validate_samplers
00000000002528c0 000000000000025c t nve4_compute_validate_buffers
0000000000252b20 0000000000000384 t nve4_compute_validate_constbufs
0000000000252eb0 00000000000001f4 t nve4_compute_set_tex_handles
00000000002530b0 000000000000048c t nve4_compute_validate_textures
0000000000253540 00000000000005ec t nve4_compute_validate_surfaces
0000000000253b30 00000000000006c0 t nve4_screen_compute_setup
00000000002541f0 0000000000000c58 T nve4_launch_grid
0000000000254e50 00000000000000f8 t env_var_as_boolean
0000000000254f50 0000000000000398 t XXH32_finalize
00000000002552f0 00000000000000f4 t hash_table_search
00000000002553f0 0000000000000020 T _mesa_hash_pointer
0000000000255410 000000000000000c T _mesa_key_pointer_equal
0000000000255420 000000000000016c t _mesa_hash_table_rehash
0000000000255590 00000000000001b8 t hash_table_insert
0000000000255750 0000000000000098 t _mesa_hash_table_create
00000000002557f0 00000000000000bc t _mesa_hash_table_destroy
00000000002558b0 0000000000000080 t _mesa_hash_table_clear
0000000000255930 0000000000000008 t _mesa_hash_table_set_deleted_key
0000000000255940 0000000000000038 t _mesa_hash_table_search
0000000000255980 0000000000000004 t _mesa_hash_table_search_pre_hashed
0000000000255990 0000000000000048 t _mesa_hash_table_insert
00000000002559e0 0000000000000004 t _mesa_hash_table_insert_pre_hashed
00000000002559f0 0000000000000020 t _mesa_hash_table_remove
0000000000255a10 0000000000000054 t _mesa_hash_table_next_entry
0000000000255a70 00000000000001e8 t _mesa_hash_data
0000000000255c60 0000000000000034 t _mesa_hash_string
0000000000255ca0 000000000000001c T _mesa_key_string_equal
0000000000255cc0 0000000000000014 t _mesa_pointer_hash_table_create
0000000000255ce0 000000000000005c t _mesa_hash_table_u64_create
0000000000255d40 00000000000000ac t _mesa_hash_table_u64_clear
0000000000255df0 000000000000003c t _mesa_hash_table_u64_destroy
0000000000255e30 0000000000000074 t _mesa_hash_table_u64_insert
0000000000255eb0 0000000000000058 t _mesa_hash_table_u64_search
0000000000255f10 000000000000009c t _mesa_hash_table_u64_remove
0000000000255fb0 0000000000000084 t resize
0000000000256040 0000000000000034 t printf_length
0000000000256080 00000000000001ec t unsafe_free
0000000000256270 0000000000000058 t ralloc_context
00000000002562d0 0000000000000058 t ralloc_size
0000000000256330 0000000000000038 t rzalloc_size
0000000000256370 0000000000000018 t reralloc_size
0000000000256390 0000000000000080 t ralloc_array_size
0000000000256410 0000000000000050 t rzalloc_array_size
0000000000256460 000000000000002c t reralloc_array_size
0000000000256490 0000000000000098 t ralloc_free
0000000000256530 00000000000000a0 t ralloc_steal
00000000002565d0 0000000000000020 t ralloc_parent
00000000002565f0 0000000000000008 t ralloc_set_destructor
0000000000256600 0000000000000070 t ralloc_strdup
0000000000256670 0000000000000074 t ralloc_strndup
00000000002566f0 0000000000000098 t ralloc_strcat
0000000000256790 00000000000000d8 t ralloc_asprintf
0000000000256870 0000000000000084 t ralloc_vasprintf
0000000000256900 000000000000014c t ralloc_vasprintf_rewrite_tail
0000000000256a50 0000000000000060 t ralloc_vasprintf_append
0000000000256ab0 000000000000006c t ralloc_asprintf_rewrite_tail
0000000000256b20 00000000000000b8 t ralloc_asprintf_append
0000000000256be0 00000000000000b4 t linear_alloc_child
0000000000256ca0 0000000000000084 t linear_alloc_parent
0000000000256d30 0000000000000038 t linear_zalloc_child
0000000000256d70 0000000000000080 t linear_strdup
0000000000256df0 00000000000000d8 t linear_asprintf
0000000000256ed0 000000000000017c t linear_vasprintf_rewrite_tail
0000000000257050 00000000000000c0 t linear_asprintf_append
0000000000257110 00000000000000dc t linear_strcat
00000000002571f0 000000000000009c t _debug_printf
0000000000257290 0000000000000040 t _debug_vprintf
00000000002572d0 0000000000000074 t _pipe_debug_message
0000000000257350 000000000000010c t debug_get_bool_option
0000000000257460 000000000000021c t debug_get_flags_option
0000000000257680 0000000000000064 t debug_dump_enum
00000000002576f0 00000000000001a0 t util_copy_rect
0000000000257890 0000000000000078 t util_format_is_float
0000000000257910 0000000000000038 t util_format_has_alpha
0000000000257950 000000000000003c t util_format_is_luminance
0000000000257990 0000000000000040 t util_format_is_alpha
00000000002579d0 0000000000000070 t util_format_is_pure_integer
0000000000257a40 0000000000000080 t util_format_is_pure_sint
0000000000257ac0 0000000000000080 t util_format_is_pure_uint
0000000000257b40 000000000000001c t util_format_is_snorm
0000000000257b60 000000000000003c t util_format_is_luminance_alpha
0000000000257ba0 0000000000000038 t util_format_is_intensity
0000000000257be0 000000000000008c t util_format_read_4f
0000000000257c70 000000000000008c t util_format_read_4ub
0000000000257d00 000000000000008c t util_format_read_4ui
0000000000257d90 000000000000008c t util_format_read_4i
0000000000257e20 0000000000000110 t util_format_apply_color_swizzle
0000000000257f30 000000000000006c t util_format_none_unpack_rgba_float
0000000000257fa0 0000000000000088 t util_format_none_pack_rgba_float
0000000000258030 000000000000001c t util_format_none_fetch_rgba_float
0000000000258050 0000000000000074 t util_format_none_unpack_rgba_8unorm
00000000002580d0 000000000000006c t util_format_none_pack_rgba_8unorm
0000000000258140 00000000000000a4 t util_format_b8g8r8a8_unorm_unpack_rgba_float
00000000002581f0 0000000000000054 t util_format_b8g8r8a8_unorm_fetch_rgba_float
0000000000258250 0000000000000078 t util_format_b8g8r8a8_unorm_unpack_rgba_8unorm
00000000002582d0 000000000000007c t util_format_b8g8r8a8_unorm_pack_rgba_8unorm
0000000000258350 000000000000009c t util_format_b8g8r8x8_unorm_unpack_rgba_float
00000000002583f0 000000000000004c t util_format_b8g8r8x8_unorm_fetch_rgba_float
0000000000258440 0000000000000074 t util_format_b8g8r8x8_unorm_unpack_rgba_8unorm
00000000002584c0 0000000000000074 t util_format_b8g8r8x8_unorm_pack_rgba_8unorm
0000000000258540 00000000000000a4 t util_format_a8r8g8b8_unorm_unpack_rgba_float
00000000002585f0 0000000000000054 t util_format_a8r8g8b8_unorm_fetch_rgba_float
0000000000258650 0000000000000078 t util_format_a8r8g8b8_unorm_unpack_rgba_8unorm
00000000002586d0 000000000000007c t util_format_a8r8g8b8_unorm_pack_rgba_8unorm
0000000000258750 000000000000009c t util_format_x8r8g8b8_unorm_unpack_rgba_float
00000000002587f0 000000000000004c t util_format_x8r8g8b8_unorm_fetch_rgba_float
0000000000258840 0000000000000078 t util_format_x8r8g8b8_unorm_unpack_rgba_8unorm
00000000002588c0 0000000000000074 t util_format_x8r8g8b8_unorm_pack_rgba_8unorm
0000000000258940 00000000000000a4 t util_format_a8b8g8r8_unorm_unpack_rgba_float
00000000002589f0 0000000000000054 t util_format_a8b8g8r8_unorm_fetch_rgba_float
0000000000258a50 0000000000000078 t util_format_a8b8g8r8_unorm_unpack_rgba_8unorm
0000000000258ad0 0000000000000048 t util_format_a8b8g8r8_unorm_pack_rgba_8unorm
0000000000258b20 000000000000009c t util_format_x8b8g8r8_unorm_unpack_rgba_float
0000000000258bc0 0000000000000050 t util_format_x8b8g8r8_unorm_fetch_rgba_float
0000000000258c10 0000000000000078 t util_format_x8b8g8r8_unorm_unpack_rgba_8unorm
0000000000258c90 0000000000000070 t util_format_x8b8g8r8_unorm_pack_rgba_8unorm
0000000000258d00 000000000000009c t util_format_r8g8b8x8_unorm_unpack_rgba_float
0000000000258da0 000000000000004c t util_format_r8g8b8x8_unorm_fetch_rgba_float
0000000000258df0 0000000000000074 t util_format_r8g8b8x8_unorm_unpack_rgba_8unorm
0000000000258e70 0000000000000070 t util_format_r8g8b8x8_unorm_pack_rgba_8unorm
0000000000258ee0 000000000000009c t util_format_r5g5b5a1_unorm_unpack_rgba_float
0000000000258f80 000000000000017c t util_format_r5g5b5a1_unorm_pack_rgba_float
0000000000259100 000000000000004c t util_format_r5g5b5a1_unorm_fetch_rgba_float
0000000000259150 00000000000000d8 t util_format_r5g5b5a1_unorm_unpack_rgba_8unorm
0000000000259230 0000000000000090 t util_format_r5g5b5a1_unorm_pack_rgba_8unorm
00000000002592c0 0000000000000098 t util_format_b5g5r5x1_unorm_unpack_rgba_float
0000000000259360 0000000000000150 t util_format_b5g5r5x1_unorm_pack_rgba_float
00000000002594b0 0000000000000048 t util_format_b5g5r5x1_unorm_fetch_rgba_float
0000000000259500 00000000000000d4 t util_format_b5g5r5x1_unorm_unpack_rgba_8unorm
00000000002595e0 000000000000007c t util_format_b5g5r5x1_unorm_pack_rgba_8unorm
0000000000259660 000000000000009c t util_format_b5g5r5a1_unorm_unpack_rgba_float
0000000000259700 000000000000017c t util_format_b5g5r5a1_unorm_pack_rgba_float
0000000000259880 000000000000004c t util_format_b5g5r5a1_unorm_fetch_rgba_float
00000000002598d0 00000000000000d8 t util_format_b5g5r5a1_unorm_unpack_rgba_8unorm
00000000002599b0 000000000000008c t util_format_b5g5r5a1_unorm_pack_rgba_8unorm
0000000000259a40 000000000000009c t util_format_x1b5g5r5_unorm_unpack_rgba_float
0000000000259ae0 0000000000000150 t util_format_x1b5g5r5_unorm_pack_rgba_float
0000000000259c30 0000000000000050 t util_format_x1b5g5r5_unorm_fetch_rgba_float
0000000000259c80 00000000000000d4 t util_format_x1b5g5r5_unorm_unpack_rgba_8unorm
0000000000259d60 0000000000000084 t util_format_x1b5g5r5_unorm_pack_rgba_8unorm
0000000000259df0 000000000000009c t util_format_a1r5g5b5_unorm_unpack_rgba_float
0000000000259e90 0000000000000180 t util_format_a1r5g5b5_unorm_pack_rgba_float
000000000025a010 000000000000004c t util_format_a1r5g5b5_unorm_fetch_rgba_float
000000000025a060 00000000000000d8 t util_format_a1r5g5b5_unorm_unpack_rgba_8unorm
000000000025a140 0000000000000090 t util_format_a1r5g5b5_unorm_pack_rgba_8unorm
000000000025a1d0 000000000000009c t util_format_a1b5g5r5_unorm_unpack_rgba_float
000000000025a270 0000000000000180 t util_format_a1b5g5r5_unorm_pack_rgba_float
000000000025a3f0 000000000000004c t util_format_a1b5g5r5_unorm_fetch_rgba_float
000000000025a440 00000000000000d8 t util_format_a1b5g5r5_unorm_unpack_rgba_8unorm
000000000025a520 0000000000000090 t util_format_a1b5g5r5_unorm_pack_rgba_8unorm
000000000025a5b0 00000000000000a0 t util_format_r4g4b4a4_unorm_unpack_rgba_float
000000000025a650 00000000000001a0 t util_format_r4g4b4a4_unorm_pack_rgba_float
000000000025a7f0 0000000000000050 t util_format_r4g4b4a4_unorm_fetch_rgba_float
000000000025a840 00000000000000c4 t util_format_r4g4b4a4_unorm_unpack_rgba_8unorm
000000000025a910 000000000000008c t util_format_r4g4b4a4_unorm_pack_rgba_8unorm
000000000025a9a0 00000000000000a0 t util_format_b4g4r4a4_unorm_unpack_rgba_float
000000000025aa40 00000000000001a0 t util_format_b4g4r4a4_unorm_pack_rgba_float
000000000025abe0 0000000000000050 t util_format_b4g4r4a4_unorm_fetch_rgba_float
000000000025ac30 00000000000000c4 t util_format_b4g4r4a4_unorm_unpack_rgba_8unorm
000000000025ad00 0000000000000088 t util_format_b4g4r4a4_unorm_pack_rgba_8unorm
000000000025ad90 0000000000000098 t util_format_b4g4r4x4_unorm_unpack_rgba_float
000000000025ae30 0000000000000150 t util_format_b4g4r4x4_unorm_pack_rgba_float
000000000025af80 0000000000000048 t util_format_b4g4r4x4_unorm_fetch_rgba_float
000000000025afd0 00000000000000b0 t util_format_b4g4r4x4_unorm_unpack_rgba_8unorm
000000000025b080 0000000000000078 t util_format_b4g4r4x4_unorm_pack_rgba_8unorm
000000000025b100 00000000000000a0 t util_format_a4r4g4b4_unorm_unpack_rgba_float
000000000025b1a0 00000000000001a0 t util_format_a4r4g4b4_unorm_pack_rgba_float
000000000025b340 0000000000000050 t util_format_a4r4g4b4_unorm_fetch_rgba_float
000000000025b390 00000000000000c4 t util_format_a4r4g4b4_unorm_unpack_rgba_8unorm
000000000025b460 000000000000008c t util_format_a4r4g4b4_unorm_pack_rgba_8unorm
000000000025b4f0 00000000000000a0 t util_format_a4b4g4r4_unorm_unpack_rgba_float
000000000025b590 00000000000001a0 t util_format_a4b4g4r4_unorm_pack_rgba_float
000000000025b730 0000000000000050 t util_format_a4b4g4r4_unorm_fetch_rgba_float
000000000025b780 00000000000000c4 t util_format_a4b4g4r4_unorm_unpack_rgba_8unorm
000000000025b850 000000000000008c t util_format_a4b4g4r4_unorm_pack_rgba_8unorm
000000000025b8e0 00000000000000a4 t util_format_r5g6b5_unorm_unpack_rgba_float
000000000025b990 0000000000000158 t util_format_r5g6b5_unorm_pack_rgba_float
000000000025baf0 0000000000000058 t util_format_r5g6b5_unorm_fetch_rgba_float
000000000025bb50 00000000000000dc t util_format_r5g6b5_unorm_unpack_rgba_8unorm
000000000025bc30 0000000000000080 t util_format_r5g6b5_unorm_pack_rgba_8unorm
000000000025bcb0 00000000000000a4 t util_format_b5g6r5_unorm_unpack_rgba_float
000000000025bd60 0000000000000158 t util_format_b5g6r5_unorm_pack_rgba_float
000000000025bec0 0000000000000054 t util_format_b5g6r5_unorm_fetch_rgba_float
000000000025bf20 00000000000000dc t util_format_b5g6r5_unorm_unpack_rgba_8unorm
000000000025c000 000000000000007c t util_format_b5g6r5_unorm_pack_rgba_8unorm
000000000025c080 00000000000000b0 t util_format_r10g10b10a2_unorm_unpack_rgba_float
000000000025c130 00000000000001a8 t util_format_r10g10b10a2_unorm_pack_rgba_float
000000000025c2e0 000000000000005c t util_format_r10g10b10a2_unorm_fetch_rgba_float
000000000025c340 0000000000000094 t util_format_r10g10b10a2_unorm_unpack_rgba_8unorm
000000000025c3e0 00000000000000b8 t util_format_r10g10b10a2_unorm_pack_rgba_8unorm
000000000025c4a0 0000000000000098 t util_format_r10g10b10x2_unorm_unpack_rgba_float
000000000025c540 0000000000000158 t util_format_r10g10b10x2_unorm_pack_rgba_float
000000000025c6a0 0000000000000048 t util_format_r10g10b10x2_unorm_fetch_rgba_float
000000000025c6f0 0000000000000078 t util_format_r10g10b10x2_unorm_unpack_rgba_8unorm
000000000025c770 00000000000000a8 t util_format_r10g10b10x2_unorm_pack_rgba_8unorm
000000000025c820 00000000000000b0 t util_format_b10g10r10a2_unorm_unpack_rgba_float
000000000025c8d0 00000000000001a8 t util_format_b10g10r10a2_unorm_pack_rgba_float
000000000025ca80 000000000000005c t util_format_b10g10r10a2_unorm_fetch_rgba_float
000000000025cae0 0000000000000094 t util_format_b10g10r10a2_unorm_unpack_rgba_8unorm
000000000025cb80 00000000000000b8 t util_format_b10g10r10a2_unorm_pack_rgba_8unorm
000000000025cc40 00000000000000b0 t util_format_a2r10g10b10_unorm_unpack_rgba_float
000000000025ccf0 00000000000001a8 t util_format_a2r10g10b10_unorm_pack_rgba_float
000000000025cea0 000000000000005c t util_format_a2r10g10b10_unorm_fetch_rgba_float
000000000025cf00 0000000000000094 t util_format_a2r10g10b10_unorm_unpack_rgba_8unorm
000000000025cfa0 00000000000000b8 t util_format_a2r10g10b10_unorm_pack_rgba_8unorm
000000000025d060 00000000000000b0 t util_format_a2b10g10r10_unorm_unpack_rgba_float
000000000025d110 00000000000001a8 t util_format_a2b10g10r10_unorm_pack_rgba_float
000000000025d2c0 000000000000005c t util_format_a2b10g10r10_unorm_fetch_rgba_float
000000000025d320 0000000000000094 t util_format_a2b10g10r10_unorm_unpack_rgba_8unorm
000000000025d3c0 00000000000000b8 t util_format_a2b10g10r10_unorm_pack_rgba_8unorm
000000000025d480 00000000000000a4 t util_format_r3g3b2_unorm_unpack_rgba_float
000000000025d530 0000000000000158 t util_format_r3g3b2_unorm_pack_rgba_float
000000000025d690 0000000000000058 t util_format_r3g3b2_unorm_fetch_rgba_float
000000000025d6f0 00000000000000d0 t util_format_r3g3b2_unorm_unpack_rgba_8unorm
000000000025d7c0 0000000000000078 t util_format_r3g3b2_unorm_pack_rgba_8unorm
000000000025d840 00000000000000a4 t util_format_b2g3r3_unorm_unpack_rgba_float
000000000025d8f0 0000000000000158 t util_format_b2g3r3_unorm_pack_rgba_float
000000000025da50 000000000000005c t util_format_b2g3r3_unorm_fetch_rgba_float
000000000025dab0 00000000000000d0 t util_format_b2g3r3_unorm_unpack_rgba_8unorm
000000000025db80 000000000000007c t util_format_b2g3r3_unorm_pack_rgba_8unorm
000000000025dc00 000000000000007c t util_format_l8_unorm_unpack_rgba_float
000000000025dc80 0000000000000028 t util_format_l8_unorm_fetch_rgba_float
000000000025dcb0 000000000000006c t util_format_l8_unorm_unpack_rgba_8unorm
000000000025dd20 000000000000005c t util_format_l8_unorm_pack_rgba_8unorm
000000000025dd80 0000000000000078 t util_format_a8_unorm_unpack_rgba_float
000000000025de00 0000000000000028 t util_format_a8_unorm_fetch_rgba_float
000000000025de30 000000000000006c t util_format_a8_unorm_unpack_rgba_8unorm
000000000025dea0 0000000000000060 t util_format_a8_unorm_pack_rgba_8unorm
000000000025df00 0000000000000074 t util_format_i8_unorm_unpack_rgba_float
000000000025df80 0000000000000024 t util_format_i8_unorm_fetch_rgba_float
000000000025dfb0 000000000000006c t util_format_i8_unorm_unpack_rgba_8unorm
000000000025e020 0000000000000088 t util_format_l4a4_unorm_unpack_rgba_float
000000000025e0b0 0000000000000100 t util_format_l4a4_unorm_pack_rgba_float
000000000025e1b0 0000000000000038 t util_format_l4a4_unorm_fetch_rgba_float
000000000025e1f0 000000000000009c t util_format_l4a4_unorm_unpack_rgba_8unorm
000000000025e290 000000000000006c t util_format_l4a4_unorm_pack_rgba_8unorm
000000000025e300 000000000000008c t util_format_l8a8_unorm_unpack_rgba_float
000000000025e390 000000000000003c t util_format_l8a8_unorm_fetch_rgba_float
000000000025e3d0 0000000000000074 t util_format_l8a8_unorm_unpack_rgba_8unorm
000000000025e450 0000000000000068 t util_format_l8a8_unorm_pack_rgba_8unorm
000000000025e4c0 000000000000007c t util_format_l16_unorm_unpack_rgba_float
000000000025e540 00000000000000b8 t util_format_l16_unorm_pack_rgba_float
000000000025e600 0000000000000028 t util_format_l16_unorm_fetch_rgba_float
000000000025e630 0000000000000070 t util_format_l16_unorm_unpack_rgba_8unorm
000000000025e6a0 0000000000000074 t util_format_l16_unorm_pack_rgba_8unorm
000000000025e720 0000000000000078 t util_format_a16_unorm_unpack_rgba_float
000000000025e7a0 00000000000000b8 t util_format_a16_unorm_pack_rgba_float
000000000025e860 0000000000000028 t util_format_a16_unorm_fetch_rgba_float
000000000025e890 0000000000000070 t util_format_a16_unorm_unpack_rgba_8unorm
000000000025e900 0000000000000078 t util_format_a16_unorm_pack_rgba_8unorm
000000000025e980 0000000000000074 t util_format_i16_unorm_unpack_rgba_float
000000000025ea00 0000000000000024 t util_format_i16_unorm_fetch_rgba_float
000000000025ea30 0000000000000070 t util_format_i16_unorm_unpack_rgba_8unorm
000000000025eaa0 0000000000000088 t util_format_l16a16_unorm_unpack_rgba_float
000000000025eb30 0000000000000104 t util_format_l16a16_unorm_pack_rgba_float
000000000025ec40 0000000000000038 t util_format_l16a16_unorm_fetch_rgba_float
000000000025ec80 0000000000000074 t util_format_l16a16_unorm_unpack_rgba_8unorm
000000000025ed00 000000000000008c t util_format_l16a16_unorm_pack_rgba_8unorm
000000000025ed90 0000000000000078 t util_format_a8_snorm_unpack_rgba_float
000000000025ee10 00000000000000b8 t util_format_a8_snorm_pack_rgba_float
000000000025eed0 0000000000000028 t util_format_a8_snorm_fetch_rgba_float
000000000025ef00 0000000000000098 t util_format_a8_snorm_unpack_rgba_8unorm
000000000025efa0 0000000000000064 t util_format_a8_snorm_pack_rgba_8unorm
000000000025f010 000000000000007c t util_format_l8_snorm_unpack_rgba_float
000000000025f090 00000000000000b8 t util_format_l8_snorm_pack_rgba_float
000000000025f150 000000000000002c t util_format_l8_snorm_fetch_rgba_float
000000000025f180 000000000000009c t util_format_l8_snorm_unpack_rgba_8unorm
000000000025f220 0000000000000060 t util_format_l8_snorm_pack_rgba_8unorm
000000000025f280 0000000000000084 t util_format_l8a8_snorm_unpack_rgba_float
000000000025f310 0000000000000108 t util_format_l8a8_snorm_pack_rgba_float
000000000025f420 0000000000000034 t util_format_l8a8_snorm_fetch_rgba_float
000000000025f460 00000000000000c4 t util_format_l8a8_snorm_unpack_rgba_8unorm
000000000025f530 0000000000000070 t util_format_l8a8_snorm_pack_rgba_8unorm
000000000025f5a0 0000000000000074 t util_format_i8_snorm_unpack_rgba_float
000000000025f620 0000000000000024 t util_format_i8_snorm_fetch_rgba_float
000000000025f650 000000000000009c t util_format_i8_snorm_unpack_rgba_8unorm
000000000025f6f0 0000000000000078 t util_format_a16_snorm_unpack_rgba_float
000000000025f770 00000000000000c0 t util_format_a16_snorm_pack_rgba_float
000000000025f830 0000000000000028 t util_format_a16_snorm_fetch_rgba_float
000000000025f860 0000000000000078 t util_format_a16_snorm_unpack_rgba_8unorm
000000000025f8e0 0000000000000078 t util_format_a16_snorm_pack_rgba_8unorm
000000000025f960 000000000000007c t util_format_l16_snorm_unpack_rgba_float
000000000025f9e0 00000000000000c0 t util_format_l16_snorm_pack_rgba_float
000000000025faa0 000000000000002c t util_format_l16_snorm_fetch_rgba_float
000000000025fad0 000000000000007c t util_format_l16_snorm_unpack_rgba_8unorm
000000000025fb50 0000000000000074 t util_format_l16_snorm_pack_rgba_8unorm
000000000025fbd0 0000000000000088 t util_format_l16a16_snorm_unpack_rgba_float
000000000025fc60 0000000000000114 t util_format_l16a16_snorm_pack_rgba_float
000000000025fd80 0000000000000038 t util_format_l16a16_snorm_fetch_rgba_float
000000000025fdc0 000000000000008c t util_format_l16a16_snorm_unpack_rgba_8unorm
000000000025fe50 000000000000008c t util_format_l16a16_snorm_pack_rgba_8unorm
000000000025fee0 0000000000000074 t util_format_i16_snorm_unpack_rgba_float
000000000025ff60 0000000000000024 t util_format_i16_snorm_fetch_rgba_float
000000000025ff90 000000000000007c t util_format_i16_snorm_unpack_rgba_8unorm
0000000000260010 00000000000000a8 t util_format_a16_float_unpack_rgba_float
00000000002600c0 0000000000000060 t util_format_a16_float_fetch_rgba_float
0000000000260120 00000000000000a8 t util_format_l16_float_unpack_rgba_float
00000000002601d0 0000000000000070 t util_format_l16_float_fetch_rgba_float
0000000000260240 00000000000000dc t util_format_l16a16_float_unpack_rgba_float
0000000000260320 00000000000000a4 t util_format_l16a16_float_fetch_rgba_float
00000000002603d0 00000000000000a8 t util_format_i16_float_unpack_rgba_float
0000000000260480 0000000000000068 t util_format_i16_float_fetch_rgba_float
00000000002604f0 0000000000000068 t util_format_a32_float_unpack_rgba_float
0000000000260560 0000000000000054 t util_format_a32_float_pack_rgba_float
00000000002605c0 0000000000000014 t util_format_a32_float_fetch_rgba_float
00000000002605e0 000000000000006c t util_format_a32_float_pack_rgba_8unorm
0000000000260650 0000000000000068 t util_format_l32_float_unpack_rgba_float
00000000002606c0 0000000000000054 t util_format_l32_float_pack_rgba_float
0000000000260720 0000000000000014 t util_format_l32_float_fetch_rgba_float
0000000000260740 0000000000000064 t util_format_l32_float_pack_rgba_8unorm
00000000002607b0 0000000000000070 t util_format_l32a32_float_unpack_rgba_float
0000000000260820 000000000000006c t util_format_l32a32_float_pack_rgba_float
0000000000260890 000000000000001c t util_format_l32a32_float_fetch_rgba_float
00000000002608b0 000000000000008c t util_format_l32a32_float_pack_rgba_8unorm
0000000000260940 0000000000000068 t util_format_i32_float_unpack_rgba_float
00000000002609b0 0000000000000010 t util_format_i32_float_fetch_rgba_float
00000000002609c0 0000000000000070 t util_format_l8_srgb_unpack_rgba_float
0000000000260a30 0000000000000024 t util_format_l8_srgb_fetch_rgba_float
0000000000260a60 0000000000000078 t util_format_l8_srgb_unpack_rgba_8unorm
0000000000260ae0 0000000000000068 t util_format_l8_srgb_pack_rgba_8unorm
0000000000260b50 0000000000000074 t util_format_r8_srgb_unpack_rgba_float
0000000000260bd0 0000000000000024 t util_format_r8_srgb_fetch_rgba_float
0000000000260c00 0000000000000078 t util_format_r8_srgb_unpack_rgba_8unorm
0000000000260c80 000000000000008c t util_format_l8a8_srgb_unpack_rgba_float
0000000000260d10 000000000000003c t util_format_l8a8_srgb_fetch_rgba_float
0000000000260d50 0000000000000080 t util_format_l8a8_srgb_unpack_rgba_8unorm
0000000000260dd0 0000000000000078 t util_format_l8a8_srgb_pack_rgba_8unorm
0000000000260e50 0000000000000080 t util_format_r8g8_srgb_unpack_rgba_float
0000000000260ed0 000000000000002c t util_format_r8g8_srgb_fetch_rgba_float
0000000000260f00 0000000000000084 t util_format_r8g8_srgb_unpack_rgba_8unorm
0000000000260f90 0000000000000078 t util_format_r8g8_srgb_pack_rgba_8unorm
0000000000261010 0000000000000080 t util_format_r8g8b8_srgb_unpack_rgba_float
0000000000261090 0000000000000034 t util_format_r8g8b8_srgb_fetch_rgba_float
00000000002610d0 0000000000000088 t util_format_r8g8b8_srgb_unpack_rgba_8unorm
0000000000261160 0000000000000084 t util_format_r8g8b8_srgb_pack_rgba_8unorm
00000000002611f0 0000000000000084 t util_format_b8g8r8_srgb_unpack_rgba_float
0000000000261280 0000000000000034 t util_format_b8g8r8_srgb_fetch_rgba_float
00000000002612c0 000000000000008c t util_format_b8g8r8_srgb_unpack_rgba_8unorm
0000000000261350 0000000000000088 t util_format_b8g8r8_srgb_pack_rgba_8unorm
00000000002613e0 000000000000009c t util_format_r8g8b8a8_srgb_unpack_rgba_float
0000000000261480 000000000000004c t util_format_r8g8b8a8_srgb_fetch_rgba_float
00000000002614d0 0000000000000090 t util_format_r8g8b8a8_srgb_unpack_rgba_8unorm
0000000000261560 0000000000000090 t util_format_r8g8b8a8_srgb_pack_rgba_8unorm
00000000002615f0 000000000000009c t util_format_a8b8g8r8_srgb_unpack_rgba_float
0000000000261690 000000000000004c t util_format_a8b8g8r8_srgb_fetch_rgba_float
00000000002616e0 000000000000008c t util_format_a8b8g8r8_srgb_unpack_rgba_8unorm
0000000000261770 0000000000000090 t util_format_a8b8g8r8_srgb_pack_rgba_8unorm
0000000000261800 0000000000000084 t util_format_x8b8g8r8_srgb_unpack_rgba_float
0000000000261890 0000000000000038 t util_format_x8b8g8r8_srgb_fetch_rgba_float
00000000002618d0 000000000000008c t util_format_x8b8g8r8_srgb_unpack_rgba_8unorm
0000000000261960 0000000000000084 t util_format_x8b8g8r8_srgb_pack_rgba_8unorm
00000000002619f0 000000000000009c t util_format_b8g8r8a8_srgb_unpack_rgba_float
0000000000261a90 000000000000004c t util_format_b8g8r8a8_srgb_fetch_rgba_float
0000000000261ae0 0000000000000090 t util_format_b8g8r8a8_srgb_unpack_rgba_8unorm
0000000000261b70 0000000000000090 t util_format_b8g8r8a8_srgb_pack_rgba_8unorm
0000000000261c00 0000000000000084 t util_format_b8g8r8x8_srgb_unpack_rgba_float
0000000000261c90 0000000000000038 t util_format_b8g8r8x8_srgb_fetch_rgba_float
0000000000261cd0 000000000000008c t util_format_b8g8r8x8_srgb_unpack_rgba_8unorm
0000000000261d60 0000000000000088 t util_format_b8g8r8x8_srgb_pack_rgba_8unorm
0000000000261df0 000000000000009c t util_format_a8r8g8b8_srgb_unpack_rgba_float
0000000000261e90 000000000000004c t util_format_a8r8g8b8_srgb_fetch_rgba_float
0000000000261ee0 000000000000008c t util_format_a8r8g8b8_srgb_unpack_rgba_8unorm
0000000000261f70 0000000000000090 t util_format_a8r8g8b8_srgb_pack_rgba_8unorm
0000000000262000 0000000000000084 t util_format_x8r8g8b8_srgb_unpack_rgba_float
0000000000262090 0000000000000038 t util_format_x8r8g8b8_srgb_fetch_rgba_float
00000000002620d0 000000000000008c t util_format_x8r8g8b8_srgb_unpack_rgba_8unorm
0000000000262160 0000000000000088 t util_format_x8r8g8b8_srgb_pack_rgba_8unorm
00000000002621f0 00000000000000a0 t util_format_r8sg8sb8ux8u_norm_unpack_rgba_float
0000000000262290 0000000000000054 t util_format_r8sg8sb8ux8u_norm_fetch_rgba_float
00000000002622f0 00000000000000c8 t util_format_r8sg8sb8ux8u_norm_unpack_rgba_8unorm
00000000002623c0 0000000000000078 t util_format_r8sg8sb8ux8u_norm_pack_rgba_8unorm
0000000000262440 00000000000000b0 t util_format_r10sg10sb10sa2u_norm_unpack_rgba_float
00000000002624f0 00000000000001b0 t util_format_r10sg10sb10sa2u_norm_pack_rgba_float
00000000002626a0 000000000000005c t util_format_r10sg10sb10sa2u_norm_fetch_rgba_float
0000000000262700 00000000000000b8 t util_format_r10sg10sb10sa2u_norm_unpack_rgba_8unorm
00000000002627c0 00000000000000b8 t util_format_r10sg10sb10sa2u_norm_pack_rgba_8unorm
0000000000262880 00000000000000a4 t util_format_r5sg5sb6u_norm_unpack_rgba_float
0000000000262930 0000000000000160 t util_format_r5sg5sb6u_norm_pack_rgba_float
0000000000262a90 0000000000000058 t util_format_r5sg5sb6u_norm_fetch_rgba_float
0000000000262af0 00000000000000d4 t util_format_r5sg5sb6u_norm_unpack_rgba_8unorm
0000000000262bd0 000000000000007c t util_format_r5sg5sb6u_norm_pack_rgba_8unorm
0000000000262c50 00000000000000a4 t util_format_z24_unorm_s8_uint_as_r8g8b8a8_unpack_rgba_float
0000000000262d00 0000000000000054 t util_format_z24_unorm_s8_uint_as_r8g8b8a8_fetch_rgba_float
0000000000262d60 0000000000000078 t util_format_z24_unorm_s8_uint_as_r8g8b8a8_unpack_rgba_8unorm
0000000000262de0 0000000000000044 t util_format_z24_unorm_s8_uint_as_r8g8b8a8_pack_rgba_8unorm
0000000000262e30 000000000000006c t util_format_r64_float_unpack_rgba_float
0000000000262ea0 000000000000004c t util_format_r64_float_pack_rgba_float
0000000000262ef0 000000000000001c t util_format_r64_float_fetch_rgba_float
0000000000262f10 00000000000000d4 t util_format_r64_float_unpack_rgba_8unorm
0000000000262ff0 0000000000000064 t util_format_r64_float_pack_rgba_8unorm
0000000000263060 0000000000000074 t util_format_r64g64_float_unpack_rgba_float
00000000002630e0 000000000000006c t util_format_r64g64_float_pack_rgba_float
0000000000263150 000000000000001c t util_format_r64g64_float_fetch_rgba_float
0000000000263170 0000000000000128 t util_format_r64g64_float_unpack_rgba_8unorm
00000000002632a0 0000000000000088 t util_format_r64g64_float_pack_rgba_8unorm
0000000000263330 0000000000000068 t util_format_r32_float_unpack_rgba_float
00000000002633a0 0000000000000018 t util_format_r32_float_fetch_rgba_float
00000000002633c0 0000000000000074 t util_format_r32g32_float_unpack_rgba_float
0000000000263440 0000000000000068 t util_format_r32g32_float_pack_rgba_float
00000000002634b0 000000000000001c t util_format_r32g32_float_fetch_rgba_float
00000000002634d0 000000000000008c t util_format_r32g32_float_pack_rgba_8unorm
0000000000263560 000000000000007c t util_format_r32g32b32a32_float_unpack_rgba_float
00000000002635e0 000000000000007c t util_format_r32g32b32a32_float_pack_rgba_float
0000000000263660 0000000000000024 t util_format_r32g32b32a32_float_fetch_rgba_float
0000000000263690 00000000000000b8 t util_format_r32g32b32a32_float_pack_rgba_8unorm
0000000000263750 0000000000000084 t util_format_r32_unorm_unpack_rgba_float
00000000002637e0 000000000000008c t util_format_r32_unorm_pack_rgba_float
0000000000263870 0000000000000030 t util_format_r32_unorm_fetch_rgba_float
00000000002638a0 0000000000000070 t util_format_r32_unorm_unpack_rgba_8unorm
0000000000263910 000000000000006c t util_format_r32_unorm_pack_rgba_8unorm
0000000000263980 0000000000000094 t util_format_r32g32_unorm_unpack_rgba_float
0000000000263a20 00000000000000cc t util_format_r32g32_unorm_pack_rgba_float
0000000000263af0 000000000000003c t util_format_r32g32_unorm_fetch_rgba_float
0000000000263b30 0000000000000074 t util_format_r32g32_unorm_unpack_rgba_8unorm
0000000000263bb0 0000000000000094 t util_format_r32g32_unorm_pack_rgba_8unorm
0000000000263c50 00000000000000a8 t util_format_r32g32b32a32_unorm_unpack_rgba_float
0000000000263d00 0000000000000134 t util_format_r32g32b32a32_unorm_pack_rgba_float
0000000000263e40 0000000000000054 t util_format_r32g32b32a32_unorm_fetch_rgba_float
0000000000263ea0 0000000000000080 t util_format_r32g32b32a32_unorm_unpack_rgba_8unorm
0000000000263f20 00000000000000c8 t util_format_r32g32b32a32_unorm_pack_rgba_8unorm
0000000000263ff0 000000000000006c t util_format_r32_uscaled_unpack_rgba_float
0000000000264060 0000000000000078 t util_format_r32_uscaled_pack_rgba_float
00000000002640e0 000000000000001c t util_format_r32_uscaled_fetch_rgba_float
0000000000264100 0000000000000074 t util_format_r32_uscaled_unpack_rgba_8unorm
0000000000264180 0000000000000064 t util_format_r32_uscaled_pack_rgba_8unorm
00000000002641f0 0000000000000074 t util_format_r32g32_uscaled_unpack_rgba_float
0000000000264270 00000000000000ac t util_format_r32g32_uscaled_pack_rgba_float
0000000000264320 0000000000000020 t util_format_r32g32_uscaled_fetch_rgba_float
0000000000264340 000000000000007c t util_format_r32g32_uscaled_unpack_rgba_8unorm
00000000002643c0 0000000000000084 t util_format_r32g32_uscaled_pack_rgba_8unorm
0000000000264450 0000000000000080 t util_format_r32g32b32a32_uscaled_unpack_rgba_float
00000000002644d0 00000000000000fc t util_format_r32g32b32a32_uscaled_pack_rgba_float
00000000002645d0 0000000000000028 t util_format_r32g32b32a32_uscaled_fetch_rgba_float
0000000000264600 0000000000000090 t util_format_r32g32b32a32_uscaled_unpack_rgba_8unorm
0000000000264690 00000000000000a8 t util_format_r32g32b32a32_uscaled_pack_rgba_8unorm
0000000000264740 0000000000000084 t util_format_r32_snorm_unpack_rgba_float
00000000002647d0 000000000000008c t util_format_r32_snorm_pack_rgba_float
0000000000264860 0000000000000030 t util_format_r32_snorm_fetch_rgba_float
0000000000264890 0000000000000078 t util_format_r32_snorm_unpack_rgba_8unorm
0000000000264910 000000000000006c t util_format_r32_snorm_pack_rgba_8unorm
0000000000264980 0000000000000094 t util_format_r32g32_snorm_unpack_rgba_float
0000000000264a20 00000000000000cc t util_format_r32g32_snorm_pack_rgba_float
0000000000264af0 000000000000003c t util_format_r32g32_snorm_fetch_rgba_float
0000000000264b30 0000000000000088 t util_format_r32g32_snorm_unpack_rgba_8unorm
0000000000264bc0 0000000000000094 t util_format_r32g32_snorm_pack_rgba_8unorm
0000000000264c60 00000000000000a8 t util_format_r32g32b32a32_snorm_unpack_rgba_float
0000000000264d10 0000000000000134 t util_format_r32g32b32a32_snorm_pack_rgba_float
0000000000264e50 0000000000000054 t util_format_r32g32b32a32_snorm_fetch_rgba_float
0000000000264eb0 00000000000000a8 t util_format_r32g32b32a32_snorm_unpack_rgba_8unorm
0000000000264f60 00000000000000c8 t util_format_r32g32b32a32_snorm_pack_rgba_8unorm
0000000000265030 000000000000006c t util_format_r32_sscaled_unpack_rgba_float
00000000002650a0 0000000000000078 t util_format_r32_sscaled_pack_rgba_float
0000000000265120 000000000000001c t util_format_r32_sscaled_fetch_rgba_float
0000000000265140 0000000000000074 t util_format_r32_sscaled_unpack_rgba_8unorm
00000000002651c0 0000000000000074 t util_format_r32g32_sscaled_unpack_rgba_float
0000000000265240 00000000000000ac t util_format_r32g32_sscaled_pack_rgba_float
00000000002652f0 0000000000000020 t util_format_r32g32_sscaled_fetch_rgba_float
0000000000265310 0000000000000080 t util_format_r32g32_sscaled_unpack_rgba_8unorm
0000000000265390 0000000000000084 t util_format_r32g32_sscaled_pack_rgba_8unorm
0000000000265420 0000000000000080 t util_format_r32g32b32a32_sscaled_unpack_rgba_float
00000000002654a0 00000000000000fc t util_format_r32g32b32a32_sscaled_pack_rgba_float
00000000002655a0 0000000000000028 t util_format_r32g32b32a32_sscaled_fetch_rgba_float
00000000002655d0 0000000000000098 t util_format_r32g32b32a32_sscaled_unpack_rgba_8unorm
0000000000265670 00000000000000a8 t util_format_r32g32b32a32_sscaled_pack_rgba_8unorm
0000000000265720 00000000000000ac t util_format_r16_float_unpack_rgba_float
00000000002657d0 0000000000000070 t util_format_r16_float_fetch_rgba_float
0000000000265840 00000000000000e0 t util_format_r16g16_float_unpack_rgba_float
0000000000265920 00000000000000ac t util_format_r16g16_float_fetch_rgba_float
00000000002659d0 0000000000000144 t util_format_r16g16b16a16_float_unpack_rgba_float
0000000000265b20 0000000000000128 t util_format_r16g16b16a16_float_fetch_rgba_float
0000000000265c50 0000000000000080 t util_format_r16_unorm_unpack_rgba_float
0000000000265cd0 000000000000002c t util_format_r16_unorm_fetch_rgba_float
0000000000265d00 0000000000000070 t util_format_r16_unorm_unpack_rgba_8unorm
0000000000265d70 0000000000000094 t util_format_r16g16_unorm_unpack_rgba_float
0000000000265e10 0000000000000104 t util_format_r16g16_unorm_pack_rgba_float
0000000000265f20 000000000000003c t util_format_r16g16_unorm_fetch_rgba_float
0000000000265f60 0000000000000074 t util_format_r16g16_unorm_unpack_rgba_8unorm
0000000000265fe0 000000000000008c t util_format_r16g16_unorm_pack_rgba_8unorm
0000000000266070 00000000000000a8 t util_format_r16g16b16a16_unorm_unpack_rgba_float
0000000000266120 00000000000001ac t util_format_r16g16b16a16_unorm_pack_rgba_float
00000000002662d0 0000000000000058 t util_format_r16g16b16a16_unorm_fetch_rgba_float
0000000000266330 000000000000007c t util_format_r16g16b16a16_unorm_unpack_rgba_8unorm
00000000002663b0 00000000000000c4 t util_format_r16g16b16a16_unorm_pack_rgba_8unorm
0000000000266480 000000000000006c t util_format_r16_uscaled_unpack_rgba_float
00000000002664f0 0000000000000090 t util_format_r16_uscaled_pack_rgba_float
0000000000266580 000000000000001c t util_format_r16_uscaled_fetch_rgba_float
00000000002665a0 0000000000000074 t util_format_r16_uscaled_unpack_rgba_8unorm
0000000000266620 000000000000006c t util_format_r16_uscaled_pack_rgba_8unorm
0000000000266690 000000000000007c t util_format_r16g16_uscaled_unpack_rgba_float
0000000000266710 00000000000000b0 t util_format_r16g16_uscaled_pack_rgba_float
00000000002667c0 000000000000002c t util_format_r16g16_uscaled_fetch_rgba_float
00000000002667f0 000000000000007c t util_format_r16g16_uscaled_unpack_rgba_8unorm
0000000000266870 000000000000007c t util_format_r16g16_uscaled_pack_rgba_8unorm
00000000002668f0 0000000000000090 t util_format_r16g16b16a16_uscaled_unpack_rgba_float
0000000000266980 000000000000010c t util_format_r16g16b16a16_uscaled_pack_rgba_float
0000000000266a90 000000000000003c t util_format_r16g16b16a16_uscaled_fetch_rgba_float
0000000000266ad0 000000000000008c t util_format_r16g16b16a16_uscaled_unpack_rgba_8unorm
0000000000266b60 00000000000000a4 t util_format_r16g16b16a16_uscaled_pack_rgba_8unorm
0000000000266c10 0000000000000080 t util_format_r16_snorm_unpack_rgba_float
0000000000266c90 000000000000002c t util_format_r16_snorm_fetch_rgba_float
0000000000266cc0 000000000000007c t util_format_r16_snorm_unpack_rgba_8unorm
0000000000266d40 0000000000000094 t util_format_r16g16_snorm_unpack_rgba_float
0000000000266de0 0000000000000114 t util_format_r16g16_snorm_pack_rgba_float
0000000000266f00 000000000000003c t util_format_r16g16_snorm_fetch_rgba_float
0000000000266f40 000000000000008c t util_format_r16g16_snorm_unpack_rgba_8unorm
0000000000266fd0 000000000000008c t util_format_r16g16_snorm_pack_rgba_8unorm
0000000000267060 00000000000000a4 t util_format_r16g16b16a16_snorm_unpack_rgba_float
0000000000267110 00000000000001b4 t util_format_r16g16b16a16_snorm_pack_rgba_float
00000000002672d0 0000000000000054 t util_format_r16g16b16a16_snorm_fetch_rgba_float
0000000000267330 00000000000000ac t util_format_r16g16b16a16_snorm_unpack_rgba_8unorm
00000000002673e0 00000000000000c4 t util_format_r16g16b16a16_snorm_pack_rgba_8unorm
00000000002674b0 000000000000006c t util_format_r16_sscaled_unpack_rgba_float
0000000000267520 0000000000000090 t util_format_r16_sscaled_pack_rgba_float
00000000002675b0 000000000000001c t util_format_r16_sscaled_fetch_rgba_float
00000000002675d0 0000000000000074 t util_format_r16_sscaled_unpack_rgba_8unorm
0000000000267650 000000000000007c t util_format_r16g16_sscaled_unpack_rgba_float
00000000002676d0 00000000000000c0 t util_format_r16g16_sscaled_pack_rgba_float
0000000000267790 000000000000002c t util_format_r16g16_sscaled_fetch_rgba_float
00000000002677c0 0000000000000084 t util_format_r16g16_sscaled_unpack_rgba_8unorm
0000000000267850 000000000000007c t util_format_r16g16_sscaled_pack_rgba_8unorm
00000000002678d0 000000000000008c t util_format_r16g16b16a16_sscaled_unpack_rgba_float
0000000000267960 000000000000010c t util_format_r16g16b16a16_sscaled_pack_rgba_float
0000000000267a70 0000000000000038 t util_format_r16g16b16a16_sscaled_fetch_rgba_float
0000000000267ab0 000000000000009c t util_format_r16g16b16a16_sscaled_unpack_rgba_8unorm
0000000000267b50 00000000000000a4 t util_format_r16g16b16a16_sscaled_pack_rgba_8unorm
0000000000267c00 0000000000000080 t util_format_r8_unorm_unpack_rgba_float
0000000000267c80 000000000000002c t util_format_r8_unorm_fetch_rgba_float
0000000000267cb0 000000000000006c t util_format_r8_unorm_unpack_rgba_8unorm
0000000000267d20 0000000000000098 t util_format_r8g8_unorm_unpack_rgba_float
0000000000267dc0 0000000000000040 t util_format_r8g8_unorm_fetch_rgba_float
0000000000267e00 0000000000000070 t util_format_r8g8_unorm_unpack_rgba_8unorm
0000000000267e70 0000000000000054 t util_format_r8g8_unorm_pack_rgba_8unorm
0000000000267ed0 0000000000000094 t util_format_r8g8b8_unorm_unpack_rgba_float
0000000000267f70 0000000000000040 t util_format_r8g8b8_unorm_fetch_rgba_float
0000000000267fb0 0000000000000078 t util_format_r8g8b8_unorm_unpack_rgba_8unorm
0000000000268030 0000000000000074 t util_format_r8g8b8_unorm_pack_rgba_8unorm
00000000002680b0 0000000000000098 t util_format_b8g8r8_unorm_unpack_rgba_float
0000000000268150 0000000000000040 t util_format_b8g8r8_unorm_fetch_rgba_float
0000000000268190 0000000000000078 t util_format_b8g8r8_unorm_unpack_rgba_8unorm
0000000000268210 0000000000000070 t util_format_b8g8r8_unorm_pack_rgba_8unorm
0000000000268280 0000000000000080 t util_format_r8g8_uscaled_unpack_rgba_float
0000000000268300 00000000000000b0 t util_format_r8g8_uscaled_pack_rgba_float
00000000002683b0 0000000000000030 t util_format_r8g8_uscaled_fetch_rgba_float
00000000002683e0 000000000000007c t util_format_r8g8_uscaled_unpack_rgba_8unorm
0000000000268460 000000000000007c t util_format_r8g8_uscaled_pack_rgba_8unorm
00000000002684e0 0000000000000078 t util_format_r8g8b8_uscaled_unpack_rgba_float
0000000000268560 00000000000000dc t util_format_r8g8b8_uscaled_pack_rgba_float
0000000000268640 0000000000000028 t util_format_r8g8b8_uscaled_fetch_rgba_float
0000000000268670 000000000000008c t util_format_r8g8b8_uscaled_unpack_rgba_8unorm
0000000000268700 0000000000000090 t util_format_r8g8b8_uscaled_pack_rgba_8unorm
0000000000268790 000000000000007c t util_format_b8g8r8_uscaled_unpack_rgba_float
0000000000268810 00000000000000dc t util_format_b8g8r8_uscaled_pack_rgba_float
00000000002688f0 0000000000000028 t util_format_b8g8r8_uscaled_fetch_rgba_float
0000000000268920 0000000000000090 t util_format_b8g8r8_uscaled_unpack_rgba_8unorm
00000000002689b0 0000000000000094 t util_format_b8g8r8_uscaled_pack_rgba_8unorm
0000000000268a50 0000000000000088 t util_format_r8g8b8a8_uscaled_unpack_rgba_float
0000000000268ae0 00000000000000fc t util_format_r8g8b8a8_uscaled_pack_rgba_float
0000000000268be0 0000000000000034 t util_format_r8g8b8a8_uscaled_fetch_rgba_float
0000000000268c20 000000000000008c t util_format_r8g8b8a8_uscaled_unpack_rgba_8unorm
0000000000268cb0 00000000000000a0 t util_format_r8g8b8a8_uscaled_pack_rgba_8unorm
0000000000268d50 0000000000000088 t util_format_b8g8r8a8_uscaled_unpack_rgba_float
0000000000268de0 00000000000000fc t util_format_b8g8r8a8_uscaled_pack_rgba_float
0000000000268ee0 0000000000000034 t util_format_b8g8r8a8_uscaled_fetch_rgba_float
0000000000268f20 000000000000008c t util_format_b8g8r8a8_uscaled_unpack_rgba_8unorm
0000000000268fb0 00000000000000a4 t util_format_b8g8r8a8_uscaled_pack_rgba_8unorm
0000000000269060 0000000000000088 t util_format_a8b8g8r8_uscaled_unpack_rgba_float
00000000002690f0 00000000000000fc t util_format_a8b8g8r8_uscaled_pack_rgba_float
00000000002691f0 0000000000000034 t util_format_a8b8g8r8_uscaled_fetch_rgba_float
0000000000269230 000000000000008c t util_format_a8b8g8r8_uscaled_unpack_rgba_8unorm
00000000002692c0 00000000000000a4 t util_format_a8b8g8r8_uscaled_pack_rgba_8unorm
0000000000269370 0000000000000080 t util_format_r8_snorm_unpack_rgba_float
00000000002693f0 000000000000002c t util_format_r8_snorm_fetch_rgba_float
0000000000269420 000000000000009c t util_format_r8_snorm_unpack_rgba_8unorm
00000000002694c0 0000000000000090 t util_format_r8g8_snorm_unpack_rgba_float
0000000000269550 0000000000000108 t util_format_r8g8_snorm_pack_rgba_float
0000000000269660 0000000000000038 t util_format_r8g8_snorm_fetch_rgba_float
00000000002696a0 00000000000000c4 t util_format_r8g8_snorm_unpack_rgba_8unorm
0000000000269770 0000000000000070 t util_format_r8g8_snorm_pack_rgba_8unorm
00000000002697e0 0000000000000094 t util_format_r8g8b8_snorm_unpack_rgba_float
0000000000269880 000000000000015c t util_format_r8g8b8_snorm_pack_rgba_float
00000000002699e0 0000000000000044 t util_format_r8g8b8_snorm_fetch_rgba_float
0000000000269a30 00000000000000ec t util_format_r8g8b8_snorm_unpack_rgba_8unorm
0000000000269b20 000000000000007c t util_format_r8g8b8_snorm_pack_rgba_8unorm
0000000000269ba0 0000000000000098 t util_format_b8g8r8_snorm_unpack_rgba_float
0000000000269c40 000000000000015c t util_format_b8g8r8_snorm_pack_rgba_float
0000000000269da0 0000000000000044 t util_format_b8g8r8_snorm_fetch_rgba_float
0000000000269df0 00000000000000f0 t util_format_b8g8r8_snorm_unpack_rgba_8unorm
0000000000269ee0 0000000000000080 t util_format_b8g8r8_snorm_pack_rgba_8unorm
0000000000269f60 00000000000000a0 t util_format_r8g8b8a8_snorm_unpack_rgba_float
000000000026a000 00000000000001b0 t util_format_r8g8b8a8_snorm_pack_rgba_float
000000000026a1b0 0000000000000050 t util_format_r8g8b8a8_snorm_fetch_rgba_float
000000000026a200 0000000000000114 t util_format_r8g8b8a8_snorm_unpack_rgba_8unorm
000000000026a320 0000000000000088 t util_format_r8g8b8a8_snorm_pack_rgba_8unorm
000000000026a3b0 00000000000000a0 t util_format_b8g8r8a8_snorm_unpack_rgba_float
000000000026a450 00000000000001b0 t util_format_b8g8r8a8_snorm_pack_rgba_float
000000000026a600 0000000000000050 t util_format_b8g8r8a8_snorm_fetch_rgba_float
000000000026a650 0000000000000114 t util_format_b8g8r8a8_snorm_unpack_rgba_8unorm
000000000026a770 000000000000008c t util_format_b8g8r8a8_snorm_pack_rgba_8unorm
000000000026a800 000000000000006c t util_format_r8_sscaled_unpack_rgba_float
000000000026a870 0000000000000090 t util_format_r8_sscaled_pack_rgba_float
000000000026a900 000000000000001c t util_format_r8_sscaled_fetch_rgba_float
000000000026a920 0000000000000074 t util_format_r8_sscaled_unpack_rgba_8unorm
000000000026a9a0 0000000000000078 t util_format_r8g8_sscaled_unpack_rgba_float
000000000026aa20 00000000000000b8 t util_format_r8g8_sscaled_pack_rgba_float
000000000026aae0 0000000000000024 t util_format_r8g8_sscaled_fetch_rgba_float
000000000026ab10 0000000000000084 t util_format_r8g8_sscaled_unpack_rgba_8unorm
000000000026aba0 0000000000000080 t util_format_r8g8_sscaled_pack_rgba_8unorm
000000000026ac20 0000000000000078 t util_format_r8g8b8_sscaled_unpack_rgba_float
000000000026aca0 00000000000000e4 t util_format_r8g8b8_sscaled_pack_rgba_float
000000000026ad90 000000000000002c t util_format_r8g8b8_sscaled_fetch_rgba_float
000000000026adc0 000000000000008c t util_format_r8g8b8_sscaled_unpack_rgba_8unorm
000000000026ae50 0000000000000090 t util_format_r8g8b8_sscaled_pack_rgba_8unorm
000000000026aee0 000000000000007c t util_format_b8g8r8_sscaled_unpack_rgba_float
000000000026af60 00000000000000e4 t util_format_b8g8r8_sscaled_pack_rgba_float
000000000026b050 000000000000002c t util_format_b8g8r8_sscaled_fetch_rgba_float
000000000026b080 0000000000000090 t util_format_b8g8r8_sscaled_unpack_rgba_8unorm
000000000026b110 0000000000000094 t util_format_b8g8r8_sscaled_pack_rgba_8unorm
000000000026b1b0 0000000000000088 t util_format_r8g8b8a8_sscaled_unpack_rgba_float
000000000026b240 0000000000000114 t util_format_r8g8b8a8_sscaled_pack_rgba_float
000000000026b360 0000000000000034 t util_format_r8g8b8a8_sscaled_fetch_rgba_float
000000000026b3a0 000000000000009c t util_format_r8g8b8a8_sscaled_unpack_rgba_8unorm
000000000026b440 00000000000000a0 t util_format_r8g8b8a8_sscaled_pack_rgba_8unorm
000000000026b4e0 0000000000000088 t util_format_b8g8r8a8_sscaled_unpack_rgba_float
000000000026b570 0000000000000114 t util_format_b8g8r8a8_sscaled_pack_rgba_float
000000000026b690 0000000000000034 t util_format_b8g8r8a8_sscaled_fetch_rgba_float
000000000026b6d0 000000000000009c t util_format_b8g8r8a8_sscaled_unpack_rgba_8unorm
000000000026b770 00000000000000a4 t util_format_b8g8r8a8_sscaled_pack_rgba_8unorm
000000000026b820 0000000000000088 t util_format_a8b8g8r8_sscaled_unpack_rgba_float
000000000026b8b0 0000000000000114 t util_format_a8b8g8r8_sscaled_pack_rgba_float
000000000026b9d0 0000000000000034 t util_format_a8b8g8r8_sscaled_fetch_rgba_float
000000000026ba10 000000000000009c t util_format_a8b8g8r8_sscaled_unpack_rgba_8unorm
000000000026bab0 00000000000000a4 t util_format_a8b8g8r8_sscaled_pack_rgba_8unorm
000000000026bb60 000000000000007c t util_format_r32_fixed_unpack_rgba_float
000000000026bbe0 0000000000000088 t util_format_r32_fixed_pack_rgba_float
000000000026bc70 0000000000000020 t util_format_r32_fixed_fetch_rgba_float
000000000026bc90 00000000000000d4 t util_format_r32_fixed_unpack_rgba_8unorm
000000000026bd70 000000000000006c t util_format_r32_fixed_pack_rgba_8unorm
000000000026bde0 000000000000008c t util_format_r32g32_fixed_unpack_rgba_float
000000000026be70 00000000000000c4 t util_format_r32g32_fixed_pack_rgba_float
000000000026bf40 0000000000000038 t util_format_r32g32_fixed_fetch_rgba_float
000000000026bf80 0000000000000124 t util_format_r32g32_fixed_unpack_rgba_8unorm
000000000026c0b0 0000000000000094 t util_format_r32g32_fixed_pack_rgba_8unorm
000000000026c150 00000000000000a8 t util_format_r32g32b32a32_fixed_unpack_rgba_float
000000000026c200 0000000000000124 t util_format_r32g32b32a32_fixed_pack_rgba_float
000000000026c330 0000000000000050 t util_format_r32g32b32a32_fixed_fetch_rgba_float
000000000026c380 00000000000001c0 t util_format_r32g32b32a32_fixed_unpack_rgba_8unorm
000000000026c540 00000000000000c8 t util_format_r32g32b32a32_fixed_pack_rgba_8unorm
000000000026c610 000000000000007c t util_format_r10g10b10x2_uscaled_unpack_rgba_float
000000000026c690 00000000000000e0 t util_format_r10g10b10x2_uscaled_pack_rgba_float
000000000026c770 0000000000000030 t util_format_r10g10b10x2_uscaled_fetch_rgba_float
000000000026c7a0 0000000000000084 t util_format_r10g10b10x2_uscaled_unpack_rgba_8unorm
000000000026c830 0000000000000090 t util_format_r10g10b10x2_uscaled_pack_rgba_8unorm
000000000026c8c0 0000000000000098 t util_format_r10g10b10x2_snorm_unpack_rgba_float
000000000026c960 0000000000000168 t util_format_r10g10b10x2_snorm_pack_rgba_float
000000000026cad0 0000000000000048 t util_format_r10g10b10x2_snorm_fetch_rgba_float
000000000026cb20 000000000000009c t util_format_r10g10b10x2_snorm_unpack_rgba_8unorm
000000000026cbc0 00000000000000a8 t util_format_r10g10b10x2_snorm_pack_rgba_8unorm
000000000026cc70 000000000000008c t util_format_a4r4_unorm_unpack_rgba_float
000000000026cd00 0000000000000100 t util_format_a4r4_unorm_pack_rgba_float
000000000026ce00 000000000000003c t util_format_a4r4_unorm_fetch_rgba_float
000000000026ce40 000000000000009c t util_format_a4r4_unorm_unpack_rgba_8unorm
000000000026cee0 0000000000000070 t util_format_a4r4_unorm_pack_rgba_8unorm
000000000026cf50 000000000000008c t util_format_r4a4_unorm_unpack_rgba_float
000000000026cfe0 000000000000003c t util_format_r4a4_unorm_fetch_rgba_float
000000000026d020 000000000000009c t util_format_r4a4_unorm_unpack_rgba_8unorm
000000000026d0c0 0000000000000090 t util_format_r8a8_unorm_unpack_rgba_float
000000000026d150 0000000000000040 t util_format_r8a8_unorm_fetch_rgba_float
000000000026d190 0000000000000070 t util_format_r8a8_unorm_unpack_rgba_8unorm
000000000026d200 0000000000000090 t util_format_a8r8_unorm_unpack_rgba_float
000000000026d290 0000000000000040 t util_format_a8r8_unorm_fetch_rgba_float
000000000026d2d0 0000000000000070 t util_format_a8r8_unorm_unpack_rgba_8unorm
000000000026d340 000000000000006c t util_format_a8r8_unorm_pack_rgba_8unorm
000000000026d3b0 0000000000000088 t util_format_r10g10b10a2_uscaled_unpack_rgba_float
000000000026d440 0000000000000104 t util_format_r10g10b10a2_uscaled_pack_rgba_float
000000000026d550 0000000000000034 t util_format_r10g10b10a2_uscaled_fetch_rgba_float
000000000026d590 000000000000008c t util_format_r10g10b10a2_uscaled_unpack_rgba_8unorm
000000000026d620 00000000000000a0 t util_format_r10g10b10a2_uscaled_pack_rgba_8unorm
000000000026d6c0 0000000000000088 t util_format_r10g10b10a2_sscaled_unpack_rgba_float
000000000026d750 000000000000010c t util_format_r10g10b10a2_sscaled_pack_rgba_float
000000000026d860 0000000000000034 t util_format_r10g10b10a2_sscaled_fetch_rgba_float
000000000026d8a0 00000000000000a0 t util_format_r10g10b10a2_sscaled_unpack_rgba_8unorm
000000000026d940 000000000000009c t util_format_r10g10b10a2_snorm_unpack_rgba_float
000000000026d9e0 00000000000001bc t util_format_r10g10b10a2_snorm_pack_rgba_float
000000000026dba0 000000000000004c t util_format_r10g10b10a2_snorm_fetch_rgba_float
000000000026dbf0 00000000000000ac t util_format_r10g10b10a2_snorm_unpack_rgba_8unorm
000000000026dca0 00000000000000b8 t util_format_r10g10b10a2_snorm_pack_rgba_8unorm
000000000026dd60 0000000000000088 t util_format_b10g10r10a2_uscaled_unpack_rgba_float
000000000026ddf0 0000000000000104 t util_format_b10g10r10a2_uscaled_pack_rgba_float
000000000026df00 0000000000000034 t util_format_b10g10r10a2_uscaled_fetch_rgba_float
000000000026df40 000000000000008c t util_format_b10g10r10a2_uscaled_unpack_rgba_8unorm
000000000026dfd0 00000000000000a4 t util_format_b10g10r10a2_uscaled_pack_rgba_8unorm
000000000026e080 0000000000000088 t util_format_b10g10r10a2_sscaled_unpack_rgba_float
000000000026e110 000000000000010c t util_format_b10g10r10a2_sscaled_pack_rgba_float
000000000026e220 0000000000000034 t util_format_b10g10r10a2_sscaled_fetch_rgba_float
000000000026e260 00000000000000a0 t util_format_b10g10r10a2_sscaled_unpack_rgba_8unorm
000000000026e300 000000000000009c t util_format_b10g10r10a2_snorm_unpack_rgba_float
000000000026e3a0 00000000000001bc t util_format_b10g10r10a2_snorm_pack_rgba_float
000000000026e560 000000000000004c t util_format_b10g10r10a2_snorm_fetch_rgba_float
000000000026e5b0 00000000000000ac t util_format_b10g10r10a2_snorm_unpack_rgba_8unorm
000000000026e660 00000000000000b8 t util_format_b10g10r10a2_snorm_pack_rgba_8unorm
000000000026e720 0000000000000064 t util_format_r8_uint_unpack_unsigned
000000000026e790 0000000000000064 t util_format_r8_uint_pack_unsigned
000000000026e800 0000000000000018 t util_format_r8_uint_fetch_unsigned
000000000026e820 0000000000000078 t util_format_r8_uint_pack_signed
000000000026e8a0 000000000000006c t util_format_r8g8_uint_unpack_unsigned
000000000026e910 0000000000000080 t util_format_r8g8_uint_pack_unsigned
000000000026e990 000000000000001c t util_format_r8g8_uint_fetch_unsigned
000000000026e9b0 0000000000000098 t util_format_r8g8_uint_pack_signed
000000000026ea50 000000000000006c t util_format_r8g8b8_uint_unpack_unsigned
000000000026eac0 0000000000000088 t util_format_r8g8b8_uint_pack_unsigned
000000000026eb50 000000000000001c t util_format_r8g8b8_uint_fetch_unsigned
000000000026eb70 00000000000000bc t util_format_r8g8b8_uint_pack_signed
000000000026ec30 0000000000000074 t util_format_r8g8b8a8_uint_unpack_unsigned
000000000026ecb0 00000000000000ac t util_format_r8g8b8a8_uint_pack_unsigned
000000000026ed60 0000000000000020 t util_format_r8g8b8a8_uint_fetch_unsigned
000000000026ed80 00000000000000c8 t util_format_r8g8b8a8_uint_pack_signed
000000000026ee50 0000000000000064 t util_format_r8_sint_unpack_signed
000000000026eec0 0000000000000078 t util_format_r8_sint_pack_signed
000000000026ef40 0000000000000018 t util_format_r8_sint_fetch_signed
000000000026ef60 0000000000000064 t util_format_r8_sint_pack_unsigned
000000000026efd0 000000000000006c t util_format_r8g8_sint_unpack_signed
000000000026f040 00000000000000a0 t util_format_r8g8_sint_pack_signed
000000000026f0e0 000000000000001c t util_format_r8g8_sint_fetch_signed
000000000026f100 0000000000000080 t util_format_r8g8_sint_pack_unsigned
000000000026f180 000000000000006c t util_format_r8g8b8_sint_unpack_signed
000000000026f1f0 00000000000000bc t util_format_r8g8b8_sint_pack_signed
000000000026f2b0 000000000000001c t util_format_r8g8b8_sint_fetch_signed
000000000026f2d0 0000000000000088 t util_format_r8g8b8_sint_pack_unsigned
000000000026f360 0000000000000074 t util_format_r8g8b8a8_sint_unpack_signed
000000000026f3e0 00000000000000f8 t util_format_r8g8b8a8_sint_pack_signed
000000000026f4e0 0000000000000020 t util_format_r8g8b8a8_sint_fetch_signed
000000000026f500 00000000000000ac t util_format_r8g8b8a8_sint_pack_unsigned
000000000026f5b0 0000000000000064 t util_format_r16_uint_unpack_unsigned
000000000026f620 000000000000006c t util_format_r16_uint_pack_unsigned
000000000026f690 0000000000000018 t util_format_r16_uint_fetch_unsigned
000000000026f6b0 0000000000000078 t util_format_r16_uint_pack_signed
000000000026f730 000000000000006c t util_format_r16g16_uint_unpack_unsigned
000000000026f7a0 0000000000000088 t util_format_r16g16_uint_pack_unsigned
000000000026f830 000000000000001c t util_format_r16g16_uint_fetch_unsigned
000000000026f850 0000000000000094 t util_format_r16g16_uint_pack_signed
000000000026f8f0 0000000000000074 t util_format_r16g16b16a16_uint_unpack_unsigned
000000000026f970 00000000000000a0 t util_format_r16g16b16a16_uint_pack_unsigned
000000000026fa10 0000000000000020 t util_format_r16g16b16a16_uint_fetch_unsigned
000000000026fa30 00000000000000dc t util_format_r16g16b16a16_uint_pack_signed
000000000026fb10 0000000000000064 t util_format_r16_sint_unpack_signed
000000000026fb80 0000000000000080 t util_format_r16_sint_pack_signed
000000000026fc00 0000000000000018 t util_format_r16_sint_fetch_signed
000000000026fc20 000000000000006c t util_format_r16_sint_pack_unsigned
000000000026fc90 000000000000006c t util_format_r16g16_sint_unpack_signed
000000000026fd00 00000000000000a4 t util_format_r16g16_sint_pack_signed
000000000026fdb0 000000000000001c t util_format_r16g16_sint_fetch_signed
000000000026fdd0 0000000000000088 t util_format_r16g16_sint_pack_unsigned
000000000026fe60 0000000000000074 t util_format_r16g16b16a16_sint_unpack_signed
000000000026fee0 00000000000000e4 t util_format_r16g16b16a16_sint_pack_signed
000000000026ffd0 0000000000000020 t util_format_r16g16b16a16_sint_fetch_signed
000000000026fff0 00000000000000a0 t util_format_r16g16b16a16_sint_pack_unsigned
0000000000270090 0000000000000064 t util_format_r32_uint_unpack_unsigned
0000000000270100 0000000000000054 t util_format_r32_uint_pack_unsigned
0000000000270160 0000000000000018 t util_format_r32_uint_fetch_unsigned
0000000000270180 000000000000005c t util_format_r32_uint_pack_signed
00000000002701e0 0000000000000068 t util_format_r32g32_uint_unpack_unsigned
0000000000270250 0000000000000068 t util_format_r32g32_uint_pack_unsigned
00000000002702c0 000000000000001c t util_format_r32g32_uint_fetch_unsigned
00000000002702e0 0000000000000078 t util_format_r32g32_uint_pack_signed
0000000000270360 0000000000000074 t util_format_r32g32b32a32_uint_unpack_unsigned
00000000002703e0 000000000000007c t util_format_r32g32b32a32_uint_pack_unsigned
0000000000270460 000000000000001c t util_format_r32g32b32a32_uint_fetch_unsigned
0000000000270480 000000000000009c t util_format_r32g32b32a32_uint_pack_signed
0000000000270520 0000000000000064 t util_format_r32_sint_unpack_signed
0000000000270590 0000000000000054 t util_format_r32_sint_pack_signed
00000000002705f0 0000000000000018 t util_format_r32_sint_fetch_signed
0000000000270610 000000000000005c t util_format_r32_sint_pack_unsigned
0000000000270670 0000000000000068 t util_format_r32g32_sint_unpack_signed
00000000002706e0 0000000000000068 t util_format_r32g32_sint_pack_signed
0000000000270750 000000000000001c t util_format_r32g32_sint_fetch_signed
0000000000270770 0000000000000080 t util_format_r32g32_sint_pack_unsigned
00000000002707f0 0000000000000074 t util_format_r32g32b32a32_sint_unpack_signed
0000000000270870 000000000000007c t util_format_r32g32b32a32_sint_pack_signed
00000000002708f0 000000000000001c t util_format_r32g32b32a32_sint_fetch_signed
0000000000270910 00000000000000a4 t util_format_r32g32b32a32_sint_pack_unsigned
00000000002709c0 0000000000000064 t util_format_a8_uint_unpack_unsigned
0000000000270a30 0000000000000068 t util_format_a8_uint_pack_unsigned
0000000000270aa0 0000000000000010 t util_format_a8_uint_fetch_unsigned
0000000000270ab0 0000000000000078 t util_format_a8_uint_pack_signed
0000000000270b30 0000000000000064 t util_format_i8_uint_unpack_unsigned
0000000000270ba0 0000000000000010 t util_format_i8_uint_fetch_unsigned
0000000000270bb0 0000000000000064 t util_format_l8_uint_unpack_unsigned
0000000000270c20 0000000000000014 t util_format_l8_uint_fetch_unsigned
0000000000270c40 000000000000006c t util_format_l8a8_uint_unpack_unsigned
0000000000270cb0 0000000000000084 t util_format_l8a8_uint_pack_unsigned
0000000000270d40 0000000000000018 t util_format_l8a8_uint_fetch_unsigned
0000000000270d60 0000000000000098 t util_format_l8a8_uint_pack_signed
0000000000270e00 0000000000000064 t util_format_a8_sint_unpack_signed
0000000000270e70 0000000000000078 t util_format_a8_sint_pack_signed
0000000000270ef0 0000000000000010 t util_format_a8_sint_fetch_signed
0000000000270f00 0000000000000068 t util_format_a8_sint_pack_unsigned
0000000000270f70 0000000000000064 t util_format_i8_sint_unpack_signed
0000000000270fe0 0000000000000010 t util_format_i8_sint_fetch_signed
0000000000270ff0 0000000000000064 t util_format_l8_sint_unpack_signed
0000000000271060 0000000000000014 t util_format_l8_sint_fetch_signed
0000000000271080 000000000000006c t util_format_l8a8_sint_unpack_signed
00000000002710f0 00000000000000a0 t util_format_l8a8_sint_pack_signed
0000000000271190 0000000000000018 t util_format_l8a8_sint_fetch_signed
00000000002711b0 0000000000000084 t util_format_l8a8_sint_pack_unsigned
0000000000271240 0000000000000064 t util_format_a16_uint_unpack_unsigned
00000000002712b0 0000000000000070 t util_format_a16_uint_pack_unsigned
0000000000271320 0000000000000010 t util_format_a16_uint_fetch_unsigned
0000000000271330 0000000000000078 t util_format_a16_uint_pack_signed
00000000002713b0 0000000000000064 t util_format_i16_uint_unpack_unsigned
0000000000271420 0000000000000010 t util_format_i16_uint_fetch_unsigned
0000000000271430 0000000000000064 t util_format_l16_uint_unpack_unsigned
00000000002714a0 0000000000000014 t util_format_l16_uint_fetch_unsigned
00000000002714c0 000000000000006c t util_format_l16a16_uint_unpack_unsigned
0000000000271530 0000000000000088 t util_format_l16a16_uint_pack_unsigned
00000000002715c0 0000000000000018 t util_format_l16a16_uint_fetch_unsigned
00000000002715e0 0000000000000094 t util_format_l16a16_uint_pack_signed
0000000000271680 0000000000000064 t util_format_a16_sint_unpack_signed
00000000002716f0 0000000000000080 t util_format_a16_sint_pack_signed
0000000000271770 0000000000000010 t util_format_a16_sint_fetch_signed
0000000000271780 0000000000000070 t util_format_a16_sint_pack_unsigned
00000000002717f0 0000000000000064 t util_format_i16_sint_unpack_signed
0000000000271860 0000000000000010 t util_format_i16_sint_fetch_signed
0000000000271870 0000000000000064 t util_format_l16_sint_unpack_signed
00000000002718e0 0000000000000014 t util_format_l16_sint_fetch_signed
0000000000271900 000000000000006c t util_format_l16a16_sint_unpack_signed
0000000000271970 00000000000000a4 t util_format_l16a16_sint_pack_signed
0000000000271a20 0000000000000018 t util_format_l16a16_sint_fetch_signed
0000000000271a40 0000000000000088 t util_format_l16a16_sint_pack_unsigned
0000000000271ad0 0000000000000064 t util_format_a32_uint_unpack_unsigned
0000000000271b40 0000000000000054 t util_format_a32_uint_pack_unsigned
0000000000271ba0 0000000000000010 t util_format_a32_uint_fetch_unsigned
0000000000271bb0 000000000000005c t util_format_a32_uint_pack_signed
0000000000271c10 0000000000000064 t util_format_i32_uint_unpack_unsigned
0000000000271c80 0000000000000010 t util_format_i32_uint_fetch_unsigned
0000000000271c90 0000000000000064 t util_format_l32_uint_unpack_unsigned
0000000000271d00 0000000000000014 t util_format_l32_uint_fetch_unsigned
0000000000271d20 0000000000000068 t util_format_l32a32_uint_unpack_unsigned
0000000000271d90 000000000000006c t util_format_l32a32_uint_pack_unsigned
0000000000271e00 0000000000000014 t util_format_l32a32_uint_fetch_unsigned
0000000000271e20 000000000000007c t util_format_l32a32_uint_pack_signed
0000000000271ea0 0000000000000064 t util_format_a32_sint_unpack_signed
0000000000271f10 0000000000000054 t util_format_a32_sint_pack_signed
0000000000271f70 0000000000000010 t util_format_a32_sint_fetch_signed
0000000000271f80 0000000000000064 t util_format_a32_sint_pack_unsigned
0000000000271ff0 0000000000000064 t util_format_i32_sint_unpack_signed
0000000000272060 0000000000000010 t util_format_i32_sint_fetch_signed
0000000000272070 0000000000000064 t util_format_l32_sint_unpack_signed
00000000002720e0 0000000000000014 t util_format_l32_sint_fetch_signed
0000000000272100 0000000000000068 t util_format_l32a32_sint_unpack_signed
0000000000272170 000000000000006c t util_format_l32a32_sint_pack_signed
00000000002721e0 0000000000000014 t util_format_l32a32_sint_fetch_signed
0000000000272200 0000000000000084 t util_format_l32a32_sint_pack_unsigned
0000000000272290 0000000000000070 t util_format_b8g8r8_uint_unpack_unsigned
0000000000272300 0000000000000084 t util_format_b8g8r8_uint_pack_unsigned
0000000000272390 000000000000001c t util_format_b8g8r8_uint_fetch_unsigned
00000000002723b0 00000000000000bc t util_format_b8g8r8_uint_pack_signed
0000000000272470 0000000000000074 t util_format_b8g8r8a8_uint_unpack_unsigned
00000000002724f0 00000000000000ac t util_format_b8g8r8a8_uint_pack_unsigned
00000000002725a0 0000000000000020 t util_format_b8g8r8a8_uint_fetch_unsigned
00000000002725c0 00000000000000c8 t util_format_b8g8r8a8_uint_pack_signed
0000000000272690 0000000000000070 t util_format_b8g8r8_sint_unpack_signed
0000000000272700 00000000000000bc t util_format_b8g8r8_sint_pack_signed
00000000002727c0 000000000000001c t util_format_b8g8r8_sint_fetch_signed
00000000002727e0 0000000000000084 t util_format_b8g8r8_sint_pack_unsigned
0000000000272870 0000000000000074 t util_format_b8g8r8a8_sint_unpack_signed
00000000002728f0 00000000000000f8 t util_format_b8g8r8a8_sint_pack_signed
00000000002729f0 0000000000000020 t util_format_b8g8r8a8_sint_fetch_signed
0000000000272a10 00000000000000ac t util_format_b8g8r8a8_sint_pack_unsigned
0000000000272ac0 0000000000000074 t util_format_a8r8g8b8_uint_unpack_unsigned
0000000000272b40 00000000000000ac t util_format_a8r8g8b8_uint_pack_unsigned
0000000000272bf0 0000000000000020 t util_format_a8r8g8b8_uint_fetch_unsigned
0000000000272c10 00000000000000c8 t util_format_a8r8g8b8_uint_pack_signed
0000000000272ce0 0000000000000074 t util_format_a8b8g8r8_uint_unpack_unsigned
0000000000272d60 00000000000000ac t util_format_a8b8g8r8_uint_pack_unsigned
0000000000272e10 0000000000000020 t util_format_a8b8g8r8_uint_fetch_unsigned
0000000000272e30 00000000000000c8 t util_format_a8b8g8r8_uint_pack_signed
0000000000272f00 0000000000000074 t util_format_a2r10g10b10_uint_unpack_unsigned
0000000000272f80 000000000000009c t util_format_a2r10g10b10_uint_pack_unsigned
0000000000273020 0000000000000020 t util_format_a2r10g10b10_uint_fetch_unsigned
0000000000273040 00000000000000c4 t util_format_a2r10g10b10_uint_pack_signed
0000000000273110 0000000000000074 t util_format_a2b10g10r10_uint_unpack_unsigned
0000000000273190 000000000000009c t util_format_a2b10g10r10_uint_pack_unsigned
0000000000273230 0000000000000020 t util_format_a2b10g10r10_uint_fetch_unsigned
0000000000273250 00000000000000c4 t util_format_a2b10g10r10_uint_pack_signed
0000000000273320 0000000000000074 t util_format_b10g10r10a2_uint_unpack_unsigned
00000000002733a0 000000000000009c t util_format_b10g10r10a2_uint_pack_unsigned
0000000000273440 0000000000000020 t util_format_b10g10r10a2_uint_fetch_unsigned
0000000000273460 00000000000000c4 t util_format_b10g10r10a2_uint_pack_signed
0000000000273530 0000000000000074 t util_format_b10g10r10a2_sint_unpack_signed
00000000002735b0 00000000000000e0 t util_format_b10g10r10a2_sint_pack_signed
0000000000273690 0000000000000020 t util_format_b10g10r10a2_sint_fetch_signed
00000000002736b0 0000000000000094 t util_format_b10g10r10a2_sint_pack_unsigned
0000000000273750 0000000000000070 t util_format_r5g6b5_uint_unpack_unsigned
00000000002737c0 0000000000000098 t util_format_r5g6b5_uint_pack_unsigned
0000000000273860 0000000000000024 t util_format_r5g6b5_uint_fetch_unsigned
0000000000273890 00000000000000b8 t util_format_r5g6b5_uint_pack_signed
0000000000273950 0000000000000070 t util_format_b5g6r5_uint_unpack_unsigned
00000000002739c0 0000000000000094 t util_format_b5g6r5_uint_pack_unsigned
0000000000273a60 0000000000000024 t util_format_b5g6r5_uint_fetch_unsigned
0000000000273a90 00000000000000b8 t util_format_b5g6r5_uint_pack_signed
0000000000273b50 0000000000000070 t util_format_r3g3b2_uint_unpack_unsigned
0000000000273bc0 0000000000000098 t util_format_r3g3b2_uint_pack_unsigned
0000000000273c60 0000000000000024 t util_format_r3g3b2_uint_fetch_unsigned
0000000000273c90 00000000000000b8 t util_format_r3g3b2_uint_pack_signed
0000000000273d50 0000000000000070 t util_format_b2g3r3_uint_unpack_unsigned
0000000000273dc0 0000000000000094 t util_format_b2g3r3_uint_pack_unsigned
0000000000273e60 0000000000000024 t util_format_b2g3r3_uint_fetch_unsigned
0000000000273e90 00000000000000b8 t util_format_b2g3r3_uint_pack_signed
0000000000273f50 0000000000000074 t util_format_r4g4b4a4_uint_unpack_unsigned
0000000000273fd0 00000000000000b0 t util_format_r4g4b4a4_uint_pack_unsigned
0000000000274080 0000000000000020 t util_format_r4g4b4a4_uint_fetch_unsigned
00000000002740a0 00000000000000d8 t util_format_r4g4b4a4_uint_pack_signed
0000000000274180 0000000000000074 t util_format_b4g4r4a4_uint_unpack_unsigned
0000000000274200 00000000000000b0 t util_format_b4g4r4a4_uint_pack_unsigned
00000000002742b0 0000000000000020 t util_format_b4g4r4a4_uint_fetch_unsigned
00000000002742d0 00000000000000d8 t util_format_b4g4r4a4_uint_pack_signed
00000000002743b0 0000000000000074 t util_format_a4r4g4b4_uint_unpack_unsigned
0000000000274430 00000000000000b0 t util_format_a4r4g4b4_uint_pack_unsigned
00000000002744e0 0000000000000020 t util_format_a4r4g4b4_uint_fetch_unsigned
0000000000274500 00000000000000d8 t util_format_a4r4g4b4_uint_pack_signed
00000000002745e0 0000000000000074 t util_format_a4b4g4r4_uint_unpack_unsigned
0000000000274660 00000000000000b0 t util_format_a4b4g4r4_uint_pack_unsigned
0000000000274710 0000000000000020 t util_format_a4b4g4r4_uint_fetch_unsigned
0000000000274730 00000000000000d8 t util_format_a4b4g4r4_uint_pack_signed
0000000000274810 0000000000000074 t util_format_a1r5g5b5_uint_unpack_unsigned
0000000000274890 00000000000000a4 t util_format_a1r5g5b5_uint_pack_unsigned
0000000000274940 0000000000000020 t util_format_a1r5g5b5_uint_fetch_unsigned
0000000000274960 00000000000000c4 t util_format_a1r5g5b5_uint_pack_signed
0000000000274a30 0000000000000074 t util_format_r5g5b5a1_uint_unpack_unsigned
0000000000274ab0 00000000000000a4 t util_format_r5g5b5a1_uint_pack_unsigned
0000000000274b60 0000000000000020 t util_format_r5g5b5a1_uint_fetch_unsigned
0000000000274b80 00000000000000d0 t util_format_r5g5b5a1_uint_pack_signed
0000000000274c50 0000000000000074 t util_format_b5g5r5a1_uint_unpack_unsigned
0000000000274cd0 00000000000000a4 t util_format_b5g5r5a1_uint_pack_unsigned
0000000000274d80 0000000000000020 t util_format_b5g5r5a1_uint_fetch_unsigned
0000000000274da0 00000000000000d0 t util_format_b5g5r5a1_uint_pack_signed
0000000000274e70 0000000000000098 t util_format_r8g8b8x8_snorm_unpack_rgba_float
0000000000274f10 0000000000000158 t util_format_r8g8b8x8_snorm_pack_rgba_float
0000000000275070 0000000000000048 t util_format_r8g8b8x8_snorm_fetch_rgba_float
00000000002750c0 00000000000000ec t util_format_r8g8b8x8_snorm_unpack_rgba_8unorm
00000000002751b0 0000000000000078 t util_format_r8g8b8x8_snorm_pack_rgba_8unorm
0000000000275230 0000000000000084 t util_format_r8g8b8x8_srgb_unpack_rgba_float
00000000002752c0 0000000000000038 t util_format_r8g8b8x8_srgb_fetch_rgba_float
0000000000275300 000000000000008c t util_format_r8g8b8x8_srgb_unpack_rgba_8unorm
0000000000275390 0000000000000084 t util_format_r8g8b8x8_srgb_pack_rgba_8unorm
0000000000275420 0000000000000070 t util_format_r8g8b8x8_uint_unpack_unsigned
0000000000275490 0000000000000094 t util_format_r8g8b8x8_uint_pack_unsigned
0000000000275530 0000000000000024 t util_format_r8g8b8x8_uint_fetch_unsigned
0000000000275560 00000000000000ac t util_format_r8g8b8x8_uint_pack_signed
0000000000275610 0000000000000070 t util_format_r8g8b8x8_sint_unpack_signed
0000000000275680 00000000000000c0 t util_format_r8g8b8x8_sint_pack_signed
0000000000275740 0000000000000024 t util_format_r8g8b8x8_sint_fetch_signed
0000000000275770 0000000000000094 t util_format_r8g8b8x8_sint_pack_unsigned
0000000000275810 0000000000000098 t util_format_b10g10r10x2_unorm_unpack_rgba_float
00000000002758b0 0000000000000158 t util_format_b10g10r10x2_unorm_pack_rgba_float
0000000000275a10 0000000000000048 t util_format_b10g10r10x2_unorm_fetch_rgba_float
0000000000275a60 0000000000000078 t util_format_b10g10r10x2_unorm_unpack_rgba_8unorm
0000000000275ae0 00000000000000ac t util_format_b10g10r10x2_unorm_pack_rgba_8unorm
0000000000275b90 00000000000000a0 t util_format_r16g16b16x16_unorm_unpack_rgba_float
0000000000275c30 000000000000015c t util_format_r16g16b16x16_unorm_pack_rgba_float
0000000000275d90 0000000000000050 t util_format_r16g16b16x16_unorm_fetch_rgba_float
0000000000275de0 0000000000000078 t util_format_r16g16b16x16_unorm_unpack_rgba_8unorm
0000000000275e60 00000000000000ac t util_format_r16g16b16x16_unorm_pack_rgba_8unorm
0000000000275f10 000000000000009c t util_format_r16g16b16x16_snorm_unpack_rgba_float
0000000000275fb0 0000000000000164 t util_format_r16g16b16x16_snorm_pack_rgba_float
0000000000276120 000000000000004c t util_format_r16g16b16x16_snorm_fetch_rgba_float
0000000000276170 0000000000000098 t util_format_r16g16b16x16_snorm_unpack_rgba_8unorm
0000000000276210 00000000000000ac t util_format_r16g16b16x16_snorm_pack_rgba_8unorm
00000000002762c0 0000000000000118 t util_format_r16g16b16x16_float_unpack_rgba_float
00000000002763e0 00000000000000f4 t util_format_r16g16b16x16_float_fetch_rgba_float
00000000002764e0 0000000000000070 t util_format_r16g16b16x16_uint_unpack_unsigned
0000000000276550 0000000000000090 t util_format_r16g16b16x16_uint_pack_unsigned
00000000002765e0 0000000000000024 t util_format_r16g16b16x16_uint_fetch_unsigned
0000000000276610 00000000000000bc t util_format_r16g16b16x16_uint_pack_signed
00000000002766d0 0000000000000070 t util_format_r16g16b16x16_sint_unpack_signed
0000000000276740 00000000000000c4 t util_format_r16g16b16x16_sint_pack_signed
0000000000276810 0000000000000024 t util_format_r16g16b16x16_sint_fetch_signed
0000000000276840 0000000000000090 t util_format_r16g16b16x16_sint_pack_unsigned
00000000002768d0 0000000000000078 t util_format_r32g32b32x32_float_unpack_rgba_float
0000000000276950 0000000000000074 t util_format_r32g32b32x32_float_pack_rgba_float
00000000002769d0 0000000000000024 t util_format_r32g32b32x32_float_fetch_rgba_float
0000000000276a00 00000000000000a4 t util_format_r32g32b32x32_float_pack_rgba_8unorm
0000000000276ab0 000000000000006c t util_format_r32g32b32x32_uint_unpack_unsigned
0000000000276b20 0000000000000074 t util_format_r32g32b32x32_uint_pack_unsigned
0000000000276ba0 000000000000001c t util_format_r32g32b32x32_uint_fetch_unsigned
0000000000276bc0 000000000000008c t util_format_r32g32b32x32_uint_pack_signed
0000000000276c50 000000000000006c t util_format_r32g32b32x32_sint_unpack_signed
0000000000276cc0 0000000000000074 t util_format_r32g32b32x32_sint_pack_signed
0000000000276d40 000000000000001c t util_format_r32g32b32x32_sint_fetch_signed
0000000000276d60 0000000000000094 t util_format_r32g32b32x32_sint_pack_unsigned
0000000000276e00 0000000000000088 t util_format_r8a8_snorm_unpack_rgba_float
0000000000276e90 0000000000000038 t util_format_r8a8_snorm_fetch_rgba_float
0000000000276ed0 00000000000000c4 t util_format_r8a8_snorm_unpack_rgba_8unorm
0000000000276fa0 000000000000008c t util_format_r16a16_unorm_unpack_rgba_float
0000000000277030 000000000000003c t util_format_r16a16_unorm_fetch_rgba_float
0000000000277070 0000000000000074 t util_format_r16a16_unorm_unpack_rgba_8unorm
00000000002770f0 000000000000008c t util_format_r16a16_snorm_unpack_rgba_float
0000000000277180 000000000000003c t util_format_r16a16_snorm_fetch_rgba_float
00000000002771c0 000000000000008c t util_format_r16a16_snorm_unpack_rgba_8unorm
0000000000277250 00000000000000e0 t util_format_r16a16_float_unpack_rgba_float
0000000000277330 00000000000000a0 t util_format_r16a16_float_fetch_rgba_float
00000000002773d0 000000000000006c t util_format_r32a32_float_unpack_rgba_float
0000000000277440 000000000000006c t util_format_r32a32_float_pack_rgba_float
00000000002774b0 0000000000000018 t util_format_r32a32_float_fetch_rgba_float
00000000002774d0 000000000000008c t util_format_r32a32_float_pack_rgba_8unorm
0000000000277560 000000000000006c t util_format_r8a8_uint_unpack_unsigned
00000000002775d0 000000000000001c t util_format_r8a8_uint_fetch_unsigned
00000000002775f0 000000000000006c t util_format_r8a8_sint_unpack_signed
0000000000277660 000000000000001c t util_format_r8a8_sint_fetch_signed
0000000000277680 000000000000006c t util_format_r16a16_uint_unpack_unsigned
00000000002776f0 000000000000001c t util_format_r16a16_uint_fetch_unsigned
0000000000277710 000000000000006c t util_format_r16a16_sint_unpack_signed
0000000000277780 000000000000001c t util_format_r16a16_sint_fetch_signed
00000000002777a0 0000000000000068 t util_format_r32a32_uint_unpack_unsigned
0000000000277810 000000000000006c t util_format_r32a32_uint_pack_unsigned
0000000000277880 0000000000000018 t util_format_r32a32_uint_fetch_unsigned
00000000002778a0 000000000000007c t util_format_r32a32_uint_pack_signed
0000000000277920 0000000000000068 t util_format_r32a32_sint_unpack_signed
0000000000277990 000000000000006c t util_format_r32a32_sint_pack_signed
0000000000277a00 0000000000000018 t util_format_r32a32_sint_fetch_signed
0000000000277a20 0000000000000084 t util_format_r32a32_sint_pack_unsigned
0000000000277ab0 0000000000000074 t util_format_r10g10b10a2_uint_unpack_unsigned
0000000000277b30 000000000000009c t util_format_r10g10b10a2_uint_pack_unsigned
0000000000277bd0 0000000000000020 t util_format_r10g10b10a2_uint_fetch_unsigned
0000000000277bf0 00000000000000c4 t util_format_r10g10b10a2_uint_pack_signed
0000000000277cc0 0000000000000074 t util_format_r10g10b10a2_sint_unpack_signed
0000000000277d40 00000000000000e0 t util_format_r10g10b10a2_sint_pack_signed
0000000000277e20 0000000000000020 t util_format_r10g10b10a2_sint_fetch_signed
0000000000277e40 0000000000000094 t util_format_r10g10b10a2_sint_pack_unsigned
0000000000277ee0 000000000000009c t util_format_b5g6r5_srgb_unpack_rgba_float
0000000000277f80 0000000000000050 t util_format_b5g6r5_srgb_fetch_rgba_float
0000000000277fd0 00000000000000a4 t util_format_b5g6r5_srgb_unpack_rgba_8unorm
0000000000278080 000000000000008c t util_format_b5g6r5_srgb_pack_rgba_8unorm
0000000000278110 0000000000000098 t util_format_g8r8_unorm_unpack_rgba_float
00000000002781b0 0000000000000040 t util_format_g8r8_unorm_fetch_rgba_float
00000000002781f0 0000000000000070 t util_format_g8r8_unorm_unpack_rgba_8unorm
0000000000278260 0000000000000058 t util_format_g8r8_unorm_pack_rgba_8unorm
00000000002782c0 0000000000000090 t util_format_g8r8_snorm_unpack_rgba_float
0000000000278350 0000000000000108 t util_format_g8r8_snorm_pack_rgba_float
0000000000278460 0000000000000038 t util_format_g8r8_snorm_fetch_rgba_float
00000000002784a0 00000000000000c4 t util_format_g8r8_snorm_unpack_rgba_8unorm
0000000000278570 000000000000006c t util_format_g8r8_snorm_pack_rgba_8unorm
00000000002785e0 000000000000006c t util_format_g8r8_sint_unpack_signed
0000000000278650 00000000000000a0 t util_format_g8r8_sint_pack_signed
00000000002786f0 000000000000001c t util_format_g8r8_sint_fetch_signed
0000000000278710 0000000000000080 t util_format_g8r8_sint_pack_unsigned
0000000000278790 0000000000000094 t util_format_g16r16_unorm_unpack_rgba_float
0000000000278830 0000000000000104 t util_format_g16r16_unorm_pack_rgba_float
0000000000278940 000000000000003c t util_format_g16r16_unorm_fetch_rgba_float
0000000000278980 0000000000000074 t util_format_g16r16_unorm_unpack_rgba_8unorm
0000000000278a00 000000000000008c t util_format_g16r16_unorm_pack_rgba_8unorm
0000000000278a90 0000000000000094 t util_format_g16r16_snorm_unpack_rgba_float
0000000000278b30 0000000000000114 t util_format_g16r16_snorm_pack_rgba_float
0000000000278c50 000000000000003c t util_format_g16r16_snorm_fetch_rgba_float
0000000000278c90 000000000000008c t util_format_g16r16_snorm_unpack_rgba_8unorm
0000000000278d20 000000000000008c t util_format_g16r16_snorm_pack_rgba_8unorm
0000000000278db0 00000000000000a0 t util_format_a8b8g8r8_snorm_unpack_rgba_float
0000000000278e50 00000000000001b0 t util_format_a8b8g8r8_snorm_pack_rgba_float
0000000000279000 0000000000000050 t util_format_a8b8g8r8_snorm_fetch_rgba_float
0000000000279050 0000000000000114 t util_format_a8b8g8r8_snorm_unpack_rgba_8unorm
0000000000279170 000000000000008c t util_format_a8b8g8r8_snorm_pack_rgba_8unorm
0000000000279200 0000000000000074 t util_format_a8b8g8r8_sint_unpack_signed
0000000000279280 00000000000000f8 t util_format_a8b8g8r8_sint_pack_signed
0000000000279380 0000000000000020 t util_format_a8b8g8r8_sint_fetch_signed
00000000002793a0 00000000000000ac t util_format_a8b8g8r8_sint_pack_unsigned
0000000000279450 000000000000009c t util_format_x8b8g8r8_snorm_unpack_rgba_float
00000000002794f0 0000000000000160 t util_format_x8b8g8r8_snorm_pack_rgba_float
0000000000279650 0000000000000050 t util_format_x8b8g8r8_snorm_fetch_rgba_float
00000000002796a0 00000000000000ec t util_format_x8b8g8r8_snorm_unpack_rgba_8unorm
0000000000279790 000000000000007c t util_format_x8b8g8r8_snorm_pack_rgba_8unorm
0000000000279810 0000000000000070 t util_format_x8b8g8r8_sint_unpack_signed
0000000000279880 00000000000000c0 t util_format_x8b8g8r8_sint_pack_signed
0000000000279940 0000000000000024 t util_format_x8b8g8r8_sint_fetch_signed
0000000000279970 0000000000000094 t util_format_x8b8g8r8_sint_pack_unsigned
0000000000279a10 0000000000000040 t util_format_r64g64b64_float_fetch_rgba_float
0000000000279a50 0000000000000090 t util_format_r64g64b64_float_pack_rgba_float
0000000000279ae0 000000000000009c t util_format_r64g64b64_float_unpack_rgba_float
0000000000279b80 00000000000000bc t util_format_r64g64b64_float_pack_rgba_8unorm
0000000000279c40 000000000000018c t util_format_r64g64b64_float_unpack_rgba_8unorm
0000000000279dd0 0000000000000034 t util_format_r64g64b64a64_float_fetch_rgba_float
0000000000279e10 0000000000000094 t util_format_r64g64b64a64_float_pack_rgba_float
0000000000279eb0 0000000000000094 t util_format_r64g64b64a64_float_unpack_rgba_float
0000000000279f50 00000000000000c4 t util_format_r64g64b64a64_float_pack_rgba_8unorm
000000000027a020 00000000000001d4 t util_format_r64g64b64a64_float_unpack_rgba_8unorm
000000000027a200 000000000000002c t util_format_r32g32b32_float_fetch_rgba_float
000000000027a230 0000000000000084 t util_format_r32g32b32_float_pack_rgba_float
000000000027a2c0 0000000000000090 t util_format_r32g32b32_float_unpack_rgba_float
000000000027a350 00000000000000b0 t util_format_r32g32b32_float_pack_rgba_8unorm
000000000027a400 0000000000000058 t util_format_r32g32b32_unorm_fetch_rgba_float
000000000027a460 000000000000010c t util_format_r32g32b32_unorm_pack_rgba_float
000000000027a570 00000000000000b4 t util_format_r32g32b32_unorm_unpack_rgba_float
000000000027a630 00000000000000bc t util_format_r32g32b32_unorm_pack_rgba_8unorm
000000000027a6f0 0000000000000098 t util_format_r32g32b32_unorm_unpack_rgba_8unorm
000000000027a790 0000000000000030 t util_format_r32g32b32_uscaled_fetch_rgba_float
000000000027a7c0 00000000000000e8 t util_format_r32g32b32_uscaled_pack_rgba_float
000000000027a8b0 0000000000000098 t util_format_r32g32b32_uscaled_unpack_rgba_float
000000000027a950 00000000000000a4 t util_format_r32g32b32_uscaled_pack_rgba_8unorm
000000000027aa00 00000000000000a4 t util_format_r32g32b32_uscaled_unpack_rgba_8unorm
000000000027aab0 0000000000000058 t util_format_r32g32b32_snorm_fetch_rgba_float
000000000027ab10 0000000000000114 t util_format_r32g32b32_snorm_pack_rgba_float
000000000027ac30 00000000000000b4 t util_format_r32g32b32_snorm_unpack_rgba_float
000000000027acf0 00000000000000bc t util_format_r32g32b32_snorm_pack_rgba_8unorm
000000000027adb0 00000000000000b4 t util_format_r32g32b32_snorm_unpack_rgba_8unorm
000000000027ae70 0000000000000030 t util_format_r32g32b32_sscaled_fetch_rgba_float
000000000027aea0 00000000000000e8 t util_format_r32g32b32_sscaled_pack_rgba_float
000000000027af90 0000000000000098 t util_format_r32g32b32_sscaled_unpack_rgba_float
000000000027b030 00000000000000a4 t util_format_r32g32b32_sscaled_pack_rgba_8unorm
000000000027b0e0 00000000000000a8 t util_format_r32g32b32_sscaled_unpack_rgba_8unorm
000000000027b190 0000000000000114 t util_format_r16g16b16_float_fetch_rgba_float
000000000027b2b0 0000000000000134 t util_format_r16g16b16_float_unpack_rgba_float
000000000027b3f0 0000000000000060 t util_format_r16g16b16_unorm_fetch_rgba_float
000000000027b450 0000000000000174 t util_format_r16g16b16_unorm_pack_rgba_float
000000000027b5d0 00000000000000c0 t util_format_r16g16b16_unorm_unpack_rgba_float
000000000027b690 00000000000000c0 t util_format_r16g16b16_unorm_pack_rgba_8unorm
000000000027b750 0000000000000098 t util_format_r16g16b16_unorm_unpack_rgba_8unorm
000000000027b7f0 0000000000000048 t util_format_r16g16b16_uscaled_fetch_rgba_float
000000000027b840 00000000000000f4 t util_format_r16g16b16_uscaled_pack_rgba_float
000000000027b940 00000000000000ac t util_format_r16g16b16_uscaled_unpack_rgba_float
000000000027b9f0 00000000000000a8 t util_format_r16g16b16_uscaled_pack_rgba_8unorm
000000000027baa0 00000000000000a4 t util_format_r16g16b16_uscaled_unpack_rgba_8unorm
000000000027bb50 0000000000000058 t util_format_r16g16b16_snorm_fetch_rgba_float
000000000027bbb0 0000000000000174 t util_format_r16g16b16_snorm_pack_rgba_float
000000000027bd30 00000000000000b8 t util_format_r16g16b16_snorm_unpack_rgba_float
000000000027bdf0 00000000000000c0 t util_format_r16g16b16_snorm_pack_rgba_8unorm
000000000027beb0 00000000000000b4 t util_format_r16g16b16_snorm_unpack_rgba_8unorm
000000000027bf70 0000000000000040 t util_format_r16g16b16_sscaled_fetch_rgba_float
000000000027bfb0 00000000000000fc t util_format_r16g16b16_sscaled_pack_rgba_float
000000000027c0b0 00000000000000a4 t util_format_r16g16b16_sscaled_unpack_rgba_float
000000000027c160 00000000000000a8 t util_format_r16g16b16_sscaled_pack_rgba_8unorm
000000000027c210 00000000000000b0 t util_format_r16g16b16_sscaled_unpack_rgba_8unorm
000000000027c2c0 0000000000000054 t util_format_r32g32b32_fixed_fetch_rgba_float
000000000027c320 0000000000000108 t util_format_r32g32b32_fixed_pack_rgba_float
000000000027c430 00000000000000b4 t util_format_r32g32b32_fixed_unpack_rgba_float
000000000027c4f0 00000000000000c4 t util_format_r32g32b32_fixed_pack_rgba_8unorm
000000000027c5c0 0000000000000190 t util_format_r32g32b32_fixed_unpack_rgba_8unorm
000000000027c750 000000000000002c t util_format_r16g16b16_uint_fetch_unsigned
000000000027c780 00000000000000d4 t util_format_r16g16b16_uint_pack_signed
000000000027c860 00000000000000a0 t util_format_r16g16b16_uint_pack_unsigned
000000000027c900 0000000000000094 t util_format_r16g16b16_uint_unpack_unsigned
000000000027c9a0 000000000000002c t util_format_r16g16b16_sint_fetch_signed
000000000027c9d0 00000000000000d4 t util_format_r16g16b16_sint_pack_signed
000000000027cab0 0000000000000094 t util_format_r16g16b16_sint_unpack_signed
000000000027cb50 00000000000000a0 t util_format_r16g16b16_sint_pack_unsigned
000000000027cbf0 0000000000000020 t util_format_r32g32b32_uint_fetch_unsigned
000000000027cc10 0000000000000094 t util_format_r32g32b32_uint_pack_signed
000000000027ccb0 000000000000007c t util_format_r32g32b32_uint_pack_unsigned
000000000027cd30 0000000000000088 t util_format_r32g32b32_uint_unpack_unsigned
000000000027cdc0 0000000000000020 t util_format_r32g32b32_sint_fetch_signed
000000000027cde0 000000000000007c t util_format_r32g32b32_sint_pack_signed
000000000027ce60 0000000000000088 t util_format_r32g32b32_sint_unpack_signed
000000000027cef0 000000000000009c t util_format_r32g32b32_sint_pack_unsigned
000000000027cf90 000000000000001c t util_format_r8_uscaled_fetch_rgba_float
000000000027cfb0 0000000000000020 t util_format_a1b5g5r5_uint_fetch_unsigned
000000000027cfd0 0000000000000064 t util_format_r32_sscaled_pack_rgba_8unorm
000000000027d040 000000000000006c t util_format_r16_sscaled_pack_rgba_8unorm
000000000027d0b0 0000000000000098 t util_format_l8_unorm_pack_rgba_float
000000000027d150 0000000000000098 t util_format_a8_unorm_pack_rgba_float
000000000027d1f0 00000000000000a8 t util_format_r32_float_unpack_rgba_8unorm
000000000027d2a0 00000000000000ac t util_format_a32_float_unpack_rgba_8unorm
000000000027d350 00000000000000a8 t util_format_l32_float_unpack_rgba_8unorm
000000000027d400 00000000000000a8 t util_format_i32_float_unpack_rgba_8unorm
000000000027d4b0 0000000000000068 t util_format_r8_srgb_pack_rgba_8unorm
000000000027d520 00000000000000e0 t util_format_r32g32_float_unpack_rgba_8unorm
000000000027d600 00000000000000e0 t util_format_l32a32_float_unpack_rgba_8unorm
000000000027d6e0 00000000000000e0 t util_format_r32a32_float_unpack_rgba_8unorm
000000000027d7c0 00000000000000c8 t util_format_r8g8_unorm_pack_rgba_float
000000000027d890 00000000000000c8 t util_format_g8r8_unorm_pack_rgba_float
000000000027d960 00000000000000c8 t util_format_l8a8_unorm_pack_rgba_float
000000000027da30 00000000000000c8 t util_format_a8r8_unorm_pack_rgba_float
000000000027db00 00000000000000e8 t util_format_a16_float_unpack_rgba_8unorm
000000000027dbf0 00000000000000e8 t util_format_r16_float_unpack_rgba_8unorm
000000000027dce0 00000000000000e8 t util_format_i16_float_unpack_rgba_8unorm
000000000027ddd0 00000000000000e8 t util_format_l16_float_unpack_rgba_8unorm
000000000027dec0 0000000000000110 t util_format_r32g32b32x32_float_unpack_rgba_8unorm
000000000027dfd0 000000000000005c t util_format_r8_unorm_pack_rgba_8unorm
000000000027e030 000000000000005c t util_format_i8_unorm_pack_rgba_8unorm
000000000027e090 00000000000000fc t util_format_r8g8b8_unorm_pack_rgba_float
000000000027e190 00000000000000fc t util_format_b8g8r8_unorm_pack_rgba_float
000000000027e290 00000000000000f8 t util_format_r8g8b8x8_unorm_pack_rgba_float
000000000027e390 00000000000000f8 t util_format_b8g8r8x8_unorm_pack_rgba_float
000000000027e490 0000000000000120 t util_format_r32g32b32_float_unpack_rgba_8unorm
000000000027e5b0 00000000000000f4 t util_format_x8b8g8r8_unorm_pack_rgba_float
000000000027e6b0 00000000000000f4 t util_format_x8r8g8b8_unorm_pack_rgba_float
000000000027e7b0 0000000000000140 t util_format_r32g32b32a32_float_unpack_rgba_8unorm
000000000027e8f0 0000000000000068 t util_format_r8a8_unorm_pack_rgba_8unorm
000000000027e960 0000000000000144 t util_format_l16a16_float_unpack_rgba_8unorm
000000000027eab0 0000000000000144 t util_format_r16a16_float_unpack_rgba_8unorm
000000000027ec00 0000000000000144 t util_format_r16g16_float_unpack_rgba_8unorm
000000000027ed50 0000000000000124 t util_format_a8r8g8b8_unorm_pack_rgba_float
000000000027ee80 0000000000000124 t util_format_a8b8g8r8_unorm_pack_rgba_float
000000000027efb0 0000000000000124 t util_format_z24_unorm_s8_uint_as_r8g8b8a8_pack_rgba_float
000000000027f0e0 0000000000000124 t util_format_b8g8r8a8_unorm_pack_rgba_float
000000000027f210 0000000000000148 t util_format_r8sg8sb8ux8u_norm_pack_rgba_float
000000000027f360 0000000000000054 t util_format_r8g8b8a8_unorm_fetch_rgba_float
000000000027f3c0 00000000000001a4 t util_format_r16g16b16x16_float_unpack_rgba_8unorm
000000000027f570 0000000000000060 t util_format_i8_snorm_pack_rgba_8unorm
000000000027f5d0 000000000000006c t util_format_r8_uscaled_pack_rgba_8unorm
000000000027f640 0000000000000060 t util_format_r8_snorm_pack_rgba_8unorm
000000000027f6a0 000000000000006c t util_format_r8_sscaled_pack_rgba_8unorm
000000000027f710 00000000000001c0 t util_format_r16g16b16_float_unpack_rgba_8unorm
000000000027f8d0 0000000000000200 t util_format_r16g16b16a16_float_unpack_rgba_8unorm
000000000027fad0 0000000000000074 t util_format_r8_uscaled_unpack_rgba_8unorm
000000000027fb50 000000000000006c t util_format_r4a4_unorm_pack_rgba_8unorm
000000000027fbc0 0000000000000070 t util_format_r8a8_snorm_pack_rgba_8unorm
000000000027fc30 0000000000000054 t util_format_r32_float_pack_rgba_float
000000000027fc90 0000000000000064 t util_format_i32_float_pack_rgba_8unorm
000000000027fd00 0000000000000054 t util_format_i32_sint_pack_signed
000000000027fd60 0000000000000054 t util_format_l32_sint_pack_signed
000000000027fdc0 0000000000000054 t util_format_i32_uint_pack_unsigned
000000000027fe20 0000000000000054 t util_format_l32_uint_pack_unsigned
000000000027fe80 0000000000000054 t util_format_i32_float_pack_rgba_float
000000000027fee0 0000000000000074 t util_format_i16_unorm_pack_rgba_8unorm
000000000027ff60 0000000000000074 t util_format_r16_unorm_pack_rgba_8unorm
000000000027ffe0 0000000000000074 t util_format_r16_snorm_pack_rgba_8unorm
0000000000280060 0000000000000074 t util_format_i16_snorm_pack_rgba_8unorm
00000000002800e0 0000000000000064 t util_format_r32_float_pack_rgba_8unorm
0000000000280150 0000000000000078 t util_format_r8g8b8a8_unorm_unpack_rgba_8unorm
00000000002801d0 000000000000006c t util_format_r8_uscaled_unpack_rgba_float
0000000000280240 000000000000005c t util_format_i32_uint_pack_signed
00000000002802a0 000000000000005c t util_format_l32_uint_pack_signed
0000000000280300 000000000000005c t util_format_i32_sint_pack_unsigned
0000000000280360 000000000000005c t util_format_l32_sint_pack_unsigned
00000000002803c0 0000000000000088 t util_format_r8_uscaled_pack_rgba_float
0000000000280450 000000000000008c t util_format_r16a16_unorm_pack_rgba_8unorm
00000000002804e0 000000000000008c t util_format_r16a16_snorm_pack_rgba_8unorm
0000000000280570 000000000000006c t util_format_i16_sint_pack_unsigned
00000000002805e0 000000000000006c t util_format_l16_sint_pack_unsigned
0000000000280650 0000000000000064 t util_format_i8_uint_pack_unsigned
00000000002806c0 0000000000000064 t util_format_l8_uint_pack_unsigned
0000000000280730 0000000000000064 t util_format_i8_sint_pack_unsigned
00000000002807a0 0000000000000064 t util_format_l8_sint_pack_unsigned
0000000000280810 000000000000006c t util_format_i16_uint_pack_unsigned
0000000000280880 000000000000006c t util_format_l16_uint_pack_unsigned
00000000002808f0 0000000000000084 t util_format_r8a8_sint_pack_unsigned
0000000000280980 0000000000000088 t util_format_r16a16_uint_pack_unsigned
0000000000280a10 0000000000000088 t util_format_r16a16_sint_pack_unsigned
0000000000280aa0 0000000000000044 t util_format_r8g8b8a8_unorm_pack_rgba_8unorm
0000000000280af0 0000000000000084 t util_format_r8a8_uint_pack_unsigned
0000000000280b80 0000000000000074 t util_format_a1b5g5r5_uint_unpack_unsigned
0000000000280c00 0000000000000080 t util_format_l16_sint_pack_signed
0000000000280c80 0000000000000078 t util_format_i8_uint_pack_signed
0000000000280d00 0000000000000078 t util_format_l8_uint_pack_signed
0000000000280d80 0000000000000078 t util_format_i8_sint_pack_signed
0000000000280e00 0000000000000080 t util_format_i16_sint_pack_signed
0000000000280e80 0000000000000078 t util_format_l16_uint_pack_signed
0000000000280f00 0000000000000078 t util_format_l8_sint_pack_signed
0000000000280f80 0000000000000078 t util_format_i16_uint_pack_signed
0000000000281000 0000000000000094 t util_format_r16a16_uint_pack_signed
00000000002810a0 0000000000000098 t util_format_r8a8_uint_pack_signed
0000000000281140 0000000000000098 t util_format_r8_unorm_pack_rgba_float
00000000002811e0 0000000000000098 t util_format_i8_unorm_pack_rgba_float
0000000000281280 00000000000000a0 t util_format_r8a8_sint_pack_signed
0000000000281320 00000000000000a4 t util_format_r16a16_sint_pack_signed
00000000002813d0 00000000000000a0 t util_format_r10g10b10a2_sscaled_pack_rgba_8unorm
0000000000281470 00000000000000a4 t util_format_b10g10r10a2_sscaled_pack_rgba_8unorm
0000000000281520 00000000000000c8 t util_format_r8a8_unorm_pack_rgba_float
00000000002815f0 00000000000000a4 t util_format_r8g8b8a8_unorm_unpack_rgba_float
00000000002816a0 00000000000000d0 t util_format_r16_float_pack_rgba_8unorm
0000000000281770 00000000000000d0 t util_format_a16_float_pack_rgba_8unorm
0000000000281840 00000000000000b4 t util_format_l16_float_pack_rgba_float
0000000000281900 00000000000000d0 t util_format_l16_float_pack_rgba_8unorm
00000000002819d0 00000000000000b4 t util_format_r16_float_pack_rgba_float
0000000000281a90 00000000000000b4 t util_format_a16_float_pack_rgba_float
0000000000281b50 00000000000000d0 t util_format_i16_float_pack_rgba_8unorm
0000000000281c20 00000000000000b4 t util_format_i16_float_pack_rgba_float
0000000000281ce0 00000000000000c8 t util_format_l8_srgb_pack_rgba_float
0000000000281db0 00000000000000c8 t util_format_r8_srgb_pack_rgba_float
0000000000281e80 00000000000000a4 t util_format_a1b5g5r5_uint_pack_unsigned
0000000000281f30 00000000000000b8 t util_format_i8_snorm_pack_rgba_float
0000000000281ff0 00000000000000b8 t util_format_i16_unorm_pack_rgba_float
00000000002820b0 00000000000000b8 t util_format_r8_snorm_pack_rgba_float
0000000000282170 00000000000000c0 t util_format_i16_snorm_pack_rgba_float
0000000000282230 00000000000000b8 t util_format_r16_unorm_pack_rgba_float
00000000002822f0 00000000000000c0 t util_format_r16_snorm_pack_rgba_float
00000000002823b0 0000000000000108 t util_format_r16a16_float_pack_rgba_float
00000000002824c0 0000000000000108 t util_format_l16a16_float_pack_rgba_float
00000000002825d0 0000000000000108 t util_format_r16g16_float_pack_rgba_float
00000000002826e0 0000000000000108 t util_format_l8a8_srgb_pack_rgba_float
00000000002827f0 0000000000000128 t util_format_l16a16_float_pack_rgba_8unorm
0000000000282920 0000000000000128 t util_format_r16g16_float_pack_rgba_8unorm
0000000000282a50 0000000000000128 t util_format_r16a16_float_pack_rgba_8unorm
0000000000282b80 0000000000000120 t util_format_r8g8_srgb_pack_rgba_float
0000000000282ca0 000000000000019c t util_format_r16g16b16x16_float_pack_rgba_float
0000000000282e40 0000000000000170 t util_format_r16g16b16_float_pack_rgba_float
0000000000282fb0 00000000000001c8 t util_format_r16g16b16x16_float_pack_rgba_8unorm
0000000000283180 00000000000001a0 t util_format_r16g16b16_float_pack_rgba_8unorm
0000000000283320 00000000000001dc t util_format_r16g16b16a16_float_pack_rgba_8unorm
0000000000283500 00000000000001b8 t util_format_r8g8b8a8_srgb_pack_rgba_float
00000000002836c0 000000000000019c t util_format_r16g16b16a16_float_pack_rgba_float
0000000000283860 000000000000017c t util_format_r8g8b8_srgb_pack_rgba_float
00000000002839e0 000000000000017c t util_format_b8g8r8_srgb_pack_rgba_float
0000000000283b60 000000000000017c t util_format_r8g8b8x8_srgb_pack_rgba_float
0000000000283ce0 000000000000017c t util_format_b8g8r8x8_srgb_pack_rgba_float
0000000000283e60 000000000000017c t util_format_x8b8g8r8_srgb_pack_rgba_float
0000000000283fe0 000000000000017c t util_format_x8r8g8b8_srgb_pack_rgba_float
0000000000284160 0000000000000178 t util_format_b5g6r5_srgb_pack_rgba_float
00000000002842e0 00000000000001bc t util_format_a8r8g8b8_srgb_pack_rgba_float
00000000002844a0 00000000000001bc t util_format_a8b8g8r8_srgb_pack_rgba_float
0000000000284660 00000000000001b8 t util_format_b8g8r8a8_srgb_pack_rgba_float
0000000000284820 00000000000000c4 t util_format_a1b5g5r5_uint_pack_signed
00000000002848f0 0000000000000114 t util_format_r16a16_snorm_pack_rgba_float
0000000000284a10 0000000000000108 t util_format_r8a8_snorm_pack_rgba_float
0000000000284b20 0000000000000104 t util_format_r16a16_unorm_pack_rgba_float
0000000000284c30 0000000000000100 t util_format_r4a4_unorm_pack_rgba_float
0000000000284d30 0000000000000124 t util_format_r8g8b8a8_unorm_pack_rgba_float
0000000000284e60 00000000000011d4 t util_format_description
0000000000286040 0000000000000078 t _eglGrowArray
00000000002860c0 0000000000000078 t _eglCreateArray
0000000000286140 0000000000000068 t _eglDestroyArray
00000000002861b0 0000000000000050 t _eglAppendArray
0000000000286200 0000000000000044 t _eglFindArray
0000000000286250 00000000000000e0 t _eglFilterArray
0000000000286330 00000000000000c0 t _eglFlattenArray
00000000002863f0 0000000000000014 t one_time_fini
0000000000286410 0000000000000034 t generic_nop
0000000000286450 0000000000000128 t check_compatible
0000000000286580 00000000000000a4 t _mesa_initialize
0000000000286630 00000000000003d8 t _mesa_init_constants
0000000000286a10 0000000000000078 t _mesa_alloc_dispatch_table
0000000000286a90 0000000000000038 t _mesa_initialize_dispatch_tables
0000000000286ad0 00000000000006c8 t _mesa_initialize_context
00000000002871a0 0000000000000344 t _mesa_copy_context
00000000002874f0 000000000000048c t _mesa_make_current
0000000000287980 00000000000003cc t _mesa_free_context_data
0000000000287d50 000000000000002c t _mesa_destroy_context
0000000000287d80 00000000000000b8 t _mesa_share_state
0000000000287e40 0000000000000004 t _mesa_get_current_context
0000000000287e50 0000000000000088 T _mesa_Finish
0000000000287ee0 0000000000000088 T _mesa_Flush
0000000000287f70 0000000000000004 t _mesa_get_cpu_features
0000000000287f80 00000000000000a4 t _mesa_print_info
0000000000288030 0000000000000024 t _mesa_init_debug
0000000000288060 0000000000000170 t validate_params
00000000002881d0 000000000000011c t _mesa_lock_debug_state
00000000002882f0 00000000000000a0 t validate_length
0000000000288390 0000000000000104 t debug_message_store
00000000002884a0 00000000000000bc t debug_clear_group
0000000000288560 000000000000027c t debug_make_group_writable.isra.0
00000000002887e0 0000000000000214 t log_msg_locked_and_unlock
0000000000288a00 000000000000005c t _mesa_debug_get_id
0000000000288a60 0000000000000088 t _mesa_debug_is_message_enabled
0000000000288af0 0000000000000090 t _mesa_set_debug_state_int
0000000000288b80 00000000000000d0 t _mesa_get_debug_state_int
0000000000288c50 0000000000000070 t _mesa_get_debug_state_ptr
0000000000288cc0 0000000000000088 t _mesa_log_msg
0000000000288d50 0000000000000250 T _mesa_DebugMessageInsert
0000000000288fa0 00000000000002ac T _mesa_GetDebugMessageLog
0000000000289250 000000000000058c T _mesa_DebugMessageControl
00000000002897e0 0000000000000064 T _mesa_DebugMessageCallback
0000000000289850 00000000000001e0 T _mesa_PushDebugGroup
0000000000289a30 0000000000000144 T _mesa_PopDebugGroup
0000000000289b80 0000000000000010 t _mesa_init_debug_output
0000000000289b90 000000000000010c t _mesa_free_errors_data
0000000000289ca0 000000000000009c T _mesa_StringMarkerGREMEDY
0000000000289d40 0000000000000050 t _mesa_ClearDepth
0000000000289d90 0000000000000054 t _mesa_ClearDepthf
0000000000289df0 00000000000000b8 T _mesa_DepthFunc_no_error
0000000000289eb0 00000000000000e4 t _mesa_DepthFunc
0000000000289fa0 00000000000000b8 t _mesa_DepthMask
000000000028a060 000000000000010c t _mesa_DepthBoundsEXT
000000000028a170 0000000000000024 t _mesa_init_depth
000000000028a1a0 0000000000000038 t check_atlas_for_deleted_list
000000000028a1e0 000000000000010c t dlist_alloc
000000000028a2f0 00000000000000b8 t save_SetFragmentShaderConstantATI
000000000028a3b0 0000000000000084 t save_BindFragmentShaderATI
000000000028a440 000000000000002c t save_MultiDrawElementsIndirect
000000000028a470 000000000000002c t save_MultiDrawArraysIndirect
000000000028a4a0 000000000000002c t save_DrawElementsIndirect
000000000028a4d0 000000000000002c t save_DrawArraysIndirect
000000000028a500 000000000000002c t save_DrawElementsInstancedBaseVertexBaseInstance
000000000028a530 000000000000002c t save_DrawElementsInstancedBaseInstance
000000000028a560 000000000000002c t save_DrawArraysInstancedBaseInstance
000000000028a590 000000000000002c t save_DrawElementsInstancedBaseVertexARB
000000000028a5c0 000000000000002c t save_DrawElementsInstancedARB
000000000028a5f0 000000000000002c t save_DrawArraysInstancedARB
000000000028a620 000000000000002c t save_DispatchComputeIndirect
000000000028a650 000000000000002c t save_NewList
000000000028a680 0000000000000180 t save_VertexAttrib4fvNV
000000000028a800 00000000000001bc t save_VertexAttribL1ui64vARB
000000000028a9c0 00000000000001b0 t save_VertexAttribL1ui64ARB
000000000028ab70 0000000000000220 t save_VertexAttribL2dv
000000000028ad90 00000000000001d8 t save_VertexAttribL1dv
000000000028af70 0000000000000220 t save_VertexAttribL2d
000000000028b190 00000000000001d8 t save_VertexAttribL1d
000000000028b370 00000000000001d4 t save_MultiTexCoordP4uiv
000000000028b550 00000000000001d0 t save_MultiTexCoordP4ui
000000000028b720 00000000000001b8 t save_MultiTexCoordP3uiv
000000000028b8e0 00000000000001b4 t save_MultiTexCoordP3ui
000000000028baa0 000000000000017c t save_MultiTexCoordP2uiv
000000000028bc20 0000000000000178 t save_MultiTexCoordP2ui
000000000028bda0 0000000000000158 t save_MultiTexCoordP1uiv
000000000028bf00 0000000000000154 t save_MultiTexCoordP1ui
000000000028c060 00000000000001b4 t save_TexCoordP4uiv
000000000028c220 00000000000001b0 t save_TexCoordP4ui
000000000028c3d0 0000000000000198 t save_TexCoordP3uiv
000000000028c570 0000000000000194 t save_TexCoordP3ui
000000000028c710 000000000000015c t save_TexCoordP2uiv
000000000028c870 0000000000000158 t save_TexCoordP2ui
000000000028c9d0 0000000000000138 t save_TexCoordP1uiv
000000000028cb10 0000000000000134 t save_TexCoordP1ui
000000000028cc50 00000000000001b0 t save_VertexP4uiv
000000000028ce00 00000000000001ac t save_VertexP4ui
000000000028cfb0 0000000000000194 t save_VertexP3uiv
000000000028d150 0000000000000190 t save_VertexP3ui
000000000028d2e0 0000000000000158 t save_VertexP2uiv
000000000028d440 0000000000000154 t save_VertexP2ui
000000000028d5a0 0000000000000230 t save_VertexAttribI4uiv
000000000028d7d0 000000000000020c t save_VertexAttribI3uiv
000000000028d9e0 00000000000001fc t save_VertexAttribI2uiv
000000000028dbe0 0000000000000228 t save_VertexAttribI4ui
000000000028de10 0000000000000204 t save_VertexAttribI3ui
000000000028e020 00000000000001f4 t save_VertexAttribI2ui
000000000028e220 00000000000001c8 t save_VertexAttribI1ui
000000000028e3f0 0000000000000238 t save_VertexAttribI4iv
000000000028e630 0000000000000230 t save_VertexAttribI3iv
000000000028e860 00000000000001f4 t save_VertexAttribI2iv
000000000028ea60 0000000000000228 t save_VertexAttribI4i
000000000028ec90 0000000000000204 t save_VertexAttribI3i
000000000028eea0 00000000000001f4 t save_VertexAttribI2i
000000000028f0a0 00000000000001c8 t save_VertexAttribI1i
000000000028f270 000000000000023c t save_VertexAttrib4fvARB
000000000028f4b0 000000000000023c t save_VertexAttrib4fARB
000000000028f6f0 0000000000000224 t save_VertexAttrib3fvARB
000000000028f920 000000000000021c t save_VertexAttrib3fARB
000000000028fb40 0000000000000214 t save_VertexAttrib2fvARB
000000000028fd60 0000000000000214 t save_VertexAttrib2fARB
000000000028ff80 00000000000001e8 t save_VertexAttrib1fvARB
0000000000290170 00000000000001e0 t save_VertexAttrib1fARB
0000000000290350 000000000000009c t save_EvalPoint2
00000000002903f0 0000000000000088 t save_EvalPoint1
0000000000290480 000000000000009c t save_EvalCoord2f
0000000000290520 0000000000000008 t save_EvalCoord2fv
0000000000290530 0000000000000094 t save_EvalCoord1f
00000000002905d0 0000000000000008 t save_EvalCoord1fv
00000000002905e0 0000000000000080 t save_End
0000000000290660 0000000000000278 t save_VertexAttribL4dv
00000000002908e0 000000000000026c t save_VertexAttribL3dv
0000000000290b50 0000000000000278 t save_VertexAttribL4d
0000000000290dd0 0000000000000268 t save_VertexAttribL3d
0000000000291040 0000000000000178 t unpack_image.part.0
00000000002911c0 00000000000000dc t save_TexCoord1f
00000000002912a0 00000000000000dc t save_FogCoordfEXT
0000000000291380 00000000000000dc t save_Indexf
0000000000291460 00000000000000e0 t save_TexCoord1fv
0000000000291540 00000000000000e0 t save_Indexfv
0000000000291620 00000000000000e0 t save_EdgeFlag
0000000000291700 00000000000000e0 t save_FogCoordfvEXT
00000000002917e0 00000000000000e8 t save_Vertex2f
00000000002918d0 00000000000000ec t save_TexCoord2f
00000000002919c0 00000000000000ec t save_TexCoord2fv
0000000000291ab0 0000000000000114 t save_TexCoord3f
0000000000291bd0 00000000000000e8 t save_Vertex2fv
0000000000291cc0 0000000000000110 t save_Vertex3f
0000000000291dd0 0000000000000114 t save_SecondaryColor3fEXT
0000000000291ef0 0000000000000114 t save_Color3f
0000000000292010 0000000000000114 t save_Normal3f
0000000000292130 0000000000000120 t save_TexCoord4f
0000000000292250 0000000000000120 t save_Color4f
0000000000292370 000000000000011c t save_Vertex4f
0000000000292490 0000000000000114 t save_Color3fv
00000000002925b0 0000000000000110 t save_Vertex3fv
00000000002926c0 0000000000000114 t save_Normal3fv
00000000002927e0 0000000000000100 t save_MultiTexCoord1f
00000000002928e0 0000000000000114 t save_SecondaryColor3fvEXT
0000000000292a00 0000000000000114 t save_TexCoord3fv
0000000000292b20 0000000000000100 t save_MultiTexCoord1fv
0000000000292c20 0000000000000110 t save_MultiTexCoord2f
0000000000292d30 0000000000000118 t save_Vertex4fv
0000000000292e50 000000000000011c t save_Color4fv
0000000000292f70 000000000000011c t save_TexCoord4fv
0000000000293090 000000000000010c t save_MultiTexCoord2fv
00000000002931a0 0000000000000138 t save_MultiTexCoord3f
00000000002932e0 0000000000000144 t save_MultiTexCoord4f
0000000000293430 0000000000000134 t save_MultiTexCoord3fv
0000000000293570 000000000000013c t save_MultiTexCoord4fv
00000000002936b0 000000000000005c t execute_list
0000000000293710 0000000000004ba8 t execute_list.part.0
00000000002982c0 0000000000000144 t save_VertexAttrib1fNV
0000000000298410 0000000000000144 t save_VertexAttrib1fvNV
0000000000298560 0000000000000154 t save_VertexAttrib2fNV
00000000002986c0 0000000000000150 t save_VertexAttrib2fvNV
0000000000298810 000000000000017c t save_VertexAttrib3fNV
0000000000298990 0000000000000178 t save_VertexAttrib3fvNV
0000000000298b10 0000000000000188 t save_VertexAttrib4fNV
0000000000298ca0 000000000000017c t r11g11b10f_to_float3.constprop.0
0000000000298e20 00000000000003f0 t save_SecondaryColorP3ui
0000000000299210 00000000000003f0 t save_ColorP3ui
0000000000299600 00000000000003f0 t save_NormalP3ui
00000000002999f0 00000000000003f8 t save_SecondaryColorP3uiv
0000000000299df0 00000000000003f8 t save_NormalP3uiv
000000000029a1f0 00000000000003f8 t save_ColorP3uiv
000000000029a5f0 00000000000004c4 t save_ColorP4ui
000000000029aac0 00000000000004c8 t save_ColorP4uiv
000000000029af90 0000000000000150 t save_CallLists
000000000029b0e0 0000000000000954 t save_VertexAttribP4ui
000000000029ba40 000000000000095c t save_VertexAttribP4uiv
000000000029c3a0 00000000000003e8 t save_VertexAttribP1ui
000000000029c790 00000000000003fc t save_VertexAttribP1uiv
000000000029cb90 000000000000070c t save_VertexAttribP2ui
000000000029d2a0 00000000000006f0 t save_VertexAttribP2uiv
000000000029d990 0000000000000a90 t save_VertexAttribP3uiv
000000000029e420 0000000000000a90 t save_VertexAttribP3ui
000000000029eeb0 000000000000003c t _mesa_delete_bitmap_atlas
000000000029eef0 000000000000000c t _mesa_lookup_list
000000000029ef00 0000000000000410 t _mesa_delete_list
000000000029f310 00000000000000a4 t destroy_list
000000000029f3c0 0000000000000024 t _mesa_dlist_alloc_aligned
000000000029f3f0 0000000000000050 t _mesa_dlist_alloc_opcode
000000000029f440 0000000000000088 t _mesa_compile_error
000000000029f4d0 0000000000000128 t save_NamedProgramLocalParameter4fEXT
000000000029f600 000000000000000c t save_NamedProgramLocalParameter4fvEXT
000000000029f610 000000000000001c t save_NamedProgramLocalParameter4dvEXT
000000000029f630 0000000000000014 t save_NamedProgramLocalParameter4dEXT
000000000029f650 0000000000000170 t save_NamedProgramStringEXT
000000000029f7c0 0000000000000218 t save_CompressedMultiTexSubImage3DEXT
000000000029f9e0 00000000000001f0 t save_CompressedMultiTexSubImage2DEXT
000000000029fbd0 00000000000001c4 t save_CompressedMultiTexSubImage1DEXT
000000000029fda0 0000000000000284 t save_CompressedMultiTexImage3DEXT
00000000002a0030 0000000000000264 t save_CompressedMultiTexImage2DEXT
00000000002a02a0 0000000000000250 t save_CompressedMultiTexImage1DEXT
00000000002a04f0 0000000000000218 t save_CompressedTextureSubImage3DEXT
00000000002a0710 00000000000001f0 t save_CompressedTextureSubImage2DEXT
00000000002a0900 00000000000001c4 t save_CompressedTextureSubImage1DEXT
00000000002a0ad0 0000000000000284 t save_CompressedTextureImage3DEXT
00000000002a0d60 0000000000000264 t save_CompressedTextureImage2DEXT
00000000002a0fd0 0000000000000250 t save_CompressedTextureImage1DEXT
00000000002a1220 0000000000000148 t save_MultiTexEnvfvEXT
00000000002a1370 00000000000000c4 t save_MultiTexEnvivEXT
00000000002a1440 000000000000002c t save_MultiTexEnviEXT
00000000002a1470 0000000000000024 t save_MultiTexEnvfEXT
00000000002a14a0 0000000000000160 t save_CopyMultiTexSubImage3DEXT
00000000002a1600 000000000000014c t save_CopyMultiTexSubImage2DEXT
00000000002a1750 0000000000000128 t save_CopyMultiTexSubImage1DEXT
00000000002a1880 000000000000014c t save_CopyMultiTexImage2DEXT
00000000002a19d0 000000000000013c t save_CopyMultiTexImage1DEXT
00000000002a1b10 00000000000001f8 t save_MultiTexSubImage3DEXT
00000000002a1d10 00000000000001e4 t save_MultiTexSubImage2DEXT
00000000002a1f00 00000000000001b4 t save_MultiTexSubImage1DEXT
00000000002a20c0 0000000000000264 t save_MultiTexImage3DEXT
00000000002a2330 0000000000000258 t save_MultiTexImage2DEXT
00000000002a2590 0000000000000240 t save_MultiTexImage1DEXT
00000000002a27d0 000000000000011c t save_MultiTexParameterfvEXT
00000000002a28f0 0000000000000024 t save_MultiTexParameterfEXT
00000000002a2920 000000000000011c t save_MultiTexParameterIuivEXT
00000000002a2a40 000000000000011c t save_MultiTexParameterIivEXT
00000000002a2b60 000000000000011c t save_MultiTexParameterivEXT
00000000002a2c80 0000000000000024 t save_MultiTexParameteriEXT
00000000002a2cb0 00000000000000e8 t save_BindMultiTextureEXT
00000000002a2da0 0000000000000160 t save_CopyTextureSubImage3DEXT
00000000002a2f00 000000000000014c t save_CopyTextureSubImage2DEXT
00000000002a3050 0000000000000128 t save_CopyTextureSubImage1DEXT
00000000002a3180 000000000000014c t save_CopyTextureImage2DEXT
00000000002a32d0 000000000000013c t save_CopyTextureImage1DEXT
00000000002a3410 00000000000001f8 t save_TextureSubImage3DEXT
00000000002a3610 00000000000001e4 t save_TextureSubImage2DEXT
00000000002a3800 00000000000001b4 t save_TextureSubImage1DEXT
00000000002a39c0 0000000000000264 t save_TextureImage3DEXT
00000000002a3c30 0000000000000258 t save_TextureImage2DEXT
00000000002a3e90 0000000000000240 t save_TextureImage1DEXT
00000000002a40d0 000000000000011c t save_TextureParameterIuivEXT
00000000002a41f0 000000000000011c t save_TextureParameterIivEXT
00000000002a4310 000000000000011c t save_TextureParameterfvEXT
00000000002a4430 0000000000000024 t save_TextureParameterfEXT
00000000002a4460 000000000000011c t save_TextureParameterivEXT
00000000002a4580 0000000000000024 t save_TextureParameteriEXT
00000000002a45b0 00000000000000c4 t save_MatrixPopEXT
00000000002a4680 00000000000000c4 t save_MatrixPushEXT
00000000002a4750 000000000000013c t save_MatrixFrustumEXT
00000000002a4890 000000000000013c t save_MatrixOrthoEXT
00000000002a49d0 00000000000000c4 t save_MatrixLoadIdentityEXT
00000000002a4aa0 00000000000000fc t save_MatrixTranslatefEXT
00000000002a4ba0 0000000000000010 t save_MatrixTranslatedEXT
00000000002a4bb0 00000000000000fc t save_MatrixScalefEXT
00000000002a4cb0 0000000000000010 t save_MatrixScaledEXT
00000000002a4cc0 0000000000000104 t save_MatrixRotatefEXT
00000000002a4dd0 0000000000000014 t save_MatrixRotatedEXT
00000000002a4df0 00000000000000fc t save_MatrixMultfEXT
00000000002a4ef0 0000000000000034 t save_MatrixMultTransposedEXT
00000000002a4f30 0000000000000034 t save_MatrixMultTransposefEXT
00000000002a4f70 0000000000000040 t save_MatrixMultdEXT
00000000002a4fb0 00000000000000fc t save_MatrixLoadfEXT
00000000002a50b0 0000000000000034 t save_MatrixLoadTransposedEXT
00000000002a50f0 0000000000000034 t save_MatrixLoadTransposefEXT
00000000002a5130 0000000000000040 t save_MatrixLoaddEXT
00000000002a5170 00000000000000dc t save_ConservativeRasterParameteriNV
00000000002a5250 00000000000000dc t save_ConservativeRasterParameterfNV
00000000002a5330 00000000000000dc t save_SubpixelPrecisionBiasNV
00000000002a5410 0000000000000154 t save_WindowRectanglesEXT
00000000002a5570 00000000000000f0 t save_PolygonOffsetClampEXT
00000000002a5660 0000000000000164 t save_ProgramUniformMatrix4x3dv
00000000002a57d0 0000000000000164 t save_ProgramUniformMatrix3x4dv
00000000002a5940 0000000000000160 t save_ProgramUniformMatrix4x2dv
00000000002a5aa0 0000000000000160 t save_ProgramUniformMatrix2x4dv
00000000002a5c00 0000000000000164 t save_ProgramUniformMatrix3x2dv
00000000002a5d70 0000000000000164 t save_ProgramUniformMatrix2x3dv
00000000002a5ee0 0000000000000160 t save_ProgramUniformMatrix4dv
00000000002a6040 0000000000000164 t save_ProgramUniformMatrix3dv
00000000002a61b0 0000000000000160 t save_ProgramUniformMatrix2dv
00000000002a6310 0000000000000164 t save_ProgramUniformMatrix4x3fv
00000000002a6480 0000000000000164 t save_ProgramUniformMatrix3x4fv
00000000002a65f0 0000000000000160 t save_ProgramUniformMatrix4x2fv
00000000002a6750 0000000000000160 t save_ProgramUniformMatrix2x4fv
00000000002a68b0 0000000000000164 t save_ProgramUniformMatrix3x2fv
00000000002a6a20 0000000000000164 t save_ProgramUniformMatrix2x3fv
00000000002a6b90 0000000000000160 t save_ProgramUniformMatrix4fv
00000000002a6cf0 0000000000000164 t save_ProgramUniformMatrix3fv
00000000002a6e60 0000000000000160 t save_ProgramUniformMatrix2fv
00000000002a6fc0 0000000000000148 t save_ProgramUniform4uiv
00000000002a7110 000000000000014c t save_ProgramUniform3uiv
00000000002a7260 0000000000000148 t save_ProgramUniform2uiv
00000000002a73b0 0000000000000148 t save_ProgramUniform1uiv
00000000002a7500 0000000000000120 t save_ProgramUniform4ui
00000000002a7620 000000000000010c t save_ProgramUniform3ui
00000000002a7730 00000000000000fc t save_ProgramUniform2ui
00000000002a7830 00000000000000e8 t save_ProgramUniform1ui
00000000002a7920 0000000000000148 t save_ProgramUniform4iv
00000000002a7a70 000000000000014c t save_ProgramUniform3iv
00000000002a7bc0 0000000000000148 t save_ProgramUniform2iv
00000000002a7d10 0000000000000148 t save_ProgramUniform1iv
00000000002a7e60 0000000000000120 t save_ProgramUniform4i
00000000002a7f80 000000000000010c t save_ProgramUniform3i
00000000002a8090 00000000000000fc t save_ProgramUniform2i
00000000002a8190 00000000000000e8 t save_ProgramUniform1i
00000000002a8280 0000000000000148 t save_ProgramUniform4dv
00000000002a83d0 000000000000014c t save_ProgramUniform3dv
00000000002a8520 0000000000000148 t save_ProgramUniform2dv
00000000002a8670 0000000000000148 t save_ProgramUniform1dv
00000000002a87c0 0000000000000148 t save_ProgramUniform4d
00000000002a8910 0000000000000130 t save_ProgramUniform3d
00000000002a8a40 0000000000000110 t save_ProgramUniform2d
00000000002a8b50 00000000000000fc t save_ProgramUniform1d
00000000002a8c50 0000000000000148 t save_ProgramUniform4fv
00000000002a8da0 000000000000014c t save_ProgramUniform3fv
00000000002a8ef0 0000000000000148 t save_ProgramUniform2fv
00000000002a9040 0000000000000148 t save_ProgramUniform1fv
00000000002a9190 000000000000011c t save_ProgramUniform4f
00000000002a92b0 0000000000000114 t save_ProgramUniform3f
00000000002a93d0 00000000000000fc t save_ProgramUniform2f
00000000002a94d0 00000000000000f4 t save_ProgramUniform1f
00000000002a95d0 00000000000000e8 t save_UseProgramStages
00000000002a96c0 0000000000000154 t save_UniformSubroutinesuiv
00000000002a9820 00000000000000e8 t save_UniformBlockBinding
00000000002a9910 00000000000000e8 t save_WaitSync
00000000002a9a00 00000000000000b4 t save_EndConditionalRender
00000000002a9ac0 00000000000000dc t save_BeginConditionalRender
00000000002a9ba0 00000000000000e8 t save_BlendEquationSeparatei
00000000002a9c90 00000000000000dc t save_BlendEquationi
00000000002a9d70 000000000000010c t save_BlendFuncSeparatei
00000000002a9e80 00000000000000e8 t save_BlendFunci
00000000002a9f70 0000000000000128 t save_SamplerParameterIuiv
00000000002aa0a0 0000000000000128 t save_SamplerParameterIiv
00000000002aa1d0 0000000000000128 t save_SamplerParameterfv
00000000002aa300 0000000000000024 t save_SamplerParameterf
00000000002aa330 0000000000000128 t save_SamplerParameteriv
00000000002aa460 0000000000000024 t save_SamplerParameteri
00000000002aa490 00000000000000dc t save_BindSampler
00000000002aa570 00000000000000b4 t save_TextureBarrierNV
00000000002aa630 00000000000000dc t save_VertexAttribDivisor
00000000002aa710 00000000000000dc t save_EndQueryIndexed
00000000002aa7f0 00000000000000e8 t save_BeginQueryIndexed
00000000002aa8e0 00000000000000fc t save_DrawTransformFeedbackStreamInstanced
00000000002aa9e0 00000000000000e8 t save_DrawTransformFeedbackInstanced
00000000002aaad0 00000000000000e8 t save_DrawTransformFeedbackStream
00000000002aabc0 00000000000000dc t save_DrawTransformFeedback
00000000002aaca0 00000000000000b4 t save_ResumeTransformFeedback
00000000002aad60 00000000000000b4 t save_PauseTransformFeedback
00000000002aae20 00000000000000dc t save_BindTransformFeedback
00000000002aaf00 00000000000000b4 t save_EndTransformFeedback
00000000002aafc0 00000000000000c4 t save_BeginTransformFeedback
00000000002ab090 0000000000000148 t save_ProgramUniform4ui64vARB
00000000002ab1e0 0000000000000148 t save_ProgramUniform3ui64vARB
00000000002ab330 0000000000000148 t save_ProgramUniform2ui64vARB
00000000002ab480 0000000000000148 t save_ProgramUniform1ui64vARB
00000000002ab5d0 0000000000000124 t save_ProgramUniform4ui64ARB
00000000002ab700 0000000000000110 t save_ProgramUniform3ui64ARB
00000000002ab810 0000000000000100 t save_ProgramUniform2ui64ARB
00000000002ab910 00000000000000e8 t save_ProgramUniform1ui64ARB
00000000002aba00 0000000000000148 t save_ProgramUniform4i64vARB
00000000002abb50 0000000000000148 t save_ProgramUniform3i64vARB
00000000002abca0 0000000000000148 t save_ProgramUniform2i64vARB
00000000002abdf0 0000000000000148 t save_ProgramUniform1i64vARB
00000000002abf40 0000000000000124 t save_ProgramUniform4i64ARB
00000000002ac070 0000000000000110 t save_ProgramUniform3i64ARB
00000000002ac180 0000000000000100 t save_ProgramUniform2i64ARB
00000000002ac280 00000000000000e8 t save_ProgramUniform1i64ARB
00000000002ac370 000000000000013c t save_Uniform4ui64vARB
00000000002ac4b0 0000000000000140 t save_Uniform3ui64vARB
00000000002ac5f0 000000000000013c t save_Uniform2ui64vARB
00000000002ac730 000000000000013c t save_Uniform1ui64vARB
00000000002ac870 000000000000010c t save_Uniform4ui64ARB
00000000002ac980 0000000000000100 t save_Uniform3ui64ARB
00000000002aca80 00000000000000e8 t save_Uniform2ui64ARB
00000000002acb70 00000000000000e0 t save_Uniform1ui64ARB
00000000002acc50 000000000000013c t save_Uniform4i64vARB
00000000002acd90 0000000000000140 t save_Uniform3i64vARB
00000000002aced0 000000000000013c t save_Uniform2i64vARB
00000000002ad010 000000000000013c t save_Uniform1i64vARB
00000000002ad150 000000000000010c t save_Uniform4i64ARB
00000000002ad260 0000000000000100 t save_Uniform3i64ARB
00000000002ad360 00000000000000e8 t save_Uniform2i64ARB
00000000002ad450 00000000000000e0 t save_Uniform1i64ARB
00000000002ad530 0000000000000154 t save_UniformMatrix4x3dv
00000000002ad690 0000000000000154 t save_UniformMatrix3x4dv
00000000002ad7f0 0000000000000150 t save_UniformMatrix4x2dv
00000000002ad940 0000000000000150 t save_UniformMatrix2x4dv
00000000002ada90 0000000000000154 t save_UniformMatrix3x2dv
00000000002adbf0 0000000000000154 t save_UniformMatrix2x3dv
00000000002add50 0000000000000150 t save_UniformMatrix4dv
00000000002adea0 0000000000000154 t save_UniformMatrix3dv
00000000002ae000 0000000000000150 t save_UniformMatrix2dv
00000000002ae150 000000000000013c t save_Uniform4dv
00000000002ae290 0000000000000140 t save_Uniform3dv
00000000002ae3d0 000000000000013c t save_Uniform2dv
00000000002ae510 000000000000013c t save_Uniform1dv
00000000002ae650 000000000000012c t save_Uniform4d
00000000002ae780 0000000000000118 t save_Uniform3d
00000000002ae8a0 00000000000000f8 t save_Uniform2d
00000000002ae9a0 00000000000000e4 t save_Uniform1d
00000000002aea90 000000000000013c t save_Uniform4uiv
00000000002aebd0 0000000000000140 t save_Uniform3uiv
00000000002aed10 000000000000013c t save_Uniform2uiv
00000000002aee50 000000000000013c t save_Uniform1uiv
00000000002aef90 000000000000010c t save_Uniform4ui
00000000002af0a0 00000000000000fc t save_Uniform3ui
00000000002af1a0 00000000000000e8 t save_Uniform2ui
00000000002af290 00000000000000dc t save_Uniform1ui
00000000002af370 0000000000000100 t save_ClearBufferfi
00000000002af470 0000000000000128 t save_ClearBufferfv
00000000002af5a0 0000000000000128 t save_ClearBufferuiv
00000000002af6d0 0000000000000128 t save_ClearBufferiv
00000000002af800 00000000000000dc t save_ClampColorARB
00000000002af8e0 00000000000000dc t save_ClipControl
00000000002af9c0 0000000000000104 t save_TexParameterIuiv
00000000002afad0 0000000000000104 t save_TexParameterIiv
00000000002afbe0 00000000000000fc t save_ClearColorIui
00000000002afce0 00000000000000fc t save_ClearColorIi
00000000002afde0 00000000000000a4 t save_ProvokingVertexEXT
00000000002afe90 0000000000000140 t save_ProgramLocalParameters4fvEXT
00000000002affd0 0000000000000140 t save_ProgramEnvParameters4fvEXT
00000000002b0110 00000000000000dc t save_BlendEquationSeparateEXT
00000000002b01f0 0000000000000154 t save_UniformMatrix4x3fv
00000000002b0350 0000000000000154 t save_UniformMatrix3x4fv
00000000002b04b0 0000000000000150 t save_UniformMatrix4x2fv
00000000002b0600 0000000000000150 t save_UniformMatrix2x4fv
00000000002b0750 0000000000000154 t save_UniformMatrix3x2fv
00000000002b08b0 0000000000000154 t save_UniformMatrix2x3fv
00000000002b0a10 0000000000000150 t save_UniformMatrix4fvARB
00000000002b0b60 0000000000000154 t save_UniformMatrix3fvARB
00000000002b0cc0 0000000000000150 t save_UniformMatrix2fvARB
00000000002b0e10 000000000000013c t save_Uniform4ivARB
00000000002b0f50 0000000000000140 t save_Uniform3ivARB
00000000002b1090 000000000000013c t save_Uniform2ivARB
00000000002b11d0 000000000000013c t save_Uniform1ivARB
00000000002b1310 000000000000010c t save_Uniform4iARB
00000000002b1420 00000000000000fc t save_Uniform3iARB
00000000002b1520 00000000000000e8 t save_Uniform2iARB
00000000002b1610 00000000000000dc t save_Uniform1iARB
00000000002b16f0 000000000000013c t save_Uniform4fvARB
00000000002b1830 0000000000000140 t save_Uniform3fvARB
00000000002b1970 000000000000013c t save_Uniform2fvARB
00000000002b1ab0 000000000000013c t save_Uniform1fvARB
00000000002b1bf0 0000000000000104 t save_Uniform4fARB
00000000002b1d00 00000000000000fc t save_Uniform3fARB
00000000002b1e00 00000000000000e4 t save_Uniform2fARB
00000000002b1ef0 00000000000000dc t save_Uniform1fARB
00000000002b1fd0 00000000000000c4 t save_UseProgram
00000000002b20a0 0000000000000160 t save_BlitFramebufferEXT
00000000002b2200 0000000000000110 t save_DrawBuffersARB
00000000002b2310 00000000000000dc t save_QueryCounter
00000000002b23f0 00000000000000c4 t save_EndQueryARB
00000000002b24c0 00000000000000dc t save_BeginQueryARB
00000000002b25a0 0000000000000104 t save_ProgramLocalParameter4fvARB
00000000002b26b0 000000000000011c t save_ProgramLocalParameter4fARB
00000000002b27d0 0000000000000104 t save_ProgramLocalParameter4dvARB
00000000002b28e0 000000000000012c t save_ProgramLocalParameter4dARB
00000000002b2a10 000000000000011c t save_ProgramEnvParameter4fARB
00000000002b2b30 000000000000000c t save_ProgramEnvParameter4fvARB
00000000002b2b40 000000000000001c t save_ProgramEnvParameter4dvARB
00000000002b2b60 0000000000000014 t save_ProgramEnvParameter4dARB
00000000002b2b80 00000000000000dc t save_BindProgramARB
00000000002b2c60 0000000000000158 t save_ProgramStringARB
00000000002b2dc0 00000000000001b4 t save_CompressedTexSubImage1DARB
00000000002b2f80 00000000000001d8 t save_CompressedTexSubImage2DARB
00000000002b3160 0000000000000200 t save_CompressedTexSubImage3DARB
00000000002b3360 000000000000023c t save_CompressedTexImage1DARB
00000000002b35a0 0000000000000250 t save_CompressedTexImage2DARB
00000000002b37f0 0000000000000264 t save_CompressedTexImage3DARB
00000000002b3a60 00000000000000dc t save_SampleCoverageARB
00000000002b3b40 00000000000000b0 t save_ActiveTextureARB
00000000002b3bf0 00000000000000e0 t save_DepthBoundsEXT
00000000002b3cd0 00000000000000c4 t save_ActiveStencilFaceEXT
00000000002b3da0 00000000000000f8 t save_WindowPos4fMESA
00000000002b3ea0 0000000000000024 t save_WindowPos4svMESA
00000000002b3ed0 0000000000000024 t save_WindowPos4sMESA
00000000002b3f00 000000000000001c t save_WindowPos4ivMESA
00000000002b3f20 0000000000000014 t save_WindowPos4iMESA
00000000002b3f40 000000000000000c t save_WindowPos4fvMESA
00000000002b3f50 000000000000001c t save_WindowPos4dvMESA
00000000002b3f70 0000000000000014 t save_WindowPos4dMESA
00000000002b3f90 0000000000000020 t save_WindowPos3svMESA
00000000002b3fb0 0000000000000020 t save_WindowPos3sMESA
00000000002b3fd0 000000000000001c t save_WindowPos3ivMESA
00000000002b3ff0 0000000000000014 t save_WindowPos3iMESA
00000000002b4010 0000000000000010 t save_WindowPos3fvMESA
00000000002b4020 0000000000000008 t save_WindowPos3fMESA
00000000002b4030 000000000000001c t save_WindowPos3dvMESA
00000000002b4050 0000000000000014 t save_WindowPos3dMESA
00000000002b4070 000000000000001c t save_WindowPos2svMESA
00000000002b4090 000000000000001c t save_WindowPos2sMESA
00000000002b40b0 0000000000000018 t save_WindowPos2ivMESA
00000000002b40d0 0000000000000014 t save_WindowPos2iMESA
00000000002b40f0 0000000000000010 t save_WindowPos2fvMESA
00000000002b4100 000000000000000c t save_WindowPos2fMESA
00000000002b4110 0000000000000018 t save_WindowPos2dvMESA
00000000002b4130 0000000000000014 t save_WindowPos2dMESA
00000000002b4150 00000000000000fc t save_BlendFuncSeparateEXT
00000000002b4250 000000000000000c t save_BlendFunc
00000000002b4260 00000000000000e8 t save_DispatchCompute
00000000002b4350 00000000000000ec t save_DepthRangeIndexed
00000000002b4440 000000000000013c t save_DepthRangeArrayv
00000000002b4580 00000000000000fc t save_ScissorIndexedv
00000000002b4680 000000000000010c t save_ScissorIndexed
00000000002b4790 000000000000013c t save_ScissorArrayv
00000000002b48d0 00000000000000fc t save_ViewportIndexedfv
00000000002b49d0 0000000000000104 t save_ViewportIndexedf
00000000002b4ae0 000000000000013c t save_ViewportArrayv
00000000002b4c20 0000000000000140 t save_PatchParameterfv
00000000002b4d60 00000000000000dc t save_PatchParameteri
00000000002b4e40 00000000000000f4 t save_PointParameterfvEXT
00000000002b4f40 000000000000002c t save_PointParameterivNV
00000000002b4f70 0000000000000028 t save_PointParameteriNV
00000000002b4fa0 0000000000000020 t save_PointParameterfEXT
00000000002b4fc0 00000000000000b0 t save_BlendEquation
00000000002b5070 00000000000000e4 t save_BlendColor
00000000002b5160 0000000000000154 t save_StencilFuncSeparateATI
00000000002b52c0 00000000000000fc t save_StencilOpSeparate
00000000002b53c0 00000000000000dc t save_StencilMaskSeparate
00000000002b54a0 00000000000000fc t save_StencilFuncSeparate
00000000002b55a0 00000000000001dc t save_TexSubImage3D
00000000002b5780 0000000000000210 t save_TexImage3D
00000000002b5990 0000000000000138 t save_CopyTexSubImage3D
00000000002b5ad0 00000000000001b8 t save_TexSubImage2D
00000000002b5c90 0000000000000198 t save_TexSubImage1D
00000000002b5e30 0000000000000108 t save_PrioritizeTextures
00000000002b5f40 0000000000000128 t save_CopyTexSubImage2D
00000000002b6070 000000000000010c t save_CopyTexSubImage1D
00000000002b6180 0000000000000128 t save_CopyTexImage2D
00000000002b62b0 0000000000000114 t save_CopyTexImage1D
00000000002b63d0 00000000000000c8 t save_BindTexture
00000000002b64a0 00000000000000e8 t save_Viewport
00000000002b6590 00000000000000dc t save_Translatef
00000000002b6670 0000000000000010 t save_Translated
00000000002b6680 00000000000000f0 t save_TexParameterfv
00000000002b6770 0000000000000030 t save_TexParameteriv
00000000002b67a0 000000000000002c t save_TexParameteri
00000000002b67d0 0000000000000024 t save_TexParameterf
00000000002b6800 0000000000000204 t save_TexImage2D
00000000002b6a10 00000000000001f0 t save_TexImage1D
00000000002b6c00 00000000000000f0 t save_TexGenfv
00000000002b6cf0 000000000000003c t save_TexGeniv
00000000002b6d30 0000000000000024 t save_TexGenf
00000000002b6d60 000000000000003c t save_TexGendv
00000000002b6da0 0000000000000028 t save_TexGend
00000000002b6dd0 000000000000002c t save_TexGeni
00000000002b6e00 0000000000000118 t save_TexEnvfv
00000000002b6f20 00000000000000c4 t save_TexEnviv
00000000002b6ff0 000000000000002c t save_TexEnvi
00000000002b7020 0000000000000024 t save_TexEnvf
00000000002b7050 00000000000000d4 t save_StencilOp
00000000002b7130 00000000000000b0 t save_StencilMask
00000000002b71e0 00000000000000d4 t save_StencilFunc
00000000002b72c0 00000000000000e0 t save_ShadeModel
00000000002b73a0 00000000000000e8 t save_Scissor
00000000002b7490 00000000000000dc t save_Scalef
00000000002b7570 0000000000000010 t save_Scaled
00000000002b7580 00000000000000e4 t save_Rotatef
00000000002b7670 0000000000000014 t save_Rotated
00000000002b7690 00000000000000e4 t save_Rectf
00000000002b7780 00000000000000b0 t save_ReadBuffer
00000000002b7830 00000000000000e4 t save_RasterPos4f
00000000002b7920 0000000000000024 t save_RasterPos4sv
00000000002b7950 0000000000000024 t save_RasterPos4s
00000000002b7980 000000000000001c t save_RasterPos4iv
00000000002b79a0 0000000000000014 t save_RasterPos4i
00000000002b79c0 000000000000000c t save_RasterPos4fv
00000000002b79d0 000000000000001c t save_RasterPos4dv
00000000002b79f0 0000000000000014 t save_RasterPos4d
00000000002b7a10 0000000000000020 t save_RasterPos3sv
00000000002b7a30 0000000000000020 t save_RasterPos3s
00000000002b7a50 000000000000001c t save_RasterPos3iv
00000000002b7a70 0000000000000014 t save_RasterPos3i
00000000002b7a90 0000000000000010 t save_RasterPos3fv
00000000002b7aa0 0000000000000008 t save_RasterPos3f
00000000002b7ab0 000000000000001c t save_RasterPos3dv
00000000002b7ad0 0000000000000014 t save_RasterPos3d
00000000002b7af0 000000000000001c t save_RasterPos2sv
00000000002b7b10 000000000000001c t save_RasterPos2s
00000000002b7b30 0000000000000018 t save_RasterPos2iv
00000000002b7b50 0000000000000014 t save_RasterPos2i
00000000002b7b70 0000000000000010 t save_RasterPos2fv
00000000002b7b80 000000000000000c t save_RasterPos2f
00000000002b7b90 0000000000000018 t save_RasterPos2dv
00000000002b7bb0 0000000000000014 t save_RasterPos2d
00000000002b7bd0 00000000000000b0 t save_PushName
00000000002b7c80 00000000000000a0 t save_PushMatrix
00000000002b7d20 00000000000000b0 t save_PushAttrib
00000000002b7dd0 00000000000000a0 t save_PopName
00000000002b7e70 00000000000000a0 t save_PopMatrix
00000000002b7f10 00000000000000a0 t save_PopAttrib
00000000002b7fb0 000000000000012c t save_PolygonStipple
00000000002b80e0 00000000000000c4 t save_PolygonOffset
00000000002b81b0 00000000000000c8 t save_PolygonMode
00000000002b8280 00000000000000bc t save_PointSize
00000000002b8340 00000000000000c4 t save_PixelZoom
00000000002b8410 00000000000000c8 t save_PixelTransferf
00000000002b84e0 0000000000000008 t save_PixelTransferi
00000000002b84f0 0000000000000128 t save_PixelMapfv
00000000002b8620 00000000000000c8 t save_PixelMapusv
00000000002b86f0 00000000000000d0 t save_PixelMapuiv
00000000002b87c0 00000000000000bc t save_PassThrough
00000000002b8880 000000000000011c t save_Ortho
00000000002b89a0 00000000000000c8 t save_MultMatrixf
00000000002b8a70 0000000000000030 t save_MultTransposeMatrixfARB
00000000002b8aa0 0000000000000030 t save_MultTransposeMatrixdARB
00000000002b8ad0 0000000000000040 t save_MultMatrixd
00000000002b8b10 00000000000000b0 t save_MatrixMode
00000000002b8bc0 000000000000010c t save_MapGrid2f
00000000002b8cd0 0000000000000014 t save_MapGrid2d
00000000002b8cf0 00000000000000d0 t save_MapGrid1f
00000000002b8dc0 000000000000000c t save_MapGrid1d
00000000002b8dd0 0000000000000198 t save_Map2f
00000000002b8f70 00000000000001a8 t save_Map2d
00000000002b9120 000000000000013c t save_Map1f
00000000002b9260 0000000000000144 t save_Map1d
00000000002b93b0 00000000000000b0 t save_LogicOp
00000000002b9460 00000000000000b0 t save_LoadName
00000000002b9510 00000000000000c8 t save_LoadMatrixf
00000000002b95e0 0000000000000030 t save_LoadTransposeMatrixfARB
00000000002b9610 0000000000000030 t save_LoadTransposeMatrixdARB
00000000002b9640 0000000000000040 t save_LoadMatrixd
00000000002b9680 00000000000000a0 t save_LoadIdentity
00000000002b9720 00000000000000b0 t save_ListBase
00000000002b97d0 00000000000000bc t save_LineWidth
00000000002b9890 00000000000000cc t save_LineStipple
00000000002b9960 0000000000000114 t save_Lightfv
00000000002b9a80 0000000000000148 t save_Lightiv
00000000002b9bd0 0000000000000024 t save_Lighti
00000000002b9c00 0000000000000024 t save_Lightf
00000000002b9c30 00000000000000e8 t save_LightModelfv
00000000002b9d20 0000000000000108 t save_LightModeliv
00000000002b9e30 0000000000000024 t save_LightModeli
00000000002b9e60 0000000000000024 t save_LightModelf
00000000002b9e90 00000000000000a0 t save_InitNames
00000000002b9f30 00000000000000b0 t save_IndexMask
00000000002b9fe0 00000000000000c8 t save_Hint
00000000002ba0b0 000000000000011c t save_Frustum
00000000002ba1d0 00000000000000b0 t save_FrontFace
00000000002ba280 00000000000000e8 t save_Fogfv
00000000002ba370 0000000000000108 t save_Fogiv
00000000002ba480 0000000000000024 t save_Fogi
00000000002ba4b0 0000000000000024 t save_Fogf
00000000002ba4e0 00000000000000f4 t save_EvalMesh2
00000000002ba5e0 00000000000000d4 t save_EvalMesh1
00000000002ba6c0 00000000000000dc t save_EnableIndexed
00000000002ba7a0 00000000000000b0 t save_Enable
00000000002ba850 0000000000000178 t save_DrawPixels
00000000002ba9d0 00000000000000b0 t save_DrawBuffer
00000000002baa80 00000000000000dc t save_DisableIndexed
00000000002bab60 00000000000000b0 t save_Disable
00000000002bac10 00000000000000cc t save_DepthRange
00000000002bace0 00000000000000b0 t save_DepthMask
00000000002bad90 00000000000000b0 t save_DepthFunc
00000000002bae40 00000000000000b0 t save_CullFace
00000000002baef0 00000000000000f4 t save_CopyPixels
00000000002baff0 00000000000000c8 t save_ColorMaterial
00000000002bb0c0 00000000000000bc t save_ColorMaskIndexed
00000000002bb180 00000000000000f0 t save_ColorMask
00000000002bb270 00000000000000e8 t save_ClipPlane
00000000002bb360 00000000000000b0 t save_ClearStencil
00000000002bb410 00000000000000bc t save_ClearIndex
00000000002bb4d0 00000000000000c0 t save_ClearDepth
00000000002bb590 00000000000000e4 t save_ClearColor
00000000002bb680 00000000000000e4 t save_ClearAccum
00000000002bb770 00000000000000b0 t save_Clear
00000000002bb820 0000000000000198 t save_Bitmap
00000000002bb9c0 00000000000000c8 t save_AlphaFunc
00000000002bba90 00000000000000c8 t save_Accum
00000000002bbb60 00000000000002d0 t save_Materialfv
00000000002bbe30 00000000000000b4 t save_PrimitiveRestartNV
00000000002bbef0 0000000000000098 t save_Begin
00000000002bbf90 00000000000000a4 T _mesa_IsList
00000000002bc040 0000000000000130 T _mesa_DeleteLists
00000000002bc170 0000000000000208 T _mesa_GenLists
00000000002bc380 00000000000001cc T _mesa_NewList
00000000002bc550 000000000000019c T _mesa_EndList
00000000002bc6f0 00000000000000b8 t _mesa_CallList
00000000002bc7b0 00000000000000c0 t save_CallList
00000000002bc870 00000000000006cc T _mesa_CallLists
00000000002bcf40 0000000000000088 T _mesa_ListBase
00000000002bcfd0 00000000000027ac t _mesa_initialize_save_table
00000000002bf780 000000000000000c t _mesa_install_dlist_vtxfmt
00000000002bf790 000000000000061c t _mesa_init_display_list
00000000002bfdb0 0000000000000028 t _mesa_free_display_list_data
00000000002bfde0 000000000000009c t need_xfb_remaining_prims_check
00000000002bfe80 0000000000000150 t count_tessellated_primitives
00000000002bffd0 00000000000000c0 t valid_draw_indirect_parameters
00000000002c0090 0000000000000164 t check_valid_to_render.part.0
00000000002c0200 0000000000000354 t _mesa_valid_to_render
00000000002c0560 00000000000000e4 t _mesa_is_valid_prim_mode
00000000002c0650 0000000000000374 t _mesa_valid_prim_mode
00000000002c09d0 0000000000000210 t valid_draw_indirect
00000000002c0be0 0000000000000108 t validate_draw_arrays.constprop.0
00000000002c0cf0 0000000000000160 t validate_DrawElements_common.constprop.0
00000000002c0e50 000000000000000c t _mesa_validate_DrawElements
00000000002c0e60 0000000000000194 t _mesa_validate_MultiDrawElements
00000000002c1000 0000000000000040 t _mesa_validate_DrawRangeElements
00000000002c1040 0000000000000014 t _mesa_validate_DrawArrays
00000000002c1060 0000000000000098 t _mesa_validate_DrawArraysInstanced
00000000002c1100 0000000000000190 t _mesa_validate_MultiDrawArrays
00000000002c1290 0000000000000060 t _mesa_validate_DrawElementsInstanced
00000000002c12f0 0000000000000128 t _mesa_validate_DrawTransformFeedback
00000000002c1420 0000000000000064 t _mesa_valid_draw_indirect_multi
00000000002c1490 0000000000000010 t _mesa_validate_DrawArraysIndirect
00000000002c14a0 00000000000000bc t _mesa_validate_DrawElementsIndirect
00000000002c1560 0000000000000090 t _mesa_validate_MultiDrawArraysIndirect
00000000002c15f0 000000000000012c t _mesa_validate_MultiDrawElementsIndirect
00000000002c1720 00000000000000c4 t _mesa_validate_MultiDrawArraysIndirectCount
00000000002c17f0 0000000000000154 t _mesa_validate_MultiDrawElementsIndirectCount
00000000002c1950 000000000000014c t output_if_debug
00000000002c1aa0 0000000000000094 t flush_delayed_errors
00000000002c1b40 000000000000000c t _mesa_get_log_file
00000000002c1b50 00000000000000d0 t _mesa_warning
00000000002c1c20 0000000000000108 t _mesa_problem
00000000002c1d30 00000000000000b0 t _mesa_gl_vdebugf
00000000002c1de0 0000000000000064 t _mesa_gl_debugf
00000000002c1e50 00000000000002f4 t _mesa_error
00000000002c2150 0000000000000030 t _mesa_error_no_memory
00000000002c2180 0000000000000004 t _mesa_debug
00000000002c2190 00000000000000c4 t _mesa_log
00000000002c2260 0000000000000068 t _mesa_shader_debug
00000000002c22d0 00000000000000c4 t get_1d_map
00000000002c23a0 00000000000000c0 t get_2d_map
00000000002c2460 0000000000000024 t _mesa_evaluator_components
00000000002c2490 00000000000000d8 t _mesa_copy_map_points1f
00000000002c2570 00000000000000d4 t _mesa_copy_map_points1d
00000000002c2650 00000000000001ec t map1
00000000002c2840 0000000000000190 t _mesa_copy_map_points2f
00000000002c29d0 0000000000000158 t _mesa_copy_map_points2d
00000000002c2b30 0000000000000260 t map2
00000000002c2d90 0000000000000008 T _mesa_Map1f
00000000002c2da0 0000000000000010 T _mesa_Map1d
00000000002c2db0 0000000000000008 T _mesa_Map2f
00000000002c2dc0 0000000000000018 T _mesa_Map2d
00000000002c2de0 00000000000001b8 t _mesa_GetnMapdvARB
00000000002c2fa0 000000000000000c T _mesa_GetMapdv
00000000002c2fb0 00000000000001b4 t _mesa_GetnMapfvARB
00000000002c3170 000000000000000c T _mesa_GetMapfv
00000000002c3180 00000000000001b0 t _mesa_GetnMapivARB
00000000002c3330 000000000000000c T _mesa_GetMapiv
00000000002c3340 000000000000009c t _mesa_MapGrid1f
00000000002c33e0 000000000000000c T _mesa_MapGrid1d
00000000002c33f0 00000000000000f8 t _mesa_MapGrid2f
00000000002c34f0 0000000000000014 T _mesa_MapGrid2d
00000000002c3510 000000000000002c t _mesa_install_eval_vtxfmt
00000000002c3540 0000000000000410 t _mesa_init_eval
00000000002c3950 00000000000000a8 t _mesa_free_eval_data
00000000002c3a00 0000000000000040 t free_unknown_extensions_strings
00000000002c3a40 0000000000000008 t extension_name_compare
00000000002c3a50 0000000000000048 t extension_compare
00000000002c3aa0 000000000000006c t _mesa_override_extensions
00000000002c3b10 0000000000000294 t _mesa_one_time_init_extension_overrides
00000000002c3db0 0000000000000034 t _mesa_init_extensions
00000000002c3df0 000000000000022c t _mesa_make_extension_string
00000000002c4020 0000000000000098 t _mesa_get_extension_count
00000000002c40c0 00000000000000b8 t _mesa_get_enabled_extension
00000000002c4180 0000000000000004 t delete_dummy_renderbuffer
00000000002c4190 0000000000000004 t delete_dummy_framebuffer
00000000002c41a0 00000000000000b8 t get_framebuffer_target
00000000002c4260 00000000000000ec t get_attachment
00000000002c4350 0000000000000078 t driver_RenderTexture_is_safe
00000000002c43d0 000000000000009c t validate_framebuffer_parameter_extensions
00000000002c4470 0000000000000268 t framebuffer_parameteri
00000000002c46e0 0000000000000130 t check_layer
00000000002c4810 00000000000000b4 t remove_attachment
00000000002c48d0 000000000000018c t create_framebuffers
00000000002c4a60 00000000000000fc t check_texture_target
00000000002c4b60 0000000000000208 t sample_locations
00000000002c4d70 0000000000000044 t invalidate_rb
00000000002c4dc0 0000000000000070 t check_end_texture_render
00000000002c4e30 0000000000000198 t discard_framebuffer.part.0
00000000002c4fd0 0000000000000140 t create_render_buffers
00000000002c5110 00000000000002f0 t get_framebuffer_parameteriv
00000000002c5400 00000000000001b4 t invalidate_framebuffer_storage.constprop.0
00000000002c55c0 0000000000000118 t check_layered_texture_target.constprop.0
00000000002c56e0 0000000000000194 t get_render_buffer_parameteriv
00000000002c5880 00000000000000cc t lookup_named_framebuffer_ext_dsa
00000000002c5950 00000000000007bc t get_framebuffer_attachment_parameter
00000000002c6110 00000000000001f4 t framebuffer_renderbuffer_error
00000000002c6310 0000000000000158 t bind_renderbuffer
00000000002c6470 0000000000000078 t _mesa_init_fbobjects
00000000002c64f0 000000000000000c t _mesa_get_incomplete_framebuffer
00000000002c6500 0000000000000018 t _mesa_lookup_renderbuffer
00000000002c6520 0000000000000018 t _mesa_lookup_framebuffer
00000000002c6540 000000000000012c t _mesa_lookup_framebuffer_dsa
00000000002c6670 0000000000000080 t _mesa_lookup_framebuffer_err
00000000002c66f0 0000000000000124 t _mesa_update_texture_renderbuffer
00000000002c6820 0000000000000110 T _mesa_FramebufferRenderbuffer_sw
00000000002c6930 0000000000000064 t _mesa_has_depthstencil_combined
00000000002c69a0 00000000000000a8 t _mesa_is_legal_color_format
00000000002c6a50 000000000000022c t test_attachment_completeness
00000000002c6c80 0000000000000c54 t _mesa_test_framebuffer_completeness
00000000002c78e0 0000000000000080 T _mesa_IsRenderbuffer
00000000002c7960 0000000000000004 T _mesa_BindRenderbuffer
00000000002c7970 0000000000000004 T _mesa_BindRenderbufferEXT
00000000002c7980 00000000000000c4 t _mesa_FramebufferParameteri
00000000002c7a50 0000000000000004 T _mesa_FramebufferParameteriMESA
00000000002c7a60 00000000000000c4 t _mesa_GetFramebufferParameteriv
00000000002c7b30 0000000000000004 T _mesa_GetFramebufferParameterivMESA
00000000002c7b40 0000000000000090 t _mesa_detach_renderbuffer
00000000002c7bd0 0000000000000234 T _mesa_DeleteRenderbuffers
00000000002c7e10 0000000000000030 T _mesa_GenRenderbuffers_no_error
00000000002c7e40 0000000000000050 T _mesa_GenRenderbuffers
00000000002c7e90 0000000000000030 T _mesa_CreateRenderbuffers_no_error
00000000002c7ec0 0000000000000050 T _mesa_CreateRenderbuffers
00000000002c7f10 0000000000000ff8 t _mesa_base_fbo_format
00000000002c8f10 0000000000000148 t _mesa_renderbuffer_storage
00000000002c9060 00000000000001a0 t renderbuffer_storage
00000000002c9200 00000000000000e4 T _mesa_EGLImageTargetRenderbufferStorageOES
00000000002c92f0 0000000000000094 T _mesa_RenderbufferStorage
00000000002c9390 0000000000000084 T _mesa_RenderbufferStorageMultisample
00000000002c9420 0000000000000094 T _mesa_RenderbufferStorageMultisampleAdvancedAMD
00000000002c94c0 00000000000000c4 T _mesa_NamedRenderbufferStorage
00000000002c9590 0000000000000110 T _mesa_NamedRenderbufferStorageEXT
00000000002c96a0 00000000000000c8 T _mesa_NamedRenderbufferStorageMultisample
00000000002c9770 0000000000000118 T _mesa_NamedRenderbufferStorageMultisampleEXT
00000000002c9890 00000000000000d8 T _mesa_NamedRenderbufferStorageMultisampleAdvancedAMD
00000000002c9970 0000000000000078 T _mesa_GetRenderbufferParameteriv
00000000002c99f0 00000000000000a0 T _mesa_GetNamedRenderbufferParameteriv
00000000002c9a90 0000000000000100 T _mesa_GetNamedRenderbufferParameterivEXT
00000000002c9b90 0000000000000084 T _mesa_IsFramebuffer
00000000002c9c20 00000000000001e0 t _mesa_bind_framebuffers
00000000002c9e00 0000000000000170 t bind_framebuffer
00000000002c9f70 0000000000000004 t _mesa_BindFramebuffer
00000000002c9f80 0000000000000004 T _mesa_BindFramebufferEXT
00000000002c9f90 0000000000000170 T _mesa_DeleteFramebuffers
00000000002ca100 0000000000000008 T _mesa_GenFramebuffers
00000000002ca110 0000000000000008 T _mesa_CreateFramebuffers
00000000002ca120 0000000000000160 T _mesa_CheckFramebufferStatus_no_error
00000000002ca280 000000000000016c T _mesa_CheckFramebufferStatus
00000000002ca3f0 0000000000000170 t _mesa_CheckNamedFramebufferStatus
00000000002ca560 0000000000000150 T _mesa_CheckNamedFramebufferStatusEXT
00000000002ca6b0 000000000000015c t _mesa_get_and_validate_attachment
00000000002ca810 00000000000002f4 t _mesa_framebuffer_texture
00000000002cab10 00000000000000bc t framebuffer_texture_with_dims_no_error
00000000002cabd0 000000000000042c t framebuffer_texture_with_dims
00000000002cb000 0000000000000008 T _mesa_FramebufferTexture1D_no_error
00000000002cb010 0000000000000054 T _mesa_FramebufferTexture1D
00000000002cb070 0000000000000008 T _mesa_FramebufferTexture2D_no_error
00000000002cb080 0000000000000054 T _mesa_FramebufferTexture2D
00000000002cb0e0 0000000000000058 T _mesa_FramebufferTexture2DMultisampleEXT
00000000002cb140 0000000000000004 T _mesa_FramebufferTexture3D_no_error
00000000002cb150 0000000000000054 T _mesa_FramebufferTexture3D
00000000002cb1b0 0000000000000100 T _mesa_FramebufferTextureLayer_no_error
00000000002cb2b0 0000000000000264 T _mesa_FramebufferTextureLayer
00000000002cb520 000000000000010c T _mesa_NamedFramebufferTextureLayer_no_error
00000000002cb630 0000000000000280 T _mesa_NamedFramebufferTextureLayer
00000000002cb8b0 0000000000000110 T _mesa_FramebufferTexture_no_error
00000000002cb9c0 0000000000000290 T _mesa_FramebufferTexture
00000000002cbc50 000000000000011c T _mesa_NamedFramebufferTexture_no_error
00000000002cbd70 000000000000028c T _mesa_NamedFramebufferTexture
00000000002cc000 0000000000000058 T _mesa_NamedFramebufferTexture1DEXT
00000000002cc060 0000000000000058 T _mesa_NamedFramebufferTexture2DEXT
00000000002cc0c0 0000000000000058 T _mesa_NamedFramebufferTexture3DEXT
00000000002cc120 00000000000000bc T _mesa_FramebufferRenderbuffer_no_error
00000000002cc1e0 0000000000000104 T _mesa_FramebufferRenderbuffer
00000000002cc2f0 00000000000000c8 T _mesa_NamedFramebufferRenderbuffer_no_error
00000000002cc3c0 00000000000000bc T _mesa_NamedFramebufferRenderbuffer
00000000002cc480 0000000000000084 T _mesa_NamedFramebufferRenderbufferEXT
00000000002cc510 0000000000000104 T _mesa_GetFramebufferAttachmentParameteriv
00000000002cc620 00000000000000c4 T _mesa_GetNamedFramebufferAttachmentParameteriv
00000000002cc6f0 000000000000009c T _mesa_GetNamedFramebufferAttachmentParameterivEXT
00000000002cc790 00000000000000f8 T _mesa_NamedFramebufferParameteri
00000000002cc890 000000000000007c T _mesa_NamedFramebufferParameteriEXT
00000000002cc910 00000000000000e0 T _mesa_GetFramebufferParameterivEXT
00000000002cc9f0 00000000000000ec T _mesa_GetNamedFramebufferParameteriv
00000000002ccae0 000000000000007c T _mesa_GetNamedFramebufferParameterivEXT
00000000002ccb60 0000000000000004 T _mesa_InvalidateSubFramebuffer_no_error
00000000002ccb70 000000000000008c T _mesa_InvalidateSubFramebuffer
00000000002ccc00 00000000000000cc T _mesa_InvalidateNamedFramebufferSubData
00000000002cccd0 00000000000000d4 T _mesa_InvalidateFramebuffer_no_error
00000000002ccdb0 00000000000000d8 T _mesa_InvalidateFramebuffer
00000000002cce90 00000000000000bc T _mesa_InvalidateNamedFramebufferData
00000000002ccf50 000000000000013c T _mesa_DiscardFramebufferEXT
00000000002cd090 0000000000000108 T _mesa_FramebufferSampleLocationsfvARB
00000000002cd1a0 00000000000000c8 T _mesa_NamedFramebufferSampleLocationsfvARB
00000000002cd270 0000000000000120 T _mesa_FramebufferSampleLocationsfvARB_no_error
00000000002cd390 0000000000000078 T _mesa_NamedFramebufferSampleLocationsfvARB_no_error
00000000002cd410 0000000000000058 T _mesa_EvaluateDepthValuesARB
00000000002cd470 0000000000000100 t write_hit_record
00000000002cd570 00000000000001a4 T _mesa_FeedbackBuffer
00000000002cd720 00000000000000b0 T _mesa_PassThrough
00000000002cd7d0 0000000000000194 t _mesa_feedback_vertex
00000000002cd970 00000000000000e4 T _mesa_SelectBuffer
00000000002cda60 000000000000003c t _mesa_update_hitflag
00000000002cdaa0 000000000000009c T _mesa_InitNames
00000000002cdb40 00000000000000ec T _mesa_LoadName
00000000002cdc30 00000000000000f4 T _mesa_PushName
00000000002cdd30 00000000000000d4 T _mesa_PopName
00000000002cde10 00000000000001f4 T _mesa_RenderMode
00000000002ce010 0000000000000034 t _mesa_init_feedback
00000000002ce050 00000000000004e0 t _mesa_Fogfv
00000000002ce530 0000000000000024 t _mesa_Fogf
00000000002ce560 000000000000002c t _mesa_Fogi
00000000002ce590 00000000000000f8 T _mesa_Fogiv
00000000002ce690 0000000000000040 t _mesa_init_fog
00000000002ce6d0 000000000000000c t array_formats_equal
00000000002ce6e0 0000000000000010 t format_array_format_table_destroy
00000000002ce6f0 00000000000000bc t format_array_format_table_init
00000000002ce7b0 0000000000000038 t _mesa_get_format_name
00000000002ce7f0 0000000000000050 t _mesa_get_format_bytes
00000000002ce840 0000000000000250 t _mesa_get_format_bits
00000000002cea90 0000000000000094 t _mesa_get_format_max_bits
00000000002ceb30 000000000000003c t _mesa_get_format_layout
00000000002ceb70 000000000000003c t _mesa_get_format_datatype
00000000002cebb0 0000000000000140 t _mesa_get_format_base_format
00000000002cecf0 0000000000000048 t _mesa_get_format_block_size
00000000002ced40 0000000000000050 t _mesa_get_format_block_size_3d
00000000002ced90 000000000000003c t _mesa_format_to_array_format
00000000002cedd0 0000000000000068 t _mesa_format_from_array_format
00000000002cee40 0000000000000058 t _mesa_is_format_compressed
00000000002ceea0 0000000000000048 t _mesa_is_format_packed_depth_stencil
00000000002ceef0 0000000000000080 t _mesa_is_format_integer_color
00000000002cef70 0000000000000054 t _mesa_is_format_unsigned
00000000002cefd0 0000000000000070 t _mesa_is_format_signed
00000000002cf040 000000000000004c t _mesa_is_format_integer
00000000002cf090 000000000000003c t _mesa_is_format_srgb
00000000002cf0d0 0000000000000010 t _mesa_is_format_etc2
00000000002cf0e0 0000000000000010 t _mesa_is_format_astc_2d
00000000002cf0f0 00000000000000d4 t _mesa_get_uncompressed_format
00000000002cf1d0 0000000000000098 t _mesa_format_num_components
00000000002cf270 00000000000000b8 t _mesa_format_has_color_component
00000000002cf330 0000000000000098 t _mesa_format_image_size
00000000002cf3d0 00000000000000b4 t _mesa_format_image_size64
00000000002cf490 000000000000006c t _mesa_format_row_stride
00000000002cf500 00000000000004b4 t _mesa_uncompressed_format_to_type_and_comps
00000000002cf9c0 0000000000000148 t _mesa_format_matches_format_and_type
00000000002cfb10 0000000000000140 t renderbuffer_exists.part.0
00000000002cfc50 00000000000001c0 t update_framebuffer
00000000002cfe10 0000000000000070 T _mesa_new_framebuffer
00000000002cfe80 0000000000000170 t _mesa_initialize_window_framebuffer
00000000002cfff0 0000000000000074 t _mesa_free_framebuffer_data
00000000002d0070 0000000000000034 T _mesa_destroy_framebuffer
00000000002d00b0 0000000000000084 t _mesa_reference_framebuffer_
00000000002d0140 00000000000000b0 t _mesa_intersect_scissor_bounding_box
00000000002d01f0 0000000000000128 t _mesa_resize_framebuffer
00000000002d0320 0000000000000078 t _mesa_update_draw_buffer_bounds
00000000002d03a0 0000000000000260 t _mesa_update_framebuffer_visual
00000000002d0600 000000000000005c t _mesa_update_framebuffer
00000000002d0660 0000000000000078 t _mesa_source_buffer_exists
00000000002d06e0 0000000000000078 t _mesa_dest_buffer_exists
00000000002d0760 000000000000019c t _mesa_get_color_read_format
00000000002d0900 0000000000000098 t _mesa_get_color_read_type
00000000002d09a0 0000000000000084 t _mesa_get_read_renderbuffer_for_format
00000000002d0a30 0000000000000044 t _mesa_is_multisample_enabled
00000000002d0a80 0000000000000024 t _mesa_is_alpha_test_enabled
00000000002d0ab0 00000000000003c8 t _mesa_GetString
00000000002d0e80 00000000000001b8 T _mesa_GetStringi
00000000002d1040 00000000000001e8 t _get_vao_pointerv
00000000002d1230 0000000000000060 T _mesa_GetPointerv
00000000002d1290 0000000000000064 T _mesa_GetPointerIndexedvEXT
00000000002d1300 0000000000000078 T _mesa_GetError
00000000002d1380 00000000000001cc t get_map_idx
00000000002d1550 000000000000007c t _mesa_compute_component_mapping
00000000002d15d0 000000000000009c t _mesa_type_is_packed
00000000002d1670 00000000000000b8 t _mesa_sizeof_type
00000000002d1730 0000000000000170 t _mesa_sizeof_packed_type
00000000002d18a0 0000000000000180 t _mesa_components_in_format
00000000002d1a20 0000000000000300 t _mesa_bytes_per_pixel
00000000002d1d20 00000000000000e0 t _mesa_bytes_per_vertex_attrib
00000000002d1e00 00000000000000ec t _mesa_is_enum_format_unsized
00000000002d1ef0 00000000000000fc t _mesa_is_enum_format_unorm
00000000002d1ff0 0000000000000030 t _mesa_is_enum_format_snorm
00000000002d2020 000000000000005c t _mesa_is_enum_format_unsigned_int
00000000002d2080 000000000000004c t _mesa_is_enum_format_signed_int
00000000002d20d0 0000000000000064 t _mesa_is_astc_format
00000000002d2140 0000000000000014 t _mesa_is_etc2_format
00000000002d2160 00000000000000a8 t _mesa_is_enum_format_integer
00000000002d2210 0000000000000070 t _mesa_is_type_unsigned
00000000002d2280 000000000000027c t _mesa_is_color_format
00000000002d2500 0000000000000040 t _mesa_is_depth_format
00000000002d2540 0000000000000010 t _mesa_is_stencil_format
00000000002d2550 0000000000000010 t _mesa_is_ycbcr_format
00000000002d2560 0000000000000030 t _mesa_is_depthstencil_format
00000000002d2590 000000000000008c t _mesa_is_depth_or_stencil_format
00000000002d2620 000000000000042c t _mesa_is_compressed_format
00000000002d2a50 0000000000000084 t _mesa_is_srgb_format
00000000002d2ae0 00000000000000cc t _mesa_unpack_format_to_base_format
00000000002d2bb0 00000000000000cc t _mesa_base_format_to_integer_format
00000000002d2c80 0000000000000298 t _mesa_base_format_has_channel
00000000002d2f20 00000000000000e4 t _mesa_generic_compressed_format_to_uncompressed_format
00000000002d3010 00000000000001cc t _mesa_get_nongeneric_internalformat
00000000002d31e0 0000000000000020 t _mesa_get_linear_internalformat
00000000002d3200 00000000000008ec t _mesa_error_check_format_and_type
00000000002d3af0 0000000000000214 t _mesa_es_error_check_format_and_type
00000000002d3d10 0000000000000b88 t _mesa_base_tex_format
00000000002d48a0 0000000000001318 t _mesa_gles_error_check_format_and_type
00000000002d5bc0 000000000000008c t _mesa_swap_bytes_in_type_enum
00000000002d5c50 0000000000001158 t _mesa_format_from_format_and_type
00000000002d6db0 000000000000021c t _mesa_is_es3_color_renderable
00000000002d6fd0 00000000000001ac t _mesa_is_es3_texture_filterable
00000000002d7180 000000000000000c t uint_key_compare
00000000002d7190 0000000000000004 t uint_key_hash
00000000002d71a0 0000000000000088 t hash_walk_unlocked
00000000002d7230 0000000000000090 t _mesa_NewHashTable
00000000002d72c0 0000000000000058 t _mesa_DeleteHashTable
00000000002d7320 0000000000000084 t _mesa_HashLookup
00000000002d73b0 0000000000000034 t _mesa_HashLookupLocked
00000000002d73f0 0000000000000094 t _mesa_HashInsertLocked
00000000002d7490 00000000000000ac t _mesa_HashInsert
00000000002d7540 0000000000000048 t _mesa_HashRemoveLocked
00000000002d7590 0000000000000074 t _mesa_HashRemove
00000000002d7610 00000000000000ac t _mesa_HashDeleteAll
00000000002d76c0 000000000000004c t _mesa_HashWalk
00000000002d7710 0000000000000004 t _mesa_HashWalkLocked
00000000002d7720 00000000000000d4 t _mesa_HashFindFreeKeyBlock
00000000002d7800 0000000000000380 t _mesa_Hint
00000000002d7b80 0000000000000040 T _mesa_MaxShaderCompilerThreadsKHR
00000000002d7bc0 0000000000000028 t _mesa_init_hint
00000000002d7bf0 0000000000000028 t _mesa_swap2
00000000002d7c20 0000000000000024 t _mesa_swap4
00000000002d7c50 0000000000000130 t _mesa_image_offset
00000000002d7d80 0000000000000050 t _mesa_image_address
00000000002d7dd0 0000000000000044 t _mesa_image_address2d
00000000002d7e20 00000000000000b4 t _mesa_image_row_stride
00000000002d7ee0 00000000000000cc t _mesa_image_image_stride
00000000002d7fb0 00000000000001cc t _mesa_expand_bitmap
00000000002d8180 000000000000016c t _mesa_clip_drawpixels
00000000002d82f0 00000000000000e8 t _mesa_clip_readpixels
00000000002d83e0 00000000000000d4 t _mesa_clip_copytexsubimage
00000000002d84c0 00000000000006c4 t _mesa_clip_blit
00000000002d8b90 0000000000000130 t _mesa_swap_bytes_2d_image
00000000002d8cc0 00000000000000b0 t update_modelview_scale
00000000002d8d70 00000000000003fc t _mesa_update_material.part.0
00000000002d9170 0000000000000594 t compute_light_positions.part.0
00000000002d9710 00000000000000e4 t _mesa_ShadeModel
00000000002d9800 00000000000000a8 t _mesa_ProvokingVertex
00000000002d98b0 000000000000073c t _mesa_light
00000000002d9ff0 00000000000002cc t _mesa_Lightfv
00000000002da2c0 0000000000000024 t _mesa_Lightf
00000000002da2f0 0000000000000148 t _mesa_Lightiv
00000000002da440 0000000000000024 T _mesa_Lighti
00000000002da470 000000000000029c t _mesa_GetLightfv
00000000002da710 00000000000002f0 T _mesa_GetLightiv
00000000002daa00 00000000000002a0 t _mesa_LightModelfv
00000000002daca0 00000000000000ec t _mesa_LightModeliv
00000000002dad90 0000000000000024 T _mesa_LightModeli
00000000002dadc0 0000000000000024 t _mesa_LightModelf
00000000002dadf0 00000000000000f8 t _mesa_material_bitmask
00000000002daef0 0000000000000060 t _mesa_update_color_material
00000000002daf50 000000000000015c t _mesa_ColorMaterial
00000000002db0b0 00000000000001ec t _mesa_GetMaterialfv
00000000002db2a0 0000000000000234 T _mesa_GetMaterialiv
00000000002db4e0 00000000000000e8 t _mesa_update_lighting
00000000002db5d0 0000000000000130 t _mesa_update_tnl_spaces
00000000002db700 00000000000001f4 t _mesa_init_lighting
00000000002db900 00000000000000a0 T _mesa_LineWidth_no_error
00000000002db9a0 00000000000000e8 t _mesa_LineWidth
00000000002dba90 00000000000000e8 t _mesa_LineStipple
00000000002dbb80 000000000000001c t _mesa_init_line
00000000002dbba0 0000000000000110 t get_named_matrix_stack
00000000002dbcb0 000000000000018c t push_matrix
00000000002dbe40 000000000000010c t matrix_load.constprop.0
00000000002dbf50 00000000000000d8 t _mesa_Frustum
00000000002dc030 00000000000001e0 T _mesa_MatrixFrustumEXT
00000000002dc210 00000000000000c8 t _mesa_Ortho
00000000002dc2e0 00000000000001d0 T _mesa_MatrixOrthoEXT
00000000002dc4b0 000000000000017c t _mesa_MatrixMode
00000000002dc630 0000000000000038 T _mesa_PushMatrix
00000000002dc670 00000000000001a8 T _mesa_MatrixPushEXT
00000000002dc820 00000000000000e4 T _mesa_PopMatrix
00000000002dc910 00000000000001e4 T _mesa_MatrixPopEXT
00000000002dcb00 0000000000000064 T _mesa_LoadIdentity
00000000002dcb70 0000000000000184 T _mesa_MatrixLoadIdentityEXT
00000000002dcd00 0000000000000108 t _mesa_LoadMatrixf
00000000002dce10 0000000000000130 T _mesa_MatrixLoadfEXT
00000000002dcf40 000000000000007c t _mesa_MultMatrixf
00000000002dcfc0 0000000000000188 t _mesa_MatrixMultfEXT
00000000002dd150 000000000000008c t _mesa_Rotatef
00000000002dd1e0 00000000000001b0 T _mesa_MatrixRotatefEXT
00000000002dd390 0000000000000078 t _mesa_Scalef
00000000002dd410 0000000000000184 t _mesa_MatrixScalefEXT
00000000002dd5a0 0000000000000078 t _mesa_Translatef
00000000002dd620 0000000000000184 t _mesa_MatrixTranslatefEXT
00000000002dd7b0 000000000000005c T _mesa_LoadMatrixd
00000000002dd810 000000000000007c T _mesa_MatrixLoaddEXT
00000000002dd890 0000000000000044 T _mesa_MultMatrixd
00000000002dd8e0 0000000000000044 T _mesa_MatrixMultdEXT
00000000002dd930 00000000000000b4 T _mesa_Rotated
00000000002dd9f0 00000000000001c0 T _mesa_MatrixRotatedEXT
00000000002ddbb0 0000000000000084 T _mesa_Scaled
00000000002ddc40 0000000000000010 T _mesa_MatrixScaledEXT
00000000002ddc50 0000000000000084 T _mesa_Translated
00000000002ddce0 0000000000000010 T _mesa_MatrixTranslatedEXT
00000000002ddcf0 0000000000000050 T _mesa_LoadTransposeMatrixf
00000000002ddd40 000000000000005c T _mesa_MatrixLoadTransposefEXT
00000000002ddda0 0000000000000050 T _mesa_LoadTransposeMatrixd
00000000002dddf0 000000000000005c T _mesa_MatrixLoadTransposedEXT
00000000002dde50 0000000000000038 T _mesa_MultTransposeMatrixf
00000000002dde90 000000000000003c T _mesa_MatrixMultTransposefEXT
00000000002dded0 0000000000000038 T _mesa_MultTransposeMatrixd
00000000002ddf10 000000000000003c T _mesa_MatrixMultTransposedEXT
00000000002ddf50 00000000000000cc t _mesa_update_modelview_project
00000000002de020 0000000000000164 t _mesa_init_matrix
00000000002de190 000000000000016c t _mesa_free_matrix_data
00000000002de300 000000000000005c t _mesa_init_transform
00000000002de360 00000000000000dc t _mesa_SampleCoverage
00000000002de440 000000000000003c t _mesa_init_multisample
00000000002de480 0000000000000138 T _mesa_GetMultisamplefv
00000000002de5c0 0000000000000088 T _mesa_SampleMaski_no_error
00000000002de650 00000000000000d4 T _mesa_SampleMaski
00000000002de730 00000000000000a4 T _mesa_MinSampleShading_no_error
00000000002de7e0 000000000000011c T _mesa_MinSampleShading
00000000002de900 00000000000001ec t _mesa_check_sample_count
00000000002deaf0 00000000000000ac t _mesa_AlphaToCoverageDitherControlNV
00000000002deba0 0000000000000074 t flip_bytes
00000000002dec20 000000000000048c t extract_uint_indexes
00000000002df0b0 0000000000000350 t _mesa_unpack_image.part.0
00000000002df400 00000000000000e0 t convert_integer_luminance64
00000000002df4e0 0000000000000074 t _mesa_unpack_polygon_stipple
00000000002df560 00000000000001fc t _mesa_pack_bitmap
00000000002df760 0000000000000060 t _mesa_pack_polygon_stipple
00000000002df7c0 00000000000002d8 t _mesa_unpack_stencil_span
00000000002dfaa0 00000000000003a8 t _mesa_pack_stencil_span
00000000002dfe50 00000000000008ac t _mesa_unpack_depth_span
00000000002e0700 0000000000000388 t _mesa_pack_depth_span
00000000002e0a90 00000000000001e0 t _mesa_pack_depth_stencil_span
00000000002e0c70 0000000000000020 t _mesa_unpack_image
00000000002e0c90 0000000000000140 t _mesa_pack_luminance_from_rgba_float
00000000002e0dd0 0000000000000280 t _mesa_pack_luminance_from_rgba_integer
00000000002e1050 00000000000001a4 t _mesa_unpack_color_index_to_rgba_float
00000000002e1200 00000000000000e0 t _mesa_unpack_color_index_to_rgba_ubyte
00000000002e12e0 0000000000000198 t _mesa_validate_pbo_access
00000000002e1480 000000000000005c t _mesa_map_pbo_source
00000000002e14e0 0000000000000110 t _mesa_validate_pbo_source
00000000002e15f0 0000000000000088 t _mesa_validate_pbo_source_compressed
00000000002e1680 000000000000009c t _mesa_map_validate_pbo_source
00000000002e1720 0000000000000020 t _mesa_unmap_pbo_source
00000000002e1740 000000000000005c t _mesa_map_pbo_dest
00000000002e17a0 000000000000015c t _mesa_map_validate_pbo_dest
00000000002e1900 0000000000000020 t _mesa_unmap_pbo_dest
00000000002e1920 00000000000000f4 t _mesa_validate_pbo_teximage
00000000002e1a20 00000000000000c0 t _mesa_validate_pbo_compressed_teximage
00000000002e1ae0 0000000000000020 t _mesa_unmap_teximage_pbo
00000000002e1b00 0000000000000044 t free_performance_monitor
00000000002e1b50 0000000000000034 t _mesa_init_performance_monitors
00000000002e1b90 0000000000000034 t _mesa_free_performance_monitors
00000000002e1bd0 00000000000000a4 T _mesa_GetPerfMonitorGroupsAMD
00000000002e1c80 00000000000000fc T _mesa_GetPerfMonitorCountersAMD
00000000002e1d80 00000000000000fc T _mesa_GetPerfMonitorGroupStringAMD
00000000002e1e80 000000000000013c T _mesa_GetPerfMonitorCounterStringAMD
00000000002e1fc0 0000000000000194 T _mesa_GetPerfMonitorCounterInfoAMD
00000000002e2160 0000000000000218 T _mesa_GenPerfMonitorsAMD
00000000002e2380 0000000000000114 T _mesa_DeletePerfMonitorsAMD
00000000002e24a0 000000000000021c T _mesa_SelectPerfMonitorCountersAMD
00000000002e26c0 00000000000000c0 T _mesa_BeginPerfMonitorAMD
00000000002e2780 000000000000009c T _mesa_EndPerfMonitorAMD
00000000002e2820 0000000000000294 T _mesa_GetPerfMonitorCounterDataAMD
00000000002e2ac0 0000000000000020 t free_performance_query
00000000002e2ae0 0000000000000028 t _mesa_init_performance_queries
00000000002e2b10 0000000000000034 t _mesa_free_performance_queries
00000000002e2b50 000000000000008c T _mesa_GetFirstPerfQueryIdINTEL
00000000002e2be0 000000000000009c T _mesa_GetNextPerfQueryIdINTEL
00000000002e2c80 0000000000000114 T _mesa_GetPerfQueryIdByNameINTEL
00000000002e2da0 000000000000012c T _mesa_GetPerfQueryInfoINTEL
00000000002e2ed0 0000000000000208 T _mesa_GetPerfCounterInfoINTEL
00000000002e30e0 000000000000011c T _mesa_CreatePerfQueryINTEL
00000000002e3200 000000000000011c T _mesa_BeginPerfQueryINTEL
00000000002e3320 00000000000000a0 t _mesa_EndPerfQueryINTEL
00000000002e33c0 00000000000000d8 T _mesa_DeletePerfQueryINTEL
00000000002e34a0 00000000000001c4 T _mesa_GetPerfQueryDataINTEL
00000000002e3670 0000000000000120 t create_program_pipelines
00000000002e3790 0000000000000170 t use_program_stages
00000000002e3900 0000000000000090 t _mesa_delete_pipeline_object
00000000002e3990 0000000000000008 t delete_pipelineobj_cb
00000000002e39a0 00000000000000ac t _mesa_init_pipeline
00000000002e3a50 0000000000000068 t _mesa_free_pipeline_data
00000000002e3ac0 0000000000000018 t _mesa_lookup_pipeline_object
00000000002e3ae0 000000000000005c t _mesa_reference_pipeline_object_
00000000002e3b40 0000000000000088 T _mesa_UseProgramStages_no_error
00000000002e3bd0 0000000000000268 T _mesa_UseProgramStages
00000000002e3e40 0000000000000098 T _mesa_ActiveShaderProgram_no_error
00000000002e3ee0 0000000000000118 T _mesa_ActiveShaderProgram
00000000002e4000 0000000000000190 t _mesa_bind_pipeline
00000000002e4190 0000000000000070 t _mesa_BindProgramPipeline_no_error
00000000002e4200 00000000000000cc t _mesa_BindProgramPipeline
00000000002e42d0 00000000000000fc T _mesa_DeleteProgramPipelines
00000000002e43d0 0000000000000030 T _mesa_GenProgramPipelines_no_error
00000000002e4400 0000000000000050 T _mesa_GenProgramPipelines
00000000002e4450 0000000000000030 T _mesa_CreateProgramPipelines_no_error
00000000002e4480 0000000000000050 T _mesa_CreateProgramPipelines
00000000002e44d0 0000000000000048 T _mesa_IsProgramPipeline
00000000002e4520 00000000000002cc T _mesa_GetProgramPipelineiv
00000000002e47f0 0000000000000284 t _mesa_validate_program_pipeline
00000000002e4a80 0000000000000064 T _mesa_ValidateProgramPipeline
00000000002e4af0 00000000000000ac T _mesa_GetProgramPipelineInfoLog
00000000002e4ba0 00000000000000d0 t get_pixelmap
00000000002e4c70 0000000000000104 t store_pixelmap
00000000002e4d80 0000000000000120 t validate_pbo_access.constprop.0
00000000002e4ea0 0000000000000084 T _mesa_PixelZoom
00000000002e4f30 0000000000000150 T _mesa_PixelMapfv
00000000002e5080 00000000000001f4 T _mesa_PixelMapuiv
00000000002e5280 00000000000001f4 T _mesa_PixelMapusv
00000000002e5480 0000000000000160 t _mesa_GetnPixelMapfvARB
00000000002e55e0 000000000000000c T _mesa_GetPixelMapfv
00000000002e55f0 0000000000000160 t _mesa_GetnPixelMapuivARB
00000000002e5750 000000000000000c T _mesa_GetPixelMapuiv
00000000002e5760 0000000000000210 t _mesa_GetnPixelMapusvARB
00000000002e5970 000000000000000c T _mesa_GetPixelMapusv
00000000002e5980 00000000000004ec t _mesa_PixelTransferf
00000000002e5e70 0000000000000008 T _mesa_PixelTransferi
00000000002e5e80 00000000000000a0 t _mesa_update_pixel
00000000002e5f20 00000000000000b0 t _mesa_init_pixel
00000000002e5fd0 000000000000053c t _mesa_PixelStorei
00000000002e6510 0000000000000008 T _mesa_PixelStoref
00000000002e6520 0000000000000234 t _mesa_PixelStorei_no_error
00000000002e6760 0000000000000008 T _mesa_PixelStoref_no_error
00000000002e6770 00000000000000e8 t _mesa_init_pixelstore
00000000002e6860 00000000000000fc t _mesa_compressed_pixel_storage_error_check
00000000002e6960 0000000000000150 t _mesa_scale_and_bias_rgba
00000000002e6ab0 0000000000000150 t _mesa_map_rgba
00000000002e6c00 0000000000000098 t _mesa_map_ci_to_rgba
00000000002e6ca0 0000000000000050 t _mesa_scale_and_bias_depth
00000000002e6cf0 0000000000000070 t _mesa_scale_and_bias_depth_uint
00000000002e6d60 0000000000000120 t _mesa_apply_rgba_transfer_ops
00000000002e6e80 00000000000000b0 t _mesa_shift_and_offset_ci
00000000002e6f30 0000000000000130 t _mesa_apply_stencil_transfer_ops
00000000002e7060 00000000000000a4 T _mesa_PointSize_no_error
00000000002e7110 00000000000000c8 t _mesa_PointSize
00000000002e71e0 00000000000003b0 t _mesa_PointParameterfv
00000000002e7590 0000000000000028 t _mesa_PointParameteri
00000000002e75c0 0000000000000040 T _mesa_PointParameteriv
00000000002e7600 0000000000000020 t _mesa_PointParameterf
00000000002e7620 0000000000000064 t _mesa_init_point
00000000002e7690 00000000000000b0 T _mesa_CullFace_no_error
00000000002e7740 00000000000000e4 t _mesa_CullFace
00000000002e7830 00000000000000b0 T _mesa_FrontFace_no_error
00000000002e78e0 00000000000000dc t _mesa_FrontFace
00000000002e79c0 0000000000000190 T _mesa_PolygonMode_no_error
00000000002e7b50 0000000000000210 t _mesa_PolygonMode
00000000002e7d60 000000000000010c T _mesa_PolygonStipple
00000000002e7e70 00000000000000a4 t _mesa_GetnPolygonStippleARB
00000000002e7f20 000000000000000c T _mesa_GetPolygonStipple
00000000002e7f30 00000000000000bc t _mesa_polygon_offset_clamp
00000000002e7ff0 00000000000000c4 t _mesa_PolygonOffset
00000000002e80c0 00000000000000f0 T _mesa_PolygonOffsetClampEXT
00000000002e81b0 0000000000000060 t _mesa_init_polygon
00000000002e8210 0000000000000014 t delete_queryobj_cb
00000000002e8230 0000000000000028 t _mesa_delete_query
00000000002e8260 0000000000000120 t create_queries
00000000002e8380 0000000000000370 t get_query_object
00000000002e86f0 00000000000005c0 t get_query_binding_point
00000000002e8cb0 0000000000000030 T _mesa_GenQueries
00000000002e8ce0 00000000000000d8 T _mesa_CreateQueries
00000000002e8dc0 0000000000000128 T _mesa_DeleteQueries
00000000002e8ef0 0000000000000074 T _mesa_IsQuery
00000000002e8f70 0000000000000254 t _mesa_BeginQueryIndexed
00000000002e91d0 0000000000000184 t _mesa_EndQueryIndexed
00000000002e9360 000000000000000c T _mesa_BeginQuery
00000000002e9370 0000000000000008 T _mesa_EndQuery
00000000002e9380 000000000000016c T _mesa_QueryCounter
00000000002e94f0 0000000000000494 t _mesa_GetQueryIndexediv
00000000002e9990 0000000000000010 T _mesa_GetQueryiv
00000000002e99a0 0000000000000044 T _mesa_GetQueryObjectiv
00000000002e99f0 0000000000000044 T _mesa_GetQueryObjectuiv
00000000002e9a40 0000000000000044 T _mesa_GetQueryObjecti64v
00000000002e9a90 0000000000000044 T _mesa_GetQueryObjectui64v
00000000002e9ae0 000000000000008c T _mesa_GetQueryBufferObjectiv
00000000002e9b70 000000000000008c T _mesa_GetQueryBufferObjectuiv
00000000002e9c00 000000000000008c T _mesa_GetQueryBufferObjecti64v
00000000002e9c90 000000000000008c T _mesa_GetQueryBufferObjectui64v
00000000002e9d20 000000000000004c t _mesa_init_queryobj
00000000002e9d70 0000000000000034 t _mesa_free_queryobj_data
00000000002e9db0 0000000000000338 t window_pos3f
00000000002ea0f0 00000000000000ac t rasterpos
00000000002ea1a0 0000000000000014 T _mesa_RasterPos2d
00000000002ea1c0 000000000000000c T _mesa_RasterPos2f
00000000002ea1d0 0000000000000014 T _mesa_RasterPos2i
00000000002ea1f0 000000000000001c T _mesa_RasterPos2s
00000000002ea210 0000000000000014 T _mesa_RasterPos3d
00000000002ea230 0000000000000008 T _mesa_RasterPos3f
00000000002ea240 0000000000000014 T _mesa_RasterPos3i
00000000002ea260 0000000000000020 T _mesa_RasterPos3s
00000000002ea280 0000000000000014 T _mesa_RasterPos4d
00000000002ea2a0 0000000000000004 T _mesa_RasterPos4f
00000000002ea2b0 0000000000000014 T _mesa_RasterPos4i
00000000002ea2d0 0000000000000024 T _mesa_RasterPos4s
00000000002ea300 0000000000000018 T _mesa_RasterPos2dv
00000000002ea320 0000000000000010 T _mesa_RasterPos2fv
00000000002ea330 0000000000000018 T _mesa_RasterPos2iv
00000000002ea350 000000000000001c T _mesa_RasterPos2sv
00000000002ea370 000000000000001c T _mesa_RasterPos3dv
00000000002ea390 0000000000000010 T _mesa_RasterPos3fv
00000000002ea3a0 000000000000001c T _mesa_RasterPos3iv
00000000002ea3c0 0000000000000020 T _mesa_RasterPos3sv
00000000002ea3e0 000000000000001c T _mesa_RasterPos4dv
00000000002ea400 000000000000000c T _mesa_RasterPos4fv
00000000002ea410 000000000000001c T _mesa_RasterPos4iv
00000000002ea430 0000000000000024 T _mesa_RasterPos4sv
00000000002ea460 0000000000000044 T _mesa_WindowPos2d
00000000002ea4b0 000000000000003c T _mesa_WindowPos2f
00000000002ea4f0 0000000000000048 T _mesa_WindowPos2i
00000000002ea540 000000000000004c T _mesa_WindowPos2s
00000000002ea590 0000000000000044 T _mesa_WindowPos3d
00000000002ea5e0 0000000000000038 T _mesa_WindowPos3f
00000000002ea620 0000000000000048 T _mesa_WindowPos3i
00000000002ea670 0000000000000050 T _mesa_WindowPos3s
00000000002ea6c0 0000000000000050 T _mesa_WindowPos4dMESA
00000000002ea710 0000000000000040 T _mesa_WindowPos4fMESA
00000000002ea750 0000000000000054 T _mesa_WindowPos4iMESA
00000000002ea7b0 0000000000000054 T _mesa_WindowPos4sMESA
00000000002ea810 000000000000004c T _mesa_WindowPos2dv
00000000002ea860 0000000000000044 T _mesa_WindowPos2fv
00000000002ea8b0 000000000000004c T _mesa_WindowPos2iv
00000000002ea900 0000000000000050 T _mesa_WindowPos2sv
00000000002ea950 0000000000000050 T _mesa_WindowPos3dv
00000000002ea9a0 0000000000000044 T _mesa_WindowPos3fv
00000000002ea9f0 0000000000000050 T _mesa_WindowPos3iv
00000000002eaa40 0000000000000054 T _mesa_WindowPos3sv
00000000002eaaa0 000000000000005c T _mesa_WindowPos4dvMESA
00000000002eab00 000000000000004c T _mesa_WindowPos4fvMESA
00000000002eab50 000000000000005c T _mesa_WindowPos4ivMESA
00000000002eabb0 0000000000000060 T _mesa_WindowPos4svMESA
00000000002eac10 0000000000000068 t _mesa_init_rastpos
00000000002eac80 0000000000000144 t _mesa_get_readpixels_transfer_ops
00000000002eadd0 0000000000000170 t _mesa_readpixels_needs_slow_path
00000000002eaf40 0000000000000ffc t _mesa_readpixels
00000000002ebf40 000000000000010c t _mesa_ReadnPixelsARB_no_error
00000000002ec050 0000000000000750 t _mesa_ReadnPixelsARB
00000000002ec7a0 000000000000000c T _mesa_ReadPixels_no_error
00000000002ec7b0 000000000000000c T _mesa_ReadPixels
00000000002ec7c0 0000000000000158 t _mesa_init_remap_table
00000000002ec920 0000000000000030 t _mesa_delete_renderbuffer
00000000002ec950 0000000000000084 t _mesa_init_renderbuffer
00000000002ec9e0 0000000000000094 t _mesa_reference_renderbuffer_
00000000002eca80 000000000000006c t _mesa_attach_and_own_rb
00000000002ecaf0 0000000000000040 t _mesa_attach_and_reference_rb
00000000002ecb30 00000000000000d0 t set_scissor_no_notify
00000000002ecc00 0000000000000120 t scissor_array
00000000002ecd20 0000000000000130 T _mesa_Scissor_no_error
00000000002ece50 0000000000000158 T _mesa_Scissor
00000000002ecfb0 0000000000000104 t _mesa_set_scissor
00000000002ed0c0 0000000000000034 T _mesa_ScissorArrayv_no_error
00000000002ed100 00000000000000a8 T _mesa_ScissorArrayv
00000000002ed1b0 0000000000000114 T _mesa_ScissorIndexed_no_error
00000000002ed2d0 00000000000000dc T _mesa_ScissorIndexed
00000000002ed3b0 0000000000000110 T _mesa_ScissorIndexedv_no_error
00000000002ed4c0 00000000000000d0 T _mesa_ScissorIndexedv
00000000002ed590 000000000000017c t _mesa_WindowRectanglesEXT
00000000002ed710 00000000000000d4 t _mesa_init_scissor
00000000002ed7f0 000000000000008c t attach_shader
00000000002ed880 00000000000000bc t get_attached_shaders
00000000002ed940 00000000000000ec t attach_shader_err
00000000002eda30 000000000000006c t create_shader_program
00000000002edaa0 0000000000000164 t detach_shader_error
00000000002edc10 0000000000000114 t detach_shader_no_error
00000000002edd30 000000000000016c t get_shaderiv
00000000002edea0 0000000000000038 t destroy_shader_include
00000000002edee0 000000000000025c t validate_and_tokenise_sh_incl
00000000002ee140 00000000000001e0 t lookup_shader_include
00000000002ee320 0000000000000078 t copy_string
00000000002ee3a0 00000000000001fc t _mesa_compile_shader.part.0
00000000002ee5a0 00000000000000cc t create_shader
00000000002ee670 0000000000000950 t get_programiv
00000000002eefc0 0000000000000144 t _mesa_get_shader_flags
00000000002ef110 0000000000000054 t _mesa_get_shader_capture_path
00000000002ef170 00000000000000b0 t _mesa_init_shader_state
00000000002ef220 00000000000000d0 t _mesa_free_shader_state
00000000002ef2f0 0000000000000050 t _mesa_copy_string
00000000002ef340 0000000000000198 t _mesa_validate_shader_target
00000000002ef4e0 0000000000000054 t _mesa_active_program
00000000002ef540 0000000000000058 T _mesa_AttachObjectARB_no_error
00000000002ef5a0 0000000000000034 T _mesa_AttachObjectARB
00000000002ef5e0 0000000000000058 T _mesa_AttachShader_no_error
00000000002ef640 0000000000000034 T _mesa_AttachShader
00000000002ef680 0000000000000078 T _mesa_CompileShader
00000000002ef700 0000000000000024 T _mesa_CreateShader_no_error
00000000002ef730 0000000000000080 T _mesa_CreateShader
00000000002ef7b0 0000000000000024 T _mesa_CreateShaderObjectARB_no_error
00000000002ef7e0 0000000000000080 T _mesa_CreateShaderObjectARB
00000000002ef860 0000000000000020 T _mesa_CreateProgram
00000000002ef880 0000000000000020 T _mesa_CreateProgramObjectARB
00000000002ef8a0 0000000000000104 T _mesa_DeleteObjectARB
00000000002ef9b0 00000000000000bc T _mesa_DeleteProgram
00000000002efa70 00000000000000bc T _mesa_DeleteShader
00000000002efb30 000000000000002c T _mesa_DetachObjectARB_no_error
00000000002efb60 000000000000002c T _mesa_DetachObjectARB
00000000002efb90 000000000000002c T _mesa_DetachShader_no_error
00000000002efbc0 000000000000002c T _mesa_DetachShader
00000000002efbf0 0000000000000040 T _mesa_GetAttachedObjectsARB
00000000002efc30 0000000000000040 T _mesa_GetAttachedShaders
00000000002efc70 00000000000001a0 T _mesa_GetInfoLogARB
00000000002efe10 00000000000000e8 T _mesa_GetObjectParameterivARB
00000000002eff00 0000000000000108 T _mesa_GetObjectParameterfvARB
00000000002f0010 0000000000000034 T _mesa_GetProgramiv
00000000002f0050 0000000000000034 T _mesa_GetShaderiv
00000000002f0090 00000000000000c0 T _mesa_GetProgramInfoLog
00000000002f0150 00000000000000c0 T _mesa_GetShaderInfoLog
00000000002f0210 00000000000000c0 T _mesa_GetShaderSource
00000000002f02d0 0000000000000064 T _mesa_GetHandleARB
00000000002f0340 0000000000000030 T _mesa_IsProgram
00000000002f0370 0000000000000030 T _mesa_IsShader
00000000002f03a0 00000000000001cc T _mesa_ShaderSource_no_error
00000000002f0570 000000000000022c t _mesa_ShaderSource
00000000002f07a0 00000000000000d4 T _mesa_ValidateProgram
00000000002f0880 0000000000000118 T _mesa_GetShaderPrecisionFormat
00000000002f09a0 0000000000000048 T _mesa_ReleaseShaderCompiler
00000000002f09f0 0000000000000174 T _mesa_ShaderBinary
00000000002f0b70 0000000000000124 T _mesa_GetProgramBinary
00000000002f0ca0 0000000000000108 T _mesa_ProgramBinary
00000000002f0db0 0000000000000068 T _mesa_ProgramParameteri_no_error
00000000002f0e20 00000000000000f0 T _mesa_ProgramParameteri
00000000002f0f10 000000000000008c t _mesa_copy_linked_program_data
00000000002f0fa0 0000000000000060 T _mesa_PatchParameteri_no_error
00000000002f1000 00000000000000fc T _mesa_PatchParameteri
00000000002f1100 0000000000000148 T _mesa_PatchParameterfv
00000000002f1250 000000000000011c T _mesa_GetSubroutineUniformLocation
00000000002f1370 0000000000000160 T _mesa_GetSubroutineIndex
00000000002f14d0 0000000000000288 T _mesa_GetActiveSubroutineUniformiv
00000000002f1760 000000000000015c T _mesa_GetActiveSubroutineUniformName
00000000002f18c0 000000000000015c T _mesa_GetActiveSubroutineName
00000000002f1a20 0000000000000294 T _mesa_UniformSubroutinesuiv
00000000002f1cc0 0000000000000108 T _mesa_GetUniformSubroutineuiv
00000000002f1dd0 00000000000002ac T _mesa_GetProgramStageiv
00000000002f2080 000000000000004c t _mesa_init_shader_includes
00000000002f20d0 000000000000000c t _mesa_get_shader_include_cursor
00000000002f20e0 000000000000000c t _mesa_set_shader_include_cursor
00000000002f20f0 0000000000000034 t _mesa_destroy_shader_includes
00000000002f2130 000000000000001c t _mesa_lookup_shader_include
00000000002f2150 0000000000000220 T _mesa_NamedStringARB
00000000002f2370 00000000000000d0 T _mesa_DeleteNamedStringARB
00000000002f2440 00000000000001ec T _mesa_CompileShaderIncludeARB
00000000002f2630 000000000000008c T _mesa_IsNamedStringARB
00000000002f26c0 0000000000000108 T _mesa_GetNamedStringARB
00000000002f27d0 0000000000000140 T _mesa_GetNamedStringivARB
00000000002f2910 00000000000000d0 t _mesa_shader_write_subroutine_indices
00000000002f29e0 00000000000000e4 t _mesa_program_init_subroutine_defaults
00000000002f2ad0 0000000000000124 t _mesa_use_program
00000000002f2c00 000000000000035c t link_program_error.part.0
00000000002f2f60 0000000000000220 T _mesa_CreateShaderProgramv
00000000002f3180 0000000000000088 T _mesa_LinkProgram
00000000002f3210 0000000000000378 T _mesa_LinkProgram_no_error
00000000002f3590 000000000000007c t update_programs_in_pipeline
00000000002f3610 0000000000000088 t _mesa_use_shader_program
00000000002f36a0 0000000000000114 T _mesa_UseProgram_no_error
00000000002f37c0 0000000000000298 T _mesa_UseProgram
00000000002f3a60 0000000000000248 t _mesa_get_shader_image_format
00000000002f3cb0 00000000000000b4 t set_image_binding
00000000002f3d70 000000000000004c t _mesa_get_image_format_class
00000000002f3dc0 000000000000018c t _mesa_is_shader_image_format_supported
00000000002f3f50 0000000000000050 t _mesa_default_image_unit
00000000002f3fa0 0000000000000098 t _mesa_init_image_units
00000000002f4040 000000000000004c t _mesa_free_image_textures
00000000002f4090 00000000000001cc t _mesa_is_image_unit_valid
00000000002f4260 00000000000000e4 T _mesa_BindImageTexture_no_error
00000000002f4350 0000000000000240 T _mesa_BindImageTexture
00000000002f4590 000000000000018c T _mesa_BindImageTextureEXT
00000000002f4720 00000000000001a8 T _mesa_BindImageTextures_no_error
00000000002f48d0 00000000000002ec T _mesa_BindImageTextures
00000000002f4bc0 00000000000000c4 t _mesa_reference_shader
00000000002f4c90 0000000000000050 t _mesa_new_shader
00000000002f4ce0 0000000000000044 t _mesa_delete_shader
00000000002f4d30 0000000000000048 t _mesa_delete_linked_shader
00000000002f4d80 0000000000000048 t _mesa_lookup_shader
00000000002f4dd0 000000000000008c t _mesa_lookup_shader_err
00000000002f4e60 00000000000000a4 t _mesa_reference_shader_program_data
00000000002f4f10 0000000000000048 t _mesa_create_shader_program_data
00000000002f4f60 00000000000000c8 t _mesa_new_shader_program
00000000002f5030 00000000000000d0 t _mesa_clear_shader_program_data
00000000002f5100 00000000000000e0 t _mesa_free_shader_program_data
00000000002f51e0 00000000000000b0 t _mesa_reference_shader_program_
00000000002f5290 0000000000000024 t _mesa_delete_shader_program
00000000002f52c0 0000000000000048 t _mesa_lookup_shader_program
00000000002f5310 0000000000000094 t _mesa_lookup_shader_program_err
00000000002f53b0 000000000000012c t program_resource_location(gl_program_resource*, unsigned int)
00000000002f54e0 0000000000000078 t compute_resource_key(unsigned int, char const*)
00000000002f5560 000000000000009c T _mesa_BindAttribLocation_no_error
00000000002f5600 000000000000012c T _mesa_BindAttribLocation
00000000002f5730 0000000000000068 t _mesa_count_active_attribs
00000000002f57a0 00000000000000c0 t _mesa_longest_attribute_name_length
00000000002f5860 00000000000000f4 T _mesa_BindFragDataLocation_no_error
00000000002f5960 00000000000001b8 t _mesa_BindFragDataLocationIndexed
00000000002f5b20 000000000000000c T _mesa_BindFragDataLocation
00000000002f5b30 00000000000000f4 T _mesa_BindFragDataLocationIndexed_no_error
00000000002f5c30 00000000000000a4 t _mesa_program_resource_name
00000000002f5ce0 00000000000000b8 t _mesa_program_resource_array_size
00000000002f5da0 0000000000000330 t _mesa_program_resource_find_name
00000000002f60d0 00000000000000a0 T _mesa_GetAttribLocation
00000000002f6170 00000000000000e0 T _mesa_GetFragDataLocation
00000000002f6250 00000000000000fc T _mesa_GetFragDataIndex
00000000002f6350 0000000000000108 t _mesa_program_resource_find_active_variable
00000000002f6460 00000000000000a8 t _mesa_program_resource_index
00000000002f6510 000000000000011c t _mesa_program_resource_find_index
00000000002f6630 00000000000000ec t _mesa_program_resource_name_len
00000000002f6720 0000000000000170 t _mesa_get_program_resource_name
00000000002f6890 0000000000000030 t _mesa_program_resource_location
00000000002f68c0 0000000000000050 t _mesa_program_resource_location_index
00000000002f6910 0000000000000a7c t _mesa_program_resource_prop
00000000002f7390 0000000000000188 T _mesa_GetActiveAttrib
00000000002f7520 0000000000000144 t _mesa_get_program_resourceiv
00000000002f7670 000000000000041c t _mesa_validate_pipeline_io
00000000002f7a90 00000000000000a4 t _mesa_create_program_resource_hash
00000000002f7b40 0000000000000014 t delete_texture_cb
00000000002f7b60 000000000000002c t delete_program_cb
00000000002f7b90 000000000000001c t delete_framebuffer_cb
00000000002f7bb0 000000000000001c t delete_renderbuffer_cb
00000000002f7bd0 0000000000000014 t delete_memory_object_cb
00000000002f7bf0 0000000000000014 t delete_semaphore_object_cb
00000000002f7c10 0000000000000008 t delete_fragshader_cb
00000000002f7c20 0000000000000028 t delete_sampler_object_cb
00000000002f7c50 0000000000000040 t delete_bufferobj_cb
00000000002f7c90 0000000000000048 t delete_shader_cb
00000000002f7ce0 000000000000001c t free_shader_program_data_cb
00000000002f7d00 0000000000000008 t delete_bitmap_atlas_cb
00000000002f7d10 0000000000000008 t delete_displaylist_cb
00000000002f7d20 0000000000000194 t _mesa_alloc_shared_state
00000000002f7ec0 0000000000000354 t _mesa_reference_shared_state
00000000002f8220 000000000000001c t _mesa_get_spirv_extension_count
00000000002f8240 00000000000000cc t _mesa_spirv_extensions_to_string
00000000002f8310 0000000000000044 t _mesa_get_enabled_spirv_extension
00000000002f8360 0000000000000074 t _mesa_fill_supported_spirv_extensions
00000000002f83e0 000000000000038c t update_program
00000000002f8770 0000000000000120 t _mesa_update_allow_draw_out_of_order
00000000002f8890 000000000000030c t _mesa_update_state_locked
00000000002f8ba0 000000000000002c t _mesa_update_state
00000000002f8bd0 000000000000002c t _mesa_set_vp_override
00000000002f8c00 00000000000000b0 t _mesa_update_vertex_processing_mode
00000000002f8cb0 0000000000000140 t _mesa_set_draw_vao
00000000002f8df0 0000000000000214 t stencil_func
00000000002f9010 0000000000000208 t stencil_op
00000000002f9220 00000000000001b4 t stencil_op_separate
00000000002f93e0 000000000000002c t _mesa_ClearStencil
00000000002f9410 000000000000018c T _mesa_StencilFuncSeparateATI
00000000002f95a0 0000000000000034 T _mesa_StencilFunc_no_error
00000000002f95e0 0000000000000050 T _mesa_StencilFunc
00000000002f9630 0000000000000178 T _mesa_StencilMask
00000000002f97b0 0000000000000034 T _mesa_StencilOp_no_error
00000000002f97f0 0000000000000114 T _mesa_StencilOp
00000000002f9910 0000000000000078 t _mesa_ActiveStencilFaceEXT
00000000002f9990 000000000000003c T _mesa_StencilOpSeparate_no_error
00000000002f99d0 0000000000000140 t _mesa_StencilOpSeparate
00000000002f9b10 00000000000000f8 T _mesa_StencilFuncSeparate_no_error
00000000002f9c10 0000000000000144 t _mesa_StencilFuncSeparate
00000000002f9d60 00000000000000c4 T _mesa_StencilMaskSeparate_no_error
00000000002f9e30 00000000000000ec t _mesa_StencilMaskSeparate
00000000002f9f20 0000000000000050 t _mesa_init_stencil
00000000002f9f70 00000000000000a4 t fence_sync
00000000002fa020 0000000000000004 t _mesa_init_sync
00000000002fa030 0000000000000004 t _mesa_free_sync_data
00000000002fa040 0000000000000090 t _mesa_get_and_ref_sync
00000000002fa0d0 0000000000000090 t _mesa_unref_sync_object
00000000002fa160 0000000000000094 t client_wait_sync
00000000002fa200 00000000000000a4 T _mesa_IsSync
00000000002fa2b0 000000000000009c T _mesa_DeleteSync_no_error
00000000002fa350 00000000000000c4 T _mesa_DeleteSync
00000000002fa420 000000000000002c T _mesa_FenceSync_no_error
00000000002fa450 00000000000000a0 T _mesa_FenceSync
00000000002fa4f0 0000000000000090 T _mesa_ClientWaitSync_no_error
00000000002fa580 0000000000000120 T _mesa_ClientWaitSync
00000000002fa6a0 00000000000000a8 T _mesa_WaitSync_no_error
00000000002fa750 0000000000000118 T _mesa_WaitSync
00000000002fa870 00000000000001a4 T _mesa_GetSynciv
00000000002faa20 000000000000032c t _mesa_gl_compressed_format_base_format
00000000002fad50 00000000000005b8 t _mesa_get_compressed_formats
00000000002fb310 0000000000000460 t _mesa_glenum_to_compressed_format
00000000002fb770 00000000000002e4 t _mesa_compressed_format_to_glenum
00000000002fba60 00000000000000a4 t _mesa_get_compressed_fetch_func
00000000002fbb10 00000000000000f4 t _mesa_decompress_image
00000000002fbc10 000000000000006c t write_bits
00000000002fbc80 0000000000000070 t count_anchors_before_texel
00000000002fbcf0 00000000000007f4 t texstore_bptc_rgb_float.constprop.0
00000000002fc4f0 00000000000005d8 t fetch_rgb_float_from_block
00000000002fcad0 0000000000000070 t fetch_bptc_rgb_unsigned_float
00000000002fcb40 0000000000000070 t fetch_bptc_rgb_signed_float
00000000002fcbb0 000000000000093c t fetch_rgba_unorm_from_block
00000000002fd4f0 00000000000000c0 t fetch_bptc_rgba_unorm
00000000002fd5b0 00000000000000c4 t fetch_bptc_srgb_alpha_unorm
00000000002fd680 000000000000005c t _mesa_get_bptc_fetch_func
00000000002fd6e0 00000000000008cc T _mesa_texstore_bptc_rgba_unorm
00000000002fdfb0 0000000000000044 T _mesa_texstore_bptc_rgb_signed_float
00000000002fe000 0000000000000040 T _mesa_texstore_bptc_rgb_unsigned_float
00000000002fe040 000000000000013c t etc1_parse_block
00000000002fe180 00000000000000c8 t etc1_fetch_texel
00000000002fe250 00000000000005ec t etc2_rgb8_parse_block
00000000002fe840 000000000000005c t etc2_alpha8_parse_block
00000000002fe8a0 00000000000000bc t fetch_etc1_rgb8
00000000002fe960 0000000000000254 t etc2_rgb8_fetch_texel
00000000002febc0 00000000000000d0 t fetch_etc2_srgb8_punchthrough_alpha1
00000000002fec90 00000000000000cc t fetch_etc2_rgb8_punchthrough_alpha1
00000000002fed60 00000000000000c4 t fetch_etc2_srgb8
00000000002fee30 00000000000000c4 t fetch_etc2_rgb8
00000000002fef00 00000000000000c8 t etc2_signed_r11_fetch_texel.isra.0
00000000002fefd0 000000000000011c t fetch_etc2_signed_rg11_eac
00000000002ff0f0 00000000000000cc t fetch_etc2_signed_r11_eac
00000000002ff1c0 00000000000000a0 t etc2_r11_fetch_texel.isra.0
00000000002ff260 0000000000000108 t fetch_etc2_rg11_eac
00000000002ff370 0000000000000090 t etc2_rgba8_fetch_texel
00000000002ff400 00000000000000e0 t fetch_etc2_srgb8_alpha8_eac
00000000002ff4e0 00000000000000dc t fetch_etc2_rgba8_eac
00000000002ff5c0 0000000000000180 t fetch_etc2_r11_eac
00000000002ff740 0000000000000008 T _mesa_texstore_etc1_rgb8
00000000002ff750 0000000000000128 t _mesa_etc1_unpack_rgba8888
00000000002ff880 0000000000000008 T _mesa_texstore_etc2_rgb8
00000000002ff890 0000000000000008 T _mesa_texstore_etc2_srgb8
00000000002ff8a0 0000000000000008 T _mesa_texstore_etc2_rgba8_eac
00000000002ff8b0 0000000000000008 T _mesa_texstore_etc2_srgb8_alpha8_eac
00000000002ff8c0 0000000000000008 T _mesa_texstore_etc2_r11_eac
00000000002ff8d0 0000000000000008 T _mesa_texstore_etc2_signed_r11_eac
00000000002ff8e0 0000000000000008 T _mesa_texstore_etc2_rg11_eac
00000000002ff8f0 0000000000000008 T _mesa_texstore_etc2_signed_rg11_eac
00000000002ff900 0000000000000008 T _mesa_texstore_etc2_rgb8_punchthrough_alpha1
00000000002ff910 0000000000000008 T _mesa_texstore_etc2_srgb8_punchthrough_alpha1
00000000002ff920 0000000000000f4c t _mesa_unpack_etc2_format
0000000000300870 00000000000000e4 t _mesa_get_etc_fetch_func
0000000000300960 0000000000000100 t fxt1_decode_1HI
0000000000300a60 0000000000000074 t fxt1_decode_1CHROMA
0000000000300ae0 0000000000000228 t fxt1_decode_1MIXED
0000000000300d10 0000000000000210 t fxt1_decode_1ALPHA
0000000000300f20 0000000000000078 t fxt1_decode_1
0000000000300fa0 0000000000000054 t fetch_rgb_fxt1
0000000000301000 000000000000005c t fetch_rgba_fxt1
0000000000301060 0000000000000080 t fxt1_variance.constprop.0
00000000003010e0 0000000000001094 t fxt1_encode
0000000000302180 0000000000000198 T _mesa_texstore_rgb_fxt1
0000000000302320 0000000000000174 T _mesa_texstore_rgba_fxt1
00000000003024a0 0000000000000028 t _mesa_get_fxt_fetch_func
00000000003024d0 00000000000000c0 t fetch_signed_la_latc2
0000000000302590 00000000000000c4 t fetch_signed_rg_rgtc2
0000000000302660 0000000000000060 t fetch_signed_l_latc1
00000000003026c0 0000000000000068 t fetch_signed_red_rgtc1
0000000000302730 0000000000000090 t fetch_la_latc2
00000000003027c0 0000000000000094 t fetch_rg_rgtc2
0000000000302860 0000000000000050 t fetch_l_latc1
00000000003028b0 0000000000000054 t fetch_red_rgtc1
0000000000302910 0000000000000240 T _mesa_texstore_red_rgtc1
0000000000302b50 0000000000000264 T _mesa_texstore_signed_red_rgtc1
0000000000302dc0 00000000000002f0 T _mesa_texstore_rg_rgtc2
00000000003030b0 000000000000033c T _mesa_texstore_signed_rg_rgtc2
00000000003033f0 00000000000000b0 t _mesa_get_compressed_rgtc_func
00000000003034a0 00000000000001fc t dxt135_decode_imageblock
00000000003036a0 000000000000008c t fetch_2d_texel_rgba_dxt3
0000000000303730 0000000000000150 t fetch_2d_texel_rgba_dxt5
0000000000303880 0000000000000c44 t encodedxtcolorblockfaster
00000000003044d0 00000000000000cc t writedxt5encodedalphablock
00000000003045a0 00000000000000a0 t fetch_rgba_dxt1
0000000000304640 0000000000000060 t fetch_rgba_dxt3
00000000003046a0 0000000000000060 t fetch_rgba_dxt5
0000000000304700 00000000000000a4 t fetch_srgb_dxt1
00000000003047b0 0000000000000064 t fetch_srgba_dxt3
0000000000304820 0000000000000064 t fetch_srgba_dxt5
0000000000304890 00000000000000a4 t fetch_srgba_dxt1
0000000000304940 00000000000000a0 t fetch_rgb_dxt1
00000000003049e0 0000000000001234 t tx_compress_dxtn
0000000000305c20 000000000000017c T _mesa_texstore_rgb_dxt1
0000000000305da0 000000000000017c T _mesa_texstore_rgba_dxt1
0000000000305f20 000000000000017c T _mesa_texstore_rgba_dxt3
00000000003060a0 000000000000017c T _mesa_texstore_rgba_dxt5
0000000000306220 00000000000000ac t _mesa_get_dxt_fetch_func
00000000003062d0 0000000000000078 t adjust_for_oes_float_texture
0000000000306350 00000000000000bc t strip_texture_border
0000000000306410 0000000000000110 t copytexsubimage_by_slice
0000000000306520 00000000000001b0 t get_proxy_tex_image
00000000003066d0 00000000000000b8 t error_check_subtexture_negative_dimensions
0000000000306790 00000000000000dc t check_texture_buffer_range
0000000000306870 00000000000000a0 t get_tex_images_for_clear
0000000000306910 0000000000000144 t proxy_target
0000000000306a60 00000000000000e0 t check_rtt_cb
0000000000306b40 00000000000000b0 t texture_format_error_check_gles
0000000000306bf0 00000000000000fc t texture_formats_agree
0000000000306cf0 0000000000000318 t error_check_subtexture_dimensions
0000000000307010 0000000000000170 t lookup_texture_ext_dsa
0000000000307180 0000000000000100 t formats_differ_in_component_sizes
0000000000307280 0000000000000298 t check_clear_tex_image
0000000000307520 0000000000000150 t compressed_texture_sub_image
0000000000307670 00000000000001b8 t texture_sub_image
0000000000307830 00000000000001c8 t texturesubimage_no_error.constprop.0
0000000000307a00 00000000000001f0 t copy_texture_sub_image
0000000000307bf0 00000000000001c4 t legal_texsubimage_target
0000000000307dc0 000000000000021c t legal_teximage_target
0000000000307fe0 000000000000002c t _mesa_delete_texture_image
0000000000308010 000000000000003c t _mesa_is_proxy_texture
0000000000308050 000000000000003c t _mesa_is_array_texture
0000000000308090 0000000000000024 t _mesa_is_cube_map_texture
00000000003080c0 0000000000000028 t _mesa_select_tex_image
00000000003080f0 00000000000000c4 t _mesa_get_tex_image
00000000003081c0 00000000000002a4 t egl_image_target_texture
0000000000308470 0000000000000064 t egl_image_target_texture_storage
00000000003084e0 0000000000000290 t _mesa_max_texture_levels
0000000000308770 00000000000007c0 t compressed_tex_sub_image
0000000000308f30 0000000000000150 t _mesa_get_texture_dimensions
0000000000309080 0000000000000088 t _mesa_tex_target_is_layered
0000000000309110 0000000000000090 t _mesa_get_texture_layers
00000000003091a0 0000000000000110 t _mesa_get_tex_max_num_levels
00000000003092b0 0000000000000298 t _mesa_init_teximage_fields_ms
0000000000309550 0000000000000028 t _mesa_init_teximage_fields
0000000000309580 000000000000004c t _mesa_clear_texture_image
00000000003095d0 0000000000000458 t _mesa_legal_texture_dimensions
0000000000309a30 00000000000006a4 t texture_image_multisample
000000000030a0e0 0000000000000128 t _mesa_test_proxy_teximage
000000000030a210 000000000000008c t _mesa_format_no_online_compression
000000000030a2a0 000000000000044c t texsubimage_error_check
000000000030a6f0 00000000000002f8 t texturesubimage_error
000000000030a9f0 00000000000001a0 t texsubimage_err
000000000030ab90 000000000000041c t copy_texture_sub_image_err
000000000030afb0 0000000000000218 t _mesa_target_can_be_compressed
000000000030b1d0 0000000000000290 t compressed_texture_error_check
000000000030b460 0000000000000698 t copytexture_error_check
000000000030bb00 0000000000000174 t _mesa_legal_texture_base_format_for_target
000000000030bc80 0000000000000554 t texture_error_check
000000000030c1e0 0000000000000044 t _mesa_update_fbo_texture
000000000030c230 0000000000000078 t _mesa_choose_texture_format
000000000030c2b0 00000000000006d8 t teximage_err
000000000030c990 0000000000000464 t teximage_no_error
000000000030ce00 00000000000005c8 t copyteximage_err
000000000030d3d0 00000000000004c4 t copyteximage_no_error
000000000030d8a0 0000000000000074 T _mesa_TexImage1D
000000000030d920 0000000000000580 T _mesa_TextureImage1DEXT
000000000030dea0 0000000000000580 T _mesa_MultiTexImage1DEXT
000000000030e420 0000000000000078 t _mesa_TexImage2D
000000000030e4a0 00000000000005e0 T _mesa_TextureImage2DEXT
000000000030ea80 00000000000005e0 T _mesa_MultiTexImage2DEXT
000000000030f060 0000000000000078 T _mesa_TexImage3D
000000000030f0e0 00000000000005e4 T _mesa_TextureImage3DEXT
000000000030f6d0 00000000000005e4 T _mesa_MultiTexImage3DEXT
000000000030fcc0 0000000000000074 T _mesa_TexImage1D_no_error
000000000030fd40 0000000000000078 T _mesa_TexImage2D_no_error
000000000030fdc0 0000000000000078 T _mesa_TexImage3D_no_error
000000000030fe40 0000000000000090 T _mesa_EGLImageTargetTexture2DOES
000000000030fed0 0000000000000094 T _mesa_EGLImageTargetTexStorageEXT
000000000030ff70 00000000000000f8 T _mesa_EGLImageTargetTextureStorageEXT
0000000000310070 00000000000000d0 T _mesa_TexSubImage1D_no_error
0000000000310140 0000000000000078 T _mesa_TexSubImage1D
00000000003101c0 00000000000000e4 T _mesa_TexSubImage2D_no_error
00000000003102b0 0000000000000078 T _mesa_TexSubImage2D
0000000000310330 00000000000000e8 T _mesa_TexSubImage3D_no_error
0000000000310420 0000000000000084 T _mesa_TexSubImage3D
00000000003104b0 0000000000000070 T _mesa_TextureSubImage1D_no_error
0000000000310520 0000000000000084 T _mesa_TextureSubImage1DEXT
00000000003105b0 00000000000000e4 T _mesa_MultiTexSubImage1DEXT
00000000003106a0 0000000000000080 T _mesa_TextureSubImage1D
0000000000310720 0000000000000078 T _mesa_TextureSubImage2D_no_error
00000000003107a0 0000000000000090 T _mesa_TextureSubImage2DEXT
0000000000310830 00000000000000f0 T _mesa_MultiTexSubImage2DEXT
0000000000310920 0000000000000088 T _mesa_TextureSubImage2D
00000000003109b0 000000000000007c T _mesa_TextureSubImage3D_no_error
0000000000310a30 0000000000000094 T _mesa_TextureSubImage3DEXT
0000000000310ad0 00000000000000f4 T _mesa_MultiTexSubImage3DEXT
0000000000310bd0 0000000000000088 T _mesa_TextureSubImage3D
0000000000310c60 0000000000000064 T _mesa_CopyTexImage1D
0000000000310cd0 0000000000000588 T _mesa_CopyTextureImage1DEXT
0000000000311260 0000000000000588 T _mesa_CopyMultiTexImage1DEXT
00000000003117f0 0000000000000064 T _mesa_CopyTexImage2D
0000000000311860 00000000000005b0 T _mesa_CopyTextureImage2DEXT
0000000000311e10 00000000000005ac T _mesa_CopyMultiTexImage2DEXT
00000000003123c0 0000000000000064 T _mesa_CopyTexImage1D_no_error
0000000000312430 0000000000000064 T _mesa_CopyTexImage2D_no_error
00000000003124a0 0000000000000100 T _mesa_CopyTexSubImage1D
00000000003125a0 0000000000000198 T _mesa_CopyTexSubImage2D
0000000000312740 0000000000000124 T _mesa_CopyTexSubImage3D
0000000000312870 0000000000000104 T _mesa_CopyTextureSubImage1D
0000000000312980 000000000000010c T _mesa_CopyTextureSubImage1DEXT
0000000000312a90 00000000000000bc T _mesa_CopyMultiTexSubImage1DEXT
0000000000312b50 0000000000000128 T _mesa_CopyTextureSubImage2D
0000000000312c80 0000000000000130 T _mesa_CopyTextureSubImage2DEXT
0000000000312db0 00000000000000c4 T _mesa_CopyMultiTexSubImage2DEXT
0000000000312e80 0000000000000194 T _mesa_CopyTextureSubImage3D
0000000000313020 000000000000019c T _mesa_CopyTextureSubImage3DEXT
00000000003131c0 0000000000000130 T _mesa_CopyMultiTexSubImage3DEXT
00000000003132f0 00000000000000f0 T _mesa_CopyTexSubImage1D_no_error
00000000003133e0 0000000000000100 T _mesa_CopyTexSubImage2D_no_error
00000000003134e0 0000000000000104 T _mesa_CopyTexSubImage3D_no_error
00000000003135f0 00000000000000f4 T _mesa_CopyTextureSubImage1D_no_error
00000000003136f0 0000000000000104 T _mesa_CopyTextureSubImage2D_no_error
0000000000313800 00000000000001c0 T _mesa_CopyTextureSubImage3D_no_error
00000000003139c0 0000000000000318 T _mesa_ClearTexSubImage
0000000000313ce0 00000000000001c4 T _mesa_ClearTexImage
0000000000313eb0 0000000000000070 T _mesa_CompressedTexImage1D
0000000000313f20 00000000000004f4 T _mesa_CompressedTextureImage1DEXT
0000000000314420 00000000000004f4 T _mesa_CompressedMultiTexImage1DEXT
0000000000314920 0000000000000074 T _mesa_CompressedTexImage2D
00000000003149a0 000000000000058c T _mesa_CompressedTextureImage2DEXT
0000000000314f30 000000000000058c T _mesa_CompressedMultiTexImage2DEXT
00000000003154c0 0000000000000074 T _mesa_CompressedTexImage3D
0000000000315540 0000000000000554 T _mesa_CompressedTextureImage3DEXT
0000000000315aa0 0000000000000554 T _mesa_CompressedMultiTexImage3DEXT
0000000000316000 0000000000000070 T _mesa_CompressedTexImage1D_no_error
0000000000316070 0000000000000074 T _mesa_CompressedTexImage2D_no_error
00000000003160f0 0000000000000074 T _mesa_CompressedTexImage3D_no_error
0000000000316170 0000000000000068 T _mesa_CompressedTexSubImage1D_no_error
00000000003161e0 0000000000000068 T _mesa_CompressedTexSubImage1D
0000000000316250 0000000000000068 T _mesa_CompressedTextureSubImage1D_no_error
00000000003162c0 0000000000000068 T _mesa_CompressedTextureSubImage1D
0000000000316330 000000000000006c T _mesa_CompressedTextureSubImage1DEXT
00000000003163a0 0000000000000070 T _mesa_CompressedMultiTexSubImage1DEXT
0000000000316410 000000000000006c T _mesa_CompressedTexSubImage2D_no_error
0000000000316480 000000000000006c T _mesa_CompressedTexSubImage2D
00000000003164f0 0000000000000078 T _mesa_CompressedTextureSubImage2DEXT
0000000000316570 000000000000007c T _mesa_CompressedMultiTexSubImage2DEXT
00000000003165f0 0000000000000070 T _mesa_CompressedTextureSubImage2D_no_error
0000000000316660 0000000000000070 T _mesa_CompressedTextureSubImage2D
00000000003166d0 0000000000000074 T _mesa_CompressedTexSubImage3D_no_error
0000000000316750 0000000000000078 T _mesa_CompressedTexSubImage3D
00000000003167d0 0000000000000078 T _mesa_CompressedTextureSubImage3D_no_error
0000000000316850 0000000000000078 T _mesa_CompressedTextureSubImage3D
00000000003168d0 0000000000000080 T _mesa_CompressedTextureSubImage3DEXT
0000000000316950 0000000000000084 T _mesa_CompressedMultiTexSubImage3DEXT
00000000003169e0 00000000000004e8 t _mesa_get_texbuffer_format
0000000000316ed0 000000000000009c t _mesa_validate_texbuffer_format
0000000000316f70 0000000000000238 t texture_buffer_range
00000000003171b0 00000000000000f8 T _mesa_TexBuffer
00000000003172b0 000000000000010c T _mesa_TexBufferRange
00000000003173c0 0000000000000144 T _mesa_TextureBufferRangeEXT
0000000000317510 000000000000010c T _mesa_TextureBuffer
0000000000317620 0000000000000114 T _mesa_TextureBufferEXT
0000000000317740 0000000000000114 T _mesa_MultiTexBufferEXT
0000000000317860 000000000000012c T _mesa_TextureBufferRange
0000000000317990 000000000000003c t _mesa_is_renderable_texture_format
00000000003179d0 00000000000000b4 T _mesa_TexImage2DMultisample
0000000000317a90 00000000000000b4 T _mesa_TexImage3DMultisample
0000000000317b50 0000000000000110 T _mesa_TexStorage2DMultisample
0000000000317c60 0000000000000114 T _mesa_TexStorage3DMultisample
0000000000317d80 0000000000000114 T _mesa_TextureStorage2DMultisample
0000000000317ea0 0000000000000118 T _mesa_TextureStorage3DMultisample
0000000000317fc0 0000000000000114 T _mesa_TextureStorage2DMultisampleEXT
00000000003180e0 0000000000000118 T _mesa_TextureStorage3DMultisampleEXT
0000000000318200 000000000000004c t _mesa_texture_storage_ms_memory
0000000000318250 0000000000000124 t finish_texture_init
0000000000318380 00000000000000e0 t invalidate_tex_image_error_check
0000000000318460 00000000000000a4 t unbind_texobj_from_fbo
0000000000318510 0000000000000100 t create_textures.part.0
0000000000318610 000000000000000c t _mesa_lookup_texture
0000000000318620 000000000000005c t _mesa_lookup_texture_err
0000000000318680 000000000000000c t _mesa_lookup_texture_locked
0000000000318690 0000000000000484 t _mesa_get_current_tex_object
0000000000318b20 00000000000000b0 t _mesa_delete_texture_object
0000000000318bd0 000000000000010c t _mesa_copy_texture_object
0000000000318ce0 0000000000000088 t _mesa_clear_texture_object
0000000000318d70 00000000000000c0 t _mesa_reference_texobj_
0000000000318e30 00000000000000dc t unbind_texobj_from_texunits
0000000000318f10 00000000000001a0 t delete_textures
00000000003190b0 00000000000001a8 t bind_texture_object
0000000000319260 00000000000000ec t unbind_textures_from_unit
0000000000319350 00000000000003a8 t _mesa_test_texobj_completeness
0000000000319700 0000000000000090 t _mesa_cube_level_complete
0000000000319790 000000000000009c t _mesa_cube_complete
0000000000319830 0000000000000018 t _mesa_dirty_texobj
0000000000319850 0000000000000218 t _mesa_get_fallback_texture
0000000000319a70 0000000000000020 t _mesa_texture_base_format
0000000000319a90 000000000000003c T _mesa_GenTextures_no_error
0000000000319ad0 0000000000000060 T _mesa_GenTextures
0000000000319b30 0000000000000040 T _mesa_CreateTextures_no_error
0000000000319b70 000000000000002c T _mesa_DeleteTextures_no_error
0000000000319ba0 0000000000000044 T _mesa_DeleteTextures
0000000000319bf0 00000000000002f4 t _mesa_tex_target_to_index
0000000000319ef0 00000000000000f4 t _mesa_get_texobj_by_target_and_texunit
0000000000319ff0 000000000000014c t _mesa_initialize_texture_object
000000000031a140 0000000000000054 t _mesa_new_texture_object
000000000031a1a0 000000000000009c T _mesa_CreateTextures
000000000031a240 0000000000000204 t _mesa_lookup_or_create_texture
000000000031a450 0000000000000070 T _mesa_BindTexture_no_error
000000000031a4c0 0000000000000070 t _mesa_BindTexture
000000000031a530 00000000000000b8 T _mesa_BindMultiTextureEXT
000000000031a5f0 000000000000005c T _mesa_BindTextureUnit_no_error
000000000031a650 00000000000000dc T _mesa_BindTextureUnit
000000000031a730 0000000000000124 T _mesa_BindTextures_no_error
000000000031a860 000000000000019c T _mesa_BindTextures
000000000031aa00 000000000000010c T _mesa_PrioritizeTextures
000000000031ab10 0000000000000110 T _mesa_AreTexturesResident
000000000031ac20 0000000000000098 T _mesa_IsTexture
000000000031acc0 0000000000000050 t _mesa_lock_context_textures
000000000031ad10 000000000000000c t _mesa_unlock_context_textures
000000000031ad20 0000000000000004 T _mesa_InvalidateTexSubImage_no_error
000000000031ad30 00000000000002d8 T _mesa_InvalidateTexSubImage
000000000031b010 0000000000000004 T _mesa_InvalidateTexImage_no_error
000000000031b020 0000000000000034 T _mesa_InvalidateTexImage
000000000031b060 00000000000000e8 t tex_combine_translate_mode
000000000031b150 0000000000000230 t update_single_program_texture
000000000031b380 00000000000002e8 t _mesa_copy_texture_state
000000000031b670 00000000000000a0 t _mesa_ActiveTexture_no_error
000000000031b710 00000000000000f4 t _mesa_ActiveTexture
000000000031b810 0000000000000080 t _mesa_ClientActiveTexture
000000000031b890 00000000000000cc t _mesa_update_texture_matrices
000000000031b960 0000000000000f84 t _mesa_update_texture_state
000000000031c8f0 0000000000000278 t _mesa_init_texture
000000000031cb70 0000000000000110 t _mesa_free_texture_data
000000000031cc80 0000000000000098 t _mesa_update_default_objects_texture
000000000031cd20 00000000000002c8 t tex_storage_error_check
000000000031cff0 000000000000015c t initialize_texture_fields
000000000031d150 0000000000000088 t update_fbo_texture
000000000031d1e0 00000000000001e4 t legal_texobj_target
000000000031d3d0 00000000000000d0 t clear_texture_fields
000000000031d4a0 000000000000017c t texture_storage_no_error.constprop.0
000000000031d620 00000000000002c8 t texture_storage_error.constprop.0
000000000031d8f0 0000000000000110 t _mesa_is_legal_tex_storage_format
000000000031da00 0000000000000134 t texstorage_error
000000000031db40 0000000000000160 t texturestorage_error
000000000031dca0 0000000000000084 T _mesa_TexStorage1D_no_error
000000000031dd30 0000000000000030 T _mesa_TexStorage1D
000000000031dd60 000000000000008c T _mesa_TexStorage2D_no_error
000000000031ddf0 0000000000000034 T _mesa_TexStorage2D
000000000031de30 0000000000000094 T _mesa_TexStorage3D_no_error
000000000031ded0 0000000000000038 T _mesa_TexStorage3D
000000000031df10 000000000000007c T _mesa_TextureStorage1D_no_error
000000000031df90 0000000000000030 T _mesa_TextureStorage1D
000000000031dfc0 000000000000008c T _mesa_TextureStorage2D_no_error
000000000031e050 0000000000000034 T _mesa_TextureStorage2D
000000000031e090 000000000000008c T _mesa_TextureStorage3D_no_error
000000000031e120 0000000000000038 T _mesa_TextureStorage3D
000000000031e160 000000000000009c T _mesa_TextureStorage1DEXT
000000000031e200 00000000000000a0 T _mesa_TextureStorage2DEXT
000000000031e2a0 00000000000000b0 T _mesa_TextureStorage3DEXT
000000000031e350 0000000000000350 t _mesa_texture_storage_memory
000000000031e6a0 000000000000011c t _mesa_texstore_z32
000000000031e7c0 000000000000013c t _mesa_texstore_z24_x8
000000000031e900 0000000000000114 t _mesa_texstore_x8_z24
000000000031ea20 0000000000000114 t _mesa_texstore_z16
000000000031eb40 00000000000001bc t _mesa_texstore_z32f_x24s8
000000000031ed00 0000000000000184 t _mesa_texstore_s8
000000000031ee90 0000000000000290 t _mesa_texstore_s8_z24
000000000031f120 0000000000000290 t _mesa_texstore_z24_s8
000000000031f3b0 00000000000001ac t _mesa_memcpy_texture
000000000031f560 00000000000000a4 t _mesa_texstore_needs_transfer_ops
000000000031f610 0000000000000118 t _mesa_texstore_can_use_memcpy
000000000031f730 000000000000086c t _mesa_texstore
000000000031ffa0 0000000000000424 t store_texsubimage
00000000003203d0 000000000000004c t _mesa_store_texsubimage
0000000000320420 0000000000000174 t _mesa_compute_compressed_pixelstore
00000000003205a0 000000000000022c t _mesa_store_compressed_texsubimage
00000000003207d0 0000000000000100 t make_texture_handle_resident
00000000003208d0 00000000000000d0 t is_sampler_border_color_valid
00000000003209a0 0000000000000308 t get_texture_handle
0000000000320cb0 00000000000002b8 t get_image_handle
0000000000320f70 000000000000003c t _mesa_init_resident_handles
0000000000320fb0 0000000000000030 t _mesa_free_resident_handles
0000000000320fe0 0000000000000044 t _mesa_init_shared_handles
0000000000321030 0000000000000040 t _mesa_free_shared_handles
0000000000321070 000000000000001c t _mesa_init_texture_handles
0000000000321090 000000000000013c t _mesa_make_texture_handles_non_resident
00000000003211d0 00000000000001c8 t _mesa_delete_texture_handles
00000000003213a0 000000000000000c t _mesa_init_sampler_handles
00000000003213b0 0000000000000124 t _mesa_delete_sampler_handles
00000000003214e0 0000000000000134 T _mesa_GetTextureHandleARB_no_error
0000000000321620 00000000000002b4 T _mesa_GetTextureHandleARB
00000000003218e0 0000000000000148 T _mesa_GetTextureSamplerHandleARB_no_error
0000000000321a30 00000000000002dc T _mesa_GetTextureSamplerHandleARB
0000000000321d10 0000000000000064 T _mesa_MakeTextureHandleResidentARB_no_error
0000000000321d80 000000000000012c T _mesa_MakeTextureHandleResidentARB
0000000000321eb0 0000000000000064 T _mesa_MakeTextureHandleNonResidentARB_no_error
0000000000321f20 000000000000012c T _mesa_MakeTextureHandleNonResidentARB
0000000000322050 000000000000014c T _mesa_GetImageHandleARB_no_error
00000000003221a0 00000000000003ac T _mesa_GetImageHandleARB
0000000000322550 00000000000000b4 T _mesa_MakeImageHandleResidentARB_no_error
0000000000322610 0000000000000198 T _mesa_MakeImageHandleResidentARB
00000000003227b0 00000000000000ac T _mesa_MakeImageHandleNonResidentARB_no_error
0000000000322860 000000000000014c T _mesa_MakeImageHandleNonResidentARB
00000000003229b0 0000000000000038 T _mesa_IsTextureHandleResidentARB_no_error
00000000003229f0 00000000000000fc T _mesa_IsTextureHandleResidentARB
0000000000322af0 0000000000000038 T _mesa_IsImageHandleResidentARB_no_error
0000000000322b30 0000000000000104 T _mesa_IsImageHandleResidentARB
0000000000322c40 000000000000016c t initialize_texture_fields
0000000000322db0 000000000000018c t _mesa_texture_view_lookup_view_class
0000000000322f40 0000000000000054 t _mesa_texture_view_compatible_format
0000000000322fa0 0000000000000100 t _mesa_set_texture_view_state
00000000003230a0 000000000000024c T _mesa_TextureView_no_error
00000000003232f0 0000000000000770 T _mesa_TextureView
0000000000323a60 0000000000000080 t reference_transform_feedback_object
0000000000323ae0 0000000000000014 t delete_cb
0000000000323b00 000000000000004c t compute_transform_feedback_buffer_sizes
0000000000323b50 0000000000000060 t _mesa_delete_transform_feedback_object
0000000000323bb0 0000000000000088 t end_transform_feedback
0000000000323c40 0000000000000158 t create_transform_feedbacks
0000000000323da0 0000000000000028 t active_xfb_object_references_program
0000000000323dd0 0000000000000078 t _mesa_transform_feedback_is_using_program
0000000000323e50 0000000000000070 t _mesa_init_transform_feedback
0000000000323ec0 000000000000006c t _mesa_free_transform_feedback
0000000000323f30 0000000000000010 t _mesa_init_transform_feedback_object
0000000000323f40 0000000000000198 T _mesa_BeginTransformFeedback_no_error
00000000003240e0 0000000000000288 T _mesa_BeginTransformFeedback
0000000000324370 0000000000000028 T _mesa_EndTransformFeedback_no_error
00000000003243a0 0000000000000044 T _mesa_EndTransformFeedback
00000000003243f0 0000000000000130 t _mesa_validate_buffer_range_xfb
0000000000324520 000000000000013c t _mesa_bind_buffer_base_transform_feedback
0000000000324660 00000000000000e4 T _mesa_TransformFeedbackBufferBase
0000000000324750 0000000000000184 T _mesa_TransformFeedbackBufferRange
00000000003248e0 00000000000000ec T _mesa_BindBufferOffsetEXT_no_error
00000000003249d0 00000000000001b8 T _mesa_BindBufferOffsetEXT
0000000000324b90 0000000000000108 T _mesa_TransformFeedbackVaryings_no_error
0000000000324ca0 000000000000033c T _mesa_TransformFeedbackVaryings
0000000000324fe0 0000000000000140 T _mesa_GetTransformFeedbackVarying
0000000000325120 0000000000000018 t _mesa_lookup_transform_feedback_object
0000000000325140 0000000000000030 T _mesa_GenTransformFeedbacks
0000000000325170 0000000000000030 T _mesa_CreateTransformFeedbacks
00000000003251a0 0000000000000074 T _mesa_IsTransformFeedback
0000000000325220 00000000000000a4 T _mesa_BindTransformFeedback_no_error
00000000003252d0 00000000000000d4 T _mesa_BindTransformFeedback
00000000003253b0 0000000000000130 T _mesa_DeleteTransformFeedbacks
00000000003254e0 0000000000000080 T _mesa_PauseTransformFeedback_no_error
0000000000325560 00000000000000a0 T _mesa_PauseTransformFeedback
0000000000325600 000000000000007c T _mesa_ResumeTransformFeedback_no_error
0000000000325680 00000000000000e0 T _mesa_ResumeTransformFeedback
0000000000325760 00000000000000e4 T _mesa_GetTransformFeedbackiv
0000000000325850 0000000000000110 T _mesa_GetTransformFeedbacki_v
0000000000325960 0000000000000170 T _mesa_GetTransformFeedbacki64_v
0000000000325ad0 0000000000000140 t glsl_type_name(glsl_base_type)
0000000000325c10 000000000000012c t validate_uniform_parameters(int, int, unsigned int*, gl_context*, gl_shader_program*, char const*)
0000000000325d40 0000000000000134 t copy_uniform_matrix_to_storage(gl_constant_value*, int, void const*, unsigned int, unsigned int, unsigned int, unsigned int, bool, unsigned int, unsigned int, glsl_base_type) [clone .constprop.0]
0000000000325e80 00000000000000c0 t copy_uniforms_to_storage(gl_constant_value*, gl_uniform_storage*, gl_context*, int, void const*, int, unsigned int, unsigned int, glsl_base_type) [clone .constprop.0] [clone .isra.0]
0000000000325f40 00000000000001b4 t log_uniform(void const*, glsl_base_type, unsigned int, unsigned int, unsigned int, bool, gl_shader_program const*, int, gl_uniform_storage const*) [clone .isra.0]
0000000000326100 0000000000000160 T _mesa_GetActiveUniform
0000000000326260 00000000000001e8 T _mesa_GetActiveUniformsiv
0000000000326450 0000000000000760 t _mesa_get_uniform
0000000000326bb0 0000000000000298 t _mesa_propagate_uniforms_to_driver_storage
0000000000326e50 00000000000000e8 t _mesa_flush_vertices_for_uniforms
0000000000326f40 00000000000006e0 t _mesa_uniform
0000000000327620 000000000000032c t _mesa_uniform_matrix
0000000000327950 0000000000000344 t _mesa_uniform_handle
0000000000327ca0 0000000000000054 t _mesa_sampler_uniforms_are_valid
0000000000327d00 0000000000000108 t _mesa_sampler_uniforms_pipeline_are_valid
0000000000327e10 00000000000002e8 t mesa_bufferiv
0000000000328100 00000000000002e0 t _mesa_update_shader_textures_used
00000000003283e0 0000000000000078 t _mesa_uniform_attach_driver_storage
0000000000328460 000000000000002c t _mesa_uniform_detach_all_driver_storage
0000000000328490 0000000000000050 T _mesa_Uniform1f
00000000003284e0 0000000000000050 T _mesa_Uniform2f
0000000000328530 0000000000000054 T _mesa_Uniform3f
0000000000328590 0000000000000050 T _mesa_Uniform4f
00000000003285e0 0000000000000050 T _mesa_Uniform1i
0000000000328630 0000000000000058 T _mesa_Uniform2i
0000000000328690 0000000000000058 T _mesa_Uniform3i
00000000003286f0 0000000000000058 T _mesa_Uniform4i
0000000000328750 0000000000000040 T _mesa_Uniform1fv
0000000000328790 0000000000000040 T _mesa_Uniform2fv
00000000003287d0 0000000000000040 T _mesa_Uniform3fv
0000000000328810 0000000000000040 T _mesa_Uniform4fv
0000000000328850 0000000000000040 T _mesa_Uniform1iv
0000000000328890 0000000000000040 T _mesa_Uniform2iv
00000000003288d0 0000000000000040 T _mesa_Uniform3iv
0000000000328910 0000000000000040 T _mesa_Uniform4iv
0000000000328950 0000000000000048 T _mesa_UniformHandleui64ARB
00000000003289a0 0000000000000038 T _mesa_UniformHandleui64vARB
00000000003289e0 0000000000000068 T _mesa_ProgramUniform1f
0000000000328a50 0000000000000068 T _mesa_ProgramUniform2f
0000000000328ac0 000000000000006c T _mesa_ProgramUniform3f
0000000000328b30 000000000000006c T _mesa_ProgramUniform4f
0000000000328ba0 0000000000000068 T _mesa_ProgramUniform1i
0000000000328c10 000000000000006c T _mesa_ProgramUniform2i
0000000000328c80 0000000000000070 T _mesa_ProgramUniform3i
0000000000328cf0 000000000000006c T _mesa_ProgramUniform4i
0000000000328d60 0000000000000070 T _mesa_ProgramUniform1fv
0000000000328dd0 0000000000000070 T _mesa_ProgramUniform2fv
0000000000328e40 0000000000000070 T _mesa_ProgramUniform3fv
0000000000328eb0 0000000000000070 T _mesa_ProgramUniform4fv
0000000000328f20 0000000000000070 T _mesa_ProgramUniform1iv
0000000000328f90 0000000000000070 T _mesa_ProgramUniform2iv
0000000000329000 0000000000000070 T _mesa_ProgramUniform3iv
0000000000329070 0000000000000070 T _mesa_ProgramUniform4iv
00000000003290e0 0000000000000060 T _mesa_ProgramUniformHandleui64ARB
0000000000329140 0000000000000068 T _mesa_ProgramUniformHandleui64vARB
00000000003291b0 0000000000000050 T _mesa_Uniform1ui
0000000000329200 0000000000000054 T _mesa_Uniform2ui
0000000000329260 000000000000005c T _mesa_Uniform3ui
00000000003292c0 0000000000000058 T _mesa_Uniform4ui
0000000000329320 0000000000000040 T _mesa_Uniform1uiv
0000000000329360 0000000000000040 T _mesa_Uniform2uiv
00000000003293a0 0000000000000040 T _mesa_Uniform3uiv
00000000003293e0 0000000000000040 T _mesa_Uniform4uiv
0000000000329420 0000000000000050 T _mesa_UniformMatrix2fv
0000000000329470 0000000000000054 T _mesa_UniformMatrix3fv
00000000003294d0 0000000000000054 T _mesa_UniformMatrix4fv
0000000000329530 0000000000000068 T _mesa_ProgramUniform1ui
00000000003295a0 000000000000006c T _mesa_ProgramUniform2ui
0000000000329610 0000000000000070 T _mesa_ProgramUniform3ui
0000000000329680 000000000000006c T _mesa_ProgramUniform4ui
00000000003296f0 0000000000000070 T _mesa_ProgramUniform1uiv
0000000000329760 0000000000000070 T _mesa_ProgramUniform2uiv
00000000003297d0 0000000000000070 T _mesa_ProgramUniform3uiv
0000000000329840 0000000000000070 T _mesa_ProgramUniform4uiv
00000000003298b0 0000000000000090 T _mesa_ProgramUniformMatrix2fv
0000000000329940 0000000000000094 T _mesa_ProgramUniformMatrix3fv
00000000003299e0 0000000000000094 T _mesa_ProgramUniformMatrix4fv
0000000000329a80 0000000000000050 T _mesa_UniformMatrix2x3fv
0000000000329ad0 0000000000000050 T _mesa_UniformMatrix3x2fv
0000000000329b20 0000000000000050 T _mesa_UniformMatrix2x4fv
0000000000329b70 0000000000000050 T _mesa_UniformMatrix4x2fv
0000000000329bc0 0000000000000054 T _mesa_UniformMatrix3x4fv
0000000000329c20 0000000000000054 T _mesa_UniformMatrix4x3fv
0000000000329c80 0000000000000090 T _mesa_ProgramUniformMatrix2x3fv
0000000000329d10 0000000000000090 T _mesa_ProgramUniformMatrix3x2fv
0000000000329da0 0000000000000090 T _mesa_ProgramUniformMatrix2x4fv
0000000000329e30 0000000000000090 T _mesa_ProgramUniformMatrix4x2fv
0000000000329ec0 0000000000000094 T _mesa_ProgramUniformMatrix3x4fv
0000000000329f60 0000000000000094 T _mesa_ProgramUniformMatrix4x3fv
000000000032a000 0000000000000040 T _mesa_GetnUniformfvARB
000000000032a040 000000000000003c T _mesa_GetUniformfv
000000000032a080 0000000000000040 T _mesa_GetnUniformivARB
000000000032a0c0 000000000000003c T _mesa_GetUniformiv
000000000032a100 0000000000000040 T _mesa_GetnUniformuivARB
000000000032a140 000000000000003c T _mesa_GetUniformuiv
000000000032a180 0000000000000040 T _mesa_GetnUniformdvARB
000000000032a1c0 000000000000003c T _mesa_GetUniformdv
000000000032a200 0000000000000040 T _mesa_GetnUniformi64vARB
000000000032a240 000000000000003c T _mesa_GetUniformi64vARB
000000000032a280 0000000000000040 T _mesa_GetnUniformui64vARB
000000000032a2c0 000000000000003c T _mesa_GetUniformui64vARB
000000000032a300 0000000000000088 T _mesa_GetUniformLocation
000000000032a390 0000000000000040 T _mesa_GetUniformLocation_no_error
000000000032a3d0 0000000000000090 T _mesa_GetUniformBlockIndex
000000000032a460 00000000000000f4 T _mesa_GetUniformIndices
000000000032a560 00000000000000ac T _mesa_UniformBlockBinding_no_error
000000000032a610 0000000000000140 T _mesa_UniformBlockBinding
000000000032a750 00000000000000ac T _mesa_ShaderStorageBlockBinding_no_error
000000000032a800 0000000000000140 T _mesa_ShaderStorageBlockBinding
000000000032a940 00000000000000a0 T _mesa_GetActiveUniformBlockiv
000000000032a9e0 00000000000000d4 T _mesa_GetActiveUniformBlockName
000000000032aac0 00000000000000d4 T _mesa_GetActiveUniformName
000000000032aba0 00000000000000a0 T _mesa_GetActiveAtomicCounterBufferiv
000000000032ac40 0000000000000050 T _mesa_Uniform1d
000000000032ac90 0000000000000050 T _mesa_Uniform2d
000000000032ace0 0000000000000054 T _mesa_Uniform3d
000000000032ad40 0000000000000054 T _mesa_Uniform4d
000000000032ada0 0000000000000040 T _mesa_Uniform1dv
000000000032ade0 0000000000000040 T _mesa_Uniform2dv
000000000032ae20 0000000000000040 T _mesa_Uniform3dv
000000000032ae60 0000000000000040 T _mesa_Uniform4dv
000000000032aea0 0000000000000054 T _mesa_UniformMatrix2dv
000000000032af00 0000000000000054 T _mesa_UniformMatrix3dv
000000000032af60 0000000000000050 T _mesa_UniformMatrix4dv
000000000032afb0 0000000000000054 T _mesa_UniformMatrix2x3dv
000000000032b010 0000000000000054 T _mesa_UniformMatrix3x2dv
000000000032b070 0000000000000050 T _mesa_UniformMatrix2x4dv
000000000032b0c0 0000000000000050 T _mesa_UniformMatrix4x2dv
000000000032b110 0000000000000050 T _mesa_UniformMatrix3x4dv
000000000032b160 0000000000000050 T _mesa_UniformMatrix4x3dv
000000000032b1b0 0000000000000068 T _mesa_ProgramUniform1d
000000000032b220 0000000000000068 T _mesa_ProgramUniform2d
000000000032b290 000000000000006c T _mesa_ProgramUniform3d
000000000032b300 0000000000000078 T _mesa_ProgramUniform4d
000000000032b380 0000000000000070 T _mesa_ProgramUniform1dv
000000000032b3f0 0000000000000070 T _mesa_ProgramUniform2dv
000000000032b460 0000000000000070 T _mesa_ProgramUniform3dv
000000000032b4d0 0000000000000070 T _mesa_ProgramUniform4dv
000000000032b540 0000000000000094 T _mesa_ProgramUniformMatrix2dv
000000000032b5e0 0000000000000094 T _mesa_ProgramUniformMatrix3dv
000000000032b680 0000000000000090 T _mesa_ProgramUniformMatrix4dv
000000000032b710 0000000000000094 T _mesa_ProgramUniformMatrix2x3dv
000000000032b7b0 0000000000000094 T _mesa_ProgramUniformMatrix3x2dv
000000000032b850 0000000000000090 T _mesa_ProgramUniformMatrix2x4dv
000000000032b8e0 0000000000000090 T _mesa_ProgramUniformMatrix4x2dv
000000000032b970 0000000000000090 T _mesa_ProgramUniformMatrix3x4dv
000000000032ba00 0000000000000090 T _mesa_ProgramUniformMatrix4x3dv
000000000032ba90 0000000000000050 T _mesa_Uniform1i64ARB
000000000032bae0 0000000000000054 T _mesa_Uniform2i64ARB
000000000032bb40 000000000000005c T _mesa_Uniform3i64ARB
000000000032bba0 0000000000000060 T _mesa_Uniform4i64ARB
000000000032bc00 0000000000000040 T _mesa_Uniform1i64vARB
000000000032bc40 0000000000000040 T _mesa_Uniform2i64vARB
000000000032bc80 0000000000000040 T _mesa_Uniform3i64vARB
000000000032bcc0 0000000000000040 T _mesa_Uniform4i64vARB
000000000032bd00 0000000000000050 T _mesa_Uniform1ui64ARB
000000000032bd50 0000000000000054 T _mesa_Uniform2ui64ARB
000000000032bdb0 000000000000005c T _mesa_Uniform3ui64ARB
000000000032be10 0000000000000060 T _mesa_Uniform4ui64ARB
000000000032be70 0000000000000040 T _mesa_Uniform1ui64vARB
000000000032beb0 0000000000000040 T _mesa_Uniform2ui64vARB
000000000032bef0 0000000000000040 T _mesa_Uniform3ui64vARB
000000000032bf30 0000000000000040 T _mesa_Uniform4ui64vARB
000000000032bf70 0000000000000068 T _mesa_ProgramUniform1i64ARB
000000000032bfe0 0000000000000078 T _mesa_ProgramUniform2i64ARB
000000000032c060 0000000000000088 T _mesa_ProgramUniform3i64ARB
000000000032c0f0 0000000000000090 T _mesa_ProgramUniform4i64ARB
000000000032c180 0000000000000070 T _mesa_ProgramUniform1i64vARB
000000000032c1f0 0000000000000070 T _mesa_ProgramUniform2i64vARB
000000000032c260 0000000000000070 T _mesa_ProgramUniform3i64vARB
000000000032c2d0 0000000000000070 T _mesa_ProgramUniform4i64vARB
000000000032c340 0000000000000068 T _mesa_ProgramUniform1ui64ARB
000000000032c3b0 0000000000000078 T _mesa_ProgramUniform2ui64ARB
000000000032c430 0000000000000088 T _mesa_ProgramUniform3ui64ARB
000000000032c4c0 0000000000000090 T _mesa_ProgramUniform4ui64ARB
000000000032c550 0000000000000070 T _mesa_ProgramUniform1ui64vARB
000000000032c5c0 0000000000000070 T _mesa_ProgramUniform2ui64vARB
000000000032c630 0000000000000070 T _mesa_ProgramUniform3ui64vARB
000000000032c6a0 0000000000000070 T _mesa_ProgramUniform4ui64vARB
000000000032c710 00000000000002c0 t get_vertex_array_attrib
000000000032c9d0 00000000000000a8 t get_current_attrib
000000000032ca80 0000000000000008 t delete_arrayobj_cb
000000000032ca90 00000000000000cc t _lookup_vao_and_vbo_dsa
000000000032cb60 00000000000003c0 t validate_array_format.constprop.0
000000000032cf20 0000000000000154 t validate_array_and_format.isra.0
000000000032d080 00000000000000c4 t vertex_array_binding_divisor
000000000032d150 00000000000000a0 t _mesa_vertex_attrib_binding
000000000032d1f0 0000000000000074 t vertex_array_attrib_binding
000000000032d270 0000000000000184 t _mesa_bind_vertex_buffer
000000000032d400 00000000000001e0 t vertex_array_vertex_buffer_err.part.0
000000000032d5e0 0000000000000274 t vertex_array_vertex_buffers_err.part.0
000000000032d860 00000000000001a4 t _mesa_set_vertex_format
000000000032da10 00000000000000b8 t _mesa_update_array_format
000000000032dad0 000000000000020c t vertex_attrib_format
000000000032dce0 00000000000001ec t vertex_array_attrib_format
000000000032ded0 0000000000000108 t update_array.constprop.0
000000000032dfe0 0000000000000140 T _mesa_VertexPointer_no_error
000000000032e120 00000000000000e8 t _mesa_VertexPointer
000000000032e210 0000000000000160 T _mesa_VertexArrayVertexOffsetEXT
000000000032e370 0000000000000140 T _mesa_NormalPointer_no_error
000000000032e4b0 00000000000000e8 t _mesa_NormalPointer
000000000032e5a0 000000000000015c T _mesa_VertexArrayNormalOffsetEXT
000000000032e700 000000000000008c T _mesa_ColorPointer_no_error
000000000032e790 0000000000000140 t _mesa_ColorPointer
000000000032e8d0 00000000000001a4 T _mesa_VertexArrayColorOffsetEXT
000000000032ea80 0000000000000140 T _mesa_FogCoordPointer_no_error
000000000032ebc0 00000000000000cc t _mesa_FogCoordPointer
000000000032ec90 0000000000000138 T _mesa_VertexArrayFogCoordOffsetEXT
000000000032edd0 0000000000000140 T _mesa_IndexPointer_no_error
000000000032ef10 00000000000000cc t _mesa_IndexPointer
000000000032efe0 0000000000000138 T _mesa_VertexArrayIndexOffsetEXT
000000000032f120 000000000000008c T _mesa_SecondaryColorPointer_no_error
000000000032f1b0 0000000000000104 t _mesa_SecondaryColorPointer
000000000032f2c0 0000000000000174 T _mesa_VertexArraySecondaryColorOffsetEXT
000000000032f440 0000000000000064 T _mesa_TexCoordPointer_no_error
000000000032f4b0 00000000000000f0 t _mesa_TexCoordPointer
000000000032f5a0 0000000000000158 T _mesa_VertexArrayTexCoordOffsetEXT
000000000032f700 0000000000000188 T _mesa_VertexArrayMultiTexCoordOffsetEXT
000000000032f890 0000000000000138 T _mesa_EdgeFlagPointer_no_error
000000000032f9d0 00000000000000cc t _mesa_EdgeFlagPointer
000000000032faa0 0000000000000130 T _mesa_VertexArrayEdgeFlagOffsetEXT
000000000032fbd0 0000000000000140 T _mesa_PointSizePointerOES_no_error
000000000032fd10 0000000000000120 T _mesa_PointSizePointerOES
000000000032fe30 0000000000000088 T _mesa_VertexAttribPointer_no_error
000000000032fec0 0000000000000168 t _mesa_VertexAttribPointer
0000000000330030 0000000000000184 T _mesa_VertexArrayVertexAttribOffsetEXT
00000000003301c0 0000000000000178 T _mesa_VertexArrayVertexAttribLOffsetEXT
0000000000330340 0000000000000068 T _mesa_VertexAttribIPointer_no_error
00000000003303b0 0000000000000130 T _mesa_VertexAttribIPointer
00000000003304e0 0000000000000068 T _mesa_VertexAttribLPointer_no_error
0000000000330550 0000000000000178 T _mesa_VertexArrayVertexAttribIOffsetEXT
00000000003306d0 0000000000000130 T _mesa_VertexAttribLPointer
0000000000330800 000000000000004c t _mesa_enable_vertex_array_attribs
0000000000330850 00000000000000ac T _mesa_EnableVertexAttribArray
0000000000330900 0000000000000080 T _mesa_EnableVertexAttribArray_no_error
0000000000330980 00000000000000b0 T _mesa_EnableVertexArrayAttrib
0000000000330a30 00000000000000b0 T _mesa_EnableVertexArrayAttribEXT
0000000000330ae0 0000000000000090 T _mesa_EnableVertexArrayAttrib_no_error
0000000000330b70 000000000000004c t _mesa_disable_vertex_array_attribs
0000000000330bc0 00000000000000a4 t _mesa_DisableVertexAttribArray
0000000000330c70 0000000000000080 T _mesa_DisableVertexAttribArray_no_error
0000000000330cf0 0000000000000098 T _mesa_DisableVertexArrayAttrib
0000000000330d90 0000000000000098 T _mesa_DisableVertexArrayAttribEXT
0000000000330e30 0000000000000090 T _mesa_DisableVertexArrayAttrib_no_error
0000000000330ec0 00000000000000a0 T _mesa_GetVertexAttribfv
0000000000330f60 00000000000000a0 T _mesa_GetVertexAttribdv
0000000000331000 00000000000000a0 T _mesa_GetVertexAttribLdv
00000000003310a0 000000000000009c T _mesa_GetVertexAttribiv
0000000000331140 00000000000000a0 T _mesa_GetVertexAttribLui64vARB
00000000003311e0 000000000000009c T _mesa_GetVertexAttribIiv
0000000000331280 000000000000009c T _mesa_GetVertexAttribIuiv
0000000000331320 0000000000000080 T _mesa_GetVertexAttribPointerv
00000000003313a0 0000000000000160 T _mesa_GetVertexArrayIndexediv
0000000000331500 00000000000000d0 T _mesa_GetVertexArrayIndexed64iv
00000000003315d0 0000000000000008 T _mesa_VertexPointerEXT
00000000003315e0 0000000000000008 T _mesa_NormalPointerEXT
00000000003315f0 0000000000000008 T _mesa_ColorPointerEXT
0000000000331600 0000000000000008 T _mesa_IndexPointerEXT
0000000000331610 0000000000000008 T _mesa_TexCoordPointerEXT
0000000000331620 00000000000000e0 T _mesa_MultiTexCoordPointerEXT
0000000000331700 0000000000000008 T _mesa_EdgeFlagPointerEXT
0000000000331710 00000000000001d8 T _mesa_InterleavedArrays
00000000003318f0 0000000000000080 T _mesa_LockArraysEXT
0000000000331970 000000000000004c T _mesa_UnlockArraysEXT
00000000003319c0 000000000000002c t _mesa_PrimitiveRestartIndex_no_error
00000000003319f0 000000000000005c T _mesa_PrimitiveRestartIndex
0000000000331a50 0000000000000098 T _mesa_VertexAttribDivisor_no_error
0000000000331af0 00000000000000dc T _mesa_VertexAttribDivisor
0000000000331bd0 0000000000000128 T _mesa_VertexArrayVertexAttribDivisorEXT
0000000000331d00 00000000000000e4 T _mesa_BindVertexBuffer_no_error
0000000000331df0 00000000000000b0 T _mesa_BindVertexBuffer
0000000000331ea0 00000000000000f8 T _mesa_VertexArrayVertexBuffer_no_error
0000000000331fa0 00000000000000d0 T _mesa_VertexArrayVertexBuffer
0000000000332070 00000000000000d0 T _mesa_VertexArrayBindVertexBufferEXT
0000000000332140 0000000000000190 T _mesa_BindVertexBuffers_no_error
00000000003322d0 000000000000009c T _mesa_BindVertexBuffers
0000000000332370 00000000000001a0 T _mesa_VertexArrayVertexBuffers_no_error
0000000000332510 00000000000000e8 T _mesa_VertexArrayVertexBuffers
0000000000332600 000000000000003c T _mesa_VertexAttribFormat
0000000000332640 0000000000000040 T _mesa_VertexAttribIFormat
0000000000332680 0000000000000040 T _mesa_VertexAttribLFormat
00000000003326c0 0000000000000060 T _mesa_VertexArrayAttribFormat
0000000000332720 0000000000000060 T _mesa_VertexArrayVertexAttribFormatEXT
0000000000332780 000000000000005c T _mesa_VertexArrayAttribIFormat
00000000003327e0 000000000000005c T _mesa_VertexArrayVertexAttribIFormatEXT
0000000000332840 000000000000005c T _mesa_VertexArrayAttribLFormat
00000000003328a0 000000000000005c T _mesa_VertexArrayVertexAttribLFormatEXT
0000000000332900 0000000000000034 T _mesa_VertexAttribBinding_no_error
0000000000332940 00000000000000f8 T _mesa_VertexAttribBinding
0000000000332a40 0000000000000058 T _mesa_VertexArrayAttribBinding_no_error
0000000000332aa0 0000000000000080 T _mesa_VertexArrayAttribBinding
0000000000332b20 0000000000000080 T _mesa_VertexArrayVertexAttribBindingEXT
0000000000332ba0 0000000000000088 T _mesa_VertexBindingDivisor_no_error
0000000000332c30 0000000000000144 T _mesa_VertexBindingDivisor
0000000000332d80 0000000000000094 T _mesa_VertexArrayBindingDivisor_no_error
0000000000332e20 0000000000000080 T _mesa_VertexArrayBindingDivisor
0000000000332ea0 0000000000000080 T _mesa_VertexArrayVertexBindingDivisorEXT
0000000000332f20 000000000000003c t _mesa_copy_vertex_attrib_array
0000000000332f60 0000000000000040 t _mesa_copy_vertex_buffer_binding
0000000000332fa0 0000000000000370 t _mesa_init_varray
0000000000333310 0000000000000034 t _mesa_free_varray_data
0000000000333350 0000000000000464 T _mesa_GetVertexArrayIntegervEXT
00000000003337c0 00000000000000c4 T _mesa_GetVertexArrayPointervEXT
0000000000333890 0000000000000194 T _mesa_GetVertexArrayIntegeri_vEXT
0000000000333a30 00000000000000f4 T _mesa_GetVertexArrayPointeri_vEXT
0000000000333b30 00000000000000b8 t create_version_string
0000000000333bf0 0000000000000220 t get_gl_override
0000000000333e10 00000000000000c4 t _mesa_override_gl_version_contextless
0000000000333ee0 00000000000000e0 t _mesa_override_gl_version
0000000000333fc0 000000000000007c t _mesa_override_glsl_version
0000000000334040 00000000000008ac t _mesa_get_version
00000000003348f0 00000000000001cc t _mesa_compute_version
0000000000334ac0 0000000000000010 t _mesa_get_driver_uuid
0000000000334ad0 0000000000000010 t _mesa_get_device_uuid
0000000000334ae0 00000000000004f0 t _mesa_get_shading_language_version
0000000000334fd0 0000000000000108 t clamp_viewport
00000000003350e0 00000000000000e8 t set_depth_range_no_notify
00000000003351d0 0000000000000150 t viewport_array
0000000000335320 000000000000013c t viewport
0000000000335460 000000000000003c T _mesa_Viewport_no_error
00000000003354a0 0000000000000060 T _mesa_Viewport
0000000000335500 000000000000010c t _mesa_set_viewport
0000000000335610 0000000000000034 T _mesa_ViewportArrayv_no_error
0000000000335650 00000000000000b4 T _mesa_ViewportArrayv
0000000000335710 0000000000000024 T _mesa_ViewportIndexedf_no_error
0000000000335740 0000000000000090 T _mesa_ViewportIndexedf
00000000003357d0 0000000000000030 T _mesa_ViewportIndexedfv_no_error
0000000000335800 000000000000009c T _mesa_ViewportIndexedfv
00000000003358a0 0000000000000108 t _mesa_set_depth_range
00000000003359b0 0000000000000148 T _mesa_DepthRange
0000000000335b00 0000000000000120 t _mesa_DepthRangef
0000000000335c20 0000000000000158 T _mesa_DepthRangeArrayv_no_error
0000000000335d80 000000000000018c T _mesa_DepthRangeArrayv
0000000000335f10 000000000000017c T _mesa_DepthRangeArrayfvOES
0000000000336090 0000000000000128 T _mesa_DepthRangeIndexed_no_error
00000000003361c0 0000000000000080 T _mesa_DepthRangeIndexed
0000000000336240 0000000000000088 T _mesa_DepthRangeIndexedfOES
00000000003362d0 0000000000000074 t _mesa_init_viewport
0000000000336350 0000000000000128 T _mesa_ClipControl_no_error
0000000000336480 00000000000001b4 t _mesa_ClipControl
0000000000336640 00000000000000a4 t _mesa_get_viewport_xform
00000000003366f0 0000000000000074 T _mesa_SubpixelPrecisionBiasNV_no_error
0000000000336770 00000000000000ec t _mesa_SubpixelPrecisionBiasNV
0000000000336860 00000000000000d8 T _mesa_ViewportSwizzleNV_no_error
0000000000336940 00000000000001bc T _mesa_ViewportSwizzleNV
0000000000336b00 00000000000000cc t matmul4
0000000000336bd0 00000000000000c4 t matmul34
0000000000336ca0 0000000000000734 t invert_matrix_general
00000000003373e0 000000000000008c t invert_matrix_2d_no_rot
0000000000337470 00000000000000ac t invert_matrix_3d_no_rot
0000000000337520 0000000000000028 t invert_matrix_identity
0000000000337550 0000000000000464 t invert_matrix_3d
00000000003379c0 000000000000003c t _math_matrix_mul_matrix
0000000000337a00 0000000000000024 t _math_matrix_mul_floats
0000000000337a30 000000000000023c t _math_matrix_rotate
0000000000337c70 00000000000000a0 t _math_matrix_frustum
0000000000337d10 00000000000000b8 t _math_matrix_ortho
0000000000337dd0 00000000000000b0 t _math_matrix_scale
0000000000337e80 00000000000000a4 t _math_matrix_translate
0000000000337f30 000000000000003c t _math_matrix_set_identity
0000000000337f70 0000000000000590 t _math_matrix_analyse
0000000000338500 0000000000000014 t _math_matrix_is_length_preserving
0000000000338520 0000000000000010 t _math_matrix_is_dirty
0000000000338530 000000000000003c t _math_matrix_copy
0000000000338570 0000000000000020 t _math_matrix_loadf
0000000000338590 000000000000007c t _math_matrix_ctr
0000000000338610 0000000000000034 t _math_matrix_dtr
0000000000338650 0000000000000084 t _math_transposef
00000000003386e0 000000000000009c t _math_transposefd
0000000000338780 00000000000000b0 t _mesa_transform_vector
0000000000338830 0000000000000010 t _vbo_install_exec_vtxfmt
0000000000338840 0000000000000018 t vbo_exec_update_eval_maps
0000000000338860 0000000000000234 t _vbo_CreateContext
0000000000338aa0 000000000000008c t _vbo_DestroyContext
0000000000338b30 0000000000000030 t _vbo_current_attrib
0000000000338b60 0000000000000140 t vbo_exec_wrap_buffers
0000000000338ca0 0000000000000070 t vbo_exec_vtx_wrap
0000000000338d10 0000000000000204 t vbo_exec_End
0000000000338f20 0000000000000278 t vbo_exec_copy_to_current
00000000003391a0 0000000000000568 t vbo_exec_wrap_upgrade_vertex
0000000000339710 00000000000000b0 t vbo_exec_fixup_vertex
00000000003397c0 00000000000001b4 t vbo_exec_TexCoordP4uiv
0000000000339980 0000000000000184 t vbo_exec_TexCoordP4ui
0000000000339b10 000000000000016c t vbo_exec_TexCoordP3uiv
0000000000339c80 000000000000016c t vbo_exec_TexCoordP3ui
0000000000339df0 0000000000000148 t vbo_exec_TexCoordP2uiv
0000000000339f40 0000000000000150 t vbo_exec_TexCoordP2ui
000000000033a090 0000000000000124 t vbo_exec_TexCoordP1uiv
000000000033a1c0 0000000000000118 t vbo_exec_TexCoordP1ui
000000000033a2e0 0000000000000094 t vbo_exec_Indexfv
000000000033a380 000000000000008c t vbo_exec_Indexf
000000000033a410 0000000000000094 t vbo_exec_EdgeFlag
000000000033a4b0 00000000000007f0 t vbo_exec_Materialfv
000000000033aca0 000000000000009c t vbo_exec_TexCoord4fv
000000000033ad40 00000000000000a8 t vbo_exec_TexCoord4f
000000000033adf0 000000000000009c t vbo_exec_TexCoord3fv
000000000033ae90 00000000000000a0 t vbo_exec_TexCoord3f
000000000033af30 0000000000000094 t vbo_exec_TexCoord2fv
000000000033afd0 0000000000000094 t vbo_exec_TexCoord2f
000000000033b070 0000000000000094 t vbo_exec_TexCoord1fv
000000000033b110 000000000000008c t vbo_exec_TexCoord1f
000000000033b1a0 000000000000009c t vbo_exec_SecondaryColor3fvEXT
000000000033b240 00000000000000a0 t vbo_exec_SecondaryColor3fEXT
000000000033b2e0 000000000000009c t vbo_exec_Normal3fv
000000000033b380 00000000000000a0 t vbo_exec_Normal3f
000000000033b420 0000000000000094 t vbo_exec_FogCoordfvEXT
000000000033b4c0 000000000000008c t vbo_exec_FogCoordfEXT
000000000033b550 000000000000009c t vbo_exec_Color4fv
000000000033b5f0 00000000000000a8 t vbo_exec_Color4f
000000000033b6a0 000000000000009c t vbo_exec_Color3fv
000000000033b740 00000000000000a0 t vbo_exec_Color3f
000000000033b7e0 00000000000001cc t vbo_exec_MultiTexCoordP4uiv
000000000033b9b0 000000000000019c t vbo_exec_MultiTexCoordP4ui
000000000033bb50 0000000000000184 t vbo_exec_MultiTexCoordP3uiv
000000000033bce0 0000000000000184 t vbo_exec_MultiTexCoordP3ui
000000000033be70 0000000000000160 t vbo_exec_MultiTexCoordP2uiv
000000000033bfd0 0000000000000168 t vbo_exec_MultiTexCoordP2ui
000000000033c140 000000000000013c t vbo_exec_MultiTexCoordP1uiv
000000000033c280 000000000000012c t vbo_exec_MultiTexCoordP1ui
000000000033c3b0 00000000000000b4 t vbo_exec_MultiTexCoord4fv
000000000033c470 00000000000000c4 t vbo_exec_MultiTexCoord4f
000000000033c540 00000000000000b4 t vbo_exec_MultiTexCoord3fv
000000000033c600 00000000000000bc t vbo_exec_MultiTexCoord3f
000000000033c6c0 00000000000000ac t vbo_exec_MultiTexCoord2fv
000000000033c770 00000000000000b0 t vbo_exec_MultiTexCoord2f
000000000033c820 00000000000000ac t vbo_exec_MultiTexCoord1fv
000000000033c8d0 00000000000000a8 t vbo_exec_MultiTexCoord1f
000000000033c980 00000000000000f0 T _es_VertexAttrib4fv
000000000033ca70 0000000000000130 t vbo_exec_EvalCoord2f
000000000033cba0 0000000000000070 t vbo_exec_EvalPoint2
000000000033cc10 0000000000000008 t vbo_exec_EvalCoord2fv
000000000033cc20 00000000000000f0 t vbo_exec_EvalCoord1f
000000000033cd10 000000000000004c t vbo_exec_EvalPoint1
000000000033cd60 0000000000000008 t vbo_exec_EvalCoord1fv
000000000033cd70 00000000000001d4 t vbo_exec_VertexAttribL1ui64vARB
000000000033cf50 00000000000001d0 t vbo_exec_VertexAttribL1ui64ARB
000000000033d120 00000000000001ac t vbo_exec_VertexAttribL4dv
000000000033d2d0 00000000000001bc t vbo_exec_VertexAttribL3dv
000000000033d490 00000000000001cc t vbo_exec_VertexAttribL2dv
000000000033d660 00000000000001d8 t vbo_exec_VertexAttribL1dv
000000000033d840 00000000000001dc t vbo_exec_VertexAttribL4d
000000000033da20 00000000000001d8 t vbo_exec_VertexAttribL3d
000000000033dc00 00000000000001d4 t vbo_exec_VertexAttribL2d
000000000033dde0 00000000000001dc t vbo_exec_VertexAttribL1d
000000000033dfc0 000000000000022c t vbo_exec_VertexP4uiv
000000000033e1f0 00000000000001fc t vbo_exec_VertexP4ui
000000000033e3f0 0000000000000230 t vbo_exec_VertexP3uiv
000000000033e620 0000000000000210 t vbo_exec_VertexP3ui
000000000033e830 0000000000000230 t vbo_exec_VertexP2uiv
000000000033ea60 00000000000001e4 t vbo_exec_VertexP2ui
000000000033ec50 00000000000001c4 t vbo_exec_VertexAttribI4uiv
000000000033ee20 00000000000001cc t vbo_exec_VertexAttribI3uiv
000000000033eff0 00000000000001d0 t vbo_exec_VertexAttribI2uiv
000000000033f1c0 00000000000001cc t vbo_exec_VertexAttribI4ui
000000000033f390 00000000000001cc t vbo_exec_VertexAttribI3ui
000000000033f560 00000000000001d4 t vbo_exec_VertexAttribI2ui
000000000033f740 00000000000001c4 t vbo_exec_VertexAttribI1ui
000000000033f910 00000000000001c4 t vbo_exec_VertexAttribI4iv
000000000033fae0 00000000000001cc t vbo_exec_VertexAttribI3iv
000000000033fcb0 00000000000001d0 t vbo_exec_VertexAttribI2iv
000000000033fe80 00000000000001cc t vbo_exec_VertexAttribI4i
0000000000340050 00000000000001cc t vbo_exec_VertexAttribI3i
0000000000340220 00000000000001d4 t vbo_exec_VertexAttribI2i
0000000000340400 00000000000001c4 t vbo_exec_VertexAttribI1i
00000000003405d0 000000000000017c t vbo_exec_VertexAttrib4fvNV
0000000000340750 0000000000000194 t vbo_exec_VertexAttrib4fNV
00000000003408f0 000000000000018c t vbo_exec_VertexAttrib3fvNV
0000000000340a80 00000000000001a8 t vbo_exec_VertexAttrib3fNV
0000000000340c30 0000000000000190 t vbo_exec_VertexAttrib2fvNV
0000000000340dc0 000000000000019c t vbo_exec_VertexAttrib2fNV
0000000000340f60 000000000000019c t vbo_exec_VertexAttrib1fvNV
0000000000341100 0000000000000198 t vbo_exec_VertexAttrib1fNV
00000000003412a0 00000000000001ac t vbo_exec_VertexAttrib4fvARB
0000000000341450 00000000000001dc t vbo_exec_VertexAttrib4fARB
0000000000341630 00000000000001bc t vbo_exec_VertexAttrib3fvARB
00000000003417f0 00000000000001d8 t vbo_exec_VertexAttrib3fARB
00000000003419d0 00000000000001c4 t vbo_exec_VertexAttrib2fvARB
0000000000341ba0 00000000000001d0 t vbo_exec_VertexAttrib2fARB
0000000000341d70 00000000000001d0 t vbo_exec_VertexAttrib1fvARB
0000000000341f40 00000000000001cc t vbo_exec_VertexAttrib1fARB
0000000000342110 00000000000000f4 t vbo_exec_Vertex4fv
0000000000342210 00000000000000f4 t vbo_exec_Vertex4f
0000000000342310 0000000000000104 t vbo_exec_Vertex3fv
0000000000342420 0000000000000114 t vbo_exec_Vertex3f
0000000000342540 0000000000000110 t vbo_exec_Vertex2fv
0000000000342650 0000000000000114 t vbo_exec_Vertex2f
0000000000342770 000000000000017c t r11g11b10f_to_float3
00000000003428f0 00000000000000c8 t vbo_exec_FlushVertices_internal
00000000003429c0 0000000000000158 t vbo_exec_Begin
0000000000342b20 0000000000000058 t vbo_exec_PrimitiveRestartNV
0000000000342b80 00000000000000e0 T _es_VertexAttrib4f
0000000000342c60 00000000000000d0 T _es_VertexAttrib1f
0000000000342d30 00000000000000d4 T _es_VertexAttrib2f
0000000000342e10 00000000000000e0 T _es_VertexAttrib3f
0000000000342ef0 00000000000000dc T _es_VertexAttrib1fv
0000000000342fd0 00000000000000dc T _es_VertexAttrib2fv
00000000003430b0 00000000000000f0 T _es_VertexAttrib3fv
00000000003431a0 0000000000000300 t vbo_exec_NormalP3ui
00000000003434a0 0000000000000300 t vbo_exec_SecondaryColorP3ui
00000000003437a0 0000000000000300 t vbo_exec_ColorP3ui
0000000000343aa0 000000000000031c t vbo_exec_ColorP3uiv
0000000000343dc0 000000000000031c t vbo_exec_SecondaryColorP3uiv
00000000003440e0 000000000000031c t vbo_exec_NormalP3uiv
0000000000344400 000000000000038c t vbo_exec_ColorP4ui
0000000000344790 00000000000003b4 t vbo_exec_ColorP4uiv
0000000000344b50 00000000000009c0 t vbo_exec_VertexAttribP4ui
0000000000345510 0000000000000a68 t vbo_exec_VertexAttribP4uiv
0000000000345f80 00000000000007bc t vbo_exec_VertexAttribP1ui
0000000000346740 0000000000000860 t vbo_exec_VertexAttribP1uiv
0000000000346fa0 000000000000093c t vbo_exec_VertexAttribP2ui
00000000003478e0 00000000000009b0 t vbo_exec_VertexAttribP2uiv
0000000000348290 0000000000000a58 t vbo_exec_VertexAttribP3ui
0000000000348cf0 0000000000000ae8 t vbo_exec_VertexAttribP3uiv
00000000003497e0 00000000000006a8 t vbo_exec_vtx_init
0000000000349e90 0000000000000080 t vbo_exec_vtx_destroy
0000000000349f10 0000000000000024 t vbo_exec_FlushVertices
0000000000349f40 00000000000000a8 t _es_Color4f
0000000000349ff0 00000000000000a0 t _es_Normal3f
000000000034a090 00000000000000c4 t _es_MultiTexCoord4f
000000000034a160 0000000000000004 t _es_Materialfv
000000000034a170 0000000000000024 t _es_Materialf
000000000034a1a0 0000000000000050 t vbo_exec_init
000000000034a1f0 0000000000000010 t vbo_exec_destroy
000000000034a200 0000000000000050 t vbo_try_prim_conversion
000000000034a250 0000000000000148 t vbo_merge_draws
000000000034a3a0 000000000000024c t vbo_copy_vertices
000000000034a5f0 00000000000000ac t vbo_exec_vtx_unmap
000000000034a6a0 00000000000001a0 t vbo_exec_vtx_map
000000000034a840 00000000000004b8 t vbo_exec_vtx_flush
000000000034ad00 0000000000000300 t vbo_exec_eval_update
000000000034b000 00000000000001b0 t vbo_exec_do_EvalCoord1f
000000000034b1b0 000000000000035c t vbo_exec_do_EvalCoord2f
000000000034b510 0000000000000004 t _mesa_noop_Materialfv
000000000034b520 0000000000000004 t _mesa_noop_EvalCoord1f
000000000034b530 0000000000000004 t _mesa_noop_EvalCoord1fv
000000000034b540 0000000000000004 t _mesa_noop_EvalCoord2f
000000000034b550 0000000000000004 t _mesa_noop_EvalPoint1
000000000034b560 0000000000000004 t _mesa_noop_EvalPoint2
000000000034b570 0000000000000004 t _mesa_noop_Begin
000000000034b580 0000000000000004 t _mesa_noop_End
000000000034b590 0000000000000004 t _mesa_noop_Vertex3f
000000000034b5a0 0000000000000004 t _mesa_noop_Vertex4f
000000000034b5b0 0000000000000004 t _mesa_noop_EdgeFlag
000000000034b5c0 0000000000000004 t _mesa_noop_MultiTexCoord1f
000000000034b5d0 0000000000000004 t _mesa_noop_MultiTexCoord1fv
000000000034b5e0 0000000000000004 t _mesa_noop_MultiTexCoord2f
000000000034b5f0 0000000000000004 t _mesa_noop_MultiTexCoord3f
000000000034b600 0000000000000004 t _mesa_noop_MultiTexCoord4f
000000000034b610 0000000000000038 t _mesa_noop_VertexAttribL1ui64vARB
000000000034b650 0000000000000038 t _mesa_noop_VertexAttribL1ui64ARB
000000000034b690 0000000000000038 t _mesa_noop_VertexAttribL4dv
000000000034b6d0 0000000000000038 t _mesa_noop_VertexAttribL3dv
000000000034b710 0000000000000038 t _mesa_noop_VertexAttribL2dv
000000000034b750 0000000000000038 t _mesa_noop_VertexAttribL1dv
000000000034b790 0000000000000038 t _mesa_noop_VertexAttribL4d
000000000034b7d0 0000000000000038 t _mesa_noop_VertexAttribL3d
000000000034b810 0000000000000038 t _mesa_noop_VertexAttribL2d
000000000034b850 0000000000000038 t _mesa_noop_VertexAttribL1d
000000000034b890 0000000000000070 t _mesa_noop_VertexAttribP4uiv
000000000034b900 0000000000000070 t _mesa_noop_VertexAttribP4ui
000000000034b970 000000000000004c t _mesa_noop_SecondaryColorP3uiv
000000000034b9c0 000000000000004c t _mesa_noop_SecondaryColorP3ui
000000000034ba10 000000000000004c t _mesa_noop_ColorP4uiv
000000000034ba60 000000000000004c t _mesa_noop_ColorP4ui
000000000034bab0 000000000000004c t _mesa_noop_ColorP3uiv
000000000034bb00 000000000000004c t _mesa_noop_ColorP3ui
000000000034bb50 000000000000004c t _mesa_noop_NormalP3uiv
000000000034bba0 000000000000004c t _mesa_noop_NormalP3ui
000000000034bbf0 000000000000004c t _mesa_noop_MultiTexCoordP4uiv
000000000034bc40 000000000000004c t _mesa_noop_MultiTexCoordP4ui
000000000034bc90 000000000000004c t _mesa_noop_MultiTexCoordP3uiv
000000000034bce0 000000000000004c t _mesa_noop_MultiTexCoordP3ui
000000000034bd30 000000000000004c t _mesa_noop_MultiTexCoordP2uiv
000000000034bd80 000000000000004c t _mesa_noop_MultiTexCoordP2ui
000000000034bdd0 000000000000004c t _mesa_noop_MultiTexCoordP1uiv
000000000034be20 000000000000004c t _mesa_noop_MultiTexCoordP1ui
000000000034be70 000000000000004c t _mesa_noop_TexCoordP4uiv
000000000034bec0 000000000000004c t _mesa_noop_TexCoordP4ui
000000000034bf10 000000000000004c t _mesa_noop_TexCoordP3uiv
000000000034bf60 000000000000004c t _mesa_noop_TexCoordP3ui
000000000034bfb0 000000000000004c t _mesa_noop_TexCoordP2uiv
000000000034c000 000000000000004c t _mesa_noop_TexCoordP2ui
000000000034c050 000000000000004c t _mesa_noop_TexCoordP1uiv
000000000034c0a0 000000000000004c t _mesa_noop_TexCoordP1ui
000000000034c0f0 000000000000004c t _mesa_noop_VertexP4uiv
000000000034c140 000000000000004c t _mesa_noop_VertexP4ui
000000000034c190 000000000000004c t _mesa_noop_VertexP3uiv
000000000034c1e0 000000000000004c t _mesa_noop_VertexP3ui
000000000034c230 000000000000004c t _mesa_noop_VertexP2uiv
000000000034c280 000000000000004c t _mesa_noop_VertexP2ui
000000000034c2d0 0000000000000038 t _mesa_noop_VertexAttribI4uiv
000000000034c310 0000000000000038 t _mesa_noop_VertexAttribI3uiv
000000000034c350 0000000000000038 t _mesa_noop_VertexAttribI2uiv
000000000034c390 0000000000000038 t _mesa_noop_VertexAttribI4ui
000000000034c3d0 0000000000000038 t _mesa_noop_VertexAttribI3ui
000000000034c410 0000000000000038 t _mesa_noop_VertexAttribI2ui
000000000034c450 0000000000000038 t _mesa_noop_VertexAttribI1ui
000000000034c490 0000000000000038 t _mesa_noop_VertexAttribI4iv
000000000034c4d0 0000000000000038 t _mesa_noop_VertexAttribI3iv
000000000034c510 0000000000000038 t _mesa_noop_VertexAttribI2iv
000000000034c550 0000000000000038 t _mesa_noop_VertexAttribI4i
000000000034c590 0000000000000038 t _mesa_noop_VertexAttribI3i
000000000034c5d0 0000000000000038 t _mesa_noop_VertexAttribI2i
000000000034c610 0000000000000038 t _mesa_noop_VertexAttribI1i
000000000034c650 0000000000000038 t _mesa_noop_VertexAttrib4fvARB
000000000034c690 0000000000000038 t _mesa_noop_VertexAttrib4fARB
000000000034c6d0 0000000000000038 t _mesa_noop_VertexAttrib3fvARB
000000000034c710 0000000000000038 t _mesa_noop_VertexAttrib3fARB
000000000034c750 0000000000000038 t _mesa_noop_VertexAttrib2fvARB
000000000034c790 0000000000000038 t _mesa_noop_VertexAttrib2fARB
000000000034c7d0 0000000000000038 t _mesa_noop_VertexAttrib1fvARB
000000000034c810 0000000000000038 t _mesa_noop_VertexAttrib1fARB
000000000034c850 0000000000000004 t _mesa_noop_VertexAttrib4fNV
000000000034c860 0000000000000004 t _mesa_noop_VertexAttrib3fNV
000000000034c870 0000000000000004 t _mesa_noop_VertexAttrib2fNV
000000000034c880 0000000000000004 t _mesa_noop_VertexAttrib4fvNV
000000000034c890 0000000000000004 t _mesa_noop_Color4f
000000000034c8a0 0000000000000004 t _mesa_noop_TexCoord3f
000000000034c8b0 0000000000000004 t _mesa_noop_Vertex2f
000000000034c8c0 0000000000000004 t _mesa_noop_Vertex4fv
000000000034c8d0 0000000000000004 t _mesa_noop_TexCoord1f
000000000034c8e0 0000000000000004 t _mesa_noop_TexCoord4f
000000000034c8f0 0000000000000004 t _mesa_noop_Normal3f
000000000034c900 0000000000000004 t _mesa_noop_SecondaryColor3fEXT
000000000034c910 0000000000000004 t _mesa_noop_Color3f
000000000034c920 0000000000000004 t _mesa_noop_MultiTexCoord3fv
000000000034c930 0000000000000004 t _mesa_noop_MultiTexCoord4fv
000000000034c940 0000000000000004 t _mesa_noop_VertexAttrib1fNV
000000000034c950 0000000000000004 t _mesa_noop_VertexAttrib1fvNV
000000000034c960 0000000000000004 t _mesa_noop_VertexAttrib2fvNV
000000000034c970 0000000000000004 t _mesa_noop_MultiTexCoord2fv
000000000034c980 0000000000000004 t _mesa_noop_TexCoord2f
000000000034c990 0000000000000004 t _mesa_noop_VertexAttrib3fvNV
000000000034c9a0 0000000000000004 t _mesa_noop_EvalCoord2fv
000000000034c9b0 0000000000000004 t _mesa_noop_ArrayElement
000000000034c9c0 0000000000000004 t _mesa_noop_Color4fv
000000000034c9d0 0000000000000004 t _mesa_noop_Indexfv
000000000034c9e0 0000000000000004 t _mesa_noop_SecondaryColor3fvEXT
000000000034c9f0 0000000000000004 t _mesa_noop_Indexf
000000000034ca00 0000000000000004 t _mesa_noop_TexCoord1fv
000000000034ca10 0000000000000004 t _mesa_noop_TexCoord4fv
000000000034ca20 0000000000000004 t _mesa_noop_Normal3fv
000000000034ca30 0000000000000004 t _mesa_noop_FogCoordfEXT
000000000034ca40 0000000000000004 t _mesa_noop_TexCoord3fv
000000000034ca50 0000000000000004 t _mesa_noop_Color3fv
000000000034ca60 0000000000000004 t _mesa_noop_FogCoordfvEXT
000000000034ca70 0000000000000004 t _mesa_noop_TexCoord2fv
000000000034ca80 0000000000000004 t _mesa_noop_Vertex2fv
000000000034ca90 0000000000000004 t _mesa_noop_Vertex3fv
000000000034caa0 0000000000000004 t _mesa_noop_PrimitiveRestartNV
000000000034cab0 000000000000017c t r11g11b10f_to_float3
000000000034cc30 00000000000000bc t _mesa_noop_VertexAttribP3uiv
000000000034ccf0 00000000000000bc t _mesa_noop_VertexAttribP3ui
000000000034cdb0 00000000000000bc t _mesa_noop_VertexAttribP2uiv
000000000034ce70 00000000000000bc t _mesa_noop_VertexAttribP2ui
000000000034cf30 00000000000000bc t _mesa_noop_VertexAttribP1uiv
000000000034cff0 00000000000000bc t _mesa_noop_VertexAttribP1ui
000000000034d0b0 0000000000000570 t _mesa_noop_vtxfmt_init
000000000034d620 0000000000000018 t _mesa_using_noop_vtxfmt
000000000034d640 0000000000000068 t reset_counters
000000000034d6b0 0000000000000094 t _save_OBE_MultiDrawElements
000000000034d750 00000000000000bc t _save_OBE_MultiDrawElementsBaseVertex
000000000034d810 000000000000002c t _save_Begin
000000000034d840 0000000000000084 t vbo_destroy_vertex_list
000000000034d8d0 00000000000000f0 t alloc_vertex_store
000000000034d9c0 00000000000000f4 t vbo_print_vertex_list
000000000034dac0 000000000000013c t copy_to_current
000000000034dc00 000000000000017c t r11g11b10f_to_float3
000000000034dd80 0000000000000074 t vbo_save_map_vertex_store
000000000034de00 0000000000000074 t vbo_save_unmap_vertex_store
000000000034de80 0000000000000868 t compile_vertex_list
000000000034e6f0 0000000000000070 t wrap_buffers
000000000034e760 000000000000049c t fixup_vertex
000000000034ec00 0000000000000314 t _save_SecondaryColorP3uiv
000000000034ef20 00000000000002f4 t _save_SecondaryColorP3ui
000000000034f220 00000000000003b4 t _save_ColorP4uiv
000000000034f5e0 0000000000000388 t _save_ColorP4ui
000000000034f970 0000000000000314 t _save_ColorP3uiv
000000000034fc90 00000000000002f4 t _save_ColorP3ui
000000000034ff90 0000000000000314 t _save_NormalP3uiv
00000000003502b0 00000000000002f4 t _save_NormalP3ui
00000000003505b0 0000000000000164 t _save_TexCoordP4uiv
0000000000350720 0000000000000134 t _save_TexCoordP4ui
0000000000350860 000000000000013c t _save_TexCoordP3uiv
00000000003509a0 000000000000011c t _save_TexCoordP3ui
0000000000350ac0 0000000000000118 t _save_TexCoordP2uiv
0000000000350be0 0000000000000120 t _save_TexCoordP2ui
0000000000350d00 0000000000000110 t _save_TexCoordP1uiv
0000000000350e10 00000000000000f0 t _save_TexCoordP1ui
0000000000350f00 0000000000000068 t _save_Indexfv
0000000000350f70 0000000000000070 t _save_Indexf
0000000000350fe0 0000000000000068 t _save_EdgeFlag
0000000000351050 000000000000064c t _save_Materialfv
00000000003516a0 0000000000000070 t _save_TexCoord4fv
0000000000351710 0000000000000094 t _save_TexCoord4f
00000000003517b0 0000000000000070 t _save_TexCoord3fv
0000000000351820 000000000000008c t _save_TexCoord3f
00000000003518b0 0000000000000068 t _save_TexCoord2fv
0000000000351920 0000000000000078 t _save_TexCoord2f
00000000003519a0 0000000000000068 t _save_TexCoord1fv
0000000000351a10 0000000000000070 t _save_TexCoord1f
0000000000351a80 0000000000000070 t _save_SecondaryColor3fvEXT
0000000000351af0 000000000000008c t _save_SecondaryColor3fEXT
0000000000351b80 0000000000000070 t _save_Normal3fv
0000000000351bf0 000000000000008c t _save_Normal3f
0000000000351c80 0000000000000068 t _save_FogCoordfvEXT
0000000000351cf0 0000000000000070 t _save_FogCoordfEXT
0000000000351d60 0000000000000070 t _save_Color4fv
0000000000351dd0 0000000000000094 t _save_Color4f
0000000000351e70 0000000000000070 t _save_Color3fv
0000000000351ee0 000000000000008c t _save_Color3f
0000000000351f70 0000000000000194 t _save_MultiTexCoordP4uiv
0000000000352110 0000000000000164 t _save_MultiTexCoordP4ui
0000000000352280 000000000000016c t _save_MultiTexCoordP3uiv
00000000003523f0 000000000000014c t _save_MultiTexCoordP3ui
0000000000352540 0000000000000148 t _save_MultiTexCoordP2uiv
0000000000352690 0000000000000130 t _save_MultiTexCoordP2ui
00000000003527c0 0000000000000124 t _save_MultiTexCoordP1uiv
00000000003528f0 00000000000000fc t _save_MultiTexCoordP1ui
00000000003529f0 0000000000000094 t _save_MultiTexCoord4fv
0000000000352a90 00000000000000b0 t _save_MultiTexCoord4f
0000000000352b40 0000000000000094 t _save_MultiTexCoord3fv
0000000000352be0 00000000000000a8 t _save_MultiTexCoord3f
0000000000352c90 000000000000008c t _save_MultiTexCoord2fv
0000000000352d20 0000000000000094 t _save_MultiTexCoord2f
0000000000352dc0 000000000000008c t _save_MultiTexCoord1fv
0000000000352e50 000000000000008c t _save_MultiTexCoord1f
0000000000352ee0 0000000000000078 t wrap_filled_vertex
0000000000352f60 0000000000000184 t _save_VertexAttribL1ui64vARB
00000000003530f0 0000000000000178 t _save_VertexAttribL1ui64ARB
0000000000353270 0000000000000190 t _save_VertexAttribL4dv
0000000000353400 0000000000000190 t _save_VertexAttribL3dv
0000000000353590 0000000000000180 t _save_VertexAttribL2dv
0000000000353710 0000000000000184 t _save_VertexAttribL1dv
00000000003538a0 00000000000001cc t _save_VertexAttribL4d
0000000000353a70 00000000000001bc t _save_VertexAttribL3d
0000000000353c30 000000000000019c t _save_VertexAttribL2d
0000000000353dd0 0000000000000184 t _save_VertexAttribL1d
0000000000353f60 00000000000009ec t _save_VertexAttribP4uiv
0000000000354950 000000000000093c t _save_VertexAttribP4ui
0000000000355290 00000000000009e0 t _save_VertexAttribP3uiv
0000000000355c70 0000000000000948 t _save_VertexAttribP3ui
00000000003565c0 0000000000000828 t _save_VertexAttribP2uiv
0000000000356df0 00000000000007d0 t _save_VertexAttribP2ui
00000000003575c0 0000000000000670 t _save_VertexAttribP1uiv
0000000000357c30 0000000000000630 t _save_VertexAttribP1ui
0000000000358260 0000000000000228 t _save_VertexP4uiv
0000000000358490 00000000000001f8 t _save_VertexP4ui
0000000000358690 0000000000000200 t _save_VertexP3uiv
0000000000358890 00000000000001e0 t _save_VertexP3ui
0000000000358a70 00000000000001c4 t _save_VertexP2uiv
0000000000358c40 00000000000001a4 t _save_VertexP2ui
0000000000358df0 00000000000001b0 t _save_VertexAttribI4uiv
0000000000358fa0 00000000000001a0 t _save_VertexAttribI3uiv
0000000000359140 0000000000000190 t _save_VertexAttribI2uiv
00000000003592d0 00000000000001ac t _save_VertexAttribI4ui
0000000000359480 0000000000000198 t _save_VertexAttribI3ui
0000000000359620 000000000000018c t _save_VertexAttribI2ui
00000000003597b0 0000000000000178 t _save_VertexAttribI1ui
0000000000359930 00000000000001b0 t _save_VertexAttribI4iv
0000000000359ae0 00000000000001a0 t _save_VertexAttribI3iv
0000000000359c80 0000000000000190 t _save_VertexAttribI2iv
0000000000359e10 00000000000001ac t _save_VertexAttribI4i
0000000000359fc0 0000000000000198 t _save_VertexAttribI3i
000000000035a160 000000000000018c t _save_VertexAttribI2i
000000000035a2f0 0000000000000178 t _save_VertexAttribI1i
000000000035a470 0000000000000114 t _save_VertexAttrib4fvNV
000000000035a590 000000000000012c t _save_VertexAttrib4fNV
000000000035a6c0 0000000000000114 t _save_VertexAttrib3fvNV
000000000035a7e0 0000000000000124 t _save_VertexAttrib3fNV
000000000035a910 000000000000010c t _save_VertexAttrib2fvNV
000000000035aa20 0000000000000114 t _save_VertexAttrib2fNV
000000000035ab40 000000000000010c t _save_VertexAttrib1fvNV
000000000035ac50 000000000000012c t _save_VertexAttrib1fNV
000000000035ad80 0000000000000190 t _save_VertexAttrib4fvARB
000000000035af10 00000000000001cc t _save_VertexAttrib4fARB
000000000035b0e0 0000000000000190 t _save_VertexAttrib3fvARB
000000000035b270 00000000000001bc t _save_VertexAttrib3fARB
000000000035b430 0000000000000180 t _save_VertexAttrib2fvARB
000000000035b5b0 000000000000019c t _save_VertexAttrib2fARB
000000000035b750 0000000000000184 t _save_VertexAttrib1fvARB
000000000035b8e0 0000000000000184 t _save_VertexAttrib1fARB
000000000035ba70 00000000000000e4 t _save_Vertex4fv
000000000035bb60 000000000000010c t _save_Vertex4f
000000000035bc70 00000000000000e4 t _save_Vertex3fv
000000000035bd60 0000000000000104 t _save_Vertex3f
000000000035be70 00000000000000dc t _save_Vertex2fv
000000000035bf50 00000000000000ec t _save_Vertex2f
000000000035c040 0000000000000128 t dlist_fallback
000000000035c170 0000000000000054 t _save_EvalPoint2
000000000035c1d0 0000000000000044 t _save_EvalPoint1
000000000035c220 0000000000000044 t _save_EvalCoord2fv
000000000035c270 0000000000000054 t _save_EvalCoord2f
000000000035c2d0 0000000000000044 t _save_EvalCoord1fv
000000000035c320 000000000000004c t _save_EvalCoord1f
000000000035c370 000000000000005c t _save_CallLists
000000000035c3d0 0000000000000044 t _save_CallList
000000000035c420 00000000000000b0 t _save_End
000000000035c4d0 00000000000000a4 t vbo_save_NotifyBegin
000000000035c580 00000000000000bc t _save_OBE_Rectf
000000000035c640 0000000000000318 t _save_OBE_DrawElementsBaseVertex
000000000035c960 0000000000000008 t _save_OBE_DrawElements
000000000035c970 0000000000000160 t _save_OBE_DrawRangeElements
000000000035cad0 0000000000000144 t _save_OBE_DrawArrays
000000000035cc20 000000000000010c t _save_OBE_MultiDrawArrays
000000000035cd30 00000000000000a0 t _save_PrimitiveRestartNV
000000000035cdd0 0000000000000098 t vbo_initialize_save_dispatch
000000000035ce70 00000000000000bc t vbo_save_SaveFlushVertices
000000000035cf30 00000000000000dc t vbo_save_NewList
000000000035d010 0000000000000098 t vbo_save_EndList
000000000035d0b0 0000000000000024 t vbo_save_BeginCallList
000000000035d0e0 000000000000002c t vbo_save_EndCallList
000000000035d110 000000000000064c t vbo_save_api_init
000000000035d760 0000000000000050 t vbo_save_init
000000000035d7b0 00000000000000b8 t vbo_save_destroy
000000000035d870 0000000000000298 t copy_vao
000000000035db10 00000000000002f4 T vbo_save_playback_vertex_list
000000000035de10 0000000000000030 t VertexAttrib1fvNV
000000000035de40 0000000000000030 t VertexAttrib2fvNV
000000000035de70 0000000000000030 t VertexAttrib3fvNV
000000000035dea0 0000000000000030 t VertexAttrib4fvNV
000000000035ded0 0000000000000318 t _vbo_loopback_vertex_list
000000000035e1f0 0000000000000038 t unpack_float_z_X8_UINT_Z24_UNORM
000000000035e230 0000000000000038 t unpack_float_z_Z24_UNORM_X8_UINT
000000000035e270 0000000000000038 t unpack_float_Z_UNORM16
000000000035e2b0 0000000000000030 t unpack_float_Z_UNORM32
000000000035e2e0 0000000000000024 t unpack_float_z_Z32X24S8
000000000035e310 0000000000000028 t unpack_uint_z_X8_UINT_Z24_UNORM
000000000035e340 0000000000000028 t unpack_uint_z_Z24_UNORM_X8_UINT
000000000035e370 0000000000000024 t unpack_uint_Z_UNORM16
000000000035e3a0 0000000000000058 t unpack_uint_Z_FLOAT32
000000000035e400 000000000000005c t unpack_uint_Z_FLOAT32_X24S8
000000000035e460 0000000000000010 t unpack_float_Z_FLOAT32
000000000035e470 0000000000000014 t unpack_uint_Z_UNORM32
000000000035e490 000000000000007c t _mesa_unorm_to_unorm.constprop.0
000000000035e510 000000000000252c t _mesa_unpack_rgba_row
0000000000360a40 0000000000001d58 t _mesa_unpack_ubyte_rgba_row
00000000003627a0 0000000000000de0 t _mesa_unpack_uint_rgba_row
0000000000363580 00000000000000a0 t _mesa_unpack_float_z_row
0000000000363620 00000000000000a0 t _mesa_unpack_uint_z_row
00000000003636c0 000000000000009c t _mesa_unpack_ubyte_stencil_row
0000000000363760 0000000000000094 t _mesa_unpack_uint_24_8_depth_stencil_row
0000000000363800 00000000000000b4 t _mesa_unpack_float_32_uint_24_8_depth_stencil_row
00000000003638c0 0000000000008cec t _mesa_initialize_exec_table
000000000036c5b0 0000000000000010 t compar_nr
000000000036c5c0 0000000000000080 t _mesa_enum_to_string
000000000036c640 0000000000000024 t _mesa_lookup_prim_by_nr
000000000036c670 0000000000000184 t _mesa_get_srgb_format_linear
000000000036c800 00000000000000c0 t _mesa_get_intensity_format_red
000000000036c8c0 0000000000000298 t setup_render_state
000000000036cb60 0000000000000184 t draw_bitmap_quad
000000000036ccf0 0000000000000168 t init_bitmap_state
000000000036ce60 00000000000001a4 t st_flush_bitmap_cache.part.0
000000000036d010 0000000000000584 t st_Bitmap
000000000036d5a0 00000000000004c4 t st_DrawAtlasBitmaps
000000000036da70 0000000000000018 t st_flush_bitmap_cache
000000000036da90 0000000000000018 t st_init_bitmap_functions
000000000036dab0 0000000000000084 t st_destroy_bitmap
000000000036db40 00000000000000f8 t get_color_fp_variant
000000000036dc40 0000000000000560 t draw_textured_quad.constprop.0
000000000036e1a0 00000000000000d8 t pipe_resource_reference
000000000036e280 00000000000003ac t make_drawpix_z_stencil_program_tgsi
000000000036e630 0000000000000068 t st_make_passthrough_vertex_shader
000000000036e6a0 0000000000000e3c t st_CopyPixels
000000000036f4e0 0000000000001518 t st_DrawPixels
0000000000370a00 000000000000001c t st_init_drawpixels_functions
0000000000370a20 00000000000000d8 t st_destroy_drawpix
0000000000370b00 0000000000000058 t st_discard_framebuffer
0000000000370b60 0000000000000040 t st_UnmapRenderbuffer
0000000000370ba0 0000000000000050 t st_new_renderbuffer
0000000000370bf0 0000000000000038 t st_EvaluateDepthValues
0000000000370c30 0000000000000178 t st_MapRenderbuffer
0000000000370db0 0000000000000070 t st_DrawBufferAllocate
0000000000370e20 0000000000000070 t st_ReadBuffer
0000000000370e90 00000000000000e4 t st_validate_attachment
0000000000370f80 00000000000001c4 t st_validate_framebuffer
0000000000371150 0000000000000018 t st_finish_render_texture
0000000000371170 00000000000001f4 t st_renderbuffer_delete
0000000000371370 00000000000001f0 t st_new_renderbuffer_fb
0000000000371560 00000000000004e0 t st_update_renderbuffer_surface
0000000000371a40 000000000000045c t st_renderbuffer_alloc_storage
0000000000371ea0 0000000000000124 t st_render_texture
0000000000371fd0 0000000000000090 t st_init_fbo_functions
0000000000372060 0000000000000010 t st_device_reset_callback
0000000000372070 0000000000000074 t st_get_graphics_reset_status
00000000003720f0 0000000000000048 t st_glFlush
0000000000372140 0000000000000044 t st_flush
0000000000372190 0000000000000080 t st_finish
0000000000372210 000000000000002c t st_glFinish
0000000000372240 0000000000000038 t st_install_device_reset_callback
0000000000372280 000000000000004c t st_init_flush_functions
00000000003722d0 000000000000019c t util_format_linear
0000000000372470 00000000000000dc t guess_base_level_size
0000000000372550 00000000000000c0 t alpha_to_red
0000000000372610 0000000000000018 t st_DeleteTextureHandle
0000000000372630 0000000000000018 t st_MakeTextureHandleResident
0000000000372650 0000000000000018 t st_DeleteImageHandle
0000000000372670 0000000000000018 t st_MakeImageHandleResident
0000000000372690 0000000000000074 t st_TexParameter
0000000000372710 0000000000000044 t st_NewImageHandle
0000000000372760 0000000000000004 t st_DeleteTextureImage
0000000000372770 000000000000000c t st_NewTextureImage
0000000000372780 00000000000000b0 t st_NewTextureObject
0000000000372830 0000000000000064 t compressed_tex_fallback_allocate.part.0
00000000003728a0 0000000000000224 t try_pbo_upload_common
0000000000372ad0 00000000000000d0 t default_bindings.isra.0
0000000000372ba0 00000000000000d8 t pipe_resource_reference
0000000000372c80 0000000000000098 t st_DeleteTextureObject
0000000000372d20 00000000000000a4 t st_FreeTextureImageBuffer
0000000000372dd0 000000000000023c t st_TextureView
0000000000373010 0000000000000104 t prep_teximage
0000000000373120 0000000000000240 t st_ClearTexSubImage
0000000000373360 000000000000015c t gl_target_to_pipe
00000000003734c0 000000000000018c t st_TestProxyTexImage
0000000000373650 0000000000000290 t guess_and_alloc_texture
00000000003738e0 0000000000000064 t st_astc_format_fallback
0000000000373950 00000000000000a4 t st_compressed_format_fallback
0000000000373a00 0000000000000324 t st_AllocTextureImageBuffer
0000000000373d30 0000000000000118 t st_UnmapTextureImage
0000000000373e50 00000000000001a0 t st_MapTextureImage
0000000000373ff0 000000000000042c t st_CompressedTexSubImage
0000000000374420 00000000000000fc t st_CompressedTexImage
0000000000374520 0000000000000350 t st_texture_storage
0000000000374870 000000000000001c t st_SetTextureStorageForMemoryObject
0000000000374890 000000000000000c t st_AllocTextureStorage
00000000003748a0 00000000000000a0 t st_get_blit_mask
0000000000374940 0000000000000b10 t st_GetTexSubImage
0000000000375450 0000000000000c08 t st_CopyTexSubImage
0000000000376060 0000000000001730 t st_TexSubImage
0000000000377790 00000000000000fc t st_TexImage
0000000000377890 000000000000067c t st_finalize_texture
0000000000377f10 00000000000000e4 t st_NewTextureHandle
0000000000378000 0000000000000154 t st_init_texture_functions
0000000000378160 0000000000000050 t st_query_memory_info
00000000003781b0 000000000000025c t st_invalidate_state
0000000000378410 0000000000000018 t st_emit_string_marker
0000000000378430 0000000000000018 t st_set_background_context
0000000000378450 00000000000001c4 t free_zombie_shaders
0000000000378620 0000000000000020 t st_get_device_uuid
0000000000378640 0000000000000020 t st_get_driver_uuid
0000000000378660 0000000000000058 t st_Enable
00000000003786c0 000000000000004c t destroy_framebuffer_attachment_sampler_cb
0000000000378710 0000000000000008 t destroy_tex_sampler_cb
0000000000378720 00000000000000c8 t free_zombie_sampler_views
00000000003787f0 00000000000001c4 t st_destroy_context_priv
00000000003789c0 0000000000000018 t st_invalidate_buffers
00000000003789e0 000000000000008c t st_save_zombie_sampler_view
0000000000378a70 0000000000000094 t st_save_zombie_shader
0000000000378b10 0000000000000024 t st_context_free_zombie_objects
0000000000378b40 0000000000000b60 t st_create_context
00000000003796a0 0000000000000290 t st_destroy_context
0000000000379930 0000000000000050 t st_debug_message
0000000000379980 000000000000005c t st_debug_init
00000000003799e0 000000000000009c t st_update_debug_callback
0000000000379a80 0000000000000330 t st_draw_vbo
0000000000379db0 00000000000002a4 t st_indirect_draw_vbo
000000000037a060 0000000000000018 t st_init_draw_functions
000000000037a080 0000000000000220 t st_draw_quad
000000000037a2a0 00000000000000f0 t init_format_extensions
000000000037a390 0000000000000f78 t st_init_limits
000000000037b310 00000000000013f0 t st_init_extensions
000000000037c700 0000000000000134 t st_mesa_format_to_pipe_format
000000000037c840 0000000000000028 t st_pipe_format_to_mesa_format
000000000037c870 00000000000000bc t st_choose_matching_format
000000000037c930 0000000000000278 t st_choose_format
000000000037cbb0 0000000000000074 t st_choose_renderbuffer_format
000000000037cc30 00000000000000d4 t st_QuerySamplesForFormat
000000000037cd10 000000000000032c T st_ChooseTextureFormat
000000000037d040 00000000000000f0 T st_QueryInternalFormat
000000000037d130 0000000000000254 t st_translate_color
000000000037d390 00000000000004a8 T st_generate_mipmap
000000000037d840 0000000000000074 t get_pbo_conversion
000000000037d8c0 0000000000000284 t build_conversion
000000000037db50 00000000000010e8 t create_fs_tgsi.isra.0
000000000037ec40 00000000000000a8 t st_pbo_addresses_setup
000000000037ecf0 0000000000000120 t st_pbo_addresses_pixelstore
000000000037ee10 0000000000000024 t st_pbo_addresses_invert_y
000000000037ee40 00000000000002b4 t st_pbo_create_vs
000000000037f100 0000000000000344 t st_pbo_create_gs
000000000037f450 0000000000000344 t st_pbo_draw
000000000037f7a0 0000000000000064 t st_pbo_get_upload_fs
000000000037f810 000000000000007c t st_pbo_get_download_fs
000000000037f890 0000000000000194 t st_init_pbo_helpers
000000000037fa30 00000000000000d0 t st_destroy_pbo_helpers
000000000037fb00 000000000000017c t delete_variant
000000000037fc80 0000000000000164 t st_create_vp_variant
000000000037fdf0 0000000000000420 t st_create_fp_variant
0000000000380210 0000000000000110 t st_unbind_program.isra.0
0000000000380320 0000000000000094 t set_affected_state_flags.isra.0
00000000003803c0 00000000000000a8 t destroy_program_variants_cb
0000000000380470 00000000000000e0 t destroy_shader_program_variants_cb
0000000000380550 000000000000018c t st_set_prog_affected_state_flags
00000000003806e0 000000000000006c t st_release_variants
0000000000380750 00000000000000d8 t st_release_program
0000000000380830 00000000000000cc t st_prepare_vertex_program
0000000000380900 00000000000000e4 t st_translate_stream_output_info
00000000003809f0 0000000000000318 t st_translate_vertex_program
0000000000380d10 00000000000000dc t st_get_vp_variant
0000000000380df0 0000000000000694 t st_translate_fragment_program
0000000000381490 00000000000000d0 t st_get_fp_variant
0000000000381560 0000000000000480 t st_translate_common_program
00000000003819e0 0000000000000200 t st_get_common_variant
0000000000381be0 0000000000000064 t st_destroy_program_variants
0000000000381c50 000000000000015c t st_finalize_program
0000000000381db0 000000000000008c t st_window_rectangles_to_blit
0000000000381e40 00000000000001d0 t st_deserialise_ir_program
0000000000382010 000000000000013c t st_serialise_ir_program.part.0
0000000000382150 0000000000000004 T st_get_program_binary_driver_sha1
0000000000382160 00000000000000bc t st_store_ir_in_disk_cache
0000000000382220 00000000000000fc t st_load_ir_from_disk_cache
0000000000382320 0000000000000014 T st_serialise_tgsi_program
0000000000382340 0000000000000014 T st_serialise_tgsi_program_binary
0000000000382360 0000000000000008 T st_deserialise_tgsi_program
0000000000382370 0000000000000094 t st_destroy_bound_texture_handles_per_stage
0000000000382410 0000000000000098 t st_destroy_bound_image_handles_per_stage
00000000003824b0 000000000000006c t st_texture_create
0000000000382520 00000000000001b4 t st_gl_texture_dims_to_pipe_dims
00000000003826e0 00000000000000e4 t st_texture_match_image
00000000003827d0 0000000000000148 t st_texture_image_map
0000000000382920 0000000000000050 t st_texture_image_unmap
0000000000382970 000000000000015c t st_texture_image_copy
0000000000382ad0 00000000000000a4 t st_create_color_map_texture
0000000000382b80 000000000000003c t st_destroy_bound_texture_handles
0000000000382bc0 000000000000003c t st_destroy_bound_image_handles
0000000000382c00 0000000000000170 t st_make_bound_samplers_resident
0000000000382d70 0000000000000120 t st_make_bound_images_resident
0000000000382e90 00000000000000a8 t transform_decl
0000000000382f40 00000000000000d4 t prolog_common
0000000000383020 00000000000000f0 t prolog_last_vertex_stage
0000000000383110 0000000000000320 t prolog_fs
0000000000383430 0000000000000388 t epilog_fs
00000000003837c0 00000000000004f0 t epilog_last_vertex_stage
0000000000383cb0 000000000000013c t transform_instr
0000000000383df0 0000000000000144 t st_tgsi_lower_depth_clamp
0000000000383f40 0000000000000008 t st_tgsi_lower_depth_clamp_fs
0000000000383f50 00000000000000b8 t emit_samp
0000000000384010 0000000000000424 t yuv_to_rgb
0000000000384440 0000000000000a20 t transform_instr
0000000000384e60 00000000000000b0 t st_tgsi_lower_yuv
0000000000384f10 0000000000000008 t always_available(_mesa_glsl_parse_state const*)
0000000000384f20 000000000000003c t compatibility_vs_only(_mesa_glsl_parse_state const*)
0000000000384f60 0000000000000030 t derivatives_only(_mesa_glsl_parse_state const*)
0000000000384f90 0000000000000010 t gs_only(_mesa_glsl_parse_state const*)
0000000000384fa0 000000000000000c t v110(_mesa_glsl_parse_state const*)
0000000000384fb0 000000000000002c t v120(_mesa_glsl_parse_state const*)
0000000000384fe0 000000000000002c t v130(_mesa_glsl_parse_state const*)
0000000000385010 0000000000000030 t v130_desktop(_mesa_glsl_parse_state const*)
0000000000385040 0000000000000030 t v460_desktop(_mesa_glsl_parse_state const*)
0000000000385070 000000000000002c t v140_or_es3(_mesa_glsl_parse_state const*)
00000000003850a0 0000000000000008 t texture_rectangle(_mesa_glsl_parse_state const*)
00000000003850b0 0000000000000008 t texture_external(_mesa_glsl_parse_state const*)
00000000003850c0 0000000000000008 t shader_texture_lod(_mesa_glsl_parse_state const*)
00000000003850d0 0000000000000014 t shader_texture_lod_and_rect(_mesa_glsl_parse_state const*)
00000000003850f0 000000000000005c t shader_integer_mix(_mesa_glsl_parse_state const*)
0000000000385150 0000000000000008 t gpu_shader4(_mesa_glsl_parse_state const*)
0000000000385160 0000000000000024 t gpu_shader4_integer(_mesa_glsl_parse_state const*)
0000000000385190 0000000000000024 t gpu_shader4_array(_mesa_glsl_parse_state const*)
00000000003851c0 0000000000000030 t gpu_shader4_array_integer(_mesa_glsl_parse_state const*)
00000000003851f0 0000000000000024 t gpu_shader4_rect(_mesa_glsl_parse_state const*)
0000000000385220 0000000000000030 t gpu_shader4_rect_integer(_mesa_glsl_parse_state const*)
0000000000385250 0000000000000024 t gpu_shader4_tbo(_mesa_glsl_parse_state const*)
0000000000385280 0000000000000030 t gpu_shader4_tbo_integer(_mesa_glsl_parse_state const*)
00000000003852b0 0000000000000038 t v130_or_gpu_shader4(_mesa_glsl_parse_state const*)
00000000003852f0 000000000000004c t gpu_shader5(_mesa_glsl_parse_state const*)
0000000000385340 0000000000000038 t gpu_shader5_or_es31(_mesa_glsl_parse_state const*)
0000000000385380 0000000000000038 t texture_multisample(_mesa_glsl_parse_state const*)
00000000003853c0 000000000000004c t texture_query_levels(_mesa_glsl_parse_state const*)
0000000000385410 0000000000000038 t texture_query_lod(_mesa_glsl_parse_state const*)
0000000000385450 0000000000000008 t texture_texture4(_mesa_glsl_parse_state const*)
0000000000385460 0000000000000068 t texture_gather_only_or_es31(_mesa_glsl_parse_state const*)
00000000003854d0 000000000000003c t derivatives_tex3d(_mesa_glsl_parse_state const*)
0000000000385510 0000000000000008 t shader_atomic_counter_ops(_mesa_glsl_parse_state const*)
0000000000385520 0000000000000008 t shader_ballot(_mesa_glsl_parse_state const*)
0000000000385530 0000000000000008 t supports_arb_fragment_shader_interlock(_mesa_glsl_parse_state const*)
0000000000385540 0000000000000008 t supports_nv_fragment_shader_interlock(_mesa_glsl_parse_state const*)
0000000000385550 0000000000000008 t shader_clock(_mesa_glsl_parse_state const*)
0000000000385560 0000000000000020 t shader_clock_int64(_mesa_glsl_parse_state const*)
0000000000385580 0000000000000008 t shader_trinary_minmax(_mesa_glsl_parse_state const*)
0000000000385590 0000000000000008 t shader_image_load_store_ext(_mesa_glsl_parse_state const*)
00000000003855a0 0000000000000008 t shader_image_atomic_add_float(_mesa_glsl_parse_state const*)
00000000003855b0 0000000000000038 t shader_image_size(_mesa_glsl_parse_state const*)
00000000003855f0 000000000000004c t shader_samples(_mesa_glsl_parse_state const*)
0000000000385640 0000000000000014 t int64(_mesa_glsl_parse_state const*)
0000000000385660 0000000000000010 t compute_shader(_mesa_glsl_parse_state const*)
0000000000385670 0000000000000014 t barrier_supported(_mesa_glsl_parse_state const*)
0000000000385690 0000000000000008 t vote(_mesa_glsl_parse_state const*)
00000000003856a0 0000000000000014 t integer_functions_supported(_mesa_glsl_parse_state const*)
00000000003856c0 0000000000000014 t NV_shader_atomic_float_supported(_mesa_glsl_parse_state const*)
00000000003856e0 0000000000000014 t shader_atomic_float_exchange(_mesa_glsl_parse_state const*)
0000000000385700 0000000000000014 t INTEL_shader_atomic_float_minmax_supported(_mesa_glsl_parse_state const*)
0000000000385720 0000000000000008 t shader_atomic_float_minmax(_mesa_glsl_parse_state const*)
0000000000385730 0000000000000008 t demote_to_helper_invocation(_mesa_glsl_parse_state const*)
0000000000385740 0000000000000008 t shader_integer_functions2(_mesa_glsl_parse_state const*)
0000000000385750 0000000000000024 t is_nir(_mesa_glsl_parse_state const*)
0000000000385780 0000000000000024 t is_not_nir(_mesa_glsl_parse_state const*)
00000000003857b0 0000000000000004 W glsl_symbol_table::_ralloc_destructor(void*)
00000000003857c0 00000000000000f8 t (anonymous namespace)::builtin_builder::new_sig(glsl_type const*, bool (*)(_mesa_glsl_parse_state const*), int, ...)
00000000003858c0 0000000000000044 t shader_image_load_store(_mesa_glsl_parse_state const*)
0000000000385910 000000000000004c t shader_image_atomic_exchange_float(_mesa_glsl_parse_state const*)
0000000000385960 0000000000000064 t lod_exists_in_stage(_mesa_glsl_parse_state const*)
00000000003859d0 0000000000000044 t texture_multisample_array(_mesa_glsl_parse_state const*)
0000000000385a20 000000000000006c t derivative_control(_mesa_glsl_parse_state const*)
0000000000385a90 0000000000000064 t fs_interpolate_at(_mesa_glsl_parse_state const*)
0000000000385b00 0000000000000020 t shader_integer_functions2_int64(_mesa_glsl_parse_state const*)
0000000000385b20 00000000000000d4 t (anonymous namespace)::builtin_builder::add_function(char const*, ...) [clone .constprop.0]
0000000000385c00 000000000000004c t fp64(_mesa_glsl_parse_state const*)
0000000000385c50 0000000000000044 t compute_shader_supported(_mesa_glsl_parse_state const*)
0000000000385ca0 0000000000000044 t shader_atomic_counters(_mesa_glsl_parse_state const*)
0000000000385cf0 0000000000000074 t derivatives(_mesa_glsl_parse_state const*)
0000000000385d70 0000000000000044 t shader_bit_encoding(_mesa_glsl_parse_state const*)
0000000000385dc0 0000000000000050 t shader_packing_or_es3_or_gpu_shader5(_mesa_glsl_parse_state const*)
0000000000385e10 0000000000000044 t shader_packing_or_es3(_mesa_glsl_parse_state const*)
0000000000385e60 0000000000000050 t shader_packing_or_es31_or_gpu_shader5(_mesa_glsl_parse_state const*)
0000000000385eb0 0000000000000044 t texture_buffer(_mesa_glsl_parse_state const*)
0000000000385f00 0000000000000038 t texture_external_es3(_mesa_glsl_parse_state const*)
0000000000385f40 0000000000000044 t texture_gather_or_es31(_mesa_glsl_parse_state const*)
0000000000385f90 0000000000000058 t texture_gather_cube_map_array(_mesa_glsl_parse_state const*)
0000000000385ff0 0000000000000050 t gpu_shader5_es(_mesa_glsl_parse_state const*)
0000000000386040 0000000000000050 t shader_image_atomic(_mesa_glsl_parse_state const*)
0000000000386090 000000000000004c t shader_atomic_counter_ops_or_v460_desktop(_mesa_glsl_parse_state const*)
00000000003860e0 000000000000002c t texture_array(_mesa_glsl_parse_state const*)
0000000000386110 0000000000000008 t shader_atomic_float_add(_mesa_glsl_parse_state const*)
0000000000386120 000000000000005c t buffer_atomics_supported(_mesa_glsl_parse_state const*)
0000000000386180 0000000000000050 t texture_array_derivs_only(_mesa_glsl_parse_state const*)
00000000003861d0 0000000000000028 t tex3d(_mesa_glsl_parse_state const*)
0000000000386200 0000000000000060 t int64_fp64(_mesa_glsl_parse_state const*)
0000000000386260 0000000000000050 t gpu_shader5_or_OES_texture_cube_map_array(_mesa_glsl_parse_state const*)
00000000003862b0 000000000000004c t vote_or_v460_desktop(_mesa_glsl_parse_state const*)
0000000000386300 000000000000004c t texture_cube_map_array(_mesa_glsl_parse_state const*)
0000000000386350 0000000000000070 t derivatives_texture_cube_map_array(_mesa_glsl_parse_state const*)
00000000003863c0 000000000000003c t texture_samples_identical(_mesa_glsl_parse_state const*)
0000000000386400 0000000000000044 t gpu_shader5_or_es31_or_integer_functions(_mesa_glsl_parse_state const*)
0000000000386450 000000000000004c t texture_samples_identical_array(_mesa_glsl_parse_state const*)
00000000003864a0 0000000000000060 t gs_streams(_mesa_glsl_parse_state const*)
0000000000386500 0000000000000030 t gpu_shader4_derivs_only(_mesa_glsl_parse_state const*)
0000000000386530 000000000000003c t v110_derivatives_only(_mesa_glsl_parse_state const*)
0000000000386570 000000000000003c t v130_or_gpu_shader4_and_tex_shadow_lod(_mesa_glsl_parse_state const*)
00000000003865b0 0000000000000048 t gpu_shader4_integer_derivs_only(_mesa_glsl_parse_state const*)
0000000000386600 0000000000000048 t gpu_shader4_array_derivs_only(_mesa_glsl_parse_state const*)
0000000000386650 0000000000000058 t v130_derivatives_only(_mesa_glsl_parse_state const*)
00000000003866b0 000000000000006c t v400_derivatives_only(_mesa_glsl_parse_state const*)
0000000000386720 0000000000000054 t gpu_shader4_array_integer_derivs_only(_mesa_glsl_parse_state const*)
0000000000386780 0000000000000060 t es31_not_gs5(_mesa_glsl_parse_state const*)
00000000003867e0 0000000000000090 t v130_or_gpu_shader4_and_tex_cube_map_array(_mesa_glsl_parse_state const*)
0000000000386870 0000000000000088 t texture_array_lod(_mesa_glsl_parse_state const*)
0000000000386900 000000000000006c t tex3d_lod(_mesa_glsl_parse_state const*)
0000000000386970 000000000000005c t v110_lod(_mesa_glsl_parse_state const*)
00000000003869d0 000000000000005c t tex1d_lod(_mesa_glsl_parse_state const*)
0000000000386a30 00000000000000e4 t (anonymous namespace)::builtin_builder::_EndStreamPrimitive(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000386b20 00000000000000e4 t (anonymous namespace)::builtin_builder::_EmitStreamVertex(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000386c10 000000000000007c t (anonymous namespace)::builtin_builder::_image_samples_prototype(glsl_type const*, unsigned int, unsigned int)
0000000000386c90 00000000000000a4 t (anonymous namespace)::builtin_builder::_atomic_intrinsic2(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, ir_intrinsic_id) [clone .constprop.0]
0000000000386d40 00000000000000b0 t (anonymous namespace)::builtin_builder::_read_invocation_intrinsic(glsl_type const*) [clone .constprop.0]
0000000000386df0 00000000000001dc t (anonymous namespace)::builtin_builder::call(ir_function*, ir_variable*, exec_list) [clone .constprop.0] [clone .isra.0]
0000000000386fd0 0000000000000400 t (anonymous namespace)::builtin_builder::add_image_function(char const*, char const*, ir_function_signature* ((anonymous namespace)::builtin_builder::*)(glsl_type const*, unsigned int, unsigned int), unsigned int, unsigned int, ir_intrinsic_id) [clone .constprop.0]
00000000003873d0 000000000000046c t (anonymous namespace)::builtin_builder::add_image_functions(bool) [clone .constprop.0]
0000000000387840 0000000000000090 t (anonymous namespace)::builtin_builder::_memory_barrier(char const*, bool (*)(_mesa_glsl_parse_state const*)) [clone .constprop.0]
00000000003878d0 00000000000000b8 t (anonymous namespace)::builtin_builder::_atomic_counter_intrinsic1(bool (*)(_mesa_glsl_parse_state const*), ir_intrinsic_id) [clone .constprop.0]
0000000000387990 00000000000000b0 t (anonymous namespace)::builtin_builder::_image_size_prototype(glsl_type const*, unsigned int, unsigned int)
0000000000387a40 00000000000000cc t (anonymous namespace)::builtin_builder::_atomic_intrinsic3(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, ir_intrinsic_id) [clone .constprop.0]
0000000000387b10 00000000000000e0 t (anonymous namespace)::builtin_builder::_noise2(glsl_type const*) [clone .constprop.0]
0000000000387bf0 00000000000000e0 t (anonymous namespace)::builtin_builder::_noise1(glsl_type const*) [clone .constprop.0]
0000000000387cd0 00000000000000e0 t (anonymous namespace)::builtin_builder::_noise4(glsl_type const*) [clone .constprop.0]
0000000000387db0 00000000000000e0 t (anonymous namespace)::builtin_builder::_noise3(glsl_type const*) [clone .constprop.0]
0000000000387e90 00000000000000d4 t (anonymous namespace)::builtin_builder::unop(bool (*)(_mesa_glsl_parse_state const*), ir_expression_operation, glsl_type const*, glsl_type const*) [clone .constprop.0]
0000000000387f70 00000000000000cc t (anonymous namespace)::builtin_builder::_interpolateAtCentroid(glsl_type const*) [clone .constprop.0]
0000000000388040 00000000000000c8 t (anonymous namespace)::builtin_builder::_doubleBitsToUint64(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000388110 00000000000000c8 t (anonymous namespace)::builtin_builder::_uint64BitsToDouble(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
00000000003881e0 00000000000000c8 t (anonymous namespace)::builtin_builder::_uintBitsToFloat(glsl_type const*) [clone .constprop.0]
00000000003882b0 00000000000000c8 t (anonymous namespace)::builtin_builder::_int64BitsToDouble(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000388380 00000000000000c8 t (anonymous namespace)::builtin_builder::_floatBitsToUint(glsl_type const*) [clone .constprop.0]
0000000000388450 00000000000000c8 t (anonymous namespace)::builtin_builder::_doubleBitsToInt64(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000388520 00000000000000c8 t (anonymous namespace)::builtin_builder::_intBitsToFloat(glsl_type const*) [clone .constprop.0]
00000000003885f0 00000000000000c8 t (anonymous namespace)::builtin_builder::_floatBitsToInt(glsl_type const*) [clone .constprop.0]
00000000003886c0 00000000000000e8 t (anonymous namespace)::builtin_builder::_degrees(glsl_type const*) [clone .constprop.0]
00000000003887b0 00000000000000e8 t (anonymous namespace)::builtin_builder::_radians(glsl_type const*) [clone .constprop.0]
00000000003888a0 000000000000011c t (anonymous namespace)::builtin_builder::_textureQueryLevels(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
00000000003889c0 00000000000000f4 t (anonymous namespace)::builtin_builder::_all(glsl_type const*) [clone .constprop.0]
0000000000388ac0 000000000000011c t (anonymous namespace)::builtin_builder::_textureSamples(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000388be0 00000000000000f4 t (anonymous namespace)::builtin_builder::_any(glsl_type const*) [clone .constprop.0]
0000000000388ce0 0000000000000138 t (anonymous namespace)::builtin_builder::_shader_clock(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000388e20 00000000000000e8 t (anonymous namespace)::builtin_builder::_isnan(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000388f10 0000000000000078 t (anonymous namespace)::builtin_builder::matrix_elt(ir_variable*, int, int) [clone .constprop.0]
0000000000388f90 000000000000010c t (anonymous namespace)::builtin_builder::_read_first_invocation(glsl_type const*) [clone .constprop.0]
00000000003890a0 000000000000011c t (anonymous namespace)::builtin_builder::_vote(char const*, bool (*)(_mesa_glsl_parse_state const*)) [clone .constprop.0]
00000000003891c0 00000000000000ec t (anonymous namespace)::builtin_builder::_length(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
00000000003892b0 0000000000000120 t (anonymous namespace)::builtin_builder::_atomic_counter_op(char const*, bool (*)(_mesa_glsl_parse_state const*)) [clone .constprop.0]
00000000003893d0 00000000000000f4 t (anonymous namespace)::builtin_builder::_tan(glsl_type const*) [clone .constprop.0]
00000000003894d0 0000000000000254 t (anonymous namespace)::builtin_builder::asin_expr(ir_variable*, float, float) [clone .constprop.0]
0000000000389730 00000000000000ec t (anonymous namespace)::builtin_builder::_acos(glsl_type const*) [clone .constprop.0]
0000000000389820 00000000000000bc t (anonymous namespace)::builtin_builder::_asin(glsl_type const*) [clone .constprop.0]
00000000003898e0 0000000000000100 t (anonymous namespace)::builtin_builder::_countTrailingZeros(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
00000000003899e0 0000000000000120 t (anonymous namespace)::builtin_builder::_interpolateAtSample(glsl_type const*) [clone .constprop.0]
0000000000389b00 0000000000000120 t (anonymous namespace)::builtin_builder::_interpolateAtOffset(glsl_type const*) [clone .constprop.0]
0000000000389c20 0000000000000140 t (anonymous namespace)::builtin_builder::_atomic_op2(char const*, bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000389d60 0000000000000148 t (anonymous namespace)::builtin_builder::_read_invocation(glsl_type const*) [clone .constprop.0]
0000000000389eb0 0000000000000104 t (anonymous namespace)::builtin_builder::_fwidthFine(glsl_type const*) [clone .constprop.0]
0000000000389fc0 0000000000000104 t (anonymous namespace)::builtin_builder::_fwidthCoarse(glsl_type const*) [clone .constprop.0]
000000000038a0d0 0000000000000104 t (anonymous namespace)::builtin_builder::_fwidth(glsl_type const*) [clone .constprop.0]
000000000038a1e0 0000000000000118 t (anonymous namespace)::builtin_builder::_determinant_mat2(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000038a300 0000000000000160 t (anonymous namespace)::builtin_builder::_textureSamplesIdentical(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, glsl_type const*) [clone .constprop.0]
000000000038a460 0000000000000160 t (anonymous namespace)::builtin_builder::_textureQueryLod(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, glsl_type const*) [clone .constprop.0]
000000000038a5c0 0000000000000164 t (anonymous namespace)::builtin_builder::_isinf(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000038a730 0000000000000120 t (anonymous namespace)::builtin_builder::_sinh(glsl_type const*) [clone .constprop.0]
000000000038a850 0000000000000168 t (anonymous namespace)::builtin_builder::_atomic_op3(char const*, bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000038a9c0 0000000000000120 t (anonymous namespace)::builtin_builder::_cosh(glsl_type const*) [clone .constprop.0]
000000000038aae0 0000000000000178 t (anonymous namespace)::builtin_builder::_atomic_counter_op2(char const*, bool (*)(_mesa_glsl_parse_state const*)) [clone .constprop.0]
000000000038ac60 0000000000000160 t (anonymous namespace)::builtin_builder::_mix_sel(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, glsl_type const*) [clone .constprop.0]
000000000038adc0 0000000000000158 t (anonymous namespace)::builtin_builder::_dfrexp(glsl_type const*, glsl_type const*) [clone .constprop.0]
000000000038af20 0000000000000168 t (anonymous namespace)::builtin_builder::_clamp(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, glsl_type const*) [clone .constprop.0]
000000000038b090 0000000000000168 t (anonymous namespace)::builtin_builder::_mix_lrp(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, glsl_type const*) [clone .constprop.0]
000000000038b200 000000000000015c t (anonymous namespace)::builtin_builder::_fma(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000038b360 0000000000000164 t (anonymous namespace)::builtin_builder::_max3(glsl_type const*) [clone .constprop.0]
000000000038b4d0 0000000000000164 t (anonymous namespace)::builtin_builder::_min3(glsl_type const*) [clone .constprop.0]
000000000038b640 0000000000000144 t (anonymous namespace)::builtin_builder::_acosh(glsl_type const*) [clone .constprop.0]
000000000038b790 000000000000015c t (anonymous namespace)::builtin_builder::_normalize(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000038b8f0 0000000000000174 t (anonymous namespace)::builtin_builder::binop(bool (*)(_mesa_glsl_parse_state const*), ir_expression_operation, glsl_type const*, glsl_type const*, glsl_type const*, bool) [clone .constprop.0]
000000000038ba70 0000000000000090 t (anonymous namespace)::builtin_builder::_absoluteDifference(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000038bb00 000000000000006c t (anonymous namespace)::builtin_builder::_dot(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000038bb70 000000000000016c t (anonymous namespace)::builtin_builder::_atanh(glsl_type const*) [clone .constprop.0]
000000000038bce0 00000000000001ec t (anonymous namespace)::builtin_builder::_transpose(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000038bed0 0000000000000184 t (anonymous namespace)::builtin_builder::_asinh(glsl_type const*) [clone .constprop.0]
000000000038c060 00000000000001c0 t (anonymous namespace)::builtin_builder::_uaddCarry(glsl_type const*) [clone .constprop.0]
000000000038c220 00000000000001c0 t (anonymous namespace)::builtin_builder::_usubBorrow(glsl_type const*) [clone .constprop.0]
000000000038c3e0 00000000000001ac t (anonymous namespace)::builtin_builder::_cross(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000038c590 00000000000001b0 t (anonymous namespace)::builtin_builder::_reflect(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000038c740 0000000000000204 t (anonymous namespace)::builtin_builder::_matrixCompMult(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000038c950 00000000000001dc t (anonymous namespace)::builtin_builder::_modf(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000038cb30 00000000000001e8 t (anonymous namespace)::builtin_builder::_faceforward(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000038cd20 00000000000001f0 t (anonymous namespace)::builtin_builder::_bitfieldExtract(glsl_type const*) [clone .constprop.0]
000000000038cf10 00000000000001e4 t (anonymous namespace)::builtin_builder::_mid3(glsl_type const*) [clone .constprop.0]
000000000038d100 0000000000000234 t (anonymous namespace)::builtin_builder::_bitfieldInsert(glsl_type const*) [clone .constprop.0]
000000000038d340 0000000000000580 t (anonymous namespace)::builtin_builder::do_atan(ir_builder::ir_factory&, glsl_type const*, ir_variable*, ir_builder::operand) [clone .constprop.0]
000000000038d8c0 0000000000000110 t (anonymous namespace)::builtin_builder::_atan(glsl_type const*) [clone .constprop.0]
000000000038d9d0 0000000000000228 t (anonymous namespace)::builtin_builder::_distance(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000038dc00 0000000000000274 t (anonymous namespace)::builtin_builder::_atomic_counter_op1(char const*, bool (*)(_mesa_glsl_parse_state const*)) [clone .constprop.0]
000000000038de80 0000000000000234 t (anonymous namespace)::builtin_builder::_tanh(glsl_type const*) [clone .constprop.0]
000000000038e0c0 00000000000001d4 t (anonymous namespace)::builtin_builder::_textureSize(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, glsl_type const*) [clone .constprop.0]
000000000038e2a0 0000000000000274 t (anonymous namespace)::builtin_builder::_determinant_mat3(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000038e520 00000000000003a8 t (anonymous namespace)::builtin_builder::_smoothstep(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, glsl_type const*) [clone .constprop.0]
000000000038e8d0 0000000000000470 t (anonymous namespace)::builtin_builder::_mulExtended(glsl_type const*) [clone .constprop.0]
000000000038ed40 00000000000004c8 t (anonymous namespace)::builtin_builder::_refract(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000038f210 00000000000004e8 t (anonymous namespace)::builtin_builder::_frexp(glsl_type const*, glsl_type const*) [clone .constprop.0]
000000000038f700 000000000000023c t (anonymous namespace)::builtin_builder::_outerProduct(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000038f940 00000000000002f8 t (anonymous namespace)::builtin_builder::_inverse_mat2(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
000000000038fc40 0000000000000748 t (anonymous namespace)::builtin_builder::_atan2(glsl_type const*) [clone .constprop.0]
0000000000390390 0000000000000274 t (anonymous namespace)::builtin_builder::_image_prototype(glsl_type const*, unsigned int, unsigned int)
0000000000390610 000000000000025c t (anonymous namespace)::builtin_builder::_textureCubeArrayShadow(ir_texture_opcode, bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000390870 00000000000004fc t (anonymous namespace)::builtin_builder::_step(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, glsl_type const*) [clone .constprop.0]
0000000000390d70 0000000000000e28 t (anonymous namespace)::builtin_builder::create_intrinsics() [clone .constprop.0]
0000000000391ba0 000000000000031c t (anonymous namespace)::builtin_builder::_texelFetch(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, glsl_type const*, glsl_type const*, glsl_type const*) [clone .constprop.0]
0000000000391ec0 0000000000000a50 t (anonymous namespace)::builtin_builder::_inverse_mat3(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000392910 000000000000064c t (anonymous namespace)::builtin_builder::_texture(ir_texture_opcode, bool (*)(_mesa_glsl_parse_state const*), glsl_type const*, glsl_type const*, glsl_type const*, int) [clone .constprop.0]
0000000000392f60 0000000000001624 t (anonymous namespace)::builtin_builder::_determinant_mat4(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000394590 00000000000025dc t (anonymous namespace)::builtin_builder::_inverse_mat4(bool (*)(_mesa_glsl_parse_state const*), glsl_type const*) [clone .constprop.0]
0000000000396b70 0000000000016530 t _mesa_glsl_builtin_functions_init_or_ref
00000000003ad0a0 0000000000000078 t _mesa_glsl_builtin_functions_decref
00000000003ad120 00000000000000a4 t _mesa_glsl_find_builtin_function(_mesa_glsl_parse_state*, char const*, exec_list*)
00000000003ad1d0 0000000000000094 t _mesa_glsl_has_builtin_function(_mesa_glsl_parse_state*, char const*)
00000000003ad270 000000000000000c t _mesa_glsl_get_builtin_function_shader()
00000000003ad280 0000000000000064 t _mesa_get_main_function_signature(glsl_symbol_table*)
00000000003ad2f0 00000000000003cc t generate_ir::umul64(void*, bool (*)(_mesa_glsl_parse_state const*))
00000000003ad6c0 00000000000002b8 t generate_ir::sign64(void*, bool (*)(_mesa_glsl_parse_state const*))
00000000003ad980 0000000000001494 t generate_ir::udiv64(void*, bool (*)(_mesa_glsl_parse_state const*))
00000000003aee20 000000000000184c t generate_ir::idiv64(void*, bool (*)(_mesa_glsl_parse_state const*))
00000000003b0670 0000000000001570 t generate_ir::umod64(void*, bool (*)(_mesa_glsl_parse_state const*))
00000000003b1be0 0000000000001940 t generate_ir::imod64(void*, bool (*)(_mesa_glsl_parse_state const*))
00000000003b3520 0000000000000034 t has_AMD_conservative_depth(gl_context const*, gl_api, unsigned char)
00000000003b3560 0000000000000034 t has_AMD_gpu_shader_int64(gl_context const*, gl_api, unsigned char)
00000000003b35a0 0000000000000034 t has_AMD_shader_stencil_export(gl_context const*, gl_api, unsigned char)
00000000003b35e0 0000000000000034 t has_AMD_shader_trinary_minmax(gl_context const*, gl_api, unsigned char)
00000000003b3620 0000000000000034 t has_AMD_texture_texture4(gl_context const*, gl_api, unsigned char)
00000000003b3660 0000000000000034 t has_AMD_vertex_shader_layer(gl_context const*, gl_api, unsigned char)
00000000003b36a0 0000000000000034 t has_AMD_vertex_shader_viewport_index(gl_context const*, gl_api, unsigned char)
00000000003b36e0 0000000000000034 t has_ANDROID_extension_pack_es31a(gl_context const*, gl_api, unsigned char)
00000000003b3720 0000000000000034 t has_ARB_ES3_1_compatibility(gl_context const*, gl_api, unsigned char)
00000000003b3760 0000000000000034 t has_ARB_ES3_2_compatibility(gl_context const*, gl_api, unsigned char)
00000000003b37a0 0000000000000034 t has_ARB_arrays_of_arrays(gl_context const*, gl_api, unsigned char)
00000000003b37e0 0000000000000034 t has_ARB_bindless_texture(gl_context const*, gl_api, unsigned char)
00000000003b3820 0000000000000034 t has_ARB_compatibility(gl_context const*, gl_api, unsigned char)
00000000003b3860 0000000000000034 t has_ARB_compute_shader(gl_context const*, gl_api, unsigned char)
00000000003b38a0 0000000000000034 t has_ARB_compute_variable_group_size(gl_context const*, gl_api, unsigned char)
00000000003b38e0 0000000000000034 t has_ARB_conservative_depth(gl_context const*, gl_api, unsigned char)
00000000003b3920 0000000000000034 t has_ARB_cull_distance(gl_context const*, gl_api, unsigned char)
00000000003b3960 0000000000000034 t has_ARB_derivative_control(gl_context const*, gl_api, unsigned char)
00000000003b39a0 0000000000000034 t has_ARB_draw_buffers(gl_context const*, gl_api, unsigned char)
00000000003b39e0 0000000000000034 t has_ARB_draw_instanced(gl_context const*, gl_api, unsigned char)
00000000003b3a20 0000000000000034 t has_ARB_enhanced_layouts(gl_context const*, gl_api, unsigned char)
00000000003b3a60 0000000000000034 t has_ARB_explicit_attrib_location(gl_context const*, gl_api, unsigned char)
00000000003b3aa0 0000000000000034 t has_ARB_explicit_uniform_location(gl_context const*, gl_api, unsigned char)
00000000003b3ae0 0000000000000034 t has_ARB_fragment_coord_conventions(gl_context const*, gl_api, unsigned char)
00000000003b3b20 0000000000000034 t has_ARB_fragment_layer_viewport(gl_context const*, gl_api, unsigned char)
00000000003b3b60 0000000000000034 t has_ARB_fragment_shader_interlock(gl_context const*, gl_api, unsigned char)
00000000003b3ba0 0000000000000034 t has_ARB_gpu_shader5(gl_context const*, gl_api, unsigned char)
00000000003b3be0 0000000000000034 t has_ARB_gpu_shader_fp64(gl_context const*, gl_api, unsigned char)
00000000003b3c20 0000000000000034 t has_ARB_gpu_shader_int64(gl_context const*, gl_api, unsigned char)
00000000003b3c60 0000000000000034 t has_ARB_post_depth_coverage(gl_context const*, gl_api, unsigned char)
00000000003b3ca0 0000000000000034 t has_ARB_sample_shading(gl_context const*, gl_api, unsigned char)
00000000003b3ce0 0000000000000034 t has_ARB_separate_shader_objects(gl_context const*, gl_api, unsigned char)
00000000003b3d20 0000000000000034 t has_ARB_shader_atomic_counter_ops(gl_context const*, gl_api, unsigned char)
00000000003b3d60 0000000000000034 t has_ARB_shader_atomic_counters(gl_context const*, gl_api, unsigned char)
00000000003b3da0 0000000000000034 t has_ARB_shader_ballot(gl_context const*, gl_api, unsigned char)
00000000003b3de0 0000000000000034 t has_ARB_shader_bit_encoding(gl_context const*, gl_api, unsigned char)
00000000003b3e20 0000000000000034 t has_ARB_shader_clock(gl_context const*, gl_api, unsigned char)
00000000003b3e60 0000000000000034 t has_ARB_shader_draw_parameters(gl_context const*, gl_api, unsigned char)
00000000003b3ea0 0000000000000034 t has_ARB_shader_group_vote(gl_context const*, gl_api, unsigned char)
00000000003b3ee0 0000000000000034 t has_ARB_shader_image_load_store(gl_context const*, gl_api, unsigned char)
00000000003b3f20 0000000000000034 t has_ARB_shader_image_size(gl_context const*, gl_api, unsigned char)
00000000003b3f60 0000000000000034 t has_ARB_shader_precision(gl_context const*, gl_api, unsigned char)
00000000003b3fa0 0000000000000034 t has_ARB_shader_stencil_export(gl_context const*, gl_api, unsigned char)
00000000003b3fe0 0000000000000034 t has_ARB_shader_storage_buffer_object(gl_context const*, gl_api, unsigned char)
00000000003b4020 0000000000000034 t has_ARB_shader_subroutine(gl_context const*, gl_api, unsigned char)
00000000003b4060 0000000000000034 t has_ARB_shader_texture_image_samples(gl_context const*, gl_api, unsigned char)
00000000003b40a0 0000000000000034 t has_ARB_shader_texture_lod(gl_context const*, gl_api, unsigned char)
00000000003b40e0 0000000000000034 t has_ARB_shader_viewport_layer_array(gl_context const*, gl_api, unsigned char)
00000000003b4120 0000000000000034 t has_ARB_shading_language_420pack(gl_context const*, gl_api, unsigned char)
00000000003b4160 0000000000000034 t has_ARB_shading_language_include(gl_context const*, gl_api, unsigned char)
00000000003b41a0 0000000000000034 t has_ARB_shading_language_packing(gl_context const*, gl_api, unsigned char)
00000000003b41e0 0000000000000034 t has_ARB_tessellation_shader(gl_context const*, gl_api, unsigned char)
00000000003b4220 0000000000000034 t has_ARB_texture_cube_map_array(gl_context const*, gl_api, unsigned char)
00000000003b4260 0000000000000034 t has_ARB_texture_gather(gl_context const*, gl_api, unsigned char)
00000000003b42a0 0000000000000034 t has_ARB_texture_multisample(gl_context const*, gl_api, unsigned char)
00000000003b42e0 0000000000000034 t has_ARB_texture_query_levels(gl_context const*, gl_api, unsigned char)
00000000003b4320 0000000000000034 t has_ARB_texture_query_lod(gl_context const*, gl_api, unsigned char)
00000000003b4360 0000000000000034 t has_ARB_texture_rectangle(gl_context const*, gl_api, unsigned char)
00000000003b43a0 0000000000000038 t has_ARB_uniform_buffer_object(gl_context const*, gl_api, unsigned char)
00000000003b43e0 0000000000000038 t has_ARB_vertex_attrib_64bit(gl_context const*, gl_api, unsigned char)
00000000003b4420 0000000000000038 t has_ARB_viewport_array(gl_context const*, gl_api, unsigned char)
00000000003b4460 0000000000000038 t has_EXT_blend_func_extended(gl_context const*, gl_api, unsigned char)
00000000003b44a0 0000000000000038 t has_EXT_clip_cull_distance(gl_context const*, gl_api, unsigned char)
00000000003b44e0 0000000000000038 t has_EXT_demote_to_helper_invocation(gl_context const*, gl_api, unsigned char)
00000000003b4520 0000000000000038 t has_EXT_draw_buffers(gl_context const*, gl_api, unsigned char)
00000000003b4560 0000000000000038 t has_EXT_draw_instanced(gl_context const*, gl_api, unsigned char)
00000000003b45a0 0000000000000038 t has_EXT_frag_depth(gl_context const*, gl_api, unsigned char)
00000000003b45e0 0000000000000038 t has_EXT_geometry_point_size(gl_context const*, gl_api, unsigned char)
00000000003b4620 0000000000000038 t has_EXT_geometry_shader(gl_context const*, gl_api, unsigned char)
00000000003b4660 0000000000000038 t has_EXT_gpu_shader4(gl_context const*, gl_api, unsigned char)
00000000003b46a0 0000000000000038 t has_EXT_gpu_shader5(gl_context const*, gl_api, unsigned char)
00000000003b46e0 0000000000000038 t has_EXT_primitive_bounding_box(gl_context const*, gl_api, unsigned char)
00000000003b4720 0000000000000038 t has_EXT_separate_shader_objects(gl_context const*, gl_api, unsigned char)
00000000003b4760 0000000000000038 t has_EXT_shader_framebuffer_fetch(gl_context const*, gl_api, unsigned char)
00000000003b47a0 0000000000000038 t has_EXT_shader_framebuffer_fetch_non_coherent(gl_context const*, gl_api, unsigned char)
00000000003b47e0 0000000000000038 t has_EXT_shader_image_load_formatted(gl_context const*, gl_api, unsigned char)
00000000003b4820 0000000000000038 t has_EXT_shader_image_load_store(gl_context const*, gl_api, unsigned char)
00000000003b4860 0000000000000038 t has_EXT_shader_implicit_conversions(gl_context const*, gl_api, unsigned char)
00000000003b48a0 0000000000000038 t has_EXT_shader_integer_mix(gl_context const*, gl_api, unsigned char)
00000000003b48e0 0000000000000038 t has_EXT_shader_io_blocks(gl_context const*, gl_api, unsigned char)
00000000003b4920 0000000000000038 t has_EXT_shader_samples_identical(gl_context const*, gl_api, unsigned char)
00000000003b4960 0000000000000038 t has_EXT_tessellation_point_size(gl_context const*, gl_api, unsigned char)
00000000003b49a0 0000000000000038 t has_EXT_tessellation_shader(gl_context const*, gl_api, unsigned char)
00000000003b49e0 0000000000000038 t has_EXT_texture_array(gl_context const*, gl_api, unsigned char)
00000000003b4a20 0000000000000038 t has_EXT_texture_buffer(gl_context const*, gl_api, unsigned char)
00000000003b4a60 0000000000000038 t has_EXT_texture_cube_map_array(gl_context const*, gl_api, unsigned char)
00000000003b4aa0 0000000000000038 t has_EXT_texture_query_lod(gl_context const*, gl_api, unsigned char)
00000000003b4ae0 0000000000000038 t has_EXT_texture_shadow_lod(gl_context const*, gl_api, unsigned char)
00000000003b4b20 0000000000000038 t has_INTEL_conservative_rasterization(gl_context const*, gl_api, unsigned char)
00000000003b4b60 0000000000000038 t has_INTEL_shader_atomic_float_minmax(gl_context const*, gl_api, unsigned char)
00000000003b4ba0 0000000000000038 t has_INTEL_shader_integer_functions2(gl_context const*, gl_api, unsigned char)
00000000003b4be0 0000000000000038 t has_KHR_blend_equation_advanced(gl_context const*, gl_api, unsigned char)
00000000003b4c20 0000000000000038 t has_MESA_shader_integer_functions(gl_context const*, gl_api, unsigned char)
00000000003b4c60 0000000000000038 t has_NV_compute_shader_derivatives(gl_context const*, gl_api, unsigned char)
00000000003b4ca0 0000000000000038 t has_NV_fragment_shader_interlock(gl_context const*, gl_api, unsigned char)
00000000003b4ce0 0000000000000038 t has_NV_image_formats(gl_context const*, gl_api, unsigned char)
00000000003b4d20 0000000000000038 t has_NV_shader_atomic_float(gl_context const*, gl_api, unsigned char)
00000000003b4d60 0000000000000038 t has_NV_viewport_array2(gl_context const*, gl_api, unsigned char)
00000000003b4da0 0000000000000038 t has_OES_EGL_image_external(gl_context const*, gl_api, unsigned char)
00000000003b4de0 0000000000000038 t has_OES_EGL_image_external_essl3(gl_context const*, gl_api, unsigned char)
00000000003b4e20 0000000000000038 t has_OES_geometry_point_size(gl_context const*, gl_api, unsigned char)
00000000003b4e60 0000000000000038 t has_OES_geometry_shader(gl_context const*, gl_api, unsigned char)
00000000003b4ea0 0000000000000038 t has_OES_gpu_shader5(gl_context const*, gl_api, unsigned char)
00000000003b4ee0 0000000000000038 t has_OES_primitive_bounding_box(gl_context const*, gl_api, unsigned char)
00000000003b4f20 0000000000000038 t has_OES_sample_variables(gl_context const*, gl_api, unsigned char)
00000000003b4f60 0000000000000038 t has_OES_shader_image_atomic(gl_context const*, gl_api, unsigned char)
00000000003b4fa0 0000000000000038 t has_OES_shader_io_blocks(gl_context const*, gl_api, unsigned char)
00000000003b4fe0 0000000000000038 t has_OES_shader_multisample_interpolation(gl_context const*, gl_api, unsigned char)
00000000003b5020 0000000000000038 t has_OES_standard_derivatives(gl_context const*, gl_api, unsigned char)
00000000003b5060 0000000000000038 t has_OES_tessellation_point_size(gl_context const*, gl_api, unsigned char)
00000000003b50a0 0000000000000038 t has_OES_tessellation_shader(gl_context const*, gl_api, unsigned char)
00000000003b50e0 0000000000000038 t has_OES_texture_3D(gl_context const*, gl_api, unsigned char)
00000000003b5120 0000000000000038 t has_OES_texture_buffer(gl_context const*, gl_api, unsigned char)
00000000003b5160 0000000000000038 t has_OES_texture_cube_map_array(gl_context const*, gl_api, unsigned char)
00000000003b51a0 0000000000000038 t has_OES_texture_storage_multisample_2d_array(gl_context const*, gl_api, unsigned char)
00000000003b51e0 0000000000000038 t has_OES_viewport_array(gl_context const*, gl_api, unsigned char)
00000000003b5220 000000000000003c T ast_function_definition::print() const
00000000003b5260 0000000000000050 T ast_case_statement_list::print() const
00000000003b52b0 0000000000000108 t add_builtin_defines
00000000003b53c0 00000000000000f4 t _mesa_glsl_msg(YYLTYPE const*, _mesa_glsl_parse_state*, unsigned int, char const*, std::__va_list)
00000000003b54c0 000000000000000c T ast_node::print() const
00000000003b54d0 0000000000000038 T ast_expression_statement::print() const
00000000003b5510 000000000000000c T ast_demote_statement::print() const
00000000003b5520 0000000000000084 T ast_selection_statement::print() const
00000000003b55b0 0000000000000054 T ast_switch_statement::print() const
00000000003b5610 000000000000005c T ast_case_label::print() const
00000000003b5670 0000000000000120 T ast_iteration_statement::print() const
00000000003b5790 0000000000000068 T ast_struct_specifier::print() const
00000000003b5800 0000000000000088 T ast_subroutine_list::print() const
00000000003b5890 0000000000000068 T ast_compound_statement::print() const
00000000003b5900 0000000000000044 T ast_switch_body::print() const
00000000003b5950 0000000000000054 T ast_case_label_list::print() const
00000000003b59b0 0000000000000068 T ast_case_statement::print() const
00000000003b5a20 000000000000020c t _mesa_ast_type_qualifier_print(ast_type_qualifier const*)
00000000003b5c30 0000000000000034 T ast_fully_specified_type::print() const
00000000003b5c70 0000000000000070 T ast_declaration::print() const
00000000003b5ce0 00000000000000a8 T ast_jump_statement::print() const
00000000003b5d90 0000000000000090 T ast_parameter_declarator::print() const
00000000003b5e20 00000000000000a8 T ast_function::print() const
00000000003b5ed0 00000000000000fc T ast_declarator_list::print() const
00000000003b5fd0 0000000000000040 t glsl_compute_version_string(void*, bool, unsigned int)
00000000003b6010 0000000000000080 t _mesa_glsl_error(YYLTYPE*, _mesa_glsl_parse_state*, char const*, ...)
00000000003b6090 0000000000000230 t _mesa_glsl_parse_state::check_version(unsigned int, unsigned int, YYLTYPE*, char const*, ...)
00000000003b62c0 0000000000000340 t _mesa_glsl_parse_state::process_version_directive(YYLTYPE*, int, char const*)
00000000003b6600 0000000000000080 t _mesa_glsl_warning(YYLTYPE const*, _mesa_glsl_parse_state*, char const*, ...)
00000000003b6680 0000000000000300 t _mesa_glsl_process_extension(char const*, YYLTYPE*, char const*, YYLTYPE*, _mesa_glsl_parse_state*)
00000000003b6980 0000000000000780 t _mesa_glsl_parse_state::_mesa_glsl_parse_state(gl_context*, gl_shader_stage, void*)
00000000003b6980 0000000000000780 T _mesa_glsl_parse_state::_mesa_glsl_parse_state(gl_context*, gl_shader_stage, void*)
00000000003b7100 000000000000019c t _mesa_ast_set_aggregate_type(glsl_type const*, ast_expression*)
00000000003b72a0 000000000000043c t _mesa_ast_process_interface_block(YYLTYPE*, _mesa_glsl_parse_state*, ast_interface_block*, ast_type_qualifier const&)
00000000003b76e0 000000000000001c T ast_node::ast_node()
00000000003b76e0 000000000000001c t ast_node::ast_node()
00000000003b7700 0000000000000050 t ast_compound_statement::ast_compound_statement(int, ast_node*)
00000000003b7700 0000000000000050 T ast_compound_statement::ast_compound_statement(int, ast_node*)
00000000003b7750 0000000000000498 T ast_expression::print() const
00000000003b7bf0 0000000000000048 t ast_expression::ast_expression(int, ast_expression*, ast_expression*, ast_expression*)
00000000003b7bf0 0000000000000048 t ast_expression::ast_expression(int, ast_expression*, ast_expression*, ast_expression*)
00000000003b7c40 0000000000000020 t ast_expression_statement::ast_expression_statement(ast_expression*)
00000000003b7c40 0000000000000020 T ast_expression_statement::ast_expression_statement(ast_expression*)
00000000003b7c60 000000000000003c t ast_function::ast_function()
00000000003b7c60 000000000000003c T ast_function::ast_function()
00000000003b7ca0 0000000000000024 t ast_declaration::ast_declaration(char const*, ast_array_specifier*, ast_expression*)
00000000003b7ca0 0000000000000024 T ast_declaration::ast_declaration(char const*, ast_array_specifier*, ast_expression*)
00000000003b7cd0 0000000000000038 t ast_declarator_list::ast_declarator_list(ast_fully_specified_type*)
00000000003b7cd0 0000000000000038 T ast_declarator_list::ast_declarator_list(ast_fully_specified_type*)
00000000003b7d10 000000000000002c t ast_jump_statement::ast_jump_statement(int, ast_expression*)
00000000003b7d10 000000000000002c T ast_jump_statement::ast_jump_statement(int, ast_expression*)
00000000003b7d40 0000000000000024 t ast_selection_statement::ast_selection_statement(ast_expression*, ast_node*, ast_node*)
00000000003b7d40 0000000000000024 T ast_selection_statement::ast_selection_statement(ast_expression*, ast_node*, ast_node*)
00000000003b7d70 0000000000000020 t ast_switch_statement::ast_switch_statement(ast_expression*, ast_node*)
00000000003b7d70 0000000000000020 T ast_switch_statement::ast_switch_statement(ast_expression*, ast_node*)
00000000003b7d90 0000000000000020 t ast_switch_body::ast_switch_body(ast_case_statement_list*)
00000000003b7d90 0000000000000020 T ast_switch_body::ast_switch_body(ast_case_statement_list*)
00000000003b7db0 0000000000000020 t ast_case_label::ast_case_label(ast_expression*)
00000000003b7db0 0000000000000020 T ast_case_label::ast_case_label(ast_expression*)
00000000003b7dd0 0000000000000030 t ast_case_label_list::ast_case_label_list()
00000000003b7dd0 0000000000000030 T ast_case_label_list::ast_case_label_list()
00000000003b7e00 0000000000000034 t ast_case_statement::ast_case_statement(ast_case_label_list*)
00000000003b7e00 0000000000000034 T ast_case_statement::ast_case_statement(ast_case_label_list*)
00000000003b7e40 0000000000000030 t ast_case_statement_list::ast_case_statement_list()
00000000003b7e40 0000000000000030 T ast_case_statement_list::ast_case_statement_list()
00000000003b7e70 0000000000000028 t ast_iteration_statement::ast_iteration_statement(int, ast_node*, ast_node*, ast_expression*, ast_node*)
00000000003b7e70 0000000000000028 T ast_iteration_statement::ast_iteration_statement(int, ast_node*, ast_node*, ast_expression*, ast_node*)
00000000003b7ea0 0000000000000058 t ast_struct_specifier::ast_struct_specifier(char const*, ast_declarator_list*)
00000000003b7ea0 0000000000000058 T ast_struct_specifier::ast_struct_specifier(char const*, ast_declarator_list*)
00000000003b7f00 00000000000000fc t _mesa_glsl_copy_symbols_from_table
00000000003b8000 000000000000048c t do_common_optimization(exec_list*, bool, bool, gl_shader_compiler_options const*, bool)
00000000003b8490 0000000000000a44 t _mesa_glsl_compile_shader
00000000003b8ee0 0000000000000044 t glsl_symbol_table::glsl_symbol_table()
00000000003b8ee0 0000000000000044 T glsl_symbol_table::glsl_symbol_table()
00000000003b8f30 0000000000000028 t glsl_symbol_table::~glsl_symbol_table()
00000000003b8f30 0000000000000028 T glsl_symbol_table::~glsl_symbol_table()
00000000003b8f60 0000000000000008 t glsl_symbol_table::push_scope()
00000000003b8f70 0000000000000008 t glsl_symbol_table::pop_scope()
00000000003b8f80 0000000000000020 t glsl_symbol_table::name_declared_this_scope(char const*)
00000000003b8fa0 0000000000000104 t glsl_symbol_table::add_variable(ir_variable*)
00000000003b90b0 0000000000000060 t glsl_symbol_table::add_type(char const*, glsl_type const*)
00000000003b9110 000000000000015c t glsl_symbol_table::add_interface(char const*, glsl_type const*, ir_variable_mode)
00000000003b9270 000000000000009c t glsl_symbol_table::add_function(ir_function*)
00000000003b9310 00000000000000e4 t glsl_symbol_table::add_default_precision_qualifier(char const*, int)
00000000003b9400 0000000000000020 t glsl_symbol_table::get_variable(char const*)
00000000003b9420 0000000000000020 t glsl_symbol_table::get_type(char const*)
00000000003b9440 0000000000000090 t glsl_symbol_table::get_interface(char const*, ir_variable_mode)
00000000003b94d0 0000000000000020 t glsl_symbol_table::get_function(char const*)
00000000003b94f0 000000000000005c t glsl_symbol_table::get_default_precision_qualifier(char const*)
00000000003b9550 0000000000000020 t glsl_symbol_table::disable_variable(char const*)
00000000003b9570 000000000000002c t glsl_symbol_table::replace_variable(char const*, ir_variable*)
00000000003b95a0 000000000000002c t ir_builder::ir_factory::emit(ir_instruction*)
00000000003b95d0 000000000000007c t ir_builder::ir_factory::make_temp(glsl_type const*, char const*)
00000000003b9650 0000000000000058 t ir_builder::assign(ir_builder::deref, ir_builder::operand, ir_builder::operand, int)
00000000003b96b0 0000000000000064 t ir_builder::assign(ir_builder::deref, ir_builder::operand)
00000000003b9720 0000000000000054 t ir_builder::assign(ir_builder::deref, ir_builder::operand, int)
00000000003b9780 0000000000000068 t ir_builder::assign(ir_builder::deref, ir_builder::operand, ir_builder::operand)
00000000003b97f0 0000000000000048 t ir_builder::ret(ir_builder::operand)
00000000003b9840 000000000000005c t ir_builder::swizzle(ir_builder::operand, int, int)
00000000003b98a0 00000000000000a0 t ir_builder::swizzle_for_size(ir_builder::operand, unsigned int)
00000000003b9940 000000000000004c t ir_builder::swizzle_xxxx(ir_builder::operand)
00000000003b9990 000000000000004c t ir_builder::swizzle_x(ir_builder::operand)
00000000003b99e0 000000000000004c t ir_builder::swizzle_y(ir_builder::operand)
00000000003b9a30 000000000000004c t ir_builder::swizzle_z(ir_builder::operand)
00000000003b9a80 000000000000004c t ir_builder::swizzle_w(ir_builder::operand)
00000000003b9ad0 000000000000004c t ir_builder::swizzle_xy(ir_builder::operand)
00000000003b9b20 000000000000004c t ir_builder::swizzle_xyz(ir_builder::operand)
00000000003b9b70 0000000000000044 t ir_builder::expr(ir_expression_operation, ir_builder::operand)
00000000003b9bc0 0000000000000054 t ir_builder::expr(ir_expression_operation, ir_builder::operand, ir_builder::operand)
00000000003b9c20 000000000000005c t ir_builder::expr(ir_expression_operation, ir_builder::operand, ir_builder::operand, ir_builder::operand)
00000000003b9c80 0000000000000044 t ir_builder::add(ir_builder::operand, ir_builder::operand)
00000000003b9cd0 0000000000000044 t ir_builder::sub(ir_builder::operand, ir_builder::operand)
00000000003b9d20 0000000000000044 t ir_builder::min2(ir_builder::operand, ir_builder::operand)
00000000003b9d70 0000000000000044 t ir_builder::max2(ir_builder::operand, ir_builder::operand)
00000000003b9dc0 0000000000000044 t ir_builder::mul(ir_builder::operand, ir_builder::operand)
00000000003b9e10 0000000000000044 t ir_builder::imul_high(ir_builder::operand, ir_builder::operand)
00000000003b9e60 0000000000000044 t ir_builder::div(ir_builder::operand, ir_builder::operand)
00000000003b9eb0 0000000000000044 t ir_builder::carry(ir_builder::operand, ir_builder::operand)
00000000003b9f00 0000000000000044 t ir_builder::borrow(ir_builder::operand, ir_builder::operand)
00000000003b9f50 000000000000003c t ir_builder::trunc(ir_builder::operand)
00000000003b9f90 000000000000003c t ir_builder::round_even(ir_builder::operand)
00000000003b9fd0 000000000000003c t ir_builder::fract(ir_builder::operand)
00000000003ba010 0000000000000084 t ir_builder::dot(ir_builder::operand, ir_builder::operand)
00000000003ba0a0 0000000000000074 t ir_builder::clamp(ir_builder::operand, ir_builder::operand, ir_builder::operand)
00000000003ba120 000000000000003c t ir_builder::saturate(ir_builder::operand)
00000000003ba160 000000000000003c t ir_builder::abs(ir_builder::operand)
00000000003ba1a0 000000000000003c t ir_builder::neg(ir_builder::operand)
00000000003ba1e0 000000000000003c t ir_builder::sin(ir_builder::operand)
00000000003ba220 000000000000003c t ir_builder::cos(ir_builder::operand)
00000000003ba260 000000000000003c t ir_builder::exp(ir_builder::operand)
00000000003ba2a0 000000000000003c t ir_builder::rcp(ir_builder::operand)
00000000003ba2e0 000000000000003c t ir_builder::rsq(ir_builder::operand)
00000000003ba320 000000000000003c t ir_builder::sqrt(ir_builder::operand)
00000000003ba360 000000000000003c t ir_builder::log(ir_builder::operand)
00000000003ba3a0 000000000000003c t ir_builder::sign(ir_builder::operand)
00000000003ba3e0 000000000000003c t ir_builder::subr_to_int(ir_builder::operand)
00000000003ba420 0000000000000044 t ir_builder::equal(ir_builder::operand, ir_builder::operand)
00000000003ba470 0000000000000044 t ir_builder::nequal(ir_builder::operand, ir_builder::operand)
00000000003ba4c0 0000000000000044 t ir_builder::less(ir_builder::operand, ir_builder::operand)
00000000003ba510 0000000000000048 t ir_builder::greater(ir_builder::operand, ir_builder::operand)
00000000003ba560 0000000000000048 t ir_builder::lequal(ir_builder::operand, ir_builder::operand)
00000000003ba5b0 0000000000000044 t ir_builder::gequal(ir_builder::operand, ir_builder::operand)
00000000003ba600 000000000000003c t ir_builder::logic_not(ir_builder::operand)
00000000003ba640 0000000000000044 t ir_builder::logic_and(ir_builder::operand, ir_builder::operand)
00000000003ba690 0000000000000044 t ir_builder::logic_or(ir_builder::operand, ir_builder::operand)
00000000003ba6e0 000000000000003c t ir_builder::bit_not(ir_builder::operand)
00000000003ba720 0000000000000044 t ir_builder::bit_and(ir_builder::operand, ir_builder::operand)
00000000003ba770 0000000000000044 t ir_builder::bit_or(ir_builder::operand, ir_builder::operand)
00000000003ba7c0 0000000000000044 t ir_builder::lshift(ir_builder::operand, ir_builder::operand)
00000000003ba810 0000000000000044 t ir_builder::rshift(ir_builder::operand, ir_builder::operand)
00000000003ba860 000000000000003c t ir_builder::f2i(ir_builder::operand)
00000000003ba8a0 000000000000003c t ir_builder::bitcast_f2i(ir_builder::operand)
00000000003ba8e0 000000000000003c t ir_builder::i2f(ir_builder::operand)
00000000003ba920 000000000000003c t ir_builder::bitcast_i2f(ir_builder::operand)
00000000003ba960 000000000000003c t ir_builder::i2u(ir_builder::operand)
00000000003ba9a0 000000000000003c t ir_builder::u2i(ir_builder::operand)
00000000003ba9e0 000000000000003c t ir_builder::f2u(ir_builder::operand)
00000000003baa20 000000000000003c t ir_builder::bitcast_f2u(ir_builder::operand)
00000000003baa60 000000000000003c t ir_builder::u2f(ir_builder::operand)
00000000003baaa0 000000000000003c t ir_builder::bitcast_u2f(ir_builder::operand)
00000000003baae0 000000000000003c t ir_builder::b2i(ir_builder::operand)
00000000003bab20 000000000000003c t ir_builder::b2f(ir_builder::operand)
00000000003bab60 000000000000003c t ir_builder::bitcast_d2i64(ir_builder::operand)
00000000003baba0 000000000000003c t ir_builder::bitcast_d2u64(ir_builder::operand)
00000000003babe0 000000000000003c t ir_builder::bitcast_i642d(ir_builder::operand)
00000000003bac20 000000000000003c t ir_builder::bitcast_u642d(ir_builder::operand)
00000000003bac60 000000000000003c t ir_builder::interpolate_at_centroid(ir_builder::operand)
00000000003baca0 0000000000000044 t ir_builder::interpolate_at_offset(ir_builder::operand, ir_builder::operand)
00000000003bacf0 0000000000000044 t ir_builder::interpolate_at_sample(ir_builder::operand, ir_builder::operand)
00000000003bad40 000000000000003c t ir_builder::f2d(ir_builder::operand)
00000000003bad80 0000000000000054 t ir_builder::fma(ir_builder::operand, ir_builder::operand, ir_builder::operand)
00000000003bade0 0000000000000054 t ir_builder::lrp(ir_builder::operand, ir_builder::operand, ir_builder::operand)
00000000003bae40 0000000000000054 t ir_builder::csel(ir_builder::operand, ir_builder::operand, ir_builder::operand)
00000000003baea0 0000000000000054 t ir_builder::bitfield_extract(ir_builder::operand, ir_builder::operand, ir_builder::operand)
00000000003baf00 0000000000000060 t ir_builder::bitfield_insert(ir_builder::operand, ir_builder::operand, ir_builder::operand, ir_builder::operand)
00000000003baf60 0000000000000088 t ir_builder::if_tree(ir_builder::operand, ir_instruction*)
00000000003baff0 00000000000000ac t ir_builder::if_tree(ir_builder::operand, ir_instruction*, ir_instruction*)
00000000003bb0a0 0000000000000004 W ir_visitor::visit(ir_rvalue*)
00000000003bb0b0 0000000000000004 W ir_control_flow_visitor::visit(ir_variable*)
00000000003bb0c0 0000000000000004 W ir_control_flow_visitor::visit(ir_texture*)
00000000003bb0d0 0000000000000004 W ir_control_flow_visitor::visit(ir_swizzle*)
00000000003bb0e0 0000000000000004 W ir_control_flow_visitor::visit(ir_dereference_variable*)
00000000003bb0f0 0000000000000004 W ir_control_flow_visitor::visit(ir_dereference_array*)
00000000003bb100 0000000000000004 W ir_control_flow_visitor::visit(ir_dereference_record*)
00000000003bb110 0000000000000004 W ir_control_flow_visitor::visit(ir_assignment*)
00000000003bb120 0000000000000004 W ir_control_flow_visitor::visit(ir_constant*)
00000000003bb130 0000000000000004 W ir_control_flow_visitor::visit(ir_call*)
00000000003bb140 0000000000000004 W ir_control_flow_visitor::visit(ir_demote*)
00000000003bb150 0000000000000008 W ir_rvalue::is_lvalue(_mesa_glsl_parse_state const*) const
00000000003bb160 0000000000000008 W ir_rvalue::variable_referenced() const
00000000003bb170 0000000000000008 W ir_rvalue::whole_variable_referenced()
00000000003bb180 0000000000000008 W ir_rvalue::is_uint16_constant() const
00000000003bb190 000000000000001c W ir_function_signature::accept(ir_visitor*)
00000000003bb1b0 000000000000001c W ir_function::accept(ir_visitor*)
00000000003bb1d0 000000000000001c W ir_if::accept(ir_visitor*)
00000000003bb1f0 000000000000001c W ir_loop::accept(ir_visitor*)
00000000003bb210 000000000000001c W ir_return::accept(ir_visitor*)
00000000003bb230 000000000000001c W ir_loop_jump::accept(ir_visitor*)
00000000003bb250 000000000000001c W ir_discard::accept(ir_visitor*)
00000000003bb270 0000000000000004 W ir_rvalue::~ir_rvalue()
00000000003bb270 0000000000000004 W ir_rvalue::~ir_rvalue()
00000000003bb280 0000000000000040 W ir_swizzle::is_lvalue(_mesa_glsl_parse_state const*) const
00000000003bb2c0 0000000000000008 W ir_dereference_variable::variable_referenced() const
00000000003bb2d0 0000000000000010 W ir_dereference_variable::precision() const
00000000003bb2e0 0000000000000008 W ir_dereference_variable::whole_variable_referenced()
00000000003bb2f0 0000000000000014 W ir_dereference_array::variable_referenced() const
00000000003bb310 0000000000000028 W ir_dereference_array::precision() const
00000000003bb340 0000000000000014 W ir_dereference_record::variable_referenced() const
00000000003bb360 0000000000000024 W ir_dereference_record::precision() const
00000000003bb390 0000000000000004 W ir_constant::~ir_constant()
00000000003bb390 0000000000000004 W ir_constant::~ir_constant()
00000000003bb3a0 0000000000000004 W ir_function_signature::~ir_function_signature()
00000000003bb3a0 0000000000000004 W ir_function_signature::~ir_function_signature()
00000000003bb3b0 0000000000000004 W ir_function::~ir_function()
00000000003bb3b0 0000000000000004 W ir_function::~ir_function()
00000000003bb3c0 0000000000000004 W ir_assignment::~ir_assignment()
00000000003bb3c0 0000000000000004 W ir_assignment::~ir_assignment()
00000000003bb3d0 0000000000000004 W ir_texture::~ir_texture()
00000000003bb3d0 0000000000000004 W ir_texture::~ir_texture()
00000000003bb3e0 0000000000000004 W ir_dereference_record::~ir_dereference_record()
00000000003bb3e0 0000000000000004 W ir_dereference_record::~ir_dereference_record()
00000000003bb3f0 0000000000000004 W ir_dereference_array::~ir_dereference_array()
00000000003bb3f0 0000000000000004 W ir_dereference_array::~ir_dereference_array()
00000000003bb400 0000000000000004 W ir_dereference_variable::~ir_dereference_variable()
00000000003bb400 0000000000000004 W ir_dereference_variable::~ir_dereference_variable()
00000000003bb410 0000000000000004 W ir_call::~ir_call()
00000000003bb410 0000000000000004 W ir_call::~ir_call()
00000000003bb420 0000000000000004 W ir_loop::~ir_loop()
00000000003bb420 0000000000000004 W ir_loop::~ir_loop()
00000000003bb430 0000000000000004 W ir_if::~ir_if()
00000000003bb430 0000000000000004 W ir_if::~ir_if()
00000000003bb440 0000000000000004 W ir_loop_jump::~ir_loop_jump()
00000000003bb440 0000000000000004 W ir_loop_jump::~ir_loop_jump()
00000000003bb450 0000000000000004 W ir_demote::~ir_demote()
00000000003bb450 0000000000000004 W ir_demote::~ir_demote()
00000000003bb460 0000000000000004 W ir_discard::~ir_discard()
00000000003bb460 0000000000000004 W ir_discard::~ir_discard()
00000000003bb470 0000000000000004 W ir_return::~ir_return()
00000000003bb470 0000000000000004 W ir_return::~ir_return()
00000000003bb480 0000000000000004 W ir_swizzle::~ir_swizzle()
00000000003bb480 0000000000000004 W ir_swizzle::~ir_swizzle()
00000000003bb490 0000000000000004 W ir_variable::~ir_variable()
00000000003bb490 0000000000000004 W ir_variable::~ir_variable()
00000000003bb4a0 0000000000000008 T ir_rvalue::clone(void*, hash_table*) const
00000000003bb4b0 0000000000000158 T ir_if::clone(void*, hash_table*) const
00000000003bb610 0000000000000060 T ir_return::clone(void*, hash_table*) const
00000000003bb670 0000000000000044 T ir_loop_jump::clone(void*, hash_table*) const
00000000003bb6c0 0000000000000060 T ir_discard::clone(void*, hash_table*) const
00000000003bb720 0000000000000034 T ir_demote::clone(void*, hash_table*) const
00000000003bb760 00000000000001c8 T ir_variable::clone(void*, hash_table*) const
00000000003bb930 0000000000000064 t ir_swizzle::clone(void*, hash_table*) const
00000000003bb9a0 00000000000000ac T ir_loop::clone(void*, hash_table*) const
00000000003bba50 0000000000000038 W fixup_ir_call_visitor::visit_enter(ir_call*)
00000000003bba90 0000000000000068 T ir_dereference_variable::clone(void*, hash_table*) const
00000000003bbb00 0000000000000080 T ir_dereference_array::clone(void*, hash_table*) const
00000000003bbb80 0000000000000074 T ir_dereference_record::clone(void*, hash_table*) const
00000000003bbc00 00000000000001e4 T ir_texture::clone(void*, hash_table*) const
00000000003bbdf0 00000000000000c0 T ir_assignment::clone(void*, hash_table*) const
00000000003bbeb0 000000000000010c T ir_function::clone(void*, hash_table*) const
00000000003bbfc0 0000000000000004 W ir_rvalue::~ir_rvalue()
00000000003bbfd0 0000000000000004 W ir_constant::~ir_constant()
00000000003bbfe0 0000000000000004 W ir_texture::~ir_texture()
00000000003bbff0 0000000000000004 W ir_swizzle::~ir_swizzle()
00000000003bc000 0000000000000004 W ir_function_signature::~ir_function_signature()
00000000003bc010 0000000000000004 W ir_function::~ir_function()
00000000003bc020 0000000000000004 W ir_assignment::~ir_assignment()
00000000003bc030 0000000000000004 W ir_call::~ir_call()
00000000003bc040 0000000000000004 W ir_loop::~ir_loop()
00000000003bc050 0000000000000004 W ir_if::~ir_if()
00000000003bc060 0000000000000004 W ir_demote::~ir_demote()
00000000003bc070 0000000000000004 W ir_variable::~ir_variable()
00000000003bc080 0000000000000004 W ir_loop_jump::~ir_loop_jump()
00000000003bc090 0000000000000004 W ir_discard::~ir_discard()
00000000003bc0a0 0000000000000004 W ir_return::~ir_return()
00000000003bc0b0 0000000000000004 W ir_dereference_record::~ir_dereference_record()
00000000003bc0c0 0000000000000004 W ir_dereference_array::~ir_dereference_array()
00000000003bc0d0 0000000000000004 W ir_dereference_variable::~ir_dereference_variable()
00000000003bc0e0 0000000000000118 T ir_constant::clone(void*, hash_table*) const
00000000003bc200 0000000000000030 W ir_constant::accept(ir_visitor*)
00000000003bc230 0000000000000030 W ir_rvalue::accept(ir_visitor*)
00000000003bc260 0000000000000030 W ir_variable::accept(ir_visitor*)
00000000003bc290 0000000000000030 W ir_assignment::accept(ir_visitor*)
00000000003bc2c0 0000000000000030 W ir_call::accept(ir_visitor*)
00000000003bc2f0 0000000000000030 W ir_demote::accept(ir_visitor*)
00000000003bc320 0000000000000030 W ir_texture::accept(ir_visitor*)
00000000003bc350 0000000000000030 W ir_swizzle::accept(ir_visitor*)
00000000003bc380 0000000000000030 W ir_dereference_variable::accept(ir_visitor*)
00000000003bc3b0 0000000000000030 W ir_dereference_array::accept(ir_visitor*)
00000000003bc3e0 0000000000000030 W ir_dereference_record::accept(ir_visitor*)
00000000003bc410 000000000000016c T ir_call::clone(void*, hash_table*) const
00000000003bc580 00000000000000e0 T ir_expression::clone(void*, hash_table*) const
00000000003bc660 00000000000000cc t ir_function_signature::clone_prototype(void*, hash_table*) const
00000000003bc730 00000000000000b0 T ir_function_signature::clone(void*, hash_table*) const
00000000003bc7e0 00000000000000d0 t clone_ir_list(void*, exec_list*, exec_list const*)
00000000003bc8b0 000000000000024c t constant_referenced(ir_dereference const*, hash_table*, ir_constant*&, int&)
00000000003bcb00 0000000000000008 T ir_texture::constant_expression_value(void*, hash_table*)
00000000003bcb00 0000000000000008 T ir_assignment::constant_expression_value(void*, hash_table*)
00000000003bcb00 0000000000000008 T ir_rvalue::constant_expression_value(void*, hash_table*)
00000000003bcb10 00000000000043c0 t ir_expression::constant_expression_value(void*, hash_table*)
00000000003c0ed0 0000000000000230 T ir_swizzle::constant_expression_value(void*, hash_table*)
00000000003c1100 0000000000000080 T ir_dereference_variable::constant_expression_value(void*, hash_table*)
00000000003c1180 0000000000000250 T ir_dereference_array::constant_expression_value(void*, hash_table*)
00000000003c13d0 0000000000000044 T ir_dereference_record::constant_expression_value(void*, hash_table*)
00000000003c1420 0000000000000004 T ir_constant::constant_expression_value(void*, hash_table*)
00000000003c1430 00000000000002e0 t ir_function_signature::constant_expression_evaluate_expression_list(void*, exec_list const&, hash_table*, ir_constant**)
00000000003c1710 00000000000001d4 t ir_function_signature::constant_expression_value(void*, exec_list*, hash_table*) [clone .part.0]
00000000003c18f0 000000000000007c T ir_call::constant_expression_value(void*, hash_table*)
00000000003c1970 0000000000000078 t ir_function_signature::constant_expression_value(void*, exec_list*, hash_table*)
00000000003c19f0 0000000000000008 T ir_rvalue::is_negative_one() const
00000000003c19f0 0000000000000008 T ir_rvalue::is_one() const
00000000003c19f0 0000000000000008 T ir_rvalue::is_zero() const
00000000003c1a00 00000000000000f4 t steal_memory(ir_instruction*, void*)
00000000003c1b00 00000000000000a0 T ir_dereference::is_lvalue(_mesa_glsl_parse_state const*) const
00000000003c1ba0 000000000000002c T ir_rvalue::ir_rvalue(ir_node_type)
00000000003c1ba0 000000000000002c t ir_rvalue::ir_rvalue(ir_node_type)
00000000003c1bd0 00000000000003c0 t ir_assignment::set_lhs(ir_rvalue*)
00000000003c1f90 0000000000000074 t ir_assignment::whole_variable_written()
00000000003c2010 0000000000000034 t ir_assignment::ir_assignment(ir_dereference*, ir_rvalue*, ir_rvalue*, unsigned int)
00000000003c2010 0000000000000034 T ir_assignment::ir_assignment(ir_dereference*, ir_rvalue*, ir_rvalue*, unsigned int)
00000000003c2050 000000000000009c t ir_assignment::ir_assignment(ir_rvalue*, ir_rvalue*, ir_rvalue*)
00000000003c2050 000000000000009c T ir_assignment::ir_assignment(ir_rvalue*, ir_rvalue*, ir_rvalue*)
00000000003c20f0 000000000000006c t ir_expression::ir_expression(int, glsl_type const*, ir_rvalue*, ir_rvalue*, ir_rvalue*, ir_rvalue*)
00000000003c20f0 000000000000006c T ir_expression::ir_expression(int, glsl_type const*, ir_rvalue*, ir_rvalue*, ir_rvalue*, ir_rvalue*)
00000000003c2160 000000000000024c t ir_expression::ir_expression(int, ir_rvalue*)
00000000003c2160 000000000000024c T ir_expression::ir_expression(int, ir_rvalue*)
00000000003c23b0 0000000000000288 t ir_expression::ir_expression(int, ir_rvalue*, ir_rvalue*)
00000000003c23b0 0000000000000288 T ir_expression::ir_expression(int, ir_rvalue*, ir_rvalue*)
00000000003c2640 00000000000000d8 t ir_expression::ir_expression(int, ir_rvalue*, ir_rvalue*, ir_rvalue*)
00000000003c2640 00000000000000d8 T ir_expression::ir_expression(int, ir_rvalue*, ir_rvalue*, ir_rvalue*)
00000000003c2720 000000000000002c t ir_expression::get_num_operands(ir_expression_operation)
00000000003c2750 0000000000000068 t depth_layout_string(ir_depth_layout)
00000000003c27c0 000000000000002c T ir_expression::variable_referenced() const
00000000003c27f0 0000000000000034 t ir_constant::ir_constant()
00000000003c27f0 0000000000000034 T ir_constant::ir_constant()
00000000003c2830 000000000000004c t ir_constant::ir_constant(glsl_type const*, ir_constant_data const*)
00000000003c2830 000000000000004c T ir_constant::ir_constant(glsl_type const*, ir_constant_data const*)
00000000003c2880 00000000000000b4 t ir_constant::ir_constant(float16_t, unsigned int)
00000000003c2880 00000000000000b4 T ir_constant::ir_constant(float16_t, unsigned int)
00000000003c2940 00000000000000b4 t ir_constant::ir_constant(float, unsigned int)
00000000003c2940 00000000000000b4 T ir_constant::ir_constant(float, unsigned int)
00000000003c2a00 00000000000000b4 t ir_constant::ir_constant(double, unsigned int)
00000000003c2a00 00000000000000b4 T ir_constant::ir_constant(double, unsigned int)
00000000003c2ac0 00000000000000b4 t ir_constant::ir_constant(unsigned int, unsigned int)
00000000003c2ac0 00000000000000b4 T ir_constant::ir_constant(unsigned int, unsigned int)
00000000003c2b80 00000000000000b4 t ir_constant::ir_constant(int, unsigned int)
00000000003c2b80 00000000000000b4 T ir_constant::ir_constant(int, unsigned int)
00000000003c2c40 00000000000000b4 t ir_constant::ir_constant(unsigned long, unsigned int)
00000000003c2c40 00000000000000b4 T ir_constant::ir_constant(unsigned long, unsigned int)
00000000003c2d00 00000000000000b4 t ir_constant::ir_constant(long, unsigned int)
00000000003c2d00 00000000000000b4 T ir_constant::ir_constant(long, unsigned int)
00000000003c2dc0 00000000000000b0 t ir_constant::ir_constant(bool, unsigned int)
00000000003c2dc0 00000000000000b0 T ir_constant::ir_constant(bool, unsigned int)
00000000003c2e70 0000000000000118 t ir_constant::ir_constant(ir_constant const*, unsigned int)
00000000003c2e70 0000000000000118 T ir_constant::ir_constant(ir_constant const*, unsigned int)
00000000003c2f90 0000000000000164 t ir_constant::zero(void*, glsl_type const*)
00000000003c3100 00000000000000f8 t ir_constant::get_bool_component(unsigned int) const
00000000003c3200 00000000000000ec t ir_constant::get_float_component(unsigned int) const
00000000003c32f0 0000000000000104 t ir_constant::get_double_component(unsigned int) const
00000000003c3400 00000000000000d4 t ir_constant::get_int_component(unsigned int) const
00000000003c34e0 00000000000000d4 t ir_constant::get_uint_component(unsigned int) const
00000000003c35c0 00000000000000e0 t ir_constant::get_int64_component(unsigned int) const
00000000003c36a0 00000000000000e0 t ir_constant::get_uint64_component(unsigned int) const
00000000003c3780 0000000000000594 t ir_constant::ir_constant(glsl_type const*, exec_list*)
00000000003c3780 0000000000000594 T ir_constant::ir_constant(glsl_type const*, exec_list*)
00000000003c3d20 000000000000003c t ir_constant::get_array_element(unsigned int) const
00000000003c3d60 000000000000000c t ir_constant::get_record_field(int)
00000000003c3d70 0000000000000230 t ir_constant::copy_offset(ir_constant*, int)
00000000003c3fa0 000000000000028c t ir_constant::copy_masked_offset(ir_constant*, int, unsigned int)
00000000003c4230 0000000000000250 t ir_constant::has_value(ir_constant const*) const
00000000003c4480 00000000000001e0 T ir_constant::is_value(float, int) const
00000000003c4660 0000000000000018 T ir_constant::is_zero() const
00000000003c4680 0000000000000018 T ir_constant::is_one() const
00000000003c46a0 0000000000000018 T ir_constant::is_negative_one() const
00000000003c46c0 000000000000002c T ir_constant::is_uint16_constant() const
00000000003c46f0 0000000000000034 t ir_loop::ir_loop()
00000000003c46f0 0000000000000034 T ir_loop::ir_loop()
00000000003c4730 0000000000000038 t ir_dereference_variable::ir_dereference_variable(ir_variable*)
00000000003c4730 0000000000000038 T ir_dereference_variable::ir_dereference_variable(ir_variable*)
00000000003c4770 00000000000000c4 t ir_dereference_array::set_array(ir_rvalue*)
00000000003c4840 0000000000000030 t ir_dereference_array::ir_dereference_array(ir_rvalue*, ir_rvalue*)
00000000003c4840 0000000000000030 T ir_dereference_array::ir_dereference_array(ir_rvalue*, ir_rvalue*)
00000000003c4870 0000000000000094 t ir_dereference_array::ir_dereference_array(ir_variable*, ir_rvalue*)
00000000003c4870 0000000000000094 T ir_dereference_array::ir_dereference_array(ir_variable*, ir_rvalue*)
00000000003c4910 0000000000000074 t ir_dereference_record::ir_dereference_record(ir_rvalue*, char const*)
00000000003c4910 0000000000000074 T ir_dereference_record::ir_dereference_record(ir_rvalue*, char const*)
00000000003c4990 0000000000000014 t ir_texture::opcode_string()
00000000003c49b0 000000000000000c t ir_texture::set_sampler(ir_dereference*, glsl_type const*)
00000000003c49c0 000000000000014c t ir_swizzle::init_mask(unsigned int const*, unsigned int)
00000000003c4b10 0000000000000058 t ir_swizzle::ir_swizzle(ir_rvalue*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
00000000003c4b10 0000000000000058 T ir_swizzle::ir_swizzle(ir_rvalue*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
00000000003c4b70 000000000000003c t ir_swizzle::ir_swizzle(ir_rvalue*, unsigned int const*, unsigned int)
00000000003c4b70 000000000000003c T ir_swizzle::ir_swizzle(ir_rvalue*, unsigned int const*, unsigned int)
00000000003c4bb0 0000000000000074 t ir_swizzle::ir_swizzle(ir_rvalue*, ir_swizzle_mask)
00000000003c4bb0 0000000000000074 T ir_swizzle::ir_swizzle(ir_rvalue*, ir_swizzle_mask)
00000000003c4c30 0000000000000130 t ir_swizzle::create(ir_rvalue*, char const*, unsigned int)
00000000003c4d60 0000000000000014 T ir_swizzle::variable_referenced() const
00000000003c4d80 0000000000000238 t ir_variable::ir_variable(glsl_type const*, char const*, ir_variable_mode)
00000000003c4d80 0000000000000238 T ir_variable::ir_variable(glsl_type const*, char const*, ir_variable_mode)
00000000003c4fc0 0000000000000050 t interpolation_string(unsigned int)
00000000003c5010 0000000000000084 t ir_variable::enable_extension_warning(char const*)
00000000003c50a0 0000000000000060 t ir_function_signature::ir_function_signature(glsl_type const*, bool (*)(_mesa_glsl_parse_state const*))
00000000003c50a0 0000000000000060 T ir_function_signature::ir_function_signature(glsl_type const*, bool (*)(_mesa_glsl_parse_state const*))
00000000003c5100 0000000000000010 t ir_function_signature::is_builtin() const
00000000003c5110 0000000000000020 t ir_function_signature::is_builtin_available(_mesa_glsl_parse_state const*) const
00000000003c5130 00000000000000bc t ir_function_signature::qualifiers_match(exec_list*)
00000000003c51f0 0000000000000050 t ir_function_signature::replace_parameters(exec_list*)
00000000003c5240 000000000000005c t ir_function::ir_function(char const*)
00000000003c5240 000000000000005c T ir_function::ir_function(char const*)
00000000003c52a0 000000000000003c t ir_function::has_user_signature()
00000000003c52e0 0000000000000044 t ir_rvalue::error_value(void*)
00000000003c5330 000000000000008c t visit_exec_list(exec_list*, ir_visitor*)
00000000003c53c0 0000000000000068 t reparent_ir(exec_list*, void*)
00000000003c5430 0000000000000020 t vertices_per_prim(unsigned int)
00000000003c5450 00000000000000f4 t mode_string(ir_variable const*)
00000000003c5550 0000000000000004 W ir_control_flow_visitor::visit(ir_expression*)
00000000003c5560 0000000000000008 T ir_instruction::equals(ir_instruction const*, ir_node_type) const
00000000003c5570 0000000000000004 W ir_expression::~ir_expression()
00000000003c5570 0000000000000004 W ir_expression::~ir_expression()
00000000003c5580 0000000000000004 W ir_expression::~ir_expression()
00000000003c5590 00000000000000c0 T ir_expression::equals(ir_instruction const*, ir_node_type) const
00000000003c5650 0000000000000030 W ir_expression::accept(ir_visitor*)
00000000003c5680 0000000000000090 T ir_constant::equals(ir_instruction const*, ir_node_type) const
00000000003c5710 0000000000000028 T ir_dereference_variable::equals(ir_instruction const*, ir_node_type) const
00000000003c5740 000000000000009c T ir_dereference_array::equals(ir_instruction const*, ir_node_type) const
00000000003c57e0 0000000000000068 T ir_swizzle::equals(ir_instruction const*, ir_node_type) const
00000000003c5850 0000000000000208 T ir_texture::equals(ir_instruction const*, ir_node_type) const
00000000003c5a60 0000000000000414 t ir_function::matching_signature(_mesa_glsl_parse_state*, exec_list const*, bool, bool*)
00000000003c5e80 0000000000000018 t ir_function::matching_signature(_mesa_glsl_parse_state*, exec_list const*, bool)
00000000003c5ea0 00000000000000c4 t ir_function::exact_matching_signature(_mesa_glsl_parse_state*, exec_list const*)
00000000003c5f70 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_discard*)
00000000003c5f70 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_swizzle*)
00000000003c5f70 0000000000000034 t ir_hierarchical_visitor::visit_enter(ir_texture*)
00000000003c5f70 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_function*)
00000000003c5f70 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_assignment*)
00000000003c5f70 0000000000000034 t ir_hierarchical_visitor::visit_enter(ir_expression*)
00000000003c5f70 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_emit_vertex*)
00000000003c5f70 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_end_primitive*)
00000000003c5f70 0000000000000034 t ir_hierarchical_visitor::visit_enter(ir_dereference_array*)
00000000003c5f70 0000000000000034 t ir_hierarchical_visitor::visit_enter(ir_dereference_record*)
00000000003c5f70 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_function_signature*)
00000000003c5f70 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_if*)
00000000003c5f70 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_call*)
00000000003c5f70 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_loop*)
00000000003c5f70 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_demote*)
00000000003c5f70 0000000000000034 T ir_hierarchical_visitor::visit_enter(ir_return*)
00000000003c5fb0 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_discard*)
00000000003c5fb0 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_swizzle*)
00000000003c5fb0 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_texture*)
00000000003c5fb0 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_function*)
00000000003c5fb0 0000000000000034 t ir_hierarchical_visitor::visit_leave(ir_assignment*)
00000000003c5fb0 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_expression*)
00000000003c5fb0 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_emit_vertex*)
00000000003c5fb0 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_end_primitive*)
00000000003c5fb0 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_dereference_array*)
00000000003c5fb0 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_dereference_record*)
00000000003c5fb0 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_function_signature*)
00000000003c5fb0 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_if*)
00000000003c5fb0 0000000000000034 t ir_hierarchical_visitor::visit_leave(ir_call*)
00000000003c5fb0 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_loop*)
00000000003c5fb0 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_demote*)
00000000003c5fb0 0000000000000034 T ir_hierarchical_visitor::visit_leave(ir_return*)
00000000003c5ff0 000000000000004c T ir_hierarchical_visitor::visit(ir_barrier*)
00000000003c5ff0 000000000000004c T ir_hierarchical_visitor::visit(ir_constant*)
00000000003c5ff0 000000000000004c T ir_hierarchical_visitor::visit(ir_variable*)
00000000003c5ff0 000000000000004c T ir_hierarchical_visitor::visit(ir_loop_jump*)
00000000003c5ff0 000000000000004c T ir_hierarchical_visitor::visit(ir_dereference_variable*)
00000000003c5ff0 000000000000004c T ir_hierarchical_visitor::visit(ir_rvalue*)
00000000003c6040 000000000000001c T ir_hierarchical_visitor::ir_hierarchical_visitor()
00000000003c6040 000000000000001c t ir_hierarchical_visitor::ir_hierarchical_visitor()
00000000003c6060 0000000000000008 t ir_hierarchical_visitor::run(exec_list*)
00000000003c6070 000000000000003c t visit_tree(ir_instruction*, void (*)(ir_instruction*, void*), void*, void (*)(ir_instruction*, void*), void*)
00000000003c60b0 0000000000000004 W ir_control_flow_visitor::visit(ir_emit_vertex*)
00000000003c60c0 0000000000000004 W ir_control_flow_visitor::visit(ir_end_primitive*)
00000000003c60d0 0000000000000004 W ir_control_flow_visitor::visit(ir_barrier*)
00000000003c60e0 000000000000001c T ir_dereference_variable::accept(ir_hierarchical_visitor*)
00000000003c6100 000000000000001c T ir_barrier::accept(ir_hierarchical_visitor*)
00000000003c6120 0000000000000004 W ir_barrier::~ir_barrier()
00000000003c6120 0000000000000004 W ir_barrier::~ir_barrier()
00000000003c6130 0000000000000004 W ir_end_primitive::~ir_end_primitive()
00000000003c6130 0000000000000004 W ir_end_primitive::~ir_end_primitive()
00000000003c6140 0000000000000004 W ir_emit_vertex::~ir_emit_vertex()
00000000003c6140 0000000000000004 W ir_emit_vertex::~ir_emit_vertex()
00000000003c6150 0000000000000058 W ir_emit_vertex::clone(void*, hash_table*) const
00000000003c61b0 0000000000000058 W ir_end_primitive::clone(void*, hash_table*) const
00000000003c6210 0000000000000034 W ir_barrier::clone(void*, hash_table*) const
00000000003c6250 0000000000000004 W ir_barrier::~ir_barrier()
00000000003c6260 0000000000000004 W ir_end_primitive::~ir_end_primitive()
00000000003c6270 0000000000000004 W ir_emit_vertex::~ir_emit_vertex()
00000000003c6280 0000000000000088 T ir_emit_vertex::accept(ir_hierarchical_visitor*)
00000000003c6310 0000000000000088 T ir_end_primitive::accept(ir_hierarchical_visitor*)
00000000003c63a0 0000000000000030 W ir_barrier::accept(ir_visitor*)
00000000003c63d0 0000000000000030 W ir_emit_vertex::accept(ir_visitor*)
00000000003c6400 0000000000000030 W ir_end_primitive::accept(ir_visitor*)
00000000003c6430 00000000000000c0 t visit_list_elements(ir_hierarchical_visitor*, exec_list*, bool)
00000000003c64f0 000000000000001c T ir_rvalue::accept(ir_hierarchical_visitor*)
00000000003c6510 000000000000001c T ir_variable::accept(ir_hierarchical_visitor*)
00000000003c6530 0000000000000078 T ir_loop::accept(ir_hierarchical_visitor*)
00000000003c65b0 000000000000001c T ir_loop_jump::accept(ir_hierarchical_visitor*)
00000000003c65d0 00000000000000a0 T ir_function_signature::accept(ir_hierarchical_visitor*)
00000000003c6670 0000000000000078 T ir_function::accept(ir_hierarchical_visitor*)
00000000003c66f0 00000000000000bc T ir_expression::accept(ir_hierarchical_visitor*)
00000000003c67b0 0000000000000168 T ir_texture::accept(ir_hierarchical_visitor*)
00000000003c6920 000000000000007c T ir_swizzle::accept(ir_hierarchical_visitor*)
00000000003c69a0 00000000000000c4 T ir_dereference_array::accept(ir_hierarchical_visitor*)
00000000003c6a70 000000000000007c T ir_dereference_record::accept(ir_hierarchical_visitor*)
00000000003c6af0 00000000000000cc t ir_assignment::accept(ir_hierarchical_visitor*)
00000000003c6bc0 000000000000001c T ir_constant::accept(ir_hierarchical_visitor*)
00000000003c6be0 00000000000000d8 T ir_call::accept(ir_hierarchical_visitor*)
00000000003c6cc0 0000000000000080 T ir_return::accept(ir_hierarchical_visitor*)
00000000003c6d40 0000000000000080 T ir_discard::accept(ir_hierarchical_visitor*)
00000000003c6dc0 0000000000000060 T ir_demote::accept(ir_hierarchical_visitor*)
00000000003c6e20 00000000000000c8 T ir_if::accept(ir_hierarchical_visitor*)
00000000003c6ef0 000000000000001c T ir_print_visitor::visit(ir_rvalue*)
00000000003c6f10 0000000000000074 T ir_print_visitor::visit(ir_dereference_array*)
00000000003c6f90 0000000000000074 T ir_print_visitor::visit(ir_dereference_record*)
00000000003c7010 000000000000001c T ir_print_visitor::visit(ir_demote*)
00000000003c7030 0000000000000060 T ir_print_visitor::visit(ir_emit_vertex*)
00000000003c7090 0000000000000060 T ir_print_visitor::visit(ir_end_primitive*)
00000000003c70f0 000000000000001c T ir_print_visitor::visit(ir_barrier*)
00000000003c7110 00000000000000d4 T ir_print_visitor::visit(ir_swizzle*)
00000000003c71f0 00000000000000ec T ir_print_visitor::visit(ir_assignment*)
00000000003c72e0 0000000000000068 T ir_print_visitor::visit(ir_discard*)
00000000003c7350 0000000000000068 T ir_print_visitor::visit(ir_return*)
00000000003c73c0 00000000000000c4 t print_type(__sFILE*, glsl_type const*)
00000000003c7490 00000000000000b4 T ir_print_visitor::visit(ir_expression*)
00000000003c7550 0000000000000024 T ir_print_visitor::visit(ir_loop_jump*)
00000000003c7580 0000000000000040 T ir_print_visitor::~ir_print_visitor()
00000000003c7580 0000000000000040 T ir_print_visitor::~ir_print_visitor()
00000000003c75c0 0000000000000294 T ir_print_visitor::visit(ir_texture*)
00000000003c7860 0000000000000060 t print_float_constant(__sFILE*, float)
00000000003c78c0 00000000000000dc T ir_print_visitor::visit(ir_call*)
00000000003c79a0 00000000000003f8 T ir_print_visitor::visit(ir_constant*)
00000000003c7da0 000000000000004c T ir_print_visitor::~ir_print_visitor()
00000000003c7df0 0000000000000130 T ir_print_visitor::visit(ir_loop*)
00000000003c7f20 0000000000000188 T ir_print_visitor::visit(ir_function*)
00000000003c80b0 0000000000000348 T ir_print_visitor::visit(ir_function_signature*)
00000000003c8400 00000000000002e0 T ir_print_visitor::visit(ir_if*)
00000000003c86e0 000000000000008c t ir_instruction::fprint(__sFILE*) const
00000000003c8770 000000000000002c t ir_instruction::print() const
00000000003c87a0 000000000000018c t _mesa_print_ir
00000000003c8930 00000000000000e0 t ir_print_visitor::unique_name(ir_variable*)
00000000003c8a10 000000000000033c T ir_print_visitor::visit(ir_variable*)
00000000003c8d50 0000000000000064 T ir_print_visitor::visit(ir_dereference_variable*)
00000000003c8dc0 0000000000000004 t validate_ir_tree(exec_list*)
00000000003c8dd0 0000000000000014 t (anonymous namespace)::deref_type_updater::visit(ir_dereference_variable*)
00000000003c8df0 0000000000000024 t (anonymous namespace)::deref_type_updater::visit_leave(ir_dereference_array*)
00000000003c8e20 0000000000000028 t (anonymous namespace)::deref_type_updater::visit_leave(ir_dereference_record*)
00000000003c8e50 0000000000000004 t (anonymous namespace)::array_resize_visitor::~array_resize_visitor()
00000000003c8e50 0000000000000004 t (anonymous namespace)::array_resize_visitor::~array_resize_visitor()
00000000003c8e60 000000000000005c t (anonymous namespace)::find_emit_vertex_visitor::visit_leave(ir_emit_vertex*)
00000000003c8ec0 000000000000005c t (anonymous namespace)::find_emit_vertex_visitor::visit_leave(ir_end_primitive*)
00000000003c8f20 0000000000000010 t assign_attribute_or_color_locations(void*, gl_shader_program*, gl_constants*, unsigned int, bool)::temp_attr::compare(void const*, void const*)
00000000003c8f30 0000000000000170 t match_explicit_outputs_to_inputs(gl_linked_shader*, gl_linked_shader*)
00000000003c90a0 000000000000004c t (anonymous namespace)::find_deref_visitor::visit(ir_dereference_variable*)
00000000003c90f0 00000000000001dc t move_non_declarations(exec_list*, exec_node*, bool, gl_linked_shader*)
00000000003c92d0 0000000000000008 t (anonymous namespace)::array_resize_visitor::~array_resize_visitor()
00000000003c92e0 0000000000000098 t linker_optimisation_loop(gl_context*, exec_list*, unsigned int)
00000000003c9380 00000000000000ec t remap_variables(ir_instruction*, gl_linked_shader*, hash_table*)::remap_visitor::visit(ir_dereference_variable*)
00000000003c9470 0000000000000058 t set_always_active_io(exec_list*, ir_variable_mode) [clone .isra.0]
00000000003c94d0 0000000000000474 t add_shader_variable(gl_context const*, gl_shader_program*, set*, unsigned int, unsigned int, ir_variable*, char const*, glsl_type const*, bool, int, bool, glsl_type const*) [clone .isra.0]
00000000003c9950 00000000000001fc t add_interface_variables(gl_context const*, gl_shader_program*, set*, unsigned int, unsigned int) [clone .isra.0]
00000000003c9b50 00000000000000dc t (anonymous namespace)::dynamic_sampler_array_indexing_visitor::visit_enter(ir_dereference_array*)
00000000003c9c30 00000000000002ac t add_packed_varyings(gl_context const*, gl_shader_program*, set*, int, unsigned int) [clone .isra.0]
00000000003c9ee0 00000000000001bc t (anonymous namespace)::find_assignment_visitor::visit_enter(ir_call*)
00000000003ca0a0 00000000000000a8 t (anonymous namespace)::find_assignment_visitor::visit_enter(ir_assignment*)
00000000003ca150 00000000000000a8 t linker_error
00000000003ca200 0000000000000104 t (anonymous namespace)::array_resize_visitor::visit(ir_variable*)
00000000003ca310 0000000000000240 t analyze_clip_cull_usage(gl_shader_program*, gl_linked_shader*, gl_context*, shader_info*)
00000000003ca550 00000000000002e0 t interstage_cross_validate_uniform_blocks(gl_shader_program*, bool)
00000000003ca830 00000000000000a0 t linker_warning
00000000003ca8d0 000000000000095c t assign_attribute_or_color_locations(void*, gl_shader_program*, gl_constants*, unsigned int, bool)
00000000003cb230 00000000000000c8 t parse_program_resource_name(char const*, char const**)
00000000003cb300 000000000000006c t link_invalidate_variable_locations(exec_list*)
00000000003cb370 0000000000000128 t validate_intrastage_arrays(gl_shader_program*, ir_variable*, ir_variable*, bool)
00000000003cb4a0 0000000000000624 t cross_validate_globals(gl_context*, gl_shader_program*, exec_list*, glsl_symbol_table*, bool) [clone .isra.0]
00000000003cbad0 00000000000000a8 t array_sizing_visitor::update_interface_members_array(glsl_type const*, glsl_type const*)
00000000003cbb80 00000000000005d8 W array_sizing_visitor::visit(ir_variable*)
00000000003cc160 0000000000001340 t link_intrastage_shaders(void*, gl_context*, gl_shader_program*, gl_shader**, unsigned int, bool)
00000000003cd4a0 00000000000005d0 t build_program_resource_list(gl_context*, gl_shader_program*, bool)
00000000003cda70 0000000000001a60 t link_shaders(gl_context*, gl_shader_program*)
00000000003cf4d0 0000000000000050 t link_util_should_add_buffer_variable
00000000003cf520 00000000000000e0 t link_util_add_program_resource
00000000003cf600 000000000000008c t link_util_find_empty_block
00000000003cf690 00000000000000ac t link_util_update_empty_uniform_locations
00000000003cf740 0000000000000098 t link_util_check_subroutine_resources
00000000003cf7e0 0000000000000264 t link_util_check_uniform_resources
00000000003cfa50 0000000000000134 t link_util_calculate_subroutine_compat
00000000003cfb90 00000000000000f4 t _mark_array_elements_referenced(array_deref_range const*, unsigned int, unsigned int, unsigned int, unsigned int*)
00000000003cfc90 000000000000001c t link_util_mark_array_elements_referenced
00000000003cfcb0 0000000000000018 t (anonymous namespace)::cmp_actives(void const*, void const*)
00000000003cfcd0 00000000000002a4 t (anonymous namespace)::process_atomic_variable(glsl_type const*, gl_shader_program*, unsigned int*, ir_variable*, (anonymous namespace)::active_atomic_buffer*, unsigned int*, int*, unsigned int)
00000000003cff80 00000000000002f8 t (anonymous namespace)::find_active_atomic_counters(gl_context*, gl_shader_program*, unsigned int*)
00000000003d0280 000000000000036c t link_assign_atomic_counter_resources(gl_context*, gl_shader_program*)
00000000003d05f0 000000000000025c t link_check_atomic_counter_resources(gl_context*, gl_shader_program*)
00000000003d0850 00000000000000c0 t (anonymous namespace)::call_link_visitor::visit_leave(ir_call*)
00000000003d0910 0000000000000064 t find_matching_signature(char const*, exec_list const*, glsl_symbol_table*)
00000000003d0980 0000000000000320 t (anonymous namespace)::call_link_visitor::visit_enter(ir_call*)
00000000003d0ca0 000000000000001c t (anonymous namespace)::call_link_visitor::visit(ir_variable*)
00000000003d0cc0 0000000000000180 t (anonymous namespace)::call_link_visitor::visit(ir_dereference_variable*)
00000000003d0e40 000000000000009c t link_function_calls(gl_shader_program*, gl_linked_shader*, gl_shader**, unsigned int)
00000000003d0ee0 000000000000011c t (anonymous namespace)::interstage_member_mismatch(gl_shader_program*, glsl_type const*, glsl_type const*)
00000000003d1000 0000000000000260 t (anonymous namespace)::intrastage_match(ir_variable*, ir_variable*, gl_shader_program*, bool)
00000000003d1260 0000000000000310 t validate_intrastage_interface_blocks(gl_shader_program*, gl_shader const**, unsigned int)
00000000003d1570 00000000000004e0 t validate_interstage_inout_blocks(gl_shader_program*, gl_linked_shader const*, gl_linked_shader const*)
00000000003d1a50 00000000000001f0 t validate_interstage_uniform_blocks(gl_shader_program*, gl_linked_shader**)
00000000003d1c40 0000000000000004 T program_resource_visitor::enter_record(glsl_type const*, char const*, bool, glsl_interface_packing)
00000000003d1c40 0000000000000004 T program_resource_visitor::leave_record(glsl_type const*, char const*, bool, glsl_interface_packing)
00000000003d1c50 0000000000000004 T program_resource_visitor::set_buffer_offset(unsigned int)
00000000003d1c50 0000000000000004 T program_resource_visitor::set_record_array_count(unsigned int)
00000000003d1c60 0000000000000008 W parcel_out_uniform_storage::set_buffer_offset(unsigned int)
00000000003d1c70 0000000000000008 W parcel_out_uniform_storage::set_record_array_count(unsigned int)
00000000003d1c80 0000000000000028 W parcel_out_uniform_storage::~parcel_out_uniform_storage()
00000000003d1c80 0000000000000028 W parcel_out_uniform_storage::~parcel_out_uniform_storage()
00000000003d1cb0 000000000000007c t get_top_level_name(char const*)
00000000003d1d30 00000000000000dc t is_top_level_shader_storage_block_member(char const*, char const*, char const*)
00000000003d1e10 0000000000000078 W parcel_out_uniform_storage::leave_record(glsl_type const*, char const*, bool, glsl_interface_packing)
00000000003d1e90 0000000000000078 W parcel_out_uniform_storage::enter_record(glsl_type const*, char const*, bool, glsl_interface_packing)
00000000003d1f10 0000000000000034 W parcel_out_uniform_storage::~parcel_out_uniform_storage()
00000000003d1f50 0000000000000070 t assign_hidden_uniform_slot_id(char const*, unsigned int, void*)
00000000003d1fc0 00000000000001dc t parcel_out_uniform_storage::set_opaque_indices(glsl_type const*, gl_uniform_storage*, char const*, unsigned int&, string_to_uint_map*) [clone .isra.0]
00000000003d21a0 0000000000000214 t (anonymous namespace)::count_uniform_size::visit_field(glsl_type const*, char const*, bool, glsl_type const*, glsl_interface_packing, bool)
00000000003d23c0 0000000000000ad4 W parcel_out_uniform_storage::visit_field(glsl_type const*, char const*, bool, glsl_type const*, glsl_interface_packing, bool)
00000000003d2ea0 00000000000003d4 t program_resource_visitor::recursion(glsl_type const*, char**, unsigned long, bool, glsl_type const*, glsl_interface_packing, bool, unsigned int, glsl_struct_field const*)
00000000003d3280 00000000000000b4 t program_resource_visitor::process(glsl_type const*, char const*, bool)
00000000003d3340 0000000000000228 t program_resource_visitor::process(ir_variable*, glsl_type const*, bool)
00000000003d3570 000000000000001c t program_resource_visitor::process(ir_variable*, bool)
00000000003d3590 000000000000005c t link_calculate_matrix_stride(glsl_type const*, bool, glsl_interface_packing)
00000000003d35f0 00000000000004b8 t parcel_out_uniform_storage::set_and_process(ir_variable*)
00000000003d3ab0 0000000000000ea0 t link_assign_uniform_locations(gl_shader_program*, gl_context*)
00000000003d4950 0000000000000288 t linker::set_opaque_binding(void*, gl_shader_program*, ir_variable const*, glsl_type const*, char const*, int*)
00000000003d4be0 00000000000000a8 t linker::copy_constant_to_storage(gl_constant_value*, ir_constant const*, glsl_base_type, unsigned int, unsigned int)
00000000003d4c90 00000000000002c8 t linker::set_uniform_initializer(void*, gl_shader_program*, char const*, glsl_type const*, ir_constant*, unsigned int)
00000000003d4f60 00000000000001b4 t link_set_uniform_initializers(gl_shader_program*, unsigned int)
00000000003d5120 0000000000000008 t (anonymous namespace)::ubo_visitor::set_buffer_offset(unsigned int)
00000000003d5130 0000000000000010 t (anonymous namespace)::count_block_size::visit_field(glsl_type const*, char const*, bool, glsl_type const*, glsl_interface_packing, bool)
00000000003d5140 0000000000000068 t resize_block_array(glsl_type const*, uniform_block_array_elements*)
00000000003d51b0 0000000000000188 t process_block_array_leaf(char const*, gl_uniform_block*, (anonymous namespace)::ubo_visitor*, gl_uniform_buffer_variable*, link_uniform_block_active const*, unsigned int*, unsigned int, unsigned int, gl_context*, gl_shader_program*)
00000000003d5340 0000000000000204 t (anonymous namespace)::ubo_visitor::visit_field(glsl_type const*, char const*, bool, glsl_type const*, glsl_interface_packing, bool)
00000000003d5550 0000000000000134 t process_block_array(uniform_block_array_elements*, char**, unsigned long, gl_uniform_block*, (anonymous namespace)::ubo_visitor*, gl_uniform_buffer_variable*, link_uniform_block_active const*, unsigned int*, unsigned int, gl_context*, gl_shader_program*, unsigned int)
00000000003d5690 0000000000000068 t (anonymous namespace)::ubo_visitor::enter_record(glsl_type const*, char const*, bool, glsl_interface_packing)
00000000003d5690 0000000000000068 t (anonymous namespace)::ubo_visitor::leave_record(glsl_type const*, char const*, bool, glsl_interface_packing)
00000000003d5700 00000000000001ac t create_buffer_blocks(void*, gl_context*, gl_shader_program*, gl_uniform_block**, unsigned int, hash_table*, unsigned int, bool) [clone .part.0]
00000000003d58b0 0000000000000318 t link_uniform_blocks(void*, gl_context*, gl_shader_program*, gl_linked_shader*, gl_uniform_block**, unsigned int*, gl_uniform_block**, unsigned int*)
00000000003d5bd0 000000000000023c t link_cross_validate_uniform_block(void*, gl_uniform_block**, unsigned int*, gl_uniform_block*)
00000000003d5e10 0000000000000090 t compute_variable_location_slot(ir_variable*, gl_shader_stage)
00000000003d5ea0 0000000000000028 t cmp_xfb_offset(void const*, void const*)
00000000003d5ed0 0000000000000028 t (anonymous namespace)::varying_matches::match_comparator(void const*, void const*)
00000000003d5f00 0000000000000430 t check_location_aliasing(explicit_location_info (*) [4], ir_variable*, unsigned int, unsigned int, unsigned int, glsl_type const*, unsigned int, bool, bool, bool, gl_shader_program*, gl_shader_stage)
00000000003d6330 0000000000000060 t io_variable_cmp(void const*, void const*)
00000000003d6390 0000000000000438 t cross_validate_types_and_qualifiers(gl_context*, gl_shader_program*, ir_variable const*, ir_variable const*, gl_shader_stage, gl_shader_stage)
00000000003d67d0 0000000000000094 t cross_validate_front_and_back_color(gl_context*, gl_shader_program*, ir_variable const*, ir_variable const*, ir_variable const*, gl_shader_stage, gl_shader_stage)
00000000003d6870 000000000000023c t create_xfb_varying_names(void*, glsl_type const*, char**, unsigned long, unsigned int*, char const*, glsl_type const*, char***)
00000000003d6ab0 00000000000000ec t canonicalize_shader_io(exec_list*, ir_variable_mode)
00000000003d6ba0 000000000000007c W tfeedback_candidate_generator::visit_field(glsl_type const*, char const*, bool, glsl_type const*, glsl_interface_packing, bool)
00000000003d6c20 0000000000000048 t (anonymous namespace)::varying_matches::xfb_comparator(void const*, void const*)
00000000003d6c70 00000000000000d8 t remove_unused_shader_inputs_and_outputs(bool, gl_linked_shader*, ir_variable_mode) [clone .part.0]
00000000003d6d50 0000000000000048 t (anonymous namespace)::varying_matches::not_xfb_comparator(void const*, void const*)
00000000003d6da0 000000000000029c t validate_explicit_variable_location(gl_context*, explicit_location_info (*) [4], ir_variable*, gl_shader_program*, gl_linked_shader*)
00000000003d7040 0000000000000170 t reserved_varying_slot(gl_linked_shader*, ir_variable_mode)
00000000003d71b0 00000000000004a4 t (anonymous namespace)::varying_matches::record(ir_variable*, ir_variable*) [clone .part.0]
00000000003d7660 0000000000000148 t validate_first_and_last_interface_explicit_locations(gl_context*, gl_shader_program*, gl_shader_stage, gl_shader_stage)
00000000003d77b0 00000000000003ec t cross_validate_outputs_to_inputs(gl_context*, gl_shader_program*, gl_linked_shader*, gl_linked_shader*)
00000000003d7ba0 0000000000000214 t tfeedback_decl::init(gl_context*, void const*, char const*)
00000000003d7dc0 0000000000000304 t tfeedback_decl::assign_location(gl_context*, gl_shader_program*)
00000000003d80d0 00000000000000c0 t tfeedback_decl::get_num_outputs() const
00000000003d8190 00000000000004b8 t tfeedback_decl::store(gl_context*, gl_shader_program*, gl_transform_feedback_info*, unsigned int, unsigned int, unsigned int, unsigned int**, bool*, bool, void const*) const
00000000003d8650 00000000000000c0 t tfeedback_decl::find_candidate(gl_shader_program*, hash_table*)
00000000003d8710 0000000000000110 t linker::populate_consumer_input_sets(void*, exec_list*, hash_table*, hash_table*, ir_variable**)
00000000003d8820 00000000000000cc t linker::get_matching_input(void*, ir_variable const*, hash_table*, hash_table*, ir_variable**)
00000000003d88f0 0000000000001058 t assign_varying_locations(gl_context*, void*, gl_shader_program*, gl_linked_shader*, gl_linked_shader*, unsigned int, tfeedback_decl*, unsigned long)
00000000003d9950 0000000000000c2c t link_varyings(gl_shader_program*, unsigned int, unsigned int, gl_context*, void*)
00000000003da580 0000000000000030 t (anonymous namespace)::loop_analysis::visit(ir_loop_jump*)
00000000003da5b0 0000000000000028 t (anonymous namespace)::loop_analysis::visit_enter(ir_call*)
00000000003da5e0 0000000000000024 t (anonymous namespace)::loop_analysis::visit_enter(ir_if*)
00000000003da610 0000000000000024 t (anonymous namespace)::loop_analysis::visit_leave(ir_if*)
00000000003da640 0000000000000028 t (anonymous namespace)::loop_analysis::visit_enter(ir_assignment*)
00000000003da670 0000000000000010 t (anonymous namespace)::loop_analysis::visit_leave(ir_assignment*)
00000000003da680 000000000000000c W loop_variable_state::_ralloc_destructor(void*)
00000000003da690 0000000000000088 W examine_rhs::visit(ir_dereference_variable*)
00000000003da720 0000000000000198 t (anonymous namespace)::loop_analysis::visit(ir_dereference_variable*)
00000000003da8c0 000000000000002c t loop_state::~loop_state()
00000000003da8c0 000000000000002c T loop_state::~loop_state()
00000000003da8f0 00000000000000cc t loop_state::insert(ir_loop*)
00000000003da9c0 0000000000000040 t (anonymous namespace)::loop_analysis::visit_enter(ir_loop*)
00000000003daa00 0000000000000020 t loop_state::get(ir_loop const*)
00000000003daa20 0000000000000038 t loop_variable_state::get(ir_variable const*)
00000000003daa60 000000000000009c t analyze_loop_variables(exec_list*)
00000000003dab00 0000000000000b9c t (anonymous namespace)::loop_analysis::visit_leave(ir_loop*)
00000000003db6a0 0000000000000018 W loop_unroll_count::visit_enter(ir_assignment*)
00000000003db6c0 0000000000000018 W loop_unroll_count::visit_enter(ir_expression*)
00000000003db6e0 0000000000000014 W loop_unroll_count::visit_enter(ir_loop*)
00000000003db700 00000000000001e8 W loop_unroll_count::visit_enter(ir_dereference_array*)
00000000003db8f0 00000000000001c0 t (anonymous namespace)::loop_unroll_visitor::complex_unroll(ir_loop*, int, bool, bool, bool)
00000000003dbab0 000000000000025c t (anonymous namespace)::loop_unroll_visitor::simple_unroll(ir_loop*, int)
00000000003dbd10 000000000000055c t (anonymous namespace)::loop_unroll_visitor::visit_leave(ir_loop*)
00000000003dc270 0000000000000064 t unroll_loops(exec_list*, loop_state*, gl_shader_compiler_options const*)
00000000003dc2e0 0000000000000058 t (anonymous namespace)::lower_builtins_visitor::visit_leave(ir_call*)
00000000003dc340 0000000000000050 t lower_builtins(exec_list*)
00000000003dc390 0000000000000008 t (anonymous namespace)::lower_const_array_visitor::visit_enter(ir_texture*)
00000000003dc3a0 000000000000013c t (anonymous namespace)::lower_const_array_visitor::handle_rvalue(ir_rvalue**)
00000000003dc4e0 00000000000000c8 t lower_const_arrays_to_uniforms(exec_list*, unsigned int, unsigned int)
00000000003dc5b0 000000000000009c t (anonymous namespace)::lower_cs_derived_visitor::add_system_value(int, glsl_type const*, char const*)
00000000003dc650 00000000000001cc t (anonymous namespace)::lower_cs_derived_visitor::find_sysvals() [clone .part.0]
00000000003dc820 00000000000003b8 t (anonymous namespace)::lower_cs_derived_visitor::visit(ir_dereference_variable*)
00000000003dcbe0 0000000000000098 t lower_cs_derived(gl_linked_shader*)
00000000003dcc80 00000000000000cc t (anonymous namespace)::lower_discard_flow_visitor::generate_discard_break()
00000000003dcd50 000000000000004c t (anonymous namespace)::lower_discard_flow_visitor::visit_enter(ir_loop*)
00000000003dcda0 00000000000000d8 t (anonymous namespace)::lower_discard_flow_visitor::visit_enter(ir_discard*)
00000000003dce80 00000000000000d0 t (anonymous namespace)::lower_discard_flow_visitor::visit_enter(ir_function_signature*)
00000000003dcf50 0000000000000068 t (anonymous namespace)::lower_discard_flow_visitor::visit(ir_loop_jump*)
00000000003dcfc0 00000000000000b0 t lower_discard_flow(exec_list*)
00000000003dd070 0000000000000004 t (anonymous namespace)::lower_distance_visitor_counter::handle_rvalue(ir_rvalue**)
00000000003dd080 0000000000000138 t (anonymous namespace)::lower_distance_visitor_counter::visit(ir_variable*)
00000000003dd1c0 00000000000000a8 t (anonymous namespace)::lower_distance_visitor::is_distance_vec8(ir_rvalue*)
00000000003dd270 00000000000000a4 t (anonymous namespace)::lower_distance_visitor::fix_lhs(ir_assignment*) [clone .part.0]
00000000003dd320 00000000000001b4 t (anonymous namespace)::lower_distance_visitor::visit(ir_variable*)
00000000003dd4e0 0000000000000478 t (anonymous namespace)::lower_distance_visitor::handle_rvalue(ir_rvalue**)
00000000003dd960 0000000000000224 t (anonymous namespace)::lower_distance_visitor::visit_leave(ir_assignment*)
00000000003ddb90 000000000000016c t lower_clip_cull_distance(gl_shader_program*, gl_linked_shader*)
00000000003ddd00 00000000000002a8 t (anonymous namespace)::lower_distance_visitor::visit_leave(ir_call*)
00000000003ddfb0 00000000000000e4 t (anonymous namespace)::lower_instructions_visitor::_imm_fp(void*, glsl_type const*, double, unsigned int) [clone .constprop.0] [clone .isra.0]
00000000003de0a0 0000000000000078 t (anonymous namespace)::lower_instructions_visitor::_carry(ir_builder::operand, ir_builder::operand) [clone .isra.0]
00000000003de120 0000000000000070 t (anonymous namespace)::lower_instructions_visitor::div_to_mul_rcp(ir_expression*)
00000000003de190 000000000000005c t (anonymous namespace)::lower_instructions_visitor::dfloor_to_dfrac(ir_expression*)
00000000003de1f0 00000000000002fc t (anonymous namespace)::lower_instructions_visitor::mod_to_floor(ir_expression*)
00000000003de4f0 000000000000023c t (anonymous namespace)::lower_instructions_visitor::int_div_to_mul_rcp(ir_expression*)
00000000003de730 0000000000000290 t (anonymous namespace)::lower_instructions_visitor::double_dot_to_fma(ir_expression*)
00000000003de9c0 00000000000001e8 t (anonymous namespace)::lower_instructions_visitor::dceil_to_dfrac(ir_expression*)
00000000003debb0 0000000000000318 t (anonymous namespace)::lower_instructions_visitor::dfrexp_exp_to_arith(ir_expression*)
00000000003deed0 0000000000000308 t (anonymous namespace)::lower_instructions_visitor::dtrunc_to_dfrac(ir_expression*)
00000000003df1e0 0000000000000428 t (anonymous namespace)::lower_instructions_visitor::dround_even_to_dfrac(ir_expression*)
00000000003df610 000000000000058c t (anonymous namespace)::lower_instructions_visitor::dfrexp_sig_to_arith(ir_expression*)
00000000003dfba0 0000000000000404 t (anonymous namespace)::lower_instructions_visitor::extract_to_shifts(ir_expression*)
00000000003dffb0 0000000000000474 t (anonymous namespace)::lower_instructions_visitor::bit_count_to_math(ir_expression*)
00000000003e0430 0000000000000ba0 t (anonymous namespace)::lower_instructions_visitor::dldexp_to_arith(ir_expression*)
00000000003e0fd0 0000000000000af4 t (anonymous namespace)::lower_instructions_visitor::ldexp_to_arith(ir_expression*)
00000000003e1ad0 0000000000001380 t (anonymous namespace)::lower_instructions_visitor::imul_high_to_mul(ir_expression*)
00000000003e2e50 00000000000021e8 t (anonymous namespace)::lower_instructions_visitor::visit_leave(ir_expression*)
00000000003e5040 0000000000000060 t lower_instructions(exec_list*, unsigned int)
00000000003e50a0 0000000000000004 t (anonymous namespace)::ir_lower_jumps_visitor::visit(ir_discard*)
00000000003e50b0 0000000000000004 t (anonymous namespace)::ir_lower_jumps_visitor::~ir_lower_jumps_visitor()
00000000003e50b0 0000000000000004 t (anonymous namespace)::ir_lower_jumps_visitor::~ir_lower_jumps_visitor()
00000000003e50c0 0000000000000178 t (anonymous namespace)::ir_lower_jumps_visitor::create_lowered_break()
00000000003e5240 0000000000000284 t (anonymous namespace)::ir_lower_jumps_visitor::insert_lowered_return(ir_return*)
00000000003e54d0 0000000000000008 t (anonymous namespace)::ir_lower_jumps_visitor::~ir_lower_jumps_visitor()
00000000003e54e0 0000000000000040 t (anonymous namespace)::ir_lower_jumps_visitor::visit(ir_return*)
00000000003e5520 000000000000004c t (anonymous namespace)::ir_lower_jumps_visitor::visit(ir_loop_jump*)
00000000003e5570 0000000000000070 t (anonymous namespace)::ir_lower_jumps_visitor::visit(ir_function*)
00000000003e55e0 00000000000001ec t (anonymous namespace)::ir_lower_jumps_visitor::visit(ir_function_signature*)
00000000003e57d0 0000000000000544 t (anonymous namespace)::ir_lower_jumps_visitor::visit(ir_loop*)
00000000003e5d20 0000000000000ab8 t (anonymous namespace)::ir_lower_jumps_visitor::visit(ir_if*)
00000000003e67e0 000000000000008c t do_lower_jumps(exec_list*, bool, bool, bool, bool, bool)
00000000003e6870 0000000000000094 T lower_packed_varyings_gs_splicer::visit_leave(ir_emit_vertex*)
00000000003e6910 0000000000000094 T lower_packed_varyings_return_splicer::visit_leave(ir_return*)
00000000003e69b0 00000000000011b0 t (anonymous namespace)::lower_packed_varyings_visitor::lower_rvalue(ir_rvalue*, unsigned int, ir_variable*, char const*, bool, unsigned int)
00000000003e7b60 0000000000000530 t lower_packed_varyings(void*, unsigned int, unsigned char const*, ir_variable_mode, unsigned int, gl_linked_shader*, bool, bool, bool)
00000000003e8090 0000000000000144 t (anonymous namespace)::lower_packed_varyings_visitor::lower_arraylike(ir_rvalue*, unsigned int, unsigned int, ir_variable*, char const*, bool, unsigned int)
00000000003e81e0 000000000000008c t process_array_ir(void*, ir_dereference_array*, ir_rvalue*)
00000000003e8270 0000000000000060 t process_array_type(glsl_type const*, unsigned int)
00000000003e82d0 0000000000000058 t (anonymous namespace)::flatten_named_interface_blocks_declarations::visit_leave(ir_expression*)
00000000003e8330 0000000000000170 t (anonymous namespace)::flatten_named_interface_blocks_declarations::handle_rvalue(ir_rvalue**)
00000000003e84a0 00000000000000c4 t (anonymous namespace)::flatten_named_interface_blocks_declarations::visit_leave(ir_assignment*)
00000000003e8570 00000000000003f0 t lower_named_interface_blocks(void*, gl_linked_shader*)
00000000003e8960 0000000000000008 t (anonymous namespace)::lower_precision_visitor::visit_enter(ir_texture*)
00000000003e8960 0000000000000008 t (anonymous namespace)::lower_precision_visitor::visit_enter(ir_dereference_array*)
00000000003e8960 0000000000000008 t (anonymous namespace)::lower_precision_visitor::visit_enter(ir_dereference_record*)
00000000003e8960 0000000000000008 t (anonymous namespace)::lower_precision_visitor::visit_enter(ir_call*)
00000000003e8970 00000000000000a4 t (anonymous namespace)::find_lowerable_rvalues_visitor::visit_leave(ir_assignment*)
00000000003e8a20 0000000000000070 t (anonymous namespace)::find_lowerable_rvalues_visitor::visit_enter(ir_expression*)
00000000003e8a90 0000000000000058 t (anonymous namespace)::lower_precision_visitor::visit_leave(ir_expression*)
00000000003e8af0 0000000000000080 t (anonymous namespace)::convert_precision(int, ir_rvalue*)
00000000003e8b70 00000000000000e8 t (anonymous namespace)::lower_precision_visitor::handle_rvalue(ir_rvalue**)
00000000003e8c60 00000000000000c8 t (anonymous namespace)::find_precision_visitor::handle_rvalue(ir_rvalue**)
00000000003e8d30 0000000000000104 t (anonymous namespace)::find_lowerable_rvalues_visitor::visit_enter(ir_dereference_array*)
00000000003e8e40 00000000000001b4 t (anonymous namespace)::find_lowerable_rvalues_visitor::stack_enter(ir_instruction*, void*)
00000000003e9000 000000000000008c t (anonymous namespace)::find_lowerable_rvalues_visitor::visit_enter(ir_texture*)
00000000003e9090 00000000000000f0 t (anonymous namespace)::find_lowerable_rvalues_visitor::visit_enter(ir_dereference_record*)
00000000003e9180 000000000000014c t (anonymous namespace)::find_lowerable_rvalues_visitor::visit_leave(ir_call*)
00000000003e92d0 0000000000000150 t lower_precision(exec_list*)
00000000003e9420 000000000000016c t (anonymous namespace)::find_precision_visitor::visit_enter(ir_call*)
00000000003e9590 0000000000000128 t void std::vector<ir_instruction*, std::allocator<ir_instruction*> >::_M_realloc_insert<ir_instruction* const&>(__gnu_cxx::__normal_iterator<ir_instruction**, std::vector<ir_instruction*, std::allocator<ir_instruction*> > >, ir_instruction* const&)
00000000003e96c0 00000000000001e4 t (anonymous namespace)::find_lowerable_rvalues_visitor::pop_stack_entry()
00000000003e98b0 0000000000000008 t (anonymous namespace)::find_lowerable_rvalues_visitor::stack_leave(ir_instruction*, void*)
00000000003e98c0 00000000000000ec t (anonymous namespace)::find_lowerable_rvalues_visitor::visit(ir_dereference_variable*)
00000000003e99b0 0000000000000064 t (anonymous namespace)::find_lowerable_rvalues_visitor::visit(ir_constant*)
00000000003e9a20 0000000000000324 t (anonymous namespace)::lower_subroutine_visitor::visit_leave(ir_call*)
00000000003e9d50 0000000000000060 t lower_subroutine(exec_list*, _mesa_glsl_parse_state*)
00000000003e9db0 0000000000000154 t (anonymous namespace)::lower_tess_level_visitor::handle_rvalue(ir_rvalue**)
00000000003e9f10 0000000000000150 t (anonymous namespace)::lower_tess_level_visitor::visit(ir_variable*)
00000000003ea060 00000000000000a8 t (anonymous namespace)::lower_tess_level_visitor::is_tess_level_array(ir_rvalue*)
00000000003ea110 0000000000000120 t (anonymous namespace)::lower_tess_level_visitor::fix_lhs(ir_assignment*) [clone .part.0]
00000000003ea230 0000000000000238 t (anonymous namespace)::lower_tess_level_visitor::visit_leave(ir_assignment*)
00000000003ea470 00000000000000a4 t lower_tess_level(gl_linked_shader*)
00000000003ea520 0000000000000288 t (anonymous namespace)::lower_tess_level_visitor::visit_leave(ir_call*)
00000000003ea7b0 00000000000000e8 t (anonymous namespace)::ir_vec_index_to_swizzle_visitor::handle_rvalue(ir_rvalue**)
00000000003ea8a0 000000000000004c t do_vec_index_to_swizzle(exec_list*)
00000000003ea8f0 0000000000000004 t (anonymous namespace)::vector_deref_visitor::~vector_deref_visitor()
00000000003ea8f0 0000000000000004 t (anonymous namespace)::vector_deref_visitor::~vector_deref_visitor()
00000000003ea900 0000000000000008 t (anonymous namespace)::vector_deref_visitor::~vector_deref_visitor()
00000000003ea910 00000000000000e4 t (anonymous namespace)::vector_deref_visitor::handle_rvalue(ir_rvalue**)
00000000003eaa00 00000000000004e8 t (anonymous namespace)::vector_deref_visitor::visit_enter(ir_assignment*)
00000000003eaef0 000000000000007c t lower_vector_derefs(gl_linked_shader*)
00000000003eaf70 0000000000000004 t (anonymous namespace)::vector_insert_visitor::~vector_insert_visitor()
00000000003eaf70 0000000000000004 t (anonymous namespace)::vector_insert_visitor::~vector_insert_visitor()
00000000003eaf80 0000000000000008 t (anonymous namespace)::vector_insert_visitor::~vector_insert_visitor()
00000000003eaf90 0000000000000394 t (anonymous namespace)::vector_insert_visitor::handle_rvalue(ir_rvalue**)
00000000003eb330 0000000000000078 t lower_vector_insert(exec_list*, bool)
00000000003eb3b0 000000000000024c t (anonymous namespace)::lower_vertex_id_visitor::visit(ir_dereference_variable*)
00000000003eb600 00000000000000dc t lower_vertex_id(gl_linked_shader*)
00000000003eb6e0 0000000000000010 t (anonymous namespace)::compute_shader_enabled(_mesa_glsl_parse_state const*)
00000000003eb6f0 00000000000000cc t (anonymous namespace)::lower_shared_reference_visitor::get_shared_offset(ir_variable const*)
00000000003eb7c0 000000000000051c t (anonymous namespace)::lower_shared_reference_visitor::visit_enter(ir_call*)
00000000003ebce0 0000000000000254 t (anonymous namespace)::lower_shared_reference_visitor::visit_enter(ir_assignment*)
00000000003ebf40 00000000000005a4 t (anonymous namespace)::lower_shared_reference_visitor::insert_buffer_access(void*, ir_dereference*, glsl_type const*, ir_rvalue*, unsigned int, int)
00000000003ec4f0 000000000000023c t (anonymous namespace)::lower_shared_reference_visitor::handle_rvalue(ir_rvalue**)
00000000003ec730 00000000000000e0 t lower_shared_reference(gl_context*, gl_shader_program*, gl_linked_shader*)
00000000003ec810 0000000000000044 t (anonymous namespace)::shader_storage_buffer_object(_mesa_glsl_parse_state const*)
00000000003ec860 0000000000000080 t (anonymous namespace)::lower_ubo_reference_visitor::ssbo_access_params()
00000000003ec8e0 000000000000052c t (anonymous namespace)::lower_ubo_reference_visitor::setup_for_load_or_store(void*, ir_variable*, ir_rvalue*, ir_rvalue**, unsigned int*, bool*, glsl_type const**, glsl_interface_packing)
00000000003ece10 00000000000005bc t (anonymous namespace)::lower_ubo_reference_visitor::visit_enter(ir_call*)
00000000003ed3d0 000000000000028c t (anonymous namespace)::lower_ubo_reference_visitor::handle_rvalue(ir_rvalue**)
00000000003ed660 0000000000000040 t (anonymous namespace)::lower_ubo_reference_visitor::visit_enter(ir_texture*)
00000000003ed6a0 0000000000000348 t (anonymous namespace)::lower_ubo_reference_visitor::calculate_ssbo_unsized_array_length(ir_expression*)
00000000003ed9f0 00000000000000a0 t (anonymous namespace)::lower_ubo_reference_visitor::visit_enter(ir_expression*)
00000000003eda90 00000000000003c8 t (anonymous namespace)::lower_ubo_reference_visitor::ssbo_store(void*, ir_rvalue*, ir_rvalue*, unsigned int)
00000000003ede60 0000000000000540 t (anonymous namespace)::lower_ubo_reference_visitor::insert_buffer_access(void*, ir_dereference*, glsl_type const*, ir_rvalue*, unsigned int, int)
00000000003ee3a0 0000000000000684 t (anonymous namespace)::lower_ubo_reference_visitor::visit_enter(ir_assignment*)
00000000003eea30 0000000000000074 t lower_ubo_reference(gl_linked_shader*, bool, bool)
00000000003eeab0 0000000000000094 t (anonymous namespace)::lower_xfb_var_splicer::visit_leave(ir_return*)
00000000003eeb50 000000000000007c t get_field_name(char const*)
00000000003eebd0 0000000000000200 t get_deref(void*, char const*, gl_linked_shader*, ir_dereference**, glsl_type const**)
00000000003eedd0 00000000000000d0 t (anonymous namespace)::lower_xfb_var_splicer::visit_leave(ir_function_signature*)
00000000003eeea0 0000000000000214 t lower_xfb_varying(void*, gl_linked_shader*, char const*)
00000000003ef0c0 0000000000000004 t (anonymous namespace)::ir_algebraic_visitor::~ir_algebraic_visitor()
00000000003ef0c0 0000000000000004 t (anonymous namespace)::ir_algebraic_visitor::~ir_algebraic_visitor()
00000000003ef0d0 000000000000002c t (anonymous namespace)::ir_algebraic_visitor::visit_enter(ir_assignment*)
00000000003ef100 000000000000001c t is_vec_negative_one(ir_constant*)
00000000003ef120 0000000000000008 t (anonymous namespace)::ir_algebraic_visitor::~ir_algebraic_visitor()
00000000003ef130 00000000000000d0 t is_greater_than_zero(ir_constant*)
00000000003ef200 00000000000000dc t is_less_than_one(ir_constant*)
00000000003ef2e0 000000000000026c t (anonymous namespace)::ir_algebraic_visitor::reassociate_constant(ir_expression*, int, ir_constant*, ir_expression*) [clone .part.0] [clone .isra.0]
00000000003ef550 0000000000000020 t (anonymous namespace)::ir_algebraic_visitor::reassociate_constant(ir_expression*, int, ir_constant*, ir_expression*) [clone .isra.0]
00000000003ef570 0000000000000040 t ir_builder::operand::operand(ir_variable*)
00000000003ef570 0000000000000040 W ir_builder::operand::operand(ir_variable*)
00000000003ef5b0 0000000000000040 t ir_builder::deref::deref(ir_variable*)
00000000003ef5b0 0000000000000040 W ir_builder::deref::deref(ir_variable*)
00000000003ef5f0 0000000000001d1c t (anonymous namespace)::ir_algebraic_visitor::handle_rvalue(ir_rvalue**)
00000000003f1310 0000000000000068 t do_algebraic(exec_list*, bool, gl_shader_compiler_options const*)
00000000003f1380 0000000000000010 t (anonymous namespace)::ir_array_reference_visitor::visit_leave(ir_assignment*)
00000000003f1390 0000000000000004 W ir_array_splitting_visitor::~ir_array_splitting_visitor()
00000000003f1390 0000000000000004 W ir_array_splitting_visitor::~ir_array_splitting_visitor()
00000000003f13a0 0000000000000060 t (anonymous namespace)::ir_array_reference_visitor::visit_enter(ir_assignment*)
00000000003f1400 0000000000000020 t (anonymous namespace)::ir_array_reference_visitor::visit_enter(ir_function_signature*)
00000000003f1420 0000000000000008 W ir_array_splitting_visitor::~ir_array_splitting_visitor()
00000000003f1430 0000000000000120 t (anonymous namespace)::ir_array_reference_visitor::get_variable_entry(ir_variable*)
00000000003f1550 0000000000000040 t (anonymous namespace)::ir_array_reference_visitor::visit(ir_dereference_variable*)
00000000003f1590 0000000000000024 t (anonymous namespace)::ir_array_reference_visitor::visit(ir_variable*)
00000000003f15c0 0000000000000074 t (anonymous namespace)::ir_array_reference_visitor::visit_enter(ir_dereference_array*)
00000000003f1640 0000000000000138 t ir_array_splitting_visitor::split_deref(ir_dereference**)
00000000003f1780 0000000000000048 T ir_array_splitting_visitor::handle_rvalue(ir_rvalue**)
00000000003f17d0 000000000000039c t optimize_split_arrays(exec_list*, bool)
00000000003f1b70 000000000000037c T ir_array_splitting_visitor::visit_leave(ir_assignment*)
00000000003f1ef0 00000000000000c8 t (anonymous namespace)::opt_conditional_discard_visitor::visit_leave(ir_if*)
00000000003f1fc0 000000000000004c t opt_conditional_discard(exec_list*)
00000000003f2010 0000000000000004 t (anonymous namespace)::ir_constant_folding_visitor::~ir_constant_folding_visitor()
00000000003f2010 0000000000000004 t (anonymous namespace)::ir_constant_folding_visitor::~ir_constant_folding_visitor()
00000000003f2020 0000000000000008 t (anonymous namespace)::ir_constant_folding_visitor::~ir_constant_folding_visitor()
00000000003f2030 0000000000000110 t ir_constant_fold(ir_rvalue**)
00000000003f2140 0000000000000034 t (anonymous namespace)::ir_constant_folding_visitor::handle_rvalue(ir_rvalue**)
00000000003f2180 000000000000008c t (anonymous namespace)::ir_constant_folding_visitor::visit_enter(ir_discard*)
00000000003f2210 000000000000018c t (anonymous namespace)::ir_constant_folding_visitor::visit_enter(ir_call*)
00000000003f23a0 00000000000000c4 t (anonymous namespace)::ir_constant_folding_visitor::visit_enter(ir_assignment*)
00000000003f2470 0000000000000050 t do_constant_folding(exec_list*)
00000000003f24c0 0000000000000008 t (anonymous namespace)::ir_constant_propagation_visitor::visit_enter(ir_function*)
00000000003f24d0 00000000000002c0 t (anonymous namespace)::ir_constant_propagation_visitor::constant_propagation(ir_rvalue**)
00000000003f2790 000000000000008c t (anonymous namespace)::ir_constant_propagation_visitor::visit_enter(ir_function_signature*)
00000000003f2820 0000000000000134 t (anonymous namespace)::ir_constant_propagation_visitor::kill(ir_variable*, unsigned int)
00000000003f2960 000000000000013c t (anonymous namespace)::ir_constant_propagation_visitor::handle_loop(ir_loop*, bool)
00000000003f2aa0 000000000000003c t (anonymous namespace)::ir_constant_propagation_visitor::visit_enter(ir_loop*)
00000000003f2ae0 00000000000000a8 t (anonymous namespace)::ir_constant_propagation_visitor::constant_folding(ir_rvalue**)
00000000003f2b90 000000000000002c t (anonymous namespace)::ir_constant_propagation_visitor::handle_rvalue(ir_rvalue**)
00000000003f2bc0 0000000000000138 t (anonymous namespace)::ir_constant_propagation_visitor::visit_leave(ir_assignment*)
00000000003f2d00 00000000000000f4 t (anonymous namespace)::ir_constant_propagation_visitor::handle_if_block(exec_list*, hash_table*, bool*) [clone .constprop.0]
00000000003f2e00 0000000000000124 t (anonymous namespace)::ir_constant_propagation_visitor::visit_enter(ir_call*)
00000000003f2f30 0000000000000124 t (anonymous namespace)::ir_constant_propagation_visitor::visit_enter(ir_if*)
00000000003f3060 00000000000000b4 t do_constant_propagation(exec_list*)
00000000003f3120 0000000000000008 t (anonymous namespace)::ir_constant_variable_visitor::visit_enter(ir_dereference_variable*)
00000000003f3130 0000000000000084 t (anonymous namespace)::ir_constant_variable_visitor::visit(ir_variable*)
00000000003f31c0 0000000000000180 t (anonymous namespace)::ir_constant_variable_visitor::visit_enter(ir_call*)
00000000003f3340 00000000000000f4 t (anonymous namespace)::ir_constant_variable_visitor::visit_enter(ir_assignment*)
00000000003f3440 0000000000000108 t do_constant_variable(exec_list*)
00000000003f3550 0000000000000090 t do_constant_variable_unlinked(exec_list*)
00000000003f35e0 0000000000000008 t (anonymous namespace)::ir_copy_propagation_elements_visitor::visit_leave(ir_swizzle*)
00000000003f35f0 000000000000021c t (anonymous namespace)::ir_copy_propagation_elements_visitor::handle_rvalue(ir_rvalue**)
00000000003f3810 000000000000009c t (anonymous namespace)::ir_copy_propagation_elements_visitor::visit(ir_dereference_variable*)
00000000003f38b0 00000000000000bc t (anonymous namespace)::ir_copy_propagation_elements_visitor::handle_if_block(exec_list*, exec_list*, bool*) [clone .constprop.0]
00000000003f3970 00000000000000cc t (anonymous namespace)::ir_copy_propagation_elements_visitor::visit_enter(ir_function_signature*)
00000000003f3a40 0000000000000328 t (anonymous namespace)::ir_copy_propagation_elements_visitor::kill((anonymous namespace)::kill_entry*)
00000000003f3d70 000000000000012c t (anonymous namespace)::ir_copy_propagation_elements_visitor::visit_enter(ir_if*)
00000000003f3ea0 0000000000000174 t (anonymous namespace)::ir_copy_propagation_elements_visitor::handle_loop(ir_loop*, bool)
00000000003f4020 000000000000003c t (anonymous namespace)::ir_copy_propagation_elements_visitor::visit_enter(ir_loop*)
00000000003f4060 00000000000001a8 t (anonymous namespace)::ir_copy_propagation_elements_visitor::visit_enter(ir_call*)
00000000003f4210 000000000000085c t (anonymous namespace)::ir_copy_propagation_elements_visitor::visit_leave(ir_assignment*)
00000000003f4a70 00000000000000dc t do_copy_propagation_elements(exec_list*)
00000000003f4b50 0000000000000148 t optimize_dead_builtin_variables(exec_list*, ir_variable_mode)
00000000003f4ca0 00000000000001b0 t (anonymous namespace)::replace_varyings_visitor::visit(ir_variable*)
00000000003f4e50 00000000000000b0 t (anonymous namespace)::varying_info_visitor::visit(ir_variable*)
00000000003f4f00 00000000000000d4 t (anonymous namespace)::varying_info_visitor::visit(ir_dereference_variable*)
00000000003f4fe0 00000000000001f0 t (anonymous namespace)::varying_info_visitor::visit_enter(ir_dereference_array*)
00000000003f51d0 00000000000002a4 t (anonymous namespace)::replace_varyings_visitor::handle_rvalue(ir_rvalue**)
00000000003f5480 0000000000000064 t (anonymous namespace)::replace_varyings_visitor::visit_leave(ir_assignment*)
00000000003f54f0 0000000000000464 t (anonymous namespace)::replace_varyings_visitor::replace_varyings_visitor(gl_linked_shader*, (anonymous namespace)::varying_info_visitor const*, unsigned int, unsigned int, bool)
00000000003f54f0 0000000000000464 t (anonymous namespace)::replace_varyings_visitor::replace_varyings_visitor(gl_linked_shader*, (anonymous namespace)::varying_info_visitor const*, unsigned int, unsigned int, bool)
00000000003f5960 0000000000000434 t do_dead_builtin_varyings(gl_context*, gl_linked_shader*, gl_linked_shader*, unsigned int, tfeedback_decl*)
00000000003f5da0 00000000000001cc t do_dead_code(exec_list*, bool)
00000000003f5f70 0000000000000094 t do_dead_code_unlinked(exec_list*)
00000000003f6010 000000000000002c t (anonymous namespace)::array_index_visit::visit_enter(ir_dereference_array*)
00000000003f6040 0000000000000128 t (anonymous namespace)::kill_for_derefs_visitor::visit(ir_swizzle*)
00000000003f6170 0000000000000078 t (anonymous namespace)::kill_for_derefs_visitor::visit_leave(ir_emit_vertex*)
00000000003f61f0 0000000000000464 t dead_code_local_basic_block(ir_instruction*, ir_instruction*, void*)
00000000003f6660 00000000000000c4 t (anonymous namespace)::kill_for_derefs_visitor::visit(ir_dereference_variable*)
00000000003f6730 0000000000000028 t do_dead_code_local(exec_list*)
00000000003f6760 0000000000000080 t (anonymous namespace)::ir_dead_functions_visitor::get_signature_entry(ir_function_signature*)
00000000003f67e0 0000000000000028 t (anonymous namespace)::ir_dead_functions_visitor::visit_enter(ir_call*)
00000000003f6810 0000000000000048 t (anonymous namespace)::ir_dead_functions_visitor::visit_enter(ir_function_signature*)
00000000003f6860 0000000000000188 t do_dead_functions(exec_list*)
00000000003f69f0 0000000000000008 t (anonymous namespace)::nested_if_flattener::visit_enter(ir_assignment*)
00000000003f6a00 00000000000000fc t (anonymous namespace)::nested_if_flattener::visit_leave(ir_if*)
00000000003f6b00 000000000000004c t opt_flatten_nested_if_blocks(exec_list*)
00000000003f6b50 0000000000000178 t (anonymous namespace)::matrix_flipper::visit_enter(ir_expression*)
00000000003f6cd0 00000000000000d4 t opt_flip_matrices(exec_list*)
00000000003f6db0 0000000000000004 t (anonymous namespace)::ir_function_inlining_visitor::~ir_function_inlining_visitor()
00000000003f6db0 0000000000000004 t (anonymous namespace)::ir_function_inlining_visitor::~ir_function_inlining_visitor()
00000000003f6dc0 0000000000000008 t (anonymous namespace)::ir_function_inlining_visitor::visit_enter(ir_swizzle*)
00000000003f6dc0 0000000000000008 t (anonymous namespace)::ir_function_inlining_visitor::visit_enter(ir_texture*)
00000000003f6dc0 0000000000000008 t (anonymous namespace)::ir_function_inlining_visitor::visit_enter(ir_expression*)
00000000003f6dc0 0000000000000008 t (anonymous namespace)::ir_function_inlining_visitor::visit_enter(ir_return*)
00000000003f6dd0 0000000000000004 W ir_variable_replacement_visitor::~ir_variable_replacement_visitor()
00000000003f6dd0 0000000000000004 W ir_variable_replacement_visitor::~ir_variable_replacement_visitor()
00000000003f6de0 0000000000000008 t (anonymous namespace)::ir_function_inlining_visitor::~ir_function_inlining_visitor()
00000000003f6df0 0000000000000008 W ir_variable_replacement_visitor::~ir_variable_replacement_visitor()
00000000003f6e00 0000000000000138 t (anonymous namespace)::ir_save_lvalue_visitor::visit_enter(ir_dereference_array*)
00000000003f6f40 00000000000000cc t replace_return_with_assignment(ir_instruction*, void*)
00000000003f7010 00000000000000b0 T ir_variable_replacement_visitor::visit_leave(ir_expression*)
00000000003f70c0 0000000000000074 T ir_variable_replacement_visitor::visit_leave(ir_texture*)
00000000003f7140 0000000000000088 T ir_variable_replacement_visitor::visit_leave(ir_dereference_array*)
00000000003f7140 0000000000000088 T ir_variable_replacement_visitor::visit_leave(ir_dereference_record*)
00000000003f71d0 0000000000000088 T ir_variable_replacement_visitor::visit_leave(ir_return*)
00000000003f7260 000000000000004c t do_function_inlining(exec_list*)
00000000003f72b0 000000000000055c t ir_call::generate_inline(ir_instruction*)
00000000003f7810 0000000000000068 t (anonymous namespace)::ir_function_inlining_visitor::visit_enter(ir_call*)
00000000003f7880 0000000000000070 t ir_variable_replacement_visitor::replace_deref(ir_dereference**)
00000000003f78f0 00000000000000b8 T ir_variable_replacement_visitor::visit_leave(ir_call*)
00000000003f79b0 00000000000000a0 T ir_variable_replacement_visitor::visit_leave(ir_assignment*)
00000000003f7a50 0000000000000008 t (anonymous namespace)::ir_if_simplification_visitor::visit_enter(ir_assignment*)
00000000003f7a60 00000000000001e0 t (anonymous namespace)::ir_if_simplification_visitor::visit_leave(ir_if*)
00000000003f7c40 000000000000004c t do_if_simplification(exec_list*)
00000000003f7c90 0000000000000250 t (anonymous namespace)::compare_components(ir_constant*, ir_constant*)
00000000003f7ee0 000000000000028c t (anonymous namespace)::combine_constant(bool, ir_constant*, ir_constant*)
00000000003f8170 00000000000001b4 t (anonymous namespace)::get_range(ir_rvalue*)
00000000003f8330 0000000000000324 t (anonymous namespace)::ir_minmax_visitor::prune_expression(ir_expression*, (anonymous namespace)::minmax_range)
00000000003f8660 00000000000000e0 t (anonymous namespace)::ir_minmax_visitor::handle_rvalue(ir_rvalue**)
00000000003f8740 0000000000000050 t do_minmax_prune(exec_list*)
00000000003f8790 000000000000002c t (anonymous namespace)::ir_rebalance_visitor::visit_enter(ir_assignment*)
00000000003f87c0 0000000000000180 t handle_expression(ir_expression*)
00000000003f8940 0000000000000064 t update_types(ir_instruction*, void*)
00000000003f89b0 00000000000000a8 t (anonymous namespace)::ir_rebalance_visitor::handle_rvalue(ir_rvalue**)
00000000003f8a60 0000000000000124 t is_reduction(ir_instruction*, void*)
00000000003f8b90 000000000000004c t do_rebalance_tree(exec_list*)
00000000003f8be0 0000000000000008 t (anonymous namespace)::redundant_jumps_visitor::visit_enter(ir_assignment*)
00000000003f8bf0 00000000000000d0 t (anonymous namespace)::redundant_jumps_visitor::visit_leave(ir_if*)
00000000003f8cc0 0000000000000054 t (anonymous namespace)::redundant_jumps_visitor::visit_leave(ir_loop*)
00000000003f8d20 000000000000004c t optimize_redundant_jumps(exec_list*)
00000000003f8d70 0000000000000008 t (anonymous namespace)::ir_structure_reference_visitor::visit_enter(ir_dereference_record*)
00000000003f8d80 0000000000000004 t (anonymous namespace)::ir_structure_splitting_visitor::~ir_structure_splitting_visitor()
00000000003f8d80 0000000000000004 t (anonymous namespace)::ir_structure_splitting_visitor::~ir_structure_splitting_visitor()
00000000003f8d90 0000000000000020 t (anonymous namespace)::ir_structure_reference_visitor::visit_enter(ir_function_signature*)
00000000003f8db0 0000000000000008 t (anonymous namespace)::ir_structure_splitting_visitor::~ir_structure_splitting_visitor()
00000000003f8dc0 00000000000000d0 t (anonymous namespace)::ir_structure_reference_visitor::get_variable_entry(ir_variable*)
00000000003f8e90 0000000000000024 t (anonymous namespace)::ir_structure_reference_visitor::visit(ir_variable*)
00000000003f8ec0 000000000000004c t (anonymous namespace)::ir_structure_reference_visitor::visit_enter(ir_assignment*)
00000000003f8f10 0000000000000064 t (anonymous namespace)::ir_structure_reference_visitor::visit(ir_dereference_variable*)
00000000003f8f80 00000000000000c0 t (anonymous namespace)::ir_structure_splitting_visitor::handle_rvalue(ir_rvalue**)
00000000003f9040 0000000000000350 t (anonymous namespace)::ir_structure_splitting_visitor::visit_leave(ir_assignment*)
00000000003f9390 0000000000000328 t do_structure_splitting(exec_list*)
00000000003f96c0 00000000000001fc t (anonymous namespace)::ir_opt_swizzle_visitor::handle_rvalue(ir_rvalue**)
00000000003f98c0 0000000000000050 t optimize_swizzles(exec_list*)
00000000003f9910 0000000000000008 t (anonymous namespace)::ir_tree_grafting_visitor::visit_enter(ir_loop*)
00000000003f9920 0000000000000008 t (anonymous namespace)::ir_tree_grafting_visitor::visit_enter(ir_function*)
00000000003f9920 0000000000000008 t (anonymous namespace)::ir_tree_grafting_visitor::visit_enter(ir_function_signature*)
00000000003f9930 00000000000001ec t (anonymous namespace)::tree_grafting_basic_block(ir_instruction*, ir_instruction*, void*)
00000000003f9b20 0000000000000040 t (anonymous namespace)::ir_tree_grafting_visitor::check_graft(ir_instruction*, ir_variable*)
00000000003f9b60 0000000000000064 t (anonymous namespace)::ir_tree_grafting_visitor::do_graft(ir_rvalue**)
00000000003f9bd0 0000000000000020 t (anonymous namespace)::ir_tree_grafting_visitor::visit_enter(ir_if*)
00000000003f9bf0 000000000000012c t (anonymous namespace)::ir_tree_grafting_visitor::visit_enter(ir_call*)
00000000003f9d20 000000000000001c t (anonymous namespace)::ir_tree_grafting_visitor::visit_enter(ir_swizzle*)
00000000003f9d40 00000000000000d4 t (anonymous namespace)::ir_tree_grafting_visitor::visit_enter(ir_texture*)
00000000003f9e20 0000000000000068 t (anonymous namespace)::ir_tree_grafting_visitor::visit_enter(ir_expression*)
00000000003f9e90 0000000000000070 t (anonymous namespace)::ir_tree_grafting_visitor::visit_leave(ir_assignment*)
00000000003f9f00 000000000000002c t (anonymous namespace)::dereferences_variable_callback(ir_instruction*, void*)
00000000003f9f30 0000000000000064 t do_tree_grafting(exec_list*)
00000000003f9fa0 0000000000000098 t (anonymous namespace)::ir_vectorize_visitor::visit_enter(ir_swizzle*)
00000000003fa040 0000000000000010 t (anonymous namespace)::ir_vectorize_visitor::visit_enter(ir_texture*)
00000000003fa040 0000000000000010 t (anonymous namespace)::ir_vectorize_visitor::visit_enter(ir_dereference_array*)
00000000003fa050 0000000000000048 t (anonymous namespace)::ir_vectorize_visitor::visit_enter(ir_expression*)
00000000003fa0a0 0000000000000134 t (anonymous namespace)::ir_vectorize_visitor::try_vectorize()
00000000003fa1e0 0000000000000058 t (anonymous namespace)::ir_vectorize_visitor::visit_enter(ir_if*)
00000000003fa240 00000000000000e8 t (anonymous namespace)::ir_vectorize_visitor::visit_enter(ir_assignment*)
00000000003fa330 0000000000000040 t (anonymous namespace)::ir_vectorize_visitor::visit_enter(ir_loop*)
00000000003fa370 0000000000000154 t rewrite_swizzle(ir_instruction*, void*)
00000000003fa4d0 0000000000000064 t (anonymous namespace)::ir_vectorize_visitor::visit_leave(ir_assignment*)
00000000003fa540 0000000000000064 t do_vectorize(exec_list*)
00000000003fa5b0 0000000000000004 t (anonymous namespace)::ir_invariance_propagation_visitor::~ir_invariance_propagation_visitor()
00000000003fa5b0 0000000000000004 t (anonymous namespace)::ir_invariance_propagation_visitor::~ir_invariance_propagation_visitor()
00000000003fa5c0 0000000000000058 t (anonymous namespace)::ir_invariance_propagation_visitor::visit_enter(ir_assignment*)
00000000003fa620 0000000000000010 t (anonymous namespace)::ir_invariance_propagation_visitor::visit_leave(ir_assignment*)
00000000003fa630 0000000000000008 t (anonymous namespace)::ir_invariance_propagation_visitor::~ir_invariance_propagation_visitor()
00000000003fa640 0000000000000060 t (anonymous namespace)::ir_invariance_propagation_visitor::visit(ir_dereference_variable*)
00000000003fa6a0 0000000000000058 t propagate_invariance(exec_list*)
00000000003fa700 0000000000000048 t string_to_uint_map_ctor
00000000003fa750 0000000000000074 t string_to_uint_map_dtor
00000000003fa7d0 00000000000000c0 t yytnamerr(char*, char const*)
00000000003fa890 0000000000000280 t yysyntax_error(unsigned long*, char**, short*, int)
00000000003fab10 0000000000000024 t _mesa_glsl_parse_state::has_shader_storage_buffer_objects() const [clone .part.0] [clone .isra.0]
00000000003fab40 0000000000000038 t match_layout_qualifier(char const*, char const*, _mesa_glsl_parse_state*) [clone .isra.0]
00000000003fab80 000000000000004c t _mesa_glsl_parse_state::has_tessellation_shader() const
00000000003fabd0 0000000000007ec4 t _mesa_glsl_parse(_mesa_glsl_parse_state*)
0000000000402aa0 00000000000000f8 t yy_get_previous_state(void*)
0000000000402ba0 000000000000022c t literal_integer(char*, int, _mesa_glsl_parse_state*, YYSTYPE*, YYLTYPE*, int)
0000000000402dd0 00000000000000b0 t classify_identifier(_mesa_glsl_parse_state*, char const*, unsigned int, YYSTYPE*)
0000000000402e80 0000000000000030 t yy_fatal_error(char const*, void*) [clone .constprop.0]
0000000000402eb0 00000000000000a0 t _mesa_glsl_lexer_ensure_buffer_stack(void*)
0000000000402f50 00000000000000b4 t _mesa_glsl_lexer__switch_to_buffer(yy_buffer_state*, void*)
0000000000403010 000000000000006c t _mesa_glsl_lexer__delete_buffer(yy_buffer_state*, void*)
0000000000403080 000000000000006c t _mesa_glsl_lexer__flush_buffer(yy_buffer_state*, void*)
00000000004030f0 000000000000007c t _mesa_glsl_lexer__init_buffer(yy_buffer_state*, __sFILE*, void*)
0000000000403170 000000000000007c t _mesa_glsl_lexer__create_buffer(__sFILE*, int, void*)
00000000004031f0 00000000000000bc t _mesa_glsl_lexer_restart(__sFILE*, void*)
00000000004032b0 000000000000d6a0 t _mesa_glsl_lexer_lex(YYSTYPE*, YYLTYPE*, void*)
0000000000410950 000000000000008c t _mesa_glsl_lexer_pop_buffer_state(void*)
00000000004109e0 00000000000000bc t _mesa_glsl_lexer__scan_buffer(char*, unsigned long, void*)
0000000000410aa0 00000000000000a4 t _mesa_glsl_lexer__scan_bytes(char const*, int, void*)
0000000000410b50 0000000000000098 t _mesa_glsl_lexer_lex_init_extra(_mesa_glsl_parse_state*, void**)
0000000000410bf0 000000000000007c t _mesa_glsl_lexer_lex_destroy(void*)
0000000000410c70 000000000000003c t _mesa_glsl_lexer_ctor(_mesa_glsl_parse_state*, char const*)
0000000000410cb0 0000000000000008 t _mesa_glsl_lexer_dtor(_mesa_glsl_parse_state*)
0000000000410cc0 00000000000000d0 t glcpp_error
0000000000410d90 00000000000000bc t glcpp_warning
0000000000410e50 0000000000000330 t glcpp_preprocess
0000000000411180 00000000000000e0 t yy_get_previous_state
0000000000411260 0000000000000030 t yy_fatal_error.constprop.0
0000000000411290 00000000000000a0 t glcpp_ensure_buffer_stack
0000000000411330 00000000000000b4 t glcpp__switch_to_buffer
00000000004113f0 000000000000006c t glcpp__delete_buffer
0000000000411460 000000000000006c t glcpp__flush_buffer
00000000004114d0 000000000000007c t glcpp__init_buffer
0000000000411550 000000000000007c t glcpp__create_buffer
00000000004115d0 00000000000000bc t glcpp_restart
0000000000411690 0000000000002710 t glcpp_lex
0000000000413da0 000000000000008c t glcpp_pop_buffer_state
0000000000413e30 00000000000000bc t glcpp__scan_buffer
0000000000413ef0 00000000000000a4 t glcpp__scan_bytes
0000000000413fa0 0000000000000098 t glcpp_lex_init_extra
0000000000414040 000000000000007c t glcpp_lex_destroy
00000000004140c0 0000000000000034 t glcpp_lex_set_source_string
0000000000414100 00000000000000c0 t yytnamerr
00000000004141c0 0000000000000280 t yysyntax_error
0000000000414440 0000000000000088 t yy_stack_print
00000000004144d0 00000000000000d4 t _check_for_reserved_macro_name
00000000004145b0 00000000000000b0 t _glcpp_parser_skip_stack_push_if
0000000000414660 000000000000019c t _glcpp_parser_evaluate_defined_in_list
0000000000414800 0000000000000124 t yy_symbol_print.constprop.0
0000000000414930 0000000000000078 t yydestruct.isra.0
00000000004149b0 0000000000000288 t _macro_equal
0000000000414c40 000000000000009c t glcpp_parser_copy_defines
0000000000414ce0 00000000000000c8 t _define_object_macro
0000000000414db0 0000000000000130 t _define_function_macro
0000000000414ee0 00000000000000d0 t _token_list_copy
0000000000414fb0 00000000000000a0 t _token_list_create_with_one_ival
0000000000415050 00000000000000b0 t add_builtin_define
0000000000415100 0000000000000264 t _glcpp_parser_handle_version_declaration.part.0
0000000000415370 00000000000001a4 t _token_print
0000000000415520 00000000000004b8 t _glcpp_parser_apply_pastes
00000000004159e0 0000000000000900 t _glcpp_parser_expand_token_list
00000000004162e0 000000000000019c t _glcpp_parser_expand_and_lex_from
0000000000416480 0000000000000108 t glcpp_parser_create
0000000000416590 000000000000203c t glcpp_parser_parse
00000000004185d0 0000000000000034 t glcpp_parser_destroy
0000000000418610 000000000000002c t glcpp_parser_resolve_implicit_version
0000000000418640 0000000000000060 T glsl_type::record_key_hash(void const*)
00000000004186a0 000000000000005c t hash_free_type_function(hash_entry*)
0000000000418700 0000000000000084 t glsl_type::glsl_type(unsigned int, glsl_base_type, unsigned int, unsigned int, char const*, unsigned int, bool)
0000000000418700 0000000000000084 T glsl_type::glsl_type(unsigned int, glsl_base_type, unsigned int, unsigned int, char const*, unsigned int, bool)
0000000000418790 0000000000000074 t glsl_type::glsl_type(unsigned int, glsl_base_type, glsl_sampler_dim, bool, bool, glsl_base_type, char const*)
0000000000418790 0000000000000074 T glsl_type::glsl_type(unsigned int, glsl_base_type, glsl_sampler_dim, bool, bool, glsl_base_type, char const*)
0000000000418810 00000000000000d8 t glsl_type::glsl_type(glsl_struct_field const*, unsigned int, char const*, bool)
0000000000418810 00000000000000d8 T glsl_type::glsl_type(glsl_struct_field const*, unsigned int, char const*, bool)
00000000004188f0 00000000000000e0 t glsl_type::glsl_type(glsl_struct_field const*, unsigned int, glsl_interface_packing, bool, char const*)
00000000004188f0 00000000000000e0 T glsl_type::glsl_type(glsl_struct_field const*, unsigned int, glsl_interface_packing, bool, char const*)
00000000004189d0 0000000000000008 t glsl_type::~glsl_type()
00000000004189d0 0000000000000008 T glsl_type::~glsl_type()
00000000004189e0 0000000000000088 t glsl_type::contains_sampler() const
0000000000418a70 0000000000000078 t glsl_type::contains_array() const
0000000000418af0 000000000000009c t glsl_type::contains_integer() const
0000000000418b90 0000000000000088 t glsl_type::contains_double() const
0000000000418c20 0000000000000098 t glsl_type::contains_opaque() const
0000000000418cc0 0000000000000088 t glsl_type::contains_subroutine() const
0000000000418d50 00000000000000c4 t glsl_type::sampler_index() const
0000000000418e20 0000000000000088 t glsl_type::contains_image() const
0000000000418eb0 00000000000000fc t glsl_type::get_base_type() const
0000000000418fb0 0000000000000048 t glsl_type::get_scalar_type() const
0000000000419000 000000000000003c t glsl_type_singleton_init_or_ref
0000000000419040 00000000000000e4 t glsl_type_singleton_decref
0000000000419130 0000000000000158 t glsl_type::glsl_type(glsl_type const*, unsigned int, unsigned int)
0000000000419130 0000000000000158 T glsl_type::glsl_type(glsl_type const*, unsigned int, unsigned int)
0000000000419290 00000000000000dc t glsl_type::vec(unsigned int)
0000000000419370 00000000000000dc t glsl_type::f16vec(unsigned int)
0000000000419450 00000000000000dc t glsl_type::dvec(unsigned int)
0000000000419530 00000000000000dc t glsl_type::ivec(unsigned int)
0000000000419610 00000000000000dc t glsl_type::uvec(unsigned int)
00000000004196f0 00000000000000dc t glsl_type::bvec(unsigned int)
00000000004197d0 00000000000000dc t glsl_type::i64vec(unsigned int)
00000000004198b0 00000000000000dc t glsl_type::u64vec(unsigned int)
0000000000419990 00000000000000dc t glsl_type::i16vec(unsigned int)
0000000000419a70 00000000000000dc t glsl_type::u16vec(unsigned int)
0000000000419b50 00000000000000dc t glsl_type::i8vec(unsigned int)
0000000000419c30 00000000000000dc t glsl_type::u8vec(unsigned int)
0000000000419d10 00000000000005a8 t glsl_type::get_instance(unsigned int, unsigned int, unsigned int, unsigned int, bool)
000000000041a2c0 00000000000003c0 t glsl_type::get_sampler_instance(glsl_sampler_dim, bool, bool, glsl_base_type)
000000000041a680 0000000000000390 t glsl_type::get_image_instance(glsl_sampler_dim, bool, glsl_base_type)
000000000041aa10 00000000000000f8 t glsl_type::get_array_instance(glsl_type const*, unsigned int, unsigned int)
000000000041ab10 00000000000000c0 t glsl_type::compare_no_precision(glsl_type const*) const
000000000041abd0 0000000000000170 t glsl_type::record_compare(glsl_type const*, bool, bool, bool) const [clone .part.0]
000000000041ad40 000000000000007c T glsl_type::record_key_compare(void const*, void const*)
000000000041adc0 000000000000004c t glsl_type::record_compare(glsl_type const*, bool, bool, bool) const
000000000041ae10 0000000000000100 t glsl_type::get_struct_instance(glsl_struct_field const*, unsigned int, char const*, bool)
000000000041af10 000000000000010c t glsl_type::get_interface_instance(glsl_struct_field const*, unsigned int, glsl_interface_packing, bool, char const*)
000000000041b020 000000000000011c t glsl_type::get_subroutine_instance(char const*)
000000000041b140 000000000000036c t glsl_type::get_mul_type(glsl_type const*, glsl_type const*)
000000000041b4b0 00000000000000a4 t glsl_type::field_type(char const*) const
000000000041b560 0000000000000090 t glsl_type::field_index(char const*) const
000000000041b5f0 0000000000000138 t glsl_type::component_slots() const
000000000041b730 0000000000000154 t glsl_type::struct_location_offset(unsigned int) const
000000000041b890 00000000000000f0 t glsl_type::uniform_locations() const
000000000041b980 0000000000000138 t glsl_type::varying_count() const
000000000041bac0 00000000000001ac t glsl_type::can_implicitly_convert_to(glsl_type const*, _mesa_glsl_parse_state*) const
000000000041bc70 0000000000000264 t glsl_type::std140_base_alignment(bool) const
000000000041bee0 0000000000000390 t glsl_type::std140_size(bool) const
000000000041c270 00000000000001f0 t glsl_type::std430_base_alignment(bool) const
000000000041c460 0000000000000310 t glsl_type::std430_size(bool) const
000000000041c770 000000000000005c t glsl_type::std430_array_stride(bool) const
000000000041c7d0 0000000000000160 t glsl_type::count_vec4_slots(bool, bool) const
000000000041c930 0000000000000064 t glsl_type::coordinate_components() const
000000000041c9a0 0000000000000378 t encode_type_to_blob
000000000041cd20 00000000000002a4 t decode_type_from_blob
000000000041cfd0 0000000000000080 t _mesa_shader_stage_to_string
000000000041d050 000000000000013c t cso_set_vertex_elements_direct
000000000041d190 0000000000000114 t cso_single_sampler.part.0
000000000041d2b0 0000000000000078 t cso_init_vbuf.constprop.0
000000000041d330 000000000000026c t sanitize_hash
000000000041d5a0 000000000000016c t cso_set_vertex_buffers_direct
000000000041d710 00000000000005a4 t cso_destroy_context
000000000041dcc0 0000000000000138 t cso_create_context
000000000041de00 0000000000000138 t cso_set_blend
000000000041df40 0000000000000110 t cso_set_depth_stencil_alpha
000000000041e050 0000000000000110 t cso_set_rasterizer
000000000041e160 0000000000000028 t cso_set_fragment_shader_handle
000000000041e190 0000000000000028 t cso_set_vertex_shader_handle
000000000041e1c0 000000000000006c t cso_set_framebuffer
000000000041e230 000000000000007c t cso_set_viewport
000000000041e2b0 0000000000000054 t cso_set_viewport_dims
000000000041e310 0000000000000044 t cso_set_blend_color
000000000041e360 0000000000000028 t cso_set_sample_mask
000000000041e390 000000000000002c t cso_set_min_samples
000000000041e3c0 000000000000002c t cso_set_stencil_ref
000000000041e3f0 000000000000008c t cso_set_render_condition
000000000041e480 0000000000000030 t cso_set_geometry_shader_handle
000000000041e4b0 0000000000000030 t cso_set_tessctrl_shader_handle
000000000041e4e0 0000000000000030 t cso_set_tesseval_shader_handle
000000000041e510 0000000000000030 t cso_set_compute_shader_handle
000000000041e540 0000000000000034 t cso_set_vertex_elements
000000000041e580 000000000000001c t cso_set_vertex_buffers
000000000041e5a0 000000000000025c t cso_set_vertex_buffers_and_elements
000000000041e800 00000000000000a0 t cso_set_samplers
000000000041e8a0 00000000000001b4 t cso_set_sampler_views
000000000041ea60 0000000000000194 t cso_set_shader_images
000000000041ec00 0000000000000188 t cso_set_stream_outputs
000000000041ed90 0000000000000184 t cso_set_constant_buffer
000000000041ef20 00000000000000dc t cso_save_constant_buffer_slot0
000000000041f000 000000000000019c t cso_restore_constant_buffer_slot0
000000000041f1a0 00000000000004fc t cso_save_state
000000000041f6a0 000000000000084c t cso_restore_state
000000000041fef0 0000000000000020 t cso_draw_vbo
000000000041ff10 0000000000000068 t cso_draw_arrays
000000000041ff80 0000000000000064 t cso_draw_arrays_instanced
000000000041fff0 0000000000000278 t cso_data_rehash
0000000000420270 00000000000000c8 t cso_hash_insert
0000000000420340 0000000000000014 t cso_hash_init
0000000000420360 0000000000000070 t cso_hash_deinit
00000000004203d0 0000000000000020 t cso_hash_iter_key
00000000004203f0 0000000000000064 t cso_hash_data_next
0000000000420460 00000000000000cc t cso_hash_take
0000000000420530 0000000000000038 t cso_hash_first_node
0000000000420570 0000000000000008 t cso_hash_size
0000000000420580 00000000000000a4 t cso_hash_erase
0000000000420630 0000000000000064 t cso_hash_contains
00000000004206a0 0000000000000008 t tgsi_build_header
00000000004206b0 0000000000000014 t tgsi_build_processor
00000000004206d0 0000000000000024 t tgsi_default_full_declaration
0000000000420700 000000000000020c t tgsi_build_full_declaration
0000000000420910 0000000000000010 t tgsi_default_full_immediate
0000000000420920 00000000000000b8 t tgsi_build_full_immediate
00000000004209e0 000000000000000c t tgsi_default_instruction
00000000004209f0 0000000000000098 t tgsi_default_full_instruction
0000000000420a90 0000000000000554 t tgsi_build_full_instruction
0000000000420ff0 0000000000000034 t tgsi_default_full_property
0000000000421030 00000000000000e0 t tgsi_build_full_property
0000000000421110 000000000000004c t tgsi_full_src_register_from_dst
0000000000421160 0000000000000090 t dump_ctx_printf
00000000004211f0 00000000000000b0 t _dump_writemask.part.0
00000000004212a0 0000000000000070 t prolog
0000000000421310 000000000000029c t iter_immediate
00000000004215b0 0000000000000228 t iter_property
00000000004217e0 0000000000000e3c t iter_instruction
0000000000422620 0000000000000a20 t iter_declaration
0000000000423040 0000000000000070 t tgsi_dump_to_file
00000000004230b0 0000000000000008 t tgsi_dump
00000000004230c0 0000000000000040 t transform_decl
0000000000423100 0000000000000208 t transform_instr
0000000000423310 00000000000000c0 t tgsi_emulate
00000000004233d0 0000000000000040 t tgsi_get_generic_gl_varying_index
0000000000423410 00000000000001d4 t tgsi_get_gl_varying_semantic
00000000004235f0 00000000000000f0 t tgsi_get_sysval_semantic
00000000004236e0 0000000000000028 t tgsi_get_opcode_info
0000000000423710 0000000000000024 t tgsi_get_opcode_name
0000000000423740 0000000000000134 t tgsi_iterate_shader
0000000000423880 0000000000000038 t tgsi_parse_init
00000000004238c0 0000000000000004 t tgsi_parse_free
00000000004238d0 0000000000000020 t tgsi_parse_end_of_tokens
00000000004238f0 000000000000042c t tgsi_parse_token
0000000000423d20 0000000000000054 t tgsi_dup_tokens
0000000000423d80 0000000000000008 t tgsi_alloc_tokens
0000000000423d90 0000000000000004 t tgsi_free_tokens
0000000000423da0 0000000000000598 t scan_src_operand
0000000000424340 0000000000001048 t tgsi_scan_shader
0000000000425390 0000000000000024 t tgsi_file_name
00000000004253c0 0000000000000044 t emit_property
0000000000425410 0000000000000044 t emit_immediate
0000000000425460 0000000000000044 t emit_declaration
00000000004254b0 0000000000000044 t emit_instruction
0000000000425500 00000000000002b0 t tgsi_transform_shader
00000000004257b0 0000000000000178 t match_or_expand_immediate
0000000000425930 000000000000004c t tokens_error
0000000000425980 0000000000000104 t get_tokens
0000000000425a90 00000000000000c0 t emit_decl_semantic
0000000000425b50 00000000000000ec t alloc_temporary
0000000000425c40 0000000000000230 t decl_immediate
0000000000425e70 0000000000000018 t ureg_property
0000000000425e90 0000000000000140 t ureg_DECL_fs_input_cyl_centroid_layout
0000000000425fd0 0000000000000034 t ureg_DECL_fs_input_cyl_centroid
0000000000426010 000000000000003c t ureg_DECL_vs_input
0000000000426050 000000000000003c t ureg_DECL_input
0000000000426090 0000000000000114 t ureg_DECL_system_value
00000000004261b0 0000000000000160 t ureg_DECL_output_layout
0000000000426310 0000000000000038 t ureg_DECL_output
0000000000426350 0000000000000040 t ureg_DECL_constant2D
0000000000426390 0000000000000160 t ureg_DECL_constant
00000000004264f0 00000000000000a0 t ureg_DECL_hw_atomic
0000000000426590 0000000000000008 t ureg_DECL_temporary
00000000004265a0 0000000000000008 t ureg_DECL_local_temporary
00000000004265b0 00000000000000b4 t ureg_DECL_array_temporary
0000000000426670 0000000000000024 t ureg_release_temporary
00000000004266a0 0000000000000048 t ureg_DECL_address
00000000004266f0 00000000000000d0 t ureg_DECL_sampler
00000000004267c0 00000000000000b8 t ureg_DECL_sampler_view
0000000000426880 00000000000000bc t ureg_DECL_image
0000000000426940 00000000000000a8 t ureg_DECL_buffer
00000000004269f0 000000000000002c t ureg_DECL_memory
0000000000426a20 000000000000004c t ureg_DECL_immediate
0000000000426a70 000000000000003c t ureg_DECL_immediate_f64
0000000000426ab0 0000000000000008 t ureg_DECL_immediate_uint
0000000000426ac0 0000000000000008 t ureg_DECL_immediate_int
0000000000426ad0 000000000000003c t ureg_DECL_immediate_uint64
0000000000426b10 000000000000003c t ureg_DECL_immediate_int64
0000000000426b50 000000000000019c t ureg_emit_src
0000000000426cf0 0000000000000158 t ureg_emit_dst
0000000000426e50 00000000000000a4 t ureg_emit_insn
0000000000426f00 000000000000011c t ureg_emit_texture
0000000000427020 0000000000000038 t ureg_fixup_insn_size
0000000000427060 0000000000000170 t ureg_insn
00000000004271d0 00000000000001fc t ureg_tex_insn
00000000004273d0 0000000000000184 t ureg_memory_insn
0000000000427560 0000000000000afc t ureg_finalize
0000000000428060 0000000000000144 t ureg_create_shader
00000000004281b0 0000000000000044 t ureg_get_tokens
0000000000428200 0000000000000004 t ureg_free_tokens
0000000000428210 00000000000000ec t ureg_create_with_screen
0000000000428300 0000000000000008 t ureg_create
0000000000428310 0000000000000008 t ureg_set_next_shader_processor
0000000000428320 000000000000007c t ureg_destroy
00000000004283a0 0000000000000050 t tgsi_util_get_src_register_swizzle
00000000004283f0 000000000000046c t tgsi_util_get_inst_usage_mask
0000000000428860 0000000000000028 t tgsi_util_get_src_from_ind
0000000000428890 0000000000000058 t util_bitmask_create
00000000004288f0 0000000000000100 t util_bitmask_set
00000000004289f0 000000000000003c t util_bitmask_clear
0000000000428a30 000000000000005c t util_bitmask_get
0000000000428a90 000000000000009c t util_bitmask_get_next_index
0000000000428b30 0000000000000008 t util_bitmask_get_first_index
0000000000428b40 0000000000000030 t util_bitmask_destroy
0000000000428b70 0000000000000250 t util_copy_framebuffer_state
0000000000428dc0 00000000000000b8 t util_unreference_framebuffer_state
0000000000428e80 000000000000007c t util_framebuffer_get_num_layers
0000000000428f00 000000000000009c t util_framebuffer_get_num_samples
0000000000428fa0 00000000000000d0 t util_sample_locations_flip_y
0000000000429070 00000000000002e8 t util_gen_mipmap
0000000000429360 0000000000000240 t util_set_vertex_buffers_mask
00000000004295a0 000000000000008c t util_set_vertex_buffers_count
0000000000429630 0000000000000008 t util_throttle_init
0000000000429640 0000000000000050 t util_throttle_deinit
0000000000429690 000000000000024c t util_throttle_memory_usage
00000000004298e0 0000000000000010 t u_prim_name
00000000004298f0 00000000000000d8 t u_sampler_view_default_template
00000000004299d0 0000000000000198 t u_pipe_screen_get_param_defaults
0000000000429b70 000000000000022c t util_make_vertex_passthrough_shader_with_so
0000000000429da0 000000000000000c t util_make_vertex_passthrough_shader
0000000000429db0 0000000000000034 t util_make_layered_clear_vertex_shader
0000000000429df0 000000000000009c t util_make_layered_clear_helper_vertex_shader
0000000000429e90 000000000000009c t util_make_layered_clear_geometry_shader
0000000000429f30 00000000000000e0 t util_make_fragment_passthrough_shader
000000000042a010 0000000000000124 t pipe_get_tile_raw
000000000042a140 0000000000000770 t pipe_get_tile_rgba
000000000042a8b0 00000000000000a4 t upload_unmap_internal
000000000042a960 0000000000000088 t u_upload_create
000000000042a9f0 0000000000000014 t u_upload_create_default
000000000042aa10 0000000000000008 t u_upload_unmap
000000000042aa20 0000000000000070 t u_upload_destroy
000000000042aa90 000000000000039c t u_upload_alloc
000000000042ae30 0000000000000050 t u_upload_data
000000000042ae80 0000000000000034 t u_vbuf_delete_vertex_elements
000000000042aec0 00000000000001e8 t u_vbuf_get_minmax_index_mapped
000000000042b0b0 0000000000000068 t u_vbuf_set_driver_vertex_buffers
000000000042b120 0000000000000398 t u_vbuf_set_vertex_elements_internal
000000000042b4c0 00000000000009cc t u_vbuf_translate_begin
000000000042be90 0000000000000254 t u_vbuf_get_caps
000000000042c0f0 00000000000000ac t u_vbuf_create
000000000042c1a0 0000000000000024 t u_vbuf_set_vertex_elements
000000000042c1d0 0000000000000008 t u_vbuf_unset_vertex_elements
000000000042c1e0 00000000000001a8 t u_vbuf_destroy
000000000042c390 0000000000000594 t u_vbuf_set_vertex_buffers
000000000042c930 00000000000000c4 t u_vbuf_get_minmax_index
000000000042ca00 00000000000008c0 t u_vbuf_draw_vbo
000000000042d2c0 00000000000000c4 t u_vbuf_split_indexed_multidraw
000000000042d390 000000000000000c t u_vbuf_save_vertex_elements
000000000042d3a0 0000000000000048 t u_vbuf_restore_vertex_elements
000000000042d3f0 00000000000000bc t u_vbuf_save_vertex_buffer0
000000000042d4b0 000000000000009c t u_vbuf_restore_vertex_buffer0
000000000042d550 000000000000009c t nouveau_transfer_read
000000000042d5f0 000000000000005c t nouveau_scratch_unref_bos
000000000042d650 00000000000000e4 t nouveau_transfer_staging.isra.0
000000000042d740 00000000000001ec t nouveau_scratch_more
000000000042d930 00000000000000f8 t nouveau_buffer_destroy
000000000042da30 000000000000013c t nouveau_buffer_cache.isra.0
000000000042db70 0000000000000190 t nouveau_transfer_write
000000000042dd00 00000000000000dc t nouveau_buffer_transfer_flush_region
000000000042dde0 0000000000000160 t nouveau_buffer_transfer_unmap
000000000042df40 0000000000000590 t nouveau_buffer_transfer_map
000000000042e4d0 0000000000000214 t nouveau_copy_buffer
000000000042e6f0 0000000000000174 t nouveau_resource_map_offset
000000000042e870 0000000000000248 t nouveau_buffer_create
000000000042eac0 0000000000000258 t nouveau_buffer_invalidate
000000000042ed20 000000000000004c t nouveau_scratch_runout_release
000000000042ed70 00000000000000b8 t nouveau_scratch_data
000000000042ee30 0000000000000094 t nouveau_scratch_get
000000000042eed0 0000000000000064 t nouveau_fence_trigger_work
000000000042ef40 0000000000000058 t nouveau_fence_new
000000000042efa0 0000000000000060 t nouveau_fence_emit
000000000042f000 00000000000000a8 t nouveau_fence_del
000000000042f0b0 00000000000000ec t nouveau_fence_update
000000000042f1a0 000000000000005c t nouveau_fence_signalled
000000000042f200 00000000000000c0 t nouveau_fence_next
000000000042f2c0 0000000000000104 t nouveau_fence_kick
000000000042f3d0 0000000000000114 t nouveau_fence_wait
000000000042f4f0 0000000000000024 T nouveau_fence_unref_bo
000000000042f520 00000000000000d4 t nouveau_fence_work
000000000042f600 0000000000000054 t nouveau_heap_init
000000000042f660 000000000000002c t nouveau_heap_destroy
000000000042f690 00000000000000e8 t nouveau_heap_alloc
000000000042f780 00000000000000b8 t nouveau_heap_free
000000000042f840 00000000000002d8 t nouveau_mm_allocate
000000000042fb20 00000000000000dc t nouveau_mm_free
000000000042fc00 0000000000000004 T nouveau_mm_free_work
000000000042fc10 0000000000000078 t nouveau_mm_create
000000000042fc90 000000000000013c t nouveau_mm_destroy
000000000042fdd0 000000000000000c t nouveau_screen_get_vendor
000000000042fde0 000000000000000c t nouveau_screen_get_device_vendor
000000000042fdf0 0000000000000008 t nouveau_screen_get_disk_shader_cache
000000000042fe00 0000000000000060 t nouveau_screen_fence_ref
000000000042fe60 0000000000000040 t nouveau_screen_get_name
000000000042fea0 0000000000000050 t nouveau_screen_get_timestamp
000000000042fef0 000000000000002c t nouveau_set_debug_callback
000000000042ff20 0000000000000014 t nouveau_screen_fence_finish
000000000042ff40 0000000000000088 t nouveau_screen_bo_from_handle
000000000042ffd0 0000000000000080 t nouveau_screen_bo_get_handle
0000000000430050 000000000000027c t nouveau_screen_init
00000000004302d0 0000000000000060 t nouveau_screen_fini
0000000000430330 0000000000000010 t nouveau_context_init
0000000000430340 0000000000000008 t nouveau_vp3_video_buffer_sampler_view_planes
0000000000430350 0000000000000008 t nouveau_vp3_video_buffer_sampler_view_components
0000000000430360 0000000000000008 t nouveau_vp3_video_buffer_surfaces
0000000000430370 0000000000000004 t nouveau_vp3_decoder_flush
0000000000430380 0000000000000004 t nouveau_vp3_decoder_begin_frame
0000000000430390 00000000000000e4 t nouveau_vp3_decoder_destroy
0000000000430480 00000000000000a4 t vp4_getpath
0000000000430530 0000000000000088 t vp3_getpath
00000000004305c0 00000000000001f8 t firmware_present
00000000004307c0 0000000000000004 t nouveau_vp3_decoder_end_frame
00000000004307d0 000000000000014c t nouveau_vp3_video_buffer_destroy
0000000000430920 0000000000000320 t nouveau_vp3_video_buffer_create
0000000000430c40 0000000000000030 t nouveau_vp3_decoder_init_common
0000000000430c70 0000000000000200 t nouveau_vp3_load_firmware
0000000000430e70 0000000000000108 T nouveau_vp3_screen_get_video_param
0000000000430f80 0000000000000014 T nouveau_vp3_screen_video_supported
0000000000430fa0 000000000000029c T nv50_clear_texture
0000000000431240 0000000000001108 t nv50_blitter_make_fp
0000000000432350 0000000000000124 t nv50_blit_select_mode
0000000000432480 000000000000021c t nv50_m2mf_rect_setup
00000000004326a0 0000000000000570 t nv50_m2mf_transfer_rect
0000000000432c10 00000000000003a4 T nv50_miptree_transfer_map
0000000000432fc0 000000000000012c T nv50_miptree_transfer_unmap
00000000004330f0 0000000000000078 T nvc0_compute_validate_globals
0000000000433170 0000000000000168 t nvc0_compute_validate_surfaces
00000000004332e0 00000000000000e8 t nvc0_compute_validate_driverconst
00000000004333d0 00000000000000ac t nvc0_compute_validate_samplers
0000000000433480 0000000000000210 t nvc0_compute_validate_buffers
0000000000433690 00000000000000fc t nvc0_compute_validate_textures
0000000000433790 0000000000000330 t nvc0_compute_validate_constbufs
0000000000433ac0 0000000000000684 t nvc0_screen_compute_setup
0000000000434150 0000000000000120 t nvc0_update_compute_invocations_counter
0000000000434270 00000000000008cc T nvc0_launch_grid
0000000000434b40 0000000000000008 t nvc0_get_device_reset_status
0000000000434b50 0000000000000044 T nvc0_default_kick_notify
0000000000434ba0 000000000000045c t nvc0_invalidate_resource_storage
0000000000435000 0000000000000084 t nvc0_context_get_sample_position
0000000000435090 00000000000000bc t nvc0_flush
0000000000435150 00000000000000bc t nvc0_texture_barrier
0000000000435210 000000000000013c t nvc0_emit_string_marker
0000000000435350 00000000000001d4 t nvc0_memory_barrier
0000000000435530 00000000000005a0 t nvc0_destroy
0000000000435ad0 0000000000000448 T nvc0_create
0000000000435f20 0000000000000110 t nvc0_bufctx_fence
0000000000436030 0000000000000054 t nvc0_get_sample_locations
0000000000436090 000000000000007c t nvc0_miptree_get_handle
0000000000436110 00000000000006c0 t nvc0_miptree_create
00000000004367d0 00000000000000cc t nvc0_mt_zslice_offset
00000000004368a0 0000000000000034 t nvc0_miptree_surface_new
00000000004368e0 00000000000000dc t nvc0_shader_input_address
00000000004369c0 00000000000003d8 t nvc0_program_assign_varying_slots
0000000000436da0 0000000000000298 t nvc0_vtgp_gen_header
0000000000437040 0000000000000198 t nvc0_program_upload_code
00000000004371e0 00000000000000a8 t nvc0_tp_get_tess_mode.isra.0
0000000000437290 0000000000000904 t nvc0_program_translate
0000000000437ba0 0000000000000088 t nvc0_program_library_upload
0000000000437c30 00000000000005c8 t nvc0_program_upload
0000000000438200 00000000000000c4 t nvc0_program_destroy
00000000004382d0 0000000000000060 t nvc0_program_symbol_offset
0000000000438330 0000000000000084 t nvc0_program_init_tcp_empty
00000000004383c0 0000000000000010 t nvc0_destroy_query
00000000004383d0 0000000000000010 t nvc0_begin_query
00000000004383e0 0000000000000020 t nvc0_end_query
0000000000438400 0000000000000010 t nvc0_get_query_result
0000000000438410 000000000000001c t nvc0_get_query_result_resource
0000000000438430 0000000000000004 t nvc0_set_active_query_state
0000000000438440 0000000000000050 t nvc0_create_query
0000000000438490 00000000000002e0 t nvc0_render_condition
0000000000438770 0000000000000098 T nvc0_screen_get_driver_query_info
0000000000438810 00000000000000fc T nvc0_screen_get_driver_query_group_info
0000000000438910 0000000000000064 t nvc0_init_query_functions
0000000000438980 00000000000000b0 t nvc0_hw_query_write_compute_invocations
0000000000438a30 00000000000002a4 t nvc0_hw_get_query_result
0000000000438ce0 00000000000000b8 t nvc0_hw_query_get
0000000000438da0 00000000000000bc t nvc0_hw_destroy_query
0000000000438e60 000000000000010c t nvc0_hw_query_allocate
0000000000438f70 00000000000003dc t nvc0_hw_end_query
0000000000439350 0000000000000364 t nvc0_hw_begin_query
00000000004396c0 00000000000001a4 t nvc0_hw_create_query
0000000000439870 0000000000000090 t nvc0_hw_get_driver_query_info
0000000000439900 0000000000000060 t nvc0_hw_query_pushbuf_submit
0000000000439960 000000000000010c t nvc0_hw_query_fifo_wait
0000000000439a70 0000000000000658 t nvc0_hw_get_query_result_resource
000000000043a0d0 000000000000007c t nvc0_hw_metric_begin_query
000000000043a150 000000000000005c t nvc0_hw_metric_end_query
000000000043a1b0 0000000000000128 t sm20_hw_metric_calc_result
000000000043a2e0 00000000000001b0 t sm30_hw_metric_calc_result
000000000043a490 00000000000002e0 t nvc0_hw_metric_get_query_result
000000000043a770 0000000000000064 t nvc0_hw_metric_destroy_query
000000000043a7e0 0000000000000068 t nvc0_hw_metric_get_num_queries
000000000043a850 0000000000000240 t nvc0_hw_metric_create_query
000000000043aa90 00000000000001a4 t nvc0_hw_metric_get_driver_query_info
000000000043ac40 0000000000000054 t nvc0_hw_sm_destroy_query
000000000043aca0 000000000000012c t nvc0_hw_sm_query_get_cfg.isra.0
000000000043add0 0000000000000534 t nvc0_hw_sm_begin_query
000000000043b310 00000000000004f8 t nvc0_hw_sm_end_query
000000000043b810 0000000000000350 t nvc0_hw_sm_get_query_result
000000000043bb60 0000000000000064 t nvc0_hw_sm_get_num_queries
000000000043bbd0 00000000000000d0 t nvc0_hw_sm_create_query
000000000043bca0 00000000000001a0 t nvc0_hw_sm_get_driver_query_info
000000000043be40 0000000000000008 t nvc0_sw_create_query
000000000043be50 0000000000000008 t nvc0_sw_get_driver_query_info
000000000043be60 0000000000000064 t nvc0_query_dmabuf_modifiers
000000000043bed0 0000000000000010 t nvc0_surface_create
000000000043bee0 0000000000000010 t nvc0_resource_create_with_modifiers
000000000043bef0 0000000000000038 t nvc0_resource_create
000000000043bf30 0000000000000034 t nvc0_resource_from_handle
000000000043bf70 0000000000000060 t nvc0_init_resource_functions
000000000043bfd0 0000000000000048 t nvc0_screen_init_resource_functions
000000000043c020 0000000000000190 t nvc0_vertprog_validate
000000000043c1b0 000000000000042c T nvc0_fragprog_validate
000000000043c5e0 00000000000002b0 T nvc0_tctlprog_validate
000000000043c890 0000000000000324 t nvc0_tevlprog_validate
000000000043cbc0 00000000000002d0 t nvc0_gmtyprog_validate
000000000043ce90 00000000000000e0 T nvc0_compprog_validate
000000000043cf70 0000000000000130 T nvc0_layer_validate
000000000043d0a0 00000000000004e8 T nvc0_tfb_validate
000000000043d590 0000000000000014 t nvc0_blend_state_bind
000000000043d5b0 0000000000000014 t nvc0_rasterizer_state_bind
000000000043d5d0 0000000000000014 t nvc0_zsa_state_bind
000000000043d5f0 0000000000000014 t nvc0_vp_state_bind
000000000043d610 0000000000000014 t nvc0_fp_state_bind
000000000043d630 0000000000000014 t nvc0_gp_state_bind
000000000043d650 0000000000000014 t nvc0_tcp_state_bind
000000000043d670 0000000000000014 t nvc0_tep_state_bind
000000000043d690 0000000000000014 t nvc0_cp_state_bind
000000000043d6b0 0000000000000020 t nvc0_set_blend_color
000000000043d6d0 000000000000001c t nvc0_set_stencil_ref
000000000043d6f0 0000000000000014 t nvc0_set_sample_mask
000000000043d710 0000000000000020 t nvc0_set_min_samples
000000000043d730 0000000000000038 t nvc0_set_polygon_stipple
000000000043d770 0000000000000028 t nvc0_set_tess_state
000000000043d7a0 0000000000000014 t nvc0_vertex_state_bind
000000000043d7c0 0000000000000008 t nvc0_blend_state_delete
000000000043d7d0 0000000000000168 t nvc0_set_vertex_buffers
000000000043d940 0000000000000054 t nvc0_set_window_rectangles
000000000043d9a0 000000000000005c t nvc0_set_sample_locations
000000000043da00 0000000000000038 t nvc0_set_clip_state
000000000043da40 00000000000000c0 t nvc0_set_viewport_states
000000000043db00 0000000000000060 t nvc0_set_scissor_states
000000000043db60 0000000000000054 t nvc0_set_framebuffer_state
000000000043dbc0 000000000000022c t nvc0_zsa_state_create
000000000043ddf0 00000000000003e8 t nvc0_rasterizer_state_create
000000000043e1e0 00000000000000b0 t nvc0_cp_state_create
000000000043e290 00000000000000b4 t nvc0_sp_state_create
000000000043e350 0000000000000008 t nvc0_tep_state_create
000000000043e360 0000000000000008 t nvc0_tcp_state_create
000000000043e370 0000000000000008 t nvc0_gp_state_create
000000000043e380 0000000000000008 t nvc0_fp_state_create
000000000043e390 0000000000000008 t nvc0_vp_state_create
000000000043e3a0 0000000000000044 t nvc0_sp_state_delete
000000000043e3f0 00000000000000b0 t nvc0_sampler_state_delete
000000000043e4a0 00000000000000fc t nvc0_bind_sampler_states
000000000043e5a0 0000000000000008 t nvc0_zsa_state_delete
000000000043e5b0 0000000000000008 t nvc0_rasterizer_state_delete
000000000043e5c0 0000000000000308 t nvc0_set_constant_buffer
000000000043e8d0 00000000000000c4 t nvc0_so_target_save_offset
000000000043e9a0 0000000000000560 t nvc0_blend_state_create
000000000043ef00 00000000000001cc t nvc0_set_compute_resources
000000000043f0d0 000000000000021c t nvc0_set_transform_feedback_targets
000000000043f2f0 0000000000000350 t nvc0_set_sampler_views
000000000043f640 0000000000000074 t nvc0_so_target_destroy
000000000043f6c0 00000000000000a8 t nvc0_sampler_view_destroy
000000000043f770 000000000000029c t nvc0_set_global_bindings
000000000043fa10 0000000000000330 t nvc0_set_shader_buffers
000000000043fd40 000000000000014c t nvc0_so_target_create
000000000043fe90 00000000000004b0 t nvc0_set_shader_images
0000000000440340 0000000000000270 t nvc0_init_state_functions
00000000004405b0 000000000000006c t nvc0_validate_driverconst
0000000000440620 000000000000023c t nvc0_constbufs_validate
0000000000440860 0000000000000150 t nvc0_validate_scissor
00000000004409b0 0000000000000248 t nvc0_validate_buffers
0000000000440c00 0000000000000094 t nvc0_validate_tess_state
0000000000440ca0 0000000000000070 t nvc0_validate_sample_mask
0000000000440d10 000000000000008c t nvc0_validate_stipple
0000000000440da0 0000000000000080 t nvc0_validate_blend_colour
0000000000440e20 0000000000000084 t nvc0_validate_zsa
0000000000440eb0 0000000000000084 t nvc0_validate_blend
0000000000440f40 0000000000000084 t nvc0_validate_rasterizer
0000000000440fd0 00000000000000fc t nvc0_validate_min_samples
00000000004410d0 00000000000000bc t nvc0_validate_stencil_ref
0000000000441190 00000000000003b0 t nvc0_validate_viewport
0000000000441540 00000000000000d0 t nvc0_validate_fp_zsa_rast
0000000000441610 00000000000000b8 t nvc0_validate_rast_fb
00000000004416d0 00000000000001c0 t nvc0_validate_window_rects
0000000000441890 00000000000003c4 t gm200_validate_sample_locations
0000000000441c60 000000000000016c t validate_sample_locations
0000000000441dd0 00000000000000e4 t nvc0_validate_zsa_fb
0000000000441ec0 00000000000002f8 t nvc0_validate_fbread
00000000004421c0 00000000000002f4 t nvc0_validate_clip
00000000004424c0 000000000000075c t nvc0_validate_fb
0000000000442c20 0000000000000200 t nvc0_state_validate
0000000000442e20 0000000000000068 t nvc0_state_validate_3d
0000000000442e90 000000000000000c t nvc0_draw_vbo_kick_notify
0000000000442ea0 0000000000000170 t nvc0_set_constant_vertex_attrib
0000000000443010 00000000000001a4 t nvc0_update_user_vbufs_shared
00000000004431c0 0000000000000248 t nvc0_update_user_vbufs
0000000000443410 0000000000000030 T nvc0_vertex_state_delete
0000000000443440 00000000000003c0 T nvc0_vertex_state_create
0000000000443800 00000000000008b8 T nvc0_vertex_arrays_validate
00000000004440c0 000000000000146c T nvc0_draw_vbo
0000000000445530 0000000000001c18 t nvc0_push_vbo
0000000000447150 0000000000000200 t nvc0_push_vbo_indirect
0000000000447350 000000000000009c t nvc0_decoder_end_frame
00000000004473f0 0000000000000014 t nvc0_decoder_decode_bitstream
0000000000447410 0000000000000010 t nvc0_decoder_begin_frame
0000000000447420 0000000000000838 T nvc0_create_decoder
0000000000447c60 0000000000000008 T nvc0_video_buffer_create
0000000000447c70 0000000000000214 t nvc0_decoder_setup_ppp
0000000000447e90 0000000000000228 t nvc0_decoder_ppp
00000000004480c0 0000000000000574 t nvc0_decoder_vp
0000000000448640 0000000000000098 t grow_to_fit.part.0
00000000004486e0 0000000000000010 t blob_init
00000000004486f0 0000000000000014 t blob_init_fixed
0000000000448710 0000000000000100 t blob_write_bytes
0000000000448810 000000000000007c t blob_write_uint32
0000000000448890 000000000000007c t blob_write_uint64
0000000000448910 0000000000000038 t blob_overwrite_uint32
0000000000448950 0000000000000038 t blob_write_string
0000000000448990 0000000000000014 t blob_reader_init
00000000004489b0 0000000000000048 t blob_read_bytes
0000000000448a00 000000000000004c t blob_copy_bytes
0000000000448a50 0000000000000068 t blob_read_uint32
0000000000448ac0 0000000000000068 t blob_read_uint64
0000000000448b30 000000000000006c t blob_read_string
0000000000448ba0 00000000000000e8 t _mesa_float_to_half
0000000000448c90 0000000000000058 t _mesa_half_to_float
0000000000448cf0 000000000000002c t _mesa_half_to_unorm8
0000000000448d20 0000000000000038 t _mesa_uint16_div_64k_to_half
0000000000448d60 0000000000000048 t _mesa_sha1_format
0000000000448db0 000000000000003c t os_time_get_nano
0000000000448df0 0000000000000038 t os_file_create_unique
0000000000448e30 0000000000000068 t os_log_message
0000000000448ea0 0000000000000004 t os_get_option
0000000000448eb0 0000000000000ff0 t SHA1Transform
0000000000449ea0 0000000000000038 t SHA1Init
0000000000449ee0 00000000000000ec t SHA1Update
0000000000449fd0 00000000000000b0 t SHA1Pad
000000000044a080 0000000000000060 t SHA1Final
000000000044a0e0 00000000000000cc t util_format_unsigned_write_rgtc_encoded_channel
000000000044a1b0 00000000000000c4 t util_format_signed_write_rgtc_encoded_channel
000000000044a280 000000000000011c t util_format_unsigned_fetch_texel_rgtc
000000000044a3a0 0000000000000b7c t util_format_unsigned_encode_rgtc_ubyte
000000000044af20 0000000000000124 t util_format_signed_fetch_texel_rgtc
000000000044b050 0000000000000b90 t util_format_signed_encode_rgtc_ubyte
000000000044bbe0 00000000000000f4 t set_search
000000000044bce0 0000000000000168 t set_rehash
000000000044be50 00000000000001c0 t set_search_or_add
000000000044c010 000000000000008c t _mesa_set_create
000000000044c0a0 0000000000000084 t _mesa_set_clone
000000000044c130 00000000000000c0 t _mesa_set_destroy
000000000044c1f0 0000000000000038 t _mesa_set_search
000000000044c230 0000000000000048 t _mesa_set_add
000000000044c280 0000000000000024 t _mesa_set_remove
000000000044c2b0 000000000000005c t _mesa_set_remove_key
000000000044c310 000000000000004c t _mesa_set_next_entry
000000000044c360 0000000000000014 t _mesa_pointer_set_create
000000000044c380 000000000000006c t _mesa_string_buffer_create
000000000044c3f0 00000000000000c0 t _mesa_string_buffer_append_len
000000000044c4b0 00000000000000ec t _mesa_string_buffer_vprintf
000000000044c5a0 000000000000006c t _mesa_string_buffer_printf
000000000044c610 000000000000002c t _mesa_locale_init
000000000044c640 000000000000000c t _mesa_locale_fini
000000000044c650 000000000000000c t _mesa_strtod
000000000044c660 000000000000000c t _mesa_strtof
000000000044c670 000000000000002c t util_cpu_detect_once
000000000044c6a0 0000000000000014 t util_cpu_detect
000000000044c6c0 000000000000006c t write_bits
000000000044c730 00000000000006f8 t compress_rgba_unorm
000000000044ce30 00000000000006c4 t compress_rgb_float
000000000044d500 0000000000000070 t count_anchors_before_texel
000000000044d570 0000000000000308 t extract_float_endpoints
000000000044d880 0000000000000430 t extract_unorm_endpoints
000000000044dcb0 0000000000000358 t fetch_rgb_float_from_block
000000000044e010 0000000000000598 t decompress_rgb_float
000000000044e5b0 00000000000004ec t fetch_rgba_unorm_from_block
000000000044eaa0 00000000000006e0 t decompress_rgba_unorm
000000000044f180 000000000000001c T util_format_bptc_rgba_unorm_unpack_rgba_8unorm
000000000044f1a0 000000000000001c T util_format_bptc_rgba_unorm_pack_rgba_8unorm
000000000044f1c0 00000000000000ac T util_format_bptc_rgba_unorm_unpack_rgba_float
000000000044f270 00000000000000ac T util_format_bptc_rgba_unorm_pack_rgba_float
000000000044f320 0000000000000078 T util_format_bptc_rgba_unorm_fetch_rgba_float
000000000044f3a0 000000000000001c T util_format_bptc_srgba_unpack_rgba_8unorm
000000000044f3c0 000000000000001c T util_format_bptc_srgba_pack_rgba_8unorm
000000000044f3e0 00000000000000ac T util_format_bptc_srgba_unpack_rgba_float
000000000044f490 0000000000000020 T util_format_bptc_srgba_pack_rgba_float
000000000044f4b0 0000000000000084 T util_format_bptc_srgba_fetch_rgba_float
000000000044f540 00000000000000b0 T util_format_bptc_rgb_float_unpack_rgba_8unorm
000000000044f5f0 000000000000001c T util_format_bptc_rgb_float_pack_rgba_8unorm
000000000044f610 0000000000000020 T util_format_bptc_rgb_float_unpack_rgba_float
000000000044f630 0000000000000020 T util_format_bptc_rgb_float_pack_rgba_float
000000000044f650 000000000000002c T util_format_bptc_rgb_float_fetch_rgba_float
000000000044f680 00000000000000b0 T util_format_bptc_rgb_ufloat_unpack_rgba_8unorm
000000000044f730 000000000000001c T util_format_bptc_rgb_ufloat_pack_rgba_8unorm
000000000044f750 0000000000000020 T util_format_bptc_rgb_ufloat_unpack_rgba_float
000000000044f770 0000000000000020 T util_format_bptc_rgb_ufloat_pack_rgba_float
000000000044f790 000000000000002c T util_format_bptc_rgb_ufloat_fetch_rgba_float
000000000044f7c0 000000000000013c t etc1_parse_block
000000000044f900 00000000000000c8 t etc1_fetch_texel
000000000044f9d0 0000000000000128 T util_format_etc1_rgb8_unpack_rgba_8unorm
000000000044fb00 0000000000000004 T util_format_etc1_rgb8_pack_rgba_8unorm
000000000044fb10 0000000000000134 T util_format_etc1_rgb8_unpack_rgba_float
000000000044fc50 0000000000000004 T util_format_etc1_rgb8_pack_rgba_float
000000000044fc60 0000000000000070 T util_format_etc1_rgb8_fetch_rgba_float
000000000044fcd0 0000000000000040 T util_format_latc1_unorm_fetch_rgba_8unorm
000000000044fd10 0000000000000004 T util_format_latc1_unorm_unpack_rgba_8unorm
000000000044fd20 0000000000000004 T util_format_latc1_unorm_pack_rgba_8unorm
000000000044fd30 0000000000000168 T util_format_latc1_unorm_unpack_rgba_float
000000000044fea0 0000000000000004 T util_format_latc1_unorm_pack_rgba_float
000000000044feb0 0000000000000050 T util_format_latc1_unorm_fetch_rgba_float
000000000044ff00 0000000000000028 T util_format_latc1_snorm_fetch_rgba_8unorm
000000000044ff30 0000000000000028 T util_format_latc1_snorm_unpack_rgba_8unorm
000000000044ff60 0000000000000028 T util_format_latc1_snorm_pack_rgba_8unorm
000000000044ff90 0000000000000004 T util_format_latc1_snorm_pack_rgba_float
000000000044ffa0 000000000000016c T util_format_latc1_snorm_unpack_rgba_float
0000000000450110 0000000000000058 T util_format_latc1_snorm_fetch_rgba_float
0000000000450170 0000000000000064 T util_format_latc2_unorm_fetch_rgba_8unorm
00000000004501e0 0000000000000004 T util_format_latc2_unorm_unpack_rgba_8unorm
00000000004501f0 0000000000000004 T util_format_latc2_unorm_pack_rgba_8unorm
0000000000450200 0000000000000008 T util_format_latc2_unorm_pack_rgba_float
0000000000450210 00000000000001e4 T util_format_latc2_unorm_unpack_rgba_float
0000000000450400 0000000000000088 T util_format_latc2_unorm_fetch_rgba_float
0000000000450490 0000000000000028 T util_format_latc2_snorm_fetch_rgba_8unorm
00000000004504c0 0000000000000028 T util_format_latc2_snorm_unpack_rgba_8unorm
00000000004504f0 0000000000000028 T util_format_latc2_snorm_pack_rgba_8unorm
0000000000450520 00000000000001e4 T util_format_latc2_snorm_unpack_rgba_float
0000000000450710 0000000000000008 T util_format_latc2_snorm_pack_rgba_float
0000000000450720 00000000000000a8 T util_format_latc2_snorm_fetch_rgba_float
00000000004507d0 0000000000000098 T util_format_r9g9b9e5_float_unpack_rgba_float
0000000000450870 0000000000000268 T util_format_r9g9b9e5_float_pack_rgba_float
0000000000450ae0 000000000000004c T util_format_r9g9b9e5_float_fetch_rgba_float
0000000000450b30 000000000000012c T util_format_r9g9b9e5_float_unpack_rgba_8unorm
0000000000450c60 0000000000000274 T util_format_r9g9b9e5_float_pack_rgba_8unorm
0000000000450ee0 00000000000001e4 T util_format_r11g11b10_float_unpack_rgba_float
00000000004510d0 0000000000000218 T util_format_r11g11b10_float_pack_rgba_float
00000000004512f0 000000000000018c T util_format_r11g11b10_float_fetch_rgba_float
0000000000451480 000000000000025c T util_format_r11g11b10_float_unpack_rgba_8unorm
00000000004516e0 0000000000000288 T util_format_r11g11b10_float_pack_rgba_8unorm
0000000000451970 0000000000000004 T util_format_r1_unorm_unpack_rgba_float
0000000000451980 0000000000000004 T util_format_r1_unorm_pack_rgba_float
0000000000451990 0000000000000004 T util_format_r1_unorm_fetch_rgba_float
00000000004519a0 0000000000000004 T util_format_r1_unorm_unpack_rgba_8unorm
00000000004519b0 0000000000000004 T util_format_r1_unorm_pack_rgba_8unorm
00000000004519c0 00000000000000e0 T util_format_r8g8bx_snorm_unpack_rgba_float
0000000000451aa0 0000000000000150 T util_format_r8g8bx_snorm_unpack_rgba_8unorm
0000000000451bf0 00000000000000c8 T util_format_r8g8bx_snorm_pack_rgba_float
0000000000451cc0 000000000000006c T util_format_r8g8bx_snorm_pack_rgba_8unorm
0000000000451d30 0000000000000090 T util_format_r8g8bx_snorm_fetch_rgba_float
0000000000451dc0 0000000000000038 T util_format_rgtc1_unorm_fetch_rgba_8unorm
0000000000451e00 0000000000000138 t util_format_rgtc1_unorm_unpack_rgba_8unorm
0000000000451f40 0000000000000110 t util_format_rgtc1_unorm_pack_rgba_8unorm
0000000000452050 0000000000000168 T util_format_rgtc1_unorm_unpack_rgba_float
00000000004521c0 0000000000000154 t util_format_rgtc1_unorm_pack_rgba_float
0000000000452320 0000000000000054 T util_format_rgtc1_unorm_fetch_rgba_float
0000000000452380 0000000000000028 T util_format_rgtc1_snorm_fetch_rgba_8unorm
00000000004523b0 0000000000000028 T util_format_rgtc1_snorm_unpack_rgba_8unorm
00000000004523e0 0000000000000028 T util_format_rgtc1_snorm_pack_rgba_8unorm
0000000000452410 0000000000000128 t util_format_rgtc1_snorm_pack_rgba_float
0000000000452540 000000000000016c T util_format_rgtc1_snorm_unpack_rgba_float
00000000004526b0 000000000000005c T util_format_rgtc1_snorm_fetch_rgba_float
0000000000452710 0000000000000064 T util_format_rgtc2_unorm_fetch_rgba_8unorm
0000000000452780 0000000000000158 t util_format_rgtc2_unorm_unpack_rgba_8unorm
00000000004528e0 0000000000000130 t util_format_rgtc2_unorm_pack_rgba_8unorm
0000000000452a10 00000000000001bc t util_format_rxtc2_unorm_pack_rgba_float
0000000000452bd0 0000000000000008 T util_format_rgtc2_unorm_pack_rgba_float
0000000000452be0 00000000000001e8 T util_format_rgtc2_unorm_unpack_rgba_float
0000000000452dd0 000000000000008c T util_format_rgtc2_unorm_fetch_rgba_float
0000000000452e60 0000000000000028 T util_format_rgtc2_snorm_fetch_rgba_8unorm
0000000000452e90 0000000000000028 T util_format_rgtc2_snorm_unpack_rgba_8unorm
0000000000452ec0 0000000000000028 T util_format_rgtc2_snorm_pack_rgba_8unorm
0000000000452ef0 00000000000001e8 T util_format_rgtc2_snorm_unpack_rgba_float
00000000004530e0 000000000000016c t util_format_rxtc2_snorm_pack_rgba_float
0000000000453250 0000000000000008 T util_format_rgtc2_snorm_pack_rgba_float
0000000000453260 00000000000000ac T util_format_rgtc2_snorm_fetch_rgba_float
0000000000453310 00000000000001fc t dxt135_decode_imageblock
0000000000453510 0000000000000054 t fetch_2d_texel_rgb_dxt1
0000000000453570 0000000000000054 t fetch_2d_texel_rgba_dxt1
00000000004535d0 000000000000008c t fetch_2d_texel_rgba_dxt3
0000000000453660 0000000000000150 t fetch_2d_texel_rgba_dxt5
00000000004537b0 0000000000000c44 t encodedxtcolorblockfaster
0000000000454400 00000000000000cc t writedxt5encodedalphablock
00000000004544d0 0000000000001268 t tx_compress_dxtn
0000000000455740 0000000000000018 T util_format_dxt1_rgb_fetch_rgba_8unorm
0000000000455760 0000000000000018 T util_format_dxt1_rgba_fetch_rgba_8unorm
0000000000455780 0000000000000018 T util_format_dxt3_rgba_fetch_rgba_8unorm
00000000004557a0 0000000000000018 T util_format_dxt5_rgba_fetch_rgba_8unorm
00000000004557c0 000000000000006c T util_format_dxt1_rgb_fetch_rgba_float
0000000000455830 0000000000000074 T util_format_dxt1_rgba_fetch_rgba_float
00000000004558b0 0000000000000074 T util_format_dxt3_rgba_fetch_rgba_float
0000000000455930 0000000000000074 T util_format_dxt5_rgba_fetch_rgba_float
00000000004559b0 0000000000000120 T util_format_dxt1_rgb_unpack_rgba_8unorm
0000000000455ad0 0000000000000120 T util_format_dxt1_rgba_unpack_rgba_8unorm
0000000000455bf0 0000000000000120 T util_format_dxt3_rgba_unpack_rgba_8unorm
0000000000455d10 0000000000000120 T util_format_dxt5_rgba_unpack_rgba_8unorm
0000000000455e30 0000000000000188 T util_format_dxt1_rgb_unpack_rgba_float
0000000000455fc0 0000000000000188 T util_format_dxt1_rgba_unpack_rgba_float
0000000000456150 0000000000000188 T util_format_dxt3_rgba_unpack_rgba_float
00000000004562e0 0000000000000188 T util_format_dxt5_rgba_unpack_rgba_float
0000000000456470 0000000000000134 T util_format_dxt1_rgb_pack_rgba_8unorm
00000000004565b0 0000000000000134 T util_format_dxt1_rgba_pack_rgba_8unorm
00000000004566f0 0000000000000134 T util_format_dxt3_rgba_pack_rgba_8unorm
0000000000456830 0000000000000134 T util_format_dxt5_rgba_pack_rgba_8unorm
0000000000456970 00000000000001a4 T util_format_dxt1_rgb_pack_rgba_float
0000000000456b20 00000000000001a4 T util_format_dxt1_rgba_pack_rgba_float
0000000000456cd0 00000000000001a4 T util_format_dxt3_rgba_pack_rgba_float
0000000000456e80 00000000000001a4 T util_format_dxt5_rgba_pack_rgba_float
0000000000457030 0000000000000064 T util_format_dxt1_srgb_fetch_rgba_8unorm
00000000004570a0 0000000000000064 T util_format_dxt1_srgba_fetch_rgba_8unorm
0000000000457110 0000000000000064 T util_format_dxt3_srgba_fetch_rgba_8unorm
0000000000457180 0000000000000064 T util_format_dxt5_srgba_fetch_rgba_8unorm
00000000004571f0 0000000000000060 T util_format_dxt1_srgb_fetch_rgba_float
0000000000457250 0000000000000070 T util_format_dxt1_srgba_fetch_rgba_float
00000000004572c0 0000000000000070 T util_format_dxt3_srgba_fetch_rgba_float
0000000000457330 0000000000000070 T util_format_dxt5_srgba_fetch_rgba_float
00000000004573a0 0000000000000164 T util_format_dxt1_srgb_unpack_rgba_8unorm
0000000000457510 0000000000000164 T util_format_dxt1_srgba_unpack_rgba_8unorm
0000000000457680 0000000000000164 T util_format_dxt3_srgba_unpack_rgba_8unorm
00000000004577f0 0000000000000164 T util_format_dxt5_srgba_unpack_rgba_8unorm
0000000000457960 000000000000018c T util_format_dxt1_srgb_unpack_rgba_float
0000000000457af0 000000000000018c T util_format_dxt1_srgba_unpack_rgba_float
0000000000457c80 000000000000018c T util_format_dxt3_srgba_unpack_rgba_float
0000000000457e10 000000000000018c T util_format_dxt5_srgba_unpack_rgba_float
0000000000457fa0 000000000000014c T util_format_dxt1_srgb_pack_rgba_8unorm
00000000004580f0 000000000000014c T util_format_dxt1_srgba_pack_rgba_8unorm
0000000000458240 000000000000014c T util_format_dxt3_srgba_pack_rgba_8unorm
0000000000458390 000000000000014c T util_format_dxt5_srgba_pack_rgba_8unorm
00000000004584e0 00000000000001e8 T util_format_dxt1_srgb_pack_rgba_float
00000000004586d0 00000000000001e8 T util_format_dxt1_srgba_pack_rgba_float
00000000004588c0 00000000000001e8 T util_format_dxt3_srgba_pack_rgba_float
0000000000458ab0 00000000000001e8 T util_format_dxt5_srgba_pack_rgba_float
0000000000458ca0 000000000000011c T util_format_r8g8_b8g8_unorm_unpack_rgba_float
0000000000458dc0 00000000000000cc T util_format_r8g8_b8g8_unorm_unpack_rgba_8unorm
0000000000458e90 00000000000001f8 T util_format_r8g8_b8g8_unorm_pack_rgba_float
0000000000459090 00000000000000ec T util_format_r8g8_b8g8_unorm_pack_rgba_8unorm
0000000000459180 000000000000004c T util_format_r8g8_b8g8_unorm_fetch_rgba_float
00000000004591d0 0000000000000120 T util_format_g8r8_g8b8_unorm_unpack_rgba_float
00000000004592f0 00000000000000cc T util_format_g8r8_g8b8_unorm_unpack_rgba_8unorm
00000000004593c0 00000000000001f4 T util_format_g8r8_g8b8_unorm_pack_rgba_float
00000000004595c0 00000000000000ec T util_format_g8r8_g8b8_unorm_pack_rgba_8unorm
00000000004596b0 0000000000000048 T util_format_g8r8_g8b8_unorm_fetch_rgba_float
0000000000459700 00000000000001cc T util_format_uyvy_unpack_rgba_float
00000000004598d0 0000000000000274 T util_format_uyvy_unpack_rgba_8unorm
0000000000459b50 000000000000043c T util_format_uyvy_pack_rgba_float
0000000000459f90 0000000000000274 T util_format_uyvy_pack_rgba_8unorm
000000000045a210 00000000000000b8 T util_format_uyvy_fetch_rgba_float
000000000045a2d0 00000000000001cc T util_format_yuyv_unpack_rgba_float
000000000045a4a0 0000000000000274 T util_format_yuyv_unpack_rgba_8unorm
000000000045a720 000000000000043c T util_format_yuyv_pack_rgba_float
000000000045ab60 0000000000000278 T util_format_yuyv_pack_rgba_8unorm
000000000045ade0 00000000000000b4 T util_format_yuyv_fetch_rgba_float
000000000045aea0 0000000000000004 T util_format_yv12_unpack_rgba_8unorm
000000000045aeb0 0000000000000004 T util_format_yv12_pack_rgba_8unorm
000000000045aec0 0000000000000004 T util_format_yv12_unpack_rgba_float
000000000045aed0 0000000000000004 T util_format_yv12_pack_rgba_float
000000000045aee0 0000000000000004 T util_format_yv12_fetch_rgba_float
000000000045aef0 0000000000000004 T util_format_yv16_unpack_rgba_8unorm
000000000045af00 0000000000000004 T util_format_yv16_pack_rgba_8unorm
000000000045af10 0000000000000004 T util_format_yv16_unpack_rgba_float
000000000045af20 0000000000000004 T util_format_yv16_pack_rgba_float
000000000045af30 0000000000000004 T util_format_yv16_fetch_rgba_float
000000000045af40 0000000000000004 T util_format_iyuv_unpack_rgba_8unorm
000000000045af50 0000000000000004 T util_format_iyuv_pack_rgba_8unorm
000000000045af60 0000000000000004 T util_format_iyuv_unpack_rgba_float
000000000045af70 0000000000000004 T util_format_iyuv_pack_rgba_float
000000000045af80 0000000000000004 T util_format_iyuv_fetch_rgba_float
000000000045af90 0000000000000004 T util_format_nv12_unpack_rgba_8unorm
000000000045afa0 0000000000000004 T util_format_nv12_pack_rgba_8unorm
000000000045afb0 0000000000000004 T util_format_nv12_unpack_rgba_float
000000000045afc0 0000000000000004 T util_format_nv12_pack_rgba_float
000000000045afd0 0000000000000004 T util_format_nv12_fetch_rgba_float
000000000045afe0 0000000000000004 T util_format_nv21_unpack_rgba_8unorm
000000000045aff0 0000000000000004 T util_format_nv21_pack_rgba_8unorm
000000000045b000 0000000000000004 T util_format_nv21_unpack_rgba_float
000000000045b010 0000000000000004 T util_format_nv21_pack_rgba_float
000000000045b020 0000000000000004 T util_format_nv21_fetch_rgba_float
000000000045b030 0000000000000004 T util_format_p010_unpack_rgba_8unorm
000000000045b040 0000000000000004 T util_format_p010_pack_rgba_8unorm
000000000045b050 0000000000000004 T util_format_p010_unpack_rgba_float
000000000045b060 0000000000000004 T util_format_p010_pack_rgba_float
000000000045b070 0000000000000004 T util_format_p010_fetch_rgba_float
000000000045b080 0000000000000004 T util_format_p016_unpack_rgba_8unorm
000000000045b090 0000000000000004 T util_format_p016_pack_rgba_8unorm
000000000045b0a0 0000000000000004 T util_format_p016_unpack_rgba_float
000000000045b0b0 0000000000000004 T util_format_p016_pack_rgba_float
000000000045b0c0 0000000000000004 T util_format_p016_fetch_rgba_float
000000000045b0d0 0000000000000004 T util_format_xyuv_unpack_rgba_float
000000000045b0e0 0000000000000004 T util_format_xyuv_unpack_rgba_8unorm
000000000045b0f0 0000000000000004 T util_format_xyuv_pack_rgba_float
000000000045b100 0000000000000004 T util_format_xyuv_pack_rgba_8unorm
000000000045b110 0000000000000004 T util_format_xyuv_fetch_rgba_float
000000000045b120 0000000000000004 T util_format_ayuv_unpack_rgba_float
000000000045b130 0000000000000004 T util_format_ayuv_unpack_rgba_8unorm
000000000045b140 0000000000000004 T util_format_ayuv_pack_rgba_float
000000000045b150 0000000000000004 T util_format_ayuv_pack_rgba_8unorm
000000000045b160 0000000000000004 T util_format_ayuv_fetch_rgba_float
000000000045b170 0000000000000004 T util_format_r8g8_r8b8_unorm_unpack_rgba_float
000000000045b180 0000000000000004 T util_format_r8g8_r8b8_unorm_unpack_rgba_8unorm
000000000045b190 0000000000000004 T util_format_r8g8_r8b8_unorm_pack_rgba_float
000000000045b1a0 0000000000000004 T util_format_r8g8_r8b8_unorm_pack_rgba_8unorm
000000000045b1b0 0000000000000004 T util_format_r8g8_r8b8_unorm_fetch_rgba_float
000000000045b1c0 0000000000000004 T util_format_g8r8_b8r8_unorm_unpack_rgba_float
000000000045b1d0 0000000000000004 T util_format_g8r8_b8r8_unorm_unpack_rgba_8unorm
000000000045b1e0 0000000000000004 T util_format_g8r8_b8r8_unorm_pack_rgba_float
000000000045b1f0 0000000000000004 T util_format_g8r8_b8r8_unorm_pack_rgba_8unorm
000000000045b200 0000000000000004 T util_format_g8r8_b8r8_unorm_fetch_rgba_float
000000000045b210 0000000000000074 T util_format_s8_uint_unpack_s_8uint
000000000045b290 0000000000000074 T util_format_s8_uint_pack_s_8uint
000000000045b310 000000000000005c T util_format_z16_unorm_unpack_z_float
000000000045b370 0000000000000060 T util_format_z16_unorm_pack_z_float
000000000045b3d0 0000000000000048 T util_format_z16_unorm_unpack_z_32unorm
000000000045b420 0000000000000048 T util_format_z16_unorm_pack_z_32unorm
000000000045b470 0000000000000060 T util_format_z32_unorm_unpack_z_float
000000000045b4d0 0000000000000060 T util_format_z32_unorm_pack_z_float
000000000045b530 0000000000000074 T util_format_z32_unorm_unpack_z_32unorm
000000000045b5b0 0000000000000074 T util_format_z32_unorm_pack_z_32unorm
000000000045b630 0000000000000074 T util_format_z32_float_unpack_z_float
000000000045b6b0 0000000000000074 T util_format_z32_float_pack_z_float
000000000045b730 0000000000000060 T util_format_z32_float_unpack_z_32unorm
000000000045b790 0000000000000060 T util_format_z32_float_pack_z_32unorm
000000000045b7f0 000000000000005c T util_format_z24_unorm_s8_uint_unpack_z_float
000000000045b850 0000000000000068 T util_format_z24_unorm_s8_uint_pack_z_float
000000000045b8c0 000000000000004c T util_format_z24_unorm_s8_uint_unpack_z_32unorm
000000000045b910 0000000000000050 T util_format_z24_unorm_s8_uint_pack_z_32unorm
000000000045b960 0000000000000048 T util_format_z24_unorm_s8_uint_unpack_s_8uint
000000000045b9b0 0000000000000048 T util_format_z24_unorm_s8_uint_pack_s_8uint
000000000045ba00 000000000000005c T util_format_s8_uint_z24_unorm_unpack_z_float
000000000045ba60 0000000000000068 T util_format_s8_uint_z24_unorm_pack_z_float
000000000045bad0 000000000000004c T util_format_s8_uint_z24_unorm_unpack_z_32unorm
000000000045bb20 000000000000004c T util_format_s8_uint_z24_unorm_pack_z_32unorm
000000000045bb70 0000000000000044 T util_format_s8_uint_z24_unorm_unpack_s_8uint
000000000045bbc0 0000000000000048 T util_format_s8_uint_z24_unorm_pack_s_8uint
000000000045bc10 000000000000005c T util_format_z24x8_unorm_unpack_z_float
000000000045bc70 0000000000000064 T util_format_z24x8_unorm_pack_z_float
000000000045bce0 000000000000004c T util_format_z24x8_unorm_unpack_z_32unorm
000000000045bd30 0000000000000048 T util_format_z24x8_unorm_pack_z_32unorm
000000000045bd80 000000000000005c T util_format_x8z24_unorm_unpack_z_float
000000000045bde0 0000000000000064 T util_format_x8z24_unorm_pack_z_float
000000000045be50 000000000000004c T util_format_x8z24_unorm_unpack_z_32unorm
000000000045bea0 0000000000000048 T util_format_x8z24_unorm_pack_z_32unorm
000000000045bef0 0000000000000048 T util_format_z32_float_s8x24_uint_unpack_z_float
000000000045bf40 0000000000000048 T util_format_z32_float_s8x24_uint_pack_z_float
000000000045bf90 0000000000000064 T util_format_z32_float_s8x24_uint_unpack_z_32unorm
000000000045c000 0000000000000060 T util_format_z32_float_s8x24_uint_pack_z_32unorm
000000000045c060 000000000000005c T util_format_z32_float_s8x24_uint_unpack_s_8uint
000000000045c0c0 000000000000005c T util_format_z32_float_s8x24_uint_pack_s_8uint
000000000045c120 0000000000000048 T util_format_x24s8_uint_unpack_s_8uint
000000000045c170 0000000000000048 T util_format_x24s8_uint_pack_s_8uint
000000000045c1c0 0000000000000044 T util_format_s8x24_uint_unpack_s_8uint
000000000045c210 0000000000000048 T util_format_s8x24_uint_pack_s_8uint
000000000045c260 000000000000005c T util_format_x32_s8x24_uint_unpack_s_8uint
000000000045c2c0 000000000000005c T util_format_x32_s8x24_uint_pack_s_8uint
000000000045c320 00000000000002dc t (anonymous namespace)::add_uniform_to_shader::visit_field(glsl_type const*, char const*, bool, glsl_type const*, glsl_interface_packing, bool)
000000000045c600 00000000000000f4 t _mesa_generate_parameters_list_for_uniforms
000000000045c700 0000000000000408 t _mesa_associate_uniform_storage
000000000045cb10 000000000000024c t _mesa_glsl_link_shader
000000000045cd60 00000000000000f0 t get_src_arg_mask
000000000045ce50 0000000000000018 t compare_start
000000000045ce70 0000000000000078 t update_interval
000000000045cef0 000000000000019c t find_next_use
000000000045d090 00000000000000ec t remove_instructions
000000000045d180 000000000000022c t _mesa_remove_dead_code_global
000000000045d3b0 0000000000000198 t _mesa_simplify_cmp
000000000045d550 0000000000000180 t _mesa_find_temp_intervals
000000000045d6d0 000000000000039c t _mesa_reallocate_registers
000000000045da70 0000000000000790 t _mesa_optimize_program
000000000045e200 000000000000000c t _mesa_new_parameter_list
000000000045e210 00000000000000d8 t _mesa_new_parameter_list_sized
000000000045e2f0 0000000000000068 t _mesa_free_parameter_list
000000000045e360 00000000000000c4 t _mesa_reserve_parameter_storage
000000000045e430 0000000000000274 t _mesa_add_parameter
000000000045e6b0 00000000000002b8 t _mesa_add_typed_unnamed_constant
000000000045e970 00000000000000f4 t _mesa_add_sized_state_reference
000000000045ea70 000000000000000c t _mesa_add_state_reference
000000000045ea80 000000000000007c t binary
000000000045eb00 0000000000000188 t _mesa_register_file_name
000000000045ec90 0000000000000214 t reg_string
000000000045eeb0 00000000000000e0 t _mesa_fprint_parameter_list.part.0
000000000045ef90 0000000000000268 t _mesa_swizzle_string
000000000045f200 0000000000000068 t fprint_src_reg
000000000045f270 0000000000000084 t _mesa_writemask_string
000000000045f300 0000000000000170 t _mesa_fprint_alu_instruction
000000000045f470 0000000000000684 t _mesa_fprint_instruction_opt
000000000045fb00 0000000000000154 t _mesa_fprint_program_opt
000000000045fc60 0000000000000030 t _mesa_print_program
000000000045fc90 00000000000001b8 t _mesa_print_program_parameters
000000000045fe50 0000000000000038 t _mesa_print_parameter_list
000000000045fe90 0000000000000190 t _mesa_write_shader_to_file
0000000000460020 0000000000000048 t _mesa_set_program_error
0000000000460070 00000000000000c8 t _mesa_init_gl_program
0000000000460140 0000000000000070 t _mesa_delete_program
00000000004601b0 0000000000000018 t _mesa_lookup_program
00000000004601d0 0000000000000094 t _mesa_reference_program_
0000000000460270 00000000000000e4 t _mesa_init_program
0000000000460360 00000000000000a0 t _mesa_free_program_data
0000000000460400 00000000000000a0 t _mesa_update_default_objects_program
00000000004604a0 00000000000000f8 t _mesa_insert_instructions
00000000004605a0 00000000000000e0 t _mesa_delete_instructions
0000000000460680 00000000000000f0 t _mesa_find_used_registers
0000000000460770 0000000000000038 t _mesa_find_free_register
00000000004607b0 00000000000000a0 t _mesa_get_min_invocations_per_fragment
0000000000460850 0000000000000360 t _mesa_insert_mvp_code
0000000000460bb0 00000000000003fc t _mesa_append_fog_code
0000000000460fb0 0000000000000250 t _mesa_remove_output_reads
0000000000461200 00000000000000d4 t _mesa_program_fragment_position_to_sysval
00000000004612e0 0000000000000ee8 t append_token
00000000004621d0 0000000000000104 t _mesa_program_state_flags
00000000004622e0 0000000000000778 t _mesa_program_state_string
0000000000462a60 0000000000001314 t _mesa_load_state_parameters
0000000000463d80 0000000000000098 t _mesa_symbol_table_pop_scope
0000000000463e20 0000000000000058 t _mesa_symbol_table_push_scope
0000000000463e80 000000000000004c t _mesa_symbol_table_symbol_scope
0000000000463ed0 0000000000000028 t _mesa_symbol_table_find_symbol
0000000000463f00 00000000000000e4 t _mesa_symbol_table_add_symbol
0000000000463ff0 0000000000000048 t _mesa_symbol_table_replace_symbol
0000000000464040 0000000000000088 t _mesa_symbol_table_ctor
00000000004640d0 0000000000000044 t _mesa_symbol_table_dtor
0000000000464120 00000000000001cc t accum_scale_or_bias
00000000004642f0 000000000000030c t accum_or_load
0000000000464600 0000000000000124 t _mesa_ClearAccum
0000000000464730 00000000000001e8 t _mesa_clear_accum_buffer
0000000000464920 0000000000000010 t _mesa_init_accum
0000000000464930 0000000000000764 T _mesa_Accum
00000000004650a0 000000000000006c t VertexAttrib1NbvNV
0000000000465110 000000000000004c t VertexAttrib1bvNV
0000000000465160 000000000000007c t VertexAttrib2NbvNV
00000000004651e0 0000000000000054 t VertexAttrib2bvNV
0000000000465240 0000000000000094 t VertexAttrib3NbvNV
00000000004652e0 000000000000005c t VertexAttrib3bvNV
0000000000465340 00000000000000a8 t VertexAttrib4NbvNV
00000000004653f0 0000000000000064 t VertexAttrib4bvNV
0000000000465460 0000000000000058 t VertexAttrib1NubvNV
00000000004654c0 000000000000004c t VertexAttrib1ubvNV
0000000000465510 0000000000000060 t VertexAttrib2NubvNV
0000000000465570 0000000000000054 t VertexAttrib2ubvNV
00000000004655d0 0000000000000068 t VertexAttrib3NubvNV
0000000000465640 000000000000005c t VertexAttrib3ubvNV
00000000004656a0 0000000000000070 t VertexAttrib4NubvNV
0000000000465710 0000000000000064 t VertexAttrib4ubvNV
0000000000465780 000000000000006c t VertexAttrib1NsvNV
00000000004657f0 000000000000004c t VertexAttrib1svNV
0000000000465840 000000000000007c t VertexAttrib2NsvNV
00000000004658c0 0000000000000054 t VertexAttrib2svNV
0000000000465920 0000000000000094 t VertexAttrib3NsvNV
00000000004659c0 000000000000005c t VertexAttrib3svNV
0000000000465a20 00000000000000a8 t VertexAttrib4NsvNV
0000000000465ad0 0000000000000064 t VertexAttrib4svNV
0000000000465b40 0000000000000060 t VertexAttrib1NusvNV
0000000000465ba0 000000000000004c t VertexAttrib1usvNV
0000000000465bf0 000000000000006c t VertexAttrib2NusvNV
0000000000465c60 0000000000000054 t VertexAttrib2usvNV
0000000000465cc0 0000000000000078 t VertexAttrib3NusvNV
0000000000465d40 000000000000005c t VertexAttrib3usvNV
0000000000465da0 0000000000000084 t VertexAttrib4NusvNV
0000000000465e30 0000000000000064 t VertexAttrib4usvNV
0000000000465ea0 0000000000000074 t VertexAttrib1NivNV
0000000000465f20 000000000000004c t VertexAttrib1ivNV
0000000000465f70 000000000000008c t VertexAttrib2NivNV
0000000000466000 0000000000000050 t VertexAttrib2ivNV
0000000000466050 00000000000000a8 t VertexAttrib3NivNV
0000000000466100 0000000000000058 t VertexAttrib3ivNV
0000000000466160 00000000000000c0 t VertexAttrib4NivNV
0000000000466220 000000000000005c t VertexAttrib4ivNV
0000000000466280 0000000000000064 t VertexAttrib1NuivNV
00000000004662f0 000000000000004c t VertexAttrib1uivNV
0000000000466340 0000000000000070 t VertexAttrib2NuivNV
00000000004663b0 0000000000000050 t VertexAttrib2uivNV
0000000000466400 0000000000000080 t VertexAttrib3NuivNV
0000000000466480 0000000000000058 t VertexAttrib3uivNV
00000000004664e0 000000000000008c t VertexAttrib4NuivNV
0000000000466570 000000000000005c t VertexAttrib4uivNV
00000000004665d0 0000000000000044 t VertexAttrib1fvNV
0000000000466620 0000000000000044 t VertexAttrib2fvNV
0000000000466670 0000000000000044 t VertexAttrib3fvNV
00000000004666c0 0000000000000044 t VertexAttrib4fvNV
0000000000466710 0000000000000044 t VertexAttrib1dvNV
0000000000466760 0000000000000044 t VertexAttrib2dvNV
00000000004667b0 0000000000000044 t VertexAttrib3dvNV
0000000000466800 0000000000000044 t VertexAttrib4dvNV
0000000000466850 000000000000006c t VertexAttrib1NbvARB
00000000004668c0 000000000000004c t VertexAttrib1bvARB
0000000000466910 000000000000007c t VertexAttrib2NbvARB
0000000000466990 0000000000000054 t VertexAttrib2bvARB
00000000004669f0 0000000000000094 t VertexAttrib3NbvARB
0000000000466a90 000000000000005c t VertexAttrib3bvARB
0000000000466af0 00000000000000a8 t VertexAttrib4NbvARB
0000000000466ba0 0000000000000064 t VertexAttrib4bvARB
0000000000466c10 0000000000000058 t VertexAttrib1NubvARB
0000000000466c70 000000000000004c t VertexAttrib1ubvARB
0000000000466cc0 0000000000000060 t VertexAttrib2NubvARB
0000000000466d20 0000000000000054 t VertexAttrib2ubvARB
0000000000466d80 0000000000000068 t VertexAttrib3NubvARB
0000000000466df0 000000000000005c t VertexAttrib3ubvARB
0000000000466e50 0000000000000070 t VertexAttrib4NubvARB
0000000000466ec0 0000000000000064 t VertexAttrib4ubvARB
0000000000466f30 000000000000006c t VertexAttrib1NsvARB
0000000000466fa0 000000000000004c t VertexAttrib1svARB
0000000000466ff0 000000000000007c t VertexAttrib2NsvARB
0000000000467070 0000000000000054 t VertexAttrib2svARB
00000000004670d0 0000000000000094 t VertexAttrib3NsvARB
0000000000467170 000000000000005c t VertexAttrib3svARB
00000000004671d0 00000000000000a8 t VertexAttrib4NsvARB
0000000000467280 0000000000000064 t VertexAttrib4svARB
00000000004672f0 0000000000000060 t VertexAttrib1NusvARB
0000000000467350 000000000000004c t VertexAttrib1usvARB
00000000004673a0 000000000000006c t VertexAttrib2NusvARB
0000000000467410 0000000000000054 t VertexAttrib2usvARB
0000000000467470 0000000000000078 t VertexAttrib3NusvARB
00000000004674f0 000000000000005c t VertexAttrib3usvARB
0000000000467550 0000000000000084 t VertexAttrib4NusvARB
00000000004675e0 0000000000000064 t VertexAttrib4usvARB
0000000000467650 0000000000000074 t VertexAttrib1NivARB
00000000004676d0 000000000000004c t VertexAttrib1ivARB
0000000000467720 000000000000008c t VertexAttrib2NivARB
00000000004677b0 0000000000000050 t VertexAttrib2ivARB
0000000000467800 00000000000000a8 t VertexAttrib3NivARB
00000000004678b0 0000000000000058 t VertexAttrib3ivARB
0000000000467910 00000000000000c0 t VertexAttrib4NivARB
00000000004679d0 000000000000005c t VertexAttrib4ivARB
0000000000467a30 0000000000000064 t VertexAttrib1NuivARB
0000000000467aa0 000000000000004c t VertexAttrib1uivARB
0000000000467af0 0000000000000070 t VertexAttrib2NuivARB
0000000000467b60 0000000000000050 t VertexAttrib2uivARB
0000000000467bb0 0000000000000080 t VertexAttrib3NuivARB
0000000000467c30 0000000000000058 t VertexAttrib3uivARB
0000000000467c90 000000000000008c t VertexAttrib4NuivARB
0000000000467d20 000000000000005c t VertexAttrib4uivARB
0000000000467d80 0000000000000044 t VertexAttrib1fvARB
0000000000467dd0 0000000000000044 t VertexAttrib2fvARB
0000000000467e20 0000000000000044 t VertexAttrib3fvARB
0000000000467e70 0000000000000044 t VertexAttrib4fvARB
0000000000467ec0 0000000000000044 t VertexAttrib1dvARB
0000000000467f10 0000000000000044 t VertexAttrib2dvARB
0000000000467f60 0000000000000044 t VertexAttrib3dvARB
0000000000467fb0 0000000000000044 t VertexAttrib4dvARB
0000000000468000 0000000000000048 t VertexAttribI1bv
0000000000468050 000000000000004c t VertexAttribI2bv
00000000004680a0 0000000000000050 t VertexAttribI3bv
00000000004680f0 0000000000000044 t VertexAttribI4bv
0000000000468140 0000000000000048 t VertexAttribI1ubv
0000000000468190 000000000000004c t VertexAttribI2ubv
00000000004681e0 0000000000000050 t VertexAttribI3ubv
0000000000468230 0000000000000044 t VertexAttribI4ubv
0000000000468280 0000000000000048 t VertexAttribI1sv
00000000004682d0 000000000000004c t VertexAttribI2sv
0000000000468320 0000000000000050 t VertexAttribI3sv
0000000000468370 0000000000000044 t VertexAttribI4sv
00000000004683c0 0000000000000048 t VertexAttribI1usv
0000000000468410 000000000000004c t VertexAttribI2usv
0000000000468460 0000000000000050 t VertexAttribI3usv
00000000004684b0 0000000000000044 t VertexAttribI4usv
0000000000468500 0000000000000048 t VertexAttribI1iv
0000000000468550 0000000000000050 t VertexAttribI2iv
00000000004685a0 0000000000000050 t VertexAttribI3iv
00000000004685f0 0000000000000044 t VertexAttribI4iv
0000000000468640 0000000000000048 t VertexAttribI1uiv
0000000000468690 0000000000000050 t VertexAttribI2uiv
00000000004686e0 0000000000000050 t VertexAttribI3uiv
0000000000468730 0000000000000044 t VertexAttribI4uiv
0000000000468780 0000000000000044 t VertexAttribL1dv
00000000004687d0 0000000000000044 t VertexAttribL2dv
0000000000468820 0000000000000044 t VertexAttribL3dv
0000000000468870 0000000000000044 t VertexAttribL4dv
00000000004688c0 0000000000000374 t _mesa_array_element
0000000000468c40 00000000000000b8 T _ae_ArrayElement
0000000000468d00 000000000000000c t _mesa_install_arrayelt_vtxfmt
0000000000468d10 0000000000000074 T _mesa_Color3b
0000000000468d90 0000000000000038 T _mesa_Color3d
0000000000468dd0 0000000000000080 T _mesa_Color3i
0000000000468e50 0000000000000074 T _mesa_Color3s
0000000000468ed0 0000000000000060 T _mesa_Color3ui
0000000000468f30 000000000000005c T _mesa_Color3us
0000000000468f90 000000000000004c T _mesa_Color3ub
0000000000468fe0 0000000000000078 T _mesa_Color3bv
0000000000469060 0000000000000044 T _mesa_Color3dv
00000000004690b0 000000000000008c T _mesa_Color3iv
0000000000469140 0000000000000078 T _mesa_Color3sv
00000000004691c0 0000000000000068 T _mesa_Color3uiv
0000000000469230 0000000000000060 T _mesa_Color3usv
0000000000469290 0000000000000050 T _mesa_Color3ubv
00000000004692e0 0000000000000088 T _mesa_Color4b
0000000000469370 0000000000000038 T _mesa_Color4d
00000000004693b0 0000000000000098 T _mesa_Color4i
0000000000469450 0000000000000088 T _mesa_Color4s
00000000004694e0 0000000000000068 T _mesa_Color4ui
0000000000469550 0000000000000064 T _mesa_Color4us
00000000004695c0 0000000000000050 T _mesa_Color4ub
0000000000469610 00000000000000a4 T _mesa_Color4iv
00000000004696c0 000000000000008c T _mesa_Color4bv
0000000000469750 0000000000000044 T _mesa_Color4dv
00000000004697a0 000000000000008c T _mesa_Color4sv
0000000000469830 0000000000000070 T _mesa_Color4uiv
00000000004698a0 0000000000000068 T _mesa_Color4usv
0000000000469910 0000000000000054 T _mesa_Color4ubv
0000000000469970 0000000000000040 T _mesa_FogCoordd
00000000004699b0 0000000000000048 T _mesa_FogCoorddv
0000000000469a00 000000000000002c T _mesa_Indexd
0000000000469a30 0000000000000030 T _mesa_Indexi
0000000000469a60 0000000000000030 T _mesa_Indexs
0000000000469a90 0000000000000030 T _mesa_Indexub
0000000000469ac0 0000000000000034 T _mesa_Indexdv
0000000000469b00 0000000000000034 T _mesa_Indexiv
0000000000469b40 0000000000000034 T _mesa_Indexsv
0000000000469b80 0000000000000034 T _mesa_Indexubv
0000000000469bc0 0000000000000034 T _mesa_EdgeFlagv
0000000000469c00 0000000000000074 T _mesa_Normal3b
0000000000469c80 0000000000000034 T _mesa_Normal3d
0000000000469cc0 0000000000000080 T _mesa_Normal3i
0000000000469d40 0000000000000074 T _mesa_Normal3s
0000000000469dc0 0000000000000078 T _mesa_Normal3bv
0000000000469e40 0000000000000040 T _mesa_Normal3dv
0000000000469e80 000000000000008c T _mesa_Normal3iv
0000000000469f10 0000000000000078 T _mesa_Normal3sv
0000000000469f90 000000000000002c T _mesa_TexCoord1d
0000000000469fc0 0000000000000030 T _mesa_TexCoord1i
0000000000469ff0 0000000000000030 T _mesa_TexCoord1s
000000000046a020 0000000000000030 T _mesa_TexCoord2d
000000000046a050 0000000000000038 T _mesa_TexCoord2s
000000000046a090 0000000000000034 T _mesa_TexCoord2i
000000000046a0d0 0000000000000034 T _mesa_TexCoord3d
000000000046a110 0000000000000038 T _mesa_TexCoord3i
000000000046a150 0000000000000040 T _mesa_TexCoord3s
000000000046a190 0000000000000038 T _mesa_TexCoord4d
000000000046a1d0 000000000000003c T _mesa_TexCoord4i
000000000046a210 0000000000000048 T _mesa_TexCoord4s
000000000046a260 0000000000000034 T _mesa_TexCoord1dv
000000000046a2a0 0000000000000034 T _mesa_TexCoord1iv
000000000046a2e0 0000000000000034 T _mesa_TexCoord1sv
000000000046a320 0000000000000038 T _mesa_TexCoord2dv
000000000046a360 0000000000000038 T _mesa_TexCoord2iv
000000000046a3a0 000000000000003c T _mesa_TexCoord2sv
000000000046a3e0 0000000000000040 T _mesa_TexCoord3dv
000000000046a420 0000000000000040 T _mesa_TexCoord3iv
000000000046a460 0000000000000044 T _mesa_TexCoord3sv
000000000046a4b0 0000000000000044 T _mesa_TexCoord4dv
000000000046a500 0000000000000044 T _mesa_TexCoord4iv
000000000046a550 000000000000004c T _mesa_TexCoord4sv
000000000046a5a0 0000000000000030 T _mesa_Vertex2d
000000000046a5d0 0000000000000034 T _mesa_Vertex2i
000000000046a610 0000000000000038 T _mesa_Vertex2s
000000000046a650 0000000000000034 T _mesa_Vertex3d
000000000046a690 0000000000000038 T _mesa_Vertex3i
000000000046a6d0 0000000000000040 T _mesa_Vertex3s
000000000046a710 0000000000000038 T _mesa_Vertex4d
000000000046a750 000000000000003c T _mesa_Vertex4i
000000000046a790 0000000000000048 T _mesa_Vertex4s
000000000046a7e0 0000000000000038 T _mesa_Vertex2dv
000000000046a820 0000000000000038 T _mesa_Vertex2iv
000000000046a860 000000000000003c T _mesa_Vertex2sv
000000000046a8a0 0000000000000040 T _mesa_Vertex3dv
000000000046a8e0 0000000000000040 T _mesa_Vertex3iv
000000000046a920 0000000000000044 T _mesa_Vertex3sv
000000000046a970 0000000000000044 T _mesa_Vertex4dv
000000000046a9c0 0000000000000044 T _mesa_Vertex4iv
000000000046aa10 000000000000004c T _mesa_Vertex4sv
000000000046aa60 0000000000000038 T _mesa_MultiTexCoord1d
000000000046aaa0 000000000000003c T _mesa_MultiTexCoord1dv
000000000046aae0 0000000000000038 T _mesa_MultiTexCoord1i
000000000046ab20 000000000000003c T _mesa_MultiTexCoord1iv
000000000046ab60 000000000000003c T _mesa_MultiTexCoord1s
000000000046aba0 000000000000003c T _mesa_MultiTexCoord1sv
000000000046abe0 000000000000003c T _mesa_MultiTexCoord2d
000000000046ac20 0000000000000040 T _mesa_MultiTexCoord2dv
000000000046ac60 000000000000003c T _mesa_MultiTexCoord2i
000000000046aca0 0000000000000040 T _mesa_MultiTexCoord2iv
000000000046ace0 0000000000000044 T _mesa_MultiTexCoord2s
000000000046ad30 0000000000000044 T _mesa_MultiTexCoord2sv
000000000046ad80 0000000000000040 T _mesa_MultiTexCoord3d
000000000046adc0 0000000000000048 T _mesa_MultiTexCoord3dv
000000000046ae10 0000000000000040 T _mesa_MultiTexCoord3i
000000000046ae50 0000000000000048 T _mesa_MultiTexCoord3iv
000000000046aea0 000000000000004c T _mesa_MultiTexCoord3s
000000000046aef0 000000000000004c T _mesa_MultiTexCoord3sv
000000000046af40 0000000000000040 T _mesa_MultiTexCoord4d
000000000046af80 000000000000004c T _mesa_MultiTexCoord4dv
000000000046afd0 0000000000000044 T _mesa_MultiTexCoord4i
000000000046b020 000000000000004c T _mesa_MultiTexCoord4iv
000000000046b070 0000000000000054 T _mesa_MultiTexCoord4s
000000000046b0d0 0000000000000054 T _mesa_MultiTexCoord4sv
000000000046b130 0000000000000038 T _mesa_EvalCoord2dv
000000000046b170 0000000000000030 T _mesa_EvalCoord2d
000000000046b1a0 0000000000000034 T _mesa_EvalCoord1dv
000000000046b1e0 000000000000002c T _mesa_EvalCoord1d
000000000046b210 000000000000003c T _mesa_Materialf
000000000046b250 0000000000000044 T _mesa_Materiali
000000000046b2a0 0000000000000138 T _mesa_Materialiv
000000000046b3e0 0000000000000038 T _mesa_Rectd
000000000046b420 0000000000000044 T _mesa_Rectdv
000000000046b470 0000000000000034 T _mesa_Rectfv
000000000046b4b0 000000000000003c T _mesa_Recti
000000000046b4f0 0000000000000044 T _mesa_Rectiv
000000000046b540 0000000000000048 T _mesa_Rects
000000000046b590 000000000000004c T _mesa_Rectsv
000000000046b5e0 0000000000000088 T _mesa_SecondaryColor3b
000000000046b670 0000000000000048 T _mesa_SecondaryColor3d
000000000046b6c0 00000000000000a4 T _mesa_SecondaryColor3i
000000000046b770 0000000000000088 T _mesa_SecondaryColor3s
000000000046b800 0000000000000074 T _mesa_SecondaryColor3ui
000000000046b880 000000000000006c T _mesa_SecondaryColor3us
000000000046b8f0 000000000000005c T _mesa_SecondaryColor3ub
000000000046b950 000000000000008c T _mesa_SecondaryColor3bv
000000000046b9e0 0000000000000054 T _mesa_SecondaryColor3dv
000000000046ba40 00000000000000a0 T _mesa_SecondaryColor3iv
000000000046bae0 000000000000008c T _mesa_SecondaryColor3sv
000000000046bb70 0000000000000078 T _mesa_SecondaryColor3uiv
000000000046bbf0 0000000000000070 T _mesa_SecondaryColor3usv
000000000046bc60 0000000000000060 T _mesa_SecondaryColor3ubv
000000000046bcc0 000000000000004c T _mesa_VertexAttrib1sNV
000000000046bd10 0000000000000048 T _mesa_VertexAttrib1dNV
000000000046bd60 0000000000000054 T _mesa_VertexAttrib2sNV
000000000046bdc0 000000000000004c T _mesa_VertexAttrib2dNV
000000000046be10 000000000000005c T _mesa_VertexAttrib3sNV
000000000046be70 0000000000000054 T _mesa_VertexAttrib3dNV
000000000046bed0 0000000000000064 T _mesa_VertexAttrib4sNV
000000000046bf40 0000000000000054 T _mesa_VertexAttrib4dNV
000000000046bfa0 0000000000000070 T _mesa_VertexAttrib4ubNV
000000000046c010 000000000000004c T _mesa_VertexAttrib1svNV
000000000046c060 000000000000004c T _mesa_VertexAttrib1dvNV
000000000046c0b0 0000000000000054 T _mesa_VertexAttrib2svNV
000000000046c110 0000000000000050 T _mesa_VertexAttrib2dvNV
000000000046c160 000000000000005c t _mesa_VertexAttrib3svNV
000000000046c1c0 0000000000000058 T _mesa_VertexAttrib3dvNV
000000000046c220 0000000000000064 t _mesa_VertexAttrib4svNV
000000000046c290 000000000000005c T _mesa_VertexAttrib4dvNV
000000000046c2f0 0000000000000070 t _mesa_VertexAttrib4ubvNV
000000000046c360 0000000000000080 T _mesa_VertexAttribs1fvNV
000000000046c3e0 000000000000008c T _mesa_VertexAttribs2fvNV
000000000046c470 000000000000005c T _mesa_VertexAttribs3svNV
000000000046c4d0 000000000000008c T _mesa_VertexAttribs3fvNV
000000000046c560 000000000000005c T _mesa_VertexAttribs4svNV
000000000046c5c0 0000000000000090 T _mesa_VertexAttribs4fvNV
000000000046c650 000000000000005c T _mesa_VertexAttribs4ubvNV
000000000046c6b0 000000000000004c T _mesa_VertexAttrib1s
000000000046c700 0000000000000048 T _mesa_VertexAttrib1d
000000000046c750 0000000000000054 T _mesa_VertexAttrib2s
000000000046c7b0 000000000000004c T _mesa_VertexAttrib2d
000000000046c800 000000000000005c T _mesa_VertexAttrib3s
000000000046c860 0000000000000054 T _mesa_VertexAttrib3d
000000000046c8c0 0000000000000064 T _mesa_VertexAttrib4s
000000000046c930 0000000000000054 T _mesa_VertexAttrib4d
000000000046c990 000000000000004c T _mesa_VertexAttrib1sv
000000000046c9e0 000000000000004c T _mesa_VertexAttrib1dv
000000000046ca30 0000000000000054 T _mesa_VertexAttrib2sv
000000000046ca90 0000000000000050 T _mesa_VertexAttrib2dv
000000000046cae0 000000000000005c T _mesa_VertexAttrib3sv
000000000046cb40 0000000000000058 T _mesa_VertexAttrib3dv
000000000046cba0 0000000000000064 T _mesa_VertexAttrib4sv
000000000046cc10 000000000000005c T _mesa_VertexAttrib4dv
000000000046cc70 0000000000000064 T _mesa_VertexAttrib4bv
000000000046cce0 000000000000005c T _mesa_VertexAttrib4iv
000000000046cd40 0000000000000064 T _mesa_VertexAttrib4ubv
000000000046cdb0 0000000000000064 T _mesa_VertexAttrib4usv
000000000046ce20 000000000000005c T _mesa_VertexAttrib4uiv
000000000046ce80 00000000000000a8 T _mesa_VertexAttrib4Nbv
000000000046cf30 00000000000000a8 T _mesa_VertexAttrib4Nsv
000000000046cfe0 00000000000000c0 T _mesa_VertexAttrib4Niv
000000000046d0a0 0000000000000070 T _mesa_VertexAttrib4Nub
000000000046d110 0000000000000070 T _mesa_VertexAttrib4Nubv
000000000046d180 0000000000000084 T _mesa_VertexAttrib4Nusv
000000000046d210 000000000000008c T _mesa_VertexAttrib4Nuiv
000000000046d2a0 0000000000000048 T _mesa_VertexAttribI1iv
000000000046d2f0 0000000000000048 T _mesa_VertexAttribI1uiv
000000000046d340 0000000000000054 T _mesa_VertexAttribI4bv
000000000046d3a0 0000000000000054 T _mesa_VertexAttribI4sv
000000000046d400 0000000000000054 T _mesa_VertexAttribI4ubv
000000000046d460 0000000000000054 T _mesa_VertexAttribI4usv
000000000046d4c0 0000000000000084 T _mesa_VertexAttribs1dvNV
000000000046d550 0000000000000084 T _mesa_VertexAttribs1svNV
000000000046d5e0 0000000000000098 T _mesa_VertexAttribs2dvNV
000000000046d680 0000000000000098 T _mesa_VertexAttribs3dvNV
000000000046d720 000000000000009c T _mesa_VertexAttribs2svNV
000000000046d7c0 00000000000000ac T _mesa_VertexAttribs4dvNV
000000000046d870 00000000000010cc t _mesa_loopback_init_api_table
000000000046e940 00000000000001c4 t lookup_or_create_program
000000000046eb10 000000000000032c t set_program_string
000000000046ee40 00000000000000b4 t get_local_param_pointer
000000000046ef00 00000000000003ec t get_program_iv
000000000046f2f0 0000000000000194 t program_local_parameters4fv
000000000046f490 00000000000001fc t _mesa_BindProgramARB
000000000046f690 00000000000001bc T _mesa_DeleteProgramsARB
000000000046f850 0000000000000114 T _mesa_GenProgramsARB
000000000046f970 0000000000000084 T _mesa_IsProgramARB
000000000046fa00 00000000000000a0 T _mesa_ProgramStringARB
000000000046faa0 0000000000000060 T _mesa_NamedProgramStringEXT
000000000046fb00 00000000000001d0 T _mesa_ProgramEnvParameter4dARB
000000000046fcd0 00000000000001c8 T _mesa_ProgramEnvParameter4dvARB
000000000046fea0 00000000000001c0 T _mesa_ProgramEnvParameter4fARB
0000000000470060 00000000000001d8 T _mesa_ProgramEnvParameter4fvARB
0000000000470240 00000000000001a0 T _mesa_ProgramEnvParameters4fvEXT
00000000004703e0 00000000000000f0 T _mesa_GetProgramEnvParameterdvARB
00000000004704d0 00000000000000f0 T _mesa_GetProgramEnvParameterfvARB
00000000004705c0 0000000000000178 t _mesa_ProgramLocalParameter4fARB
0000000000470740 0000000000000164 t _mesa_NamedProgramLocalParameter4fEXT
00000000004708b0 000000000000000c T _mesa_ProgramLocalParameter4fvARB
00000000004708c0 000000000000000c T _mesa_NamedProgramLocalParameter4fvEXT
00000000004708d0 0000000000000098 T _mesa_ProgramLocalParameters4fvEXT
0000000000470970 0000000000000060 T _mesa_NamedProgramLocalParameters4fvEXT
00000000004709d0 0000000000000188 T _mesa_ProgramLocalParameter4dARB
0000000000470b60 0000000000000174 T _mesa_NamedProgramLocalParameter4dEXT
0000000000470ce0 000000000000001c T _mesa_ProgramLocalParameter4dvARB
0000000000470d00 000000000000001c T _mesa_NamedProgramLocalParameter4dvEXT
0000000000470d20 0000000000000134 T _mesa_GetProgramLocalParameterfvARB
0000000000470e60 00000000000000fc T _mesa_GetNamedProgramLocalParameterfvEXT
0000000000470f60 0000000000000138 T _mesa_GetProgramLocalParameterdvARB
00000000004710a0 0000000000000100 T _mesa_GetNamedProgramLocalParameterdvEXT
00000000004711a0 000000000000009c T _mesa_GetProgramivARB
0000000000471240 00000000000000fc T _mesa_GetNamedProgramivEXT
0000000000471340 00000000000000cc T _mesa_GetProgramStringARB
0000000000471410 00000000000000b0 T _mesa_GetNamedProgramStringEXT
00000000004714c0 00000000000000e8 t gen_vertex_arrays.part.0
00000000004715b0 0000000000000050 t _mesa_new_vao
0000000000471600 0000000000000078 t _mesa_delete_vao
0000000000471680 00000000000000a0 t _mesa_reference_vao_
0000000000471720 00000000000000a8 t _mesa_lookup_vao
00000000004717d0 0000000000000140 t _mesa_lookup_vao_err
0000000000471910 0000000000000038 t _mesa_initialize_vao
0000000000471950 00000000000004e0 t _mesa_update_vao_derived_arrays
0000000000471e30 0000000000000028 t _mesa_set_vao_immutable
0000000000471e60 0000000000000054 t _mesa_all_varyings_in_vbos
0000000000471ec0 0000000000000060 t _mesa_all_buffers_are_unmapped
0000000000471f20 00000000000000a8 t _mesa_vao_map_arrays
0000000000471fd0 000000000000007c t _mesa_vao_map
0000000000472050 0000000000000084 t _mesa_vao_unmap_arrays
00000000004720e0 0000000000000048 t _mesa_vao_unmap
0000000000472130 00000000000000a4 t _mesa_BindVertexArray_no_error
00000000004721e0 0000000000000158 t delete_vertex_arrays
0000000000472340 00000000000000c8 t _mesa_BindVertexArray
0000000000472410 000000000000002c T _mesa_DeleteVertexArrays_no_error
0000000000472440 0000000000000044 T _mesa_DeleteVertexArrays
0000000000472490 000000000000003c T _mesa_GenVertexArrays_no_error
00000000004724d0 0000000000000064 T _mesa_GenVertexArrays
0000000000472540 000000000000003c T _mesa_CreateVertexArrays_no_error
0000000000472580 0000000000000064 T _mesa_CreateVertexArrays
00000000004725f0 0000000000000070 t _mesa_IsVertexArray
0000000000472660 000000000000011c T _mesa_VertexArrayElementBuffer_no_error
0000000000472780 00000000000000e4 T _mesa_VertexArrayElementBuffer
0000000000472870 00000000000000c4 T _mesa_GetVertexArrayiv
0000000000472940 00000000000000e8 t check_arith_arg
0000000000472a30 000000000000005c t _mesa_delete_ati_fragment_shader.part.0
0000000000472a90 00000000000005f8 t _mesa_FragmentOpXATI
0000000000473090 0000000000000034 t _mesa_new_ati_fragment_shader
00000000004730d0 0000000000000018 t _mesa_delete_ati_fragment_shader
00000000004730f0 0000000000000118 T _mesa_GenFragmentShadersATI
0000000000473210 0000000000000174 t _mesa_BindFragmentShaderATI
0000000000473390 0000000000000168 T _mesa_DeleteFragmentShaderATI
0000000000473500 0000000000000140 T _mesa_BeginFragmentShaderATI
0000000000473640 0000000000000180 T _mesa_EndFragmentShaderATI
00000000004737c0 0000000000000208 T _mesa_PassTexCoordATI
00000000004739d0 0000000000000208 T _mesa_SampleMapATI
0000000000473be0 0000000000000060 T _mesa_ColorFragmentOp1ATI
0000000000473c40 0000000000000068 T _mesa_ColorFragmentOp2ATI
0000000000473cb0 0000000000000074 T _mesa_ColorFragmentOp3ATI
0000000000473d30 000000000000005c T _mesa_AlphaFragmentOp1ATI
0000000000473d90 000000000000005c T _mesa_AlphaFragmentOp2ATI
0000000000473df0 0000000000000070 T _mesa_AlphaFragmentOp3ATI
0000000000473e60 0000000000000128 T _mesa_SetFragmentShaderConstantATI
0000000000473f90 0000000000000138 t copy_array_attrib
00000000004740d0 00000000000000b4 t push_attrib
0000000000474190 00000000000009b8 T _mesa_PushAttrib
0000000000474b50 0000000000001ebc T _mesa_PopAttrib
0000000000476a10 00000000000003e4 t _mesa_PushClientAttrib
0000000000476e00 0000000000000380 T _mesa_PopClientAttrib
0000000000477180 0000000000000324 t _mesa_ClientAttribDefaultEXT
00000000004774b0 0000000000000024 T _mesa_PushClientAttribDefaultEXT
00000000004774e0 0000000000000128 t _mesa_free_attrib_data
0000000000477610 0000000000000014 t _mesa_init_attrib
0000000000477630 000000000000004c T _mesa_TextureBarrierNV
0000000000477680 000000000000003c T _mesa_MemoryBarrier
00000000004776c0 0000000000000054 T _mesa_MemoryBarrierByRegion_no_error
0000000000477720 0000000000000084 T _mesa_MemoryBarrierByRegion
00000000004777b0 000000000000004c T _mesa_BlendBarrier
0000000000477800 000000000000004c T _mesa_FramebufferFetchBarrierEXT
0000000000477850 0000000000000044 T _mesa_PrimitiveBoundingBox
00000000004778a0 000000000000002c t _mesa_init_bbox
00000000004778d0 00000000000000e0 t legal_dst_factor
00000000004779b0 00000000000000b0 t update_uses_dual_src
0000000000477a60 0000000000000188 t blend_func_separate
0000000000477bf0 0000000000000090 t legal_src_factor
0000000000477c80 0000000000000154 t validate_blend_factors
0000000000477de0 00000000000000bc t skip_blend_state_update
0000000000477ea0 0000000000000268 t blend_equation_separate
0000000000478110 00000000000000a4 T _mesa_BlendFunc
00000000004781c0 0000000000000054 T _mesa_BlendFunc_no_error
0000000000478220 00000000000000b8 t _mesa_BlendFuncSeparate
00000000004782e0 0000000000000058 T _mesa_BlendFuncSeparate_no_error
0000000000478340 0000000000000118 t _mesa_BlendFuncSeparateiARB_no_error
0000000000478460 000000000000000c T _mesa_BlendFunciARB_no_error
0000000000478470 00000000000001a4 t _mesa_BlendFuncSeparateiARB
0000000000478620 000000000000000c T _mesa_BlendFunciARB
0000000000478630 00000000000002b8 t _mesa_BlendEquation
00000000004788f0 00000000000001fc T _mesa_BlendEquationiARB_no_error
0000000000478af0 00000000000002a8 T _mesa_BlendEquationiARB
0000000000478da0 0000000000000030 T _mesa_BlendEquationSeparate_no_error
0000000000478dd0 0000000000000030 t _mesa_BlendEquationSeparate
0000000000478e00 00000000000000f8 T _mesa_BlendEquationSeparateiARB_no_error
0000000000478f00 000000000000020c t _mesa_BlendEquationSeparateiARB
0000000000479110 00000000000001b4 t _mesa_BlendColor
00000000004792d0 0000000000000128 t _mesa_AlphaFunc
0000000000479400 00000000000000fc t _mesa_LogicOp
0000000000479500 00000000000000cc T _mesa_LogicOp_no_error
00000000004795d0 0000000000000088 t _mesa_IndexMask
0000000000479660 0000000000000138 t _mesa_ColorMask
00000000004797a0 0000000000000128 t _mesa_ColorMaski
00000000004798d0 00000000000001f8 t _mesa_ClampColor
0000000000479ad0 000000000000002c t _mesa_get_clamp_fragment_color
0000000000479b00 000000000000002c t _mesa_get_clamp_read_color
0000000000479b30 0000000000000054 t _mesa_update_clamp_fragment_color
0000000000479b90 0000000000000044 t _mesa_update_clamp_vertex_color
0000000000479be0 00000000000000fc t _mesa_init_color
0000000000479ce0 0000000000000124 t validate_depth_buffer.isra.0
0000000000479e10 0000000000000148 t validate_stencil_buffer.isra.0
0000000000479f60 00000000000001f8 t validate_color_buffer
000000000047a160 0000000000000074 t _mesa_regions_overlap
000000000047a1e0 0000000000000194 T _mesa_BlitFramebuffer_no_error
000000000047a380 0000000000000458 T _mesa_BlitFramebuffer
000000000047a7e0 00000000000001e4 T _mesa_BlitNamedFramebuffer_no_error
000000000047a9d0 00000000000004c0 T _mesa_BlitNamedFramebuffer
000000000047ae90 00000000000003c8 t get_buffer_target
000000000047b260 0000000000000048 t _mesa_delete_buffer_object
000000000047b2b0 0000000000000128 t validate_buffer_storage
000000000047b3e0 0000000000000110 t buffer_object_subdata_range_good
000000000047b4f0 0000000000000130 t copy_buffer_sub_data
000000000047b620 00000000000000d0 t map_buffer_range
000000000047b6f0 00000000000000bc t buffer_page_commitment
000000000047b7b0 00000000000000e4 t _mesa_ClearBufferSubData_sw
000000000047b8a0 00000000000001e4 t get_buffer_parameter
000000000047ba90 0000000000000080 t buffer_usage_warning
000000000047bb10 00000000000000e0 t convert_clear_buffer_data
000000000047bbf0 0000000000000254 t clear_buffer_sub_data_error
000000000047be50 0000000000000084 t validate_and_unmap_buffer
000000000047bee0 00000000000000d4 t flush_mapped_buffer_range
000000000047bfc0 0000000000000124 t create_buffers.part.0
000000000047c0f0 00000000000000dc t validate_buffer_sub_data
000000000047c1d0 00000000000002f0 t validate_map_buffer_range.part.0
000000000047c4c0 0000000000000068 t validate_map_buffer_range
000000000047c530 0000000000000130 t clear_buffer_sub_data_no_error.constprop.0
000000000047c660 000000000000010c t buffer_data_no_error
000000000047c770 000000000000016c t buffer_storage
000000000047c8e0 000000000000020c t buffer_data_error
000000000047caf0 0000000000000064 t _mesa_reference_buffer_object_
000000000047cb60 0000000000000114 t bind_buffer
000000000047cc80 00000000000000cc t bind_buffer_base_uniform_buffer
000000000047cd50 00000000000000d0 t bind_buffer_base_shader_storage_buffer
000000000047ce20 00000000000000cc t bind_buffer_base_atomic_buffer
000000000047cef0 00000000000000a8 t _mesa_initialize_buffer_object
000000000047cfa0 0000000000000158 t _mesa_init_buffer_objects
000000000047d100 0000000000000314 t _mesa_free_buffer_objects
000000000047d420 00000000000000e4 t _mesa_handle_bind_buffer_gen
000000000047d510 00000000000000f4 t bind_buffer_object
000000000047d610 000000000000057c t delete_buffers
000000000047db90 0000000000000068 t _mesa_update_default_objects_buffer_objects
000000000047dc00 0000000000000018 t _mesa_lookup_bufferobj
000000000047dc20 0000000000000080 t _mesa_lookup_bufferobj_err
000000000047dca0 00000000000000bc t _mesa_multi_bind_lookup_bufferobj
000000000047dd60 000000000000036c t bind_xfb_buffers
000000000047e0d0 0000000000000100 t set_buffer_multi_binding
000000000047e1d0 00000000000002e0 t bind_uniform_buffers
000000000047e4b0 00000000000002e4 t bind_shader_storage_buffers
000000000047e7a0 00000000000002c4 t bind_atomic_buffers
000000000047ea70 0000000000000060 t _mesa_buffer_unmap_all_mappings
000000000047ead0 00000000000003e8 T _mesa_BindBuffer_no_error
000000000047eec0 0000000000000074 t _mesa_BindBuffer
000000000047ef40 000000000000002c T _mesa_DeleteBuffers_no_error
000000000047ef70 0000000000000044 T _mesa_DeleteBuffers
000000000047efc0 0000000000000034 T _mesa_GenBuffers_no_error
000000000047f000 000000000000005c T _mesa_GenBuffers
000000000047f060 0000000000000034 T _mesa_CreateBuffers_no_error
000000000047f0a0 000000000000005c T _mesa_CreateBuffers
000000000047f100 000000000000007c t _mesa_IsBuffer
000000000047f180 0000000000000070 T _mesa_BufferStorage_no_error
000000000047f1f0 0000000000000110 T _mesa_BufferStorage
000000000047f300 000000000000019c T _mesa_NamedBufferStorageEXT
000000000047f4a0 00000000000001dc T _mesa_BufferStorageMemEXT
000000000047f680 000000000000009c T _mesa_BufferStorageMemEXT_no_error
000000000047f720 0000000000000090 T _mesa_NamedBufferStorage_no_error
000000000047f7b0 0000000000000100 T _mesa_NamedBufferStorage
000000000047f8b0 00000000000001b0 T _mesa_NamedBufferStorageMemEXT
000000000047fa60 00000000000000b8 T _mesa_NamedBufferStorageMemEXT_no_error
000000000047fb20 000000000000005c T _mesa_BufferData_no_error
000000000047fb80 00000000000000a4 T _mesa_BufferData
000000000047fc30 0000000000000078 T _mesa_NamedBufferData_no_error
000000000047fcb0 00000000000000c0 T _mesa_NamedBufferData
000000000047fd70 00000000000000d4 T _mesa_NamedBufferDataEXT
000000000047fe50 0000000000000080 T _mesa_BufferSubData_no_error
000000000047fed0 0000000000000128 T _mesa_BufferSubData
0000000000480000 00000000000000a4 T _mesa_NamedBufferSubData_no_error
00000000004800b0 0000000000000124 T _mesa_NamedBufferSubData
00000000004801e0 0000000000000120 T _mesa_NamedBufferSubDataEXT
0000000000480300 0000000000000104 T _mesa_GetBufferSubData
0000000000480410 0000000000000100 T _mesa_GetNamedBufferSubData
0000000000480510 0000000000000100 T _mesa_GetNamedBufferSubDataEXT
0000000000480610 0000000000000070 T _mesa_ClearBufferData_no_error
0000000000480680 00000000000000c4 T _mesa_ClearBufferData
0000000000480750 00000000000000a4 T _mesa_ClearNamedBufferData_no_error
0000000000480800 00000000000000e4 T _mesa_ClearNamedBufferData
00000000004808f0 000000000000014c T _mesa_ClearNamedBufferDataEXT
0000000000480a40 0000000000000078 T _mesa_ClearBufferSubData_no_error
0000000000480ac0 00000000000000d4 T _mesa_ClearBufferSubData
0000000000480ba0 00000000000000ac T _mesa_ClearNamedBufferSubData_no_error
0000000000480c50 00000000000000fc T _mesa_ClearNamedBufferSubData
0000000000480d50 0000000000000164 T _mesa_ClearNamedBufferSubDataEXT
0000000000480ec0 0000000000000054 T _mesa_UnmapBuffer_no_error
0000000000480f20 0000000000000090 T _mesa_UnmapBuffer
0000000000480fb0 0000000000000080 T _mesa_UnmapNamedBufferEXT_no_error
0000000000481030 00000000000000b8 T _mesa_UnmapNamedBufferEXT
00000000004810f0 00000000000000bc T _mesa_GetBufferParameteriv
00000000004811b0 00000000000000bc T _mesa_GetBufferParameteri64v
0000000000481270 00000000000000bc T _mesa_GetNamedBufferParameteriv
0000000000481330 00000000000000dc T _mesa_GetNamedBufferParameterivEXT
0000000000481410 00000000000000bc T _mesa_GetNamedBufferParameteri64v
00000000004814d0 00000000000000ac T _mesa_GetBufferPointerv
0000000000481580 00000000000000c0 T _mesa_GetNamedBufferPointerv
0000000000481640 00000000000000cc T _mesa_GetNamedBufferPointervEXT
0000000000481710 0000000000000080 T _mesa_CopyBufferSubData_no_error
0000000000481790 00000000000000c0 T _mesa_CopyBufferSubData
0000000000481850 00000000000000f4 T _mesa_NamedCopyBufferSubDataEXT
0000000000481950 00000000000000b4 T _mesa_CopyNamedBufferSubData_no_error
0000000000481a10 0000000000000128 T _mesa_CopyNamedBufferSubData
0000000000481b40 0000000000000058 T _mesa_MapBufferRange_no_error
0000000000481ba0 000000000000013c T _mesa_MapBufferRange
0000000000481ce0 00000000000000fc T _mesa_MapNamedBufferRange_no_error
0000000000481de0 0000000000000130 T _mesa_MapNamedBufferRangeEXT
0000000000481f10 0000000000000138 T _mesa_MapNamedBufferRange
0000000000482050 000000000000007c T _mesa_MapBuffer_no_error
00000000004820d0 00000000000001a4 T _mesa_MapBuffer
0000000000482280 0000000000000098 T _mesa_MapNamedBuffer_no_error
0000000000482320 00000000000001ac T _mesa_MapNamedBuffer
00000000004824d0 00000000000001b8 T _mesa_MapNamedBufferEXT
0000000000482690 0000000000000064 T _mesa_FlushMappedBufferRange_no_error
0000000000482700 0000000000000098 T _mesa_FlushMappedBufferRange
00000000004827a0 0000000000000088 T _mesa_FlushMappedNamedBufferRange_no_error
0000000000482830 00000000000000a8 T _mesa_FlushMappedNamedBufferRange
00000000004828e0 00000000000000c8 T _mesa_FlushMappedNamedBufferRangeEXT
00000000004829b0 00000000000002f0 T _mesa_BindBufferRange_no_error
0000000000482ca0 00000000000003e8 T _mesa_BindBufferRange
0000000000483090 0000000000000178 T _mesa_BindBufferBase
0000000000483210 0000000000000100 T _mesa_BindBuffersRange
0000000000483310 000000000000010c T _mesa_BindBuffersBase
0000000000483420 0000000000000084 T _mesa_InvalidateBufferSubData_no_error
00000000004834b0 0000000000000134 T _mesa_InvalidateBufferSubData
00000000004835f0 0000000000000074 T _mesa_InvalidateBufferData_no_error
0000000000483670 00000000000000cc T _mesa_InvalidateBufferData
0000000000483740 00000000000000a4 T _mesa_BufferPageCommitmentARB
00000000004837f0 00000000000000b4 T _mesa_NamedBufferPageCommitmentARB
00000000004838b0 00000000000000d0 T _mesa_NamedBufferPageCommitmentEXT
0000000000483980 0000000000000194 t draw_buffer_enum_to_bitmask
0000000000483b20 0000000000000078 t supported_buffer_bitmask
0000000000483ba0 0000000000000178 t read_buffer_enum_to_index
0000000000483d20 0000000000000198 t read_buffer_err
0000000000483ec0 000000000000003c t _mesa_back_to_front_if_single_buffered
0000000000483f00 0000000000000404 t _mesa_drawbuffers
0000000000484310 000000000000013c t draw_buffer_error
0000000000484450 0000000000000034 t _mesa_DrawBuffer
0000000000484490 0000000000000080 T _mesa_FramebufferDrawBufferEXT
0000000000484510 0000000000000080 T _mesa_NamedFramebufferDrawBuffer
0000000000484590 00000000000003c8 t draw_buffers_error
0000000000484960 0000000000000038 t _mesa_DrawBuffers
00000000004849a0 0000000000000088 T _mesa_FramebufferDrawBuffersEXT
0000000000484a30 0000000000000088 T _mesa_NamedFramebufferDrawBuffers
0000000000484ac0 0000000000000134 t draw_buffers_no_error.constprop.0
0000000000484c00 0000000000000080 T _mesa_NamedFramebufferDrawBuffers_no_error
0000000000484c80 0000000000000030 T _mesa_DrawBuffers_no_error
0000000000484cb0 00000000000000d0 t draw_buffer_no_error.constprop.0
0000000000484d80 0000000000000068 T _mesa_NamedFramebufferDrawBuffer_no_error
0000000000484df0 000000000000002c T _mesa_DrawBuffer_no_error
0000000000484e20 000000000000001c t _mesa_update_draw_buffers
0000000000484e40 000000000000005c t _mesa_readbuffer
0000000000484ea0 00000000000000f8 T _mesa_ReadBuffer_no_error
0000000000484fa0 0000000000000034 t _mesa_ReadBuffer
0000000000484fe0 00000000000000f8 T _mesa_NamedFramebufferReadBuffer_no_error
00000000004850e0 0000000000000080 T _mesa_FramebufferReadBufferEXT
0000000000485160 0000000000000080 T _mesa_NamedFramebufferReadBuffer
00000000004851e0 000000000000018c t make_color_buffer_mask
0000000000485370 000000000000007c t color_buffer_writes_enabled
00000000004853f0 000000000000002c t _mesa_ClearIndex
0000000000485420 0000000000000034 t _mesa_ClearColor
0000000000485460 0000000000000038 T _mesa_ClearColorIiEXT
00000000004854a0 0000000000000038 T _mesa_ClearColorIuiEXT
00000000004854e0 000000000000019c T _mesa_Clear_no_error
0000000000485680 0000000000000258 T _mesa_Clear
00000000004858e0 0000000000000130 T _mesa_ClearBufferiv_no_error
0000000000485a10 00000000000001c8 t _mesa_ClearBufferiv
0000000000485be0 0000000000000064 T _mesa_ClearNamedFramebufferiv
0000000000485c50 00000000000000ec T _mesa_ClearBufferuiv_no_error
0000000000485d40 0000000000000148 t _mesa_ClearBufferuiv
0000000000485e90 0000000000000064 T _mesa_ClearNamedFramebufferuiv
0000000000485f00 000000000000013c T _mesa_ClearBufferfv_no_error
0000000000486040 00000000000001a0 t _mesa_ClearBufferfv
00000000004861e0 0000000000000064 T _mesa_ClearNamedFramebufferfv
0000000000486250 00000000000000e4 T _mesa_ClearBufferfi_no_error
0000000000486340 000000000000018c t _mesa_ClearBufferfi
00000000004864d0 0000000000000074 T _mesa_ClearNamedFramebufferfi
0000000000486550 000000000000006c t _mesa_update_clip_plane
00000000004865c0 00000000000001fc t _mesa_ClipPlane
00000000004867c0 0000000000000090 t _mesa_GetClipPlane
0000000000486850 000000000000002c T _mesa_ColorTable
0000000000486880 000000000000002c T _mesa_ColorSubTable
00000000004868b0 000000000000002c T _mesa_CopyColorTable
00000000004868e0 000000000000002c T _mesa_CopyColorSubTable
0000000000486910 000000000000002c T _mesa_GetnColorTableARB
0000000000486940 000000000000002c T _mesa_GetColorTable
0000000000486970 000000000000002c T _mesa_ColorTableParameterfv
00000000004869a0 000000000000002c T _mesa_ColorTableParameteriv
00000000004869d0 000000000000002c T _mesa_GetColorTableParameterfv
0000000000486a00 000000000000002c T _mesa_GetColorTableParameteriv
0000000000486a30 00000000000000a8 t check_valid_to_compute
0000000000486ae0 0000000000000088 T _mesa_DispatchCompute_no_error
0000000000486b70 000000000000014c T _mesa_DispatchCompute
0000000000486cc0 000000000000007c T _mesa_DispatchComputeIndirect_no_error
0000000000486d40 000000000000019c T _mesa_DispatchComputeIndirect
0000000000486ee0 0000000000000094 T _mesa_DispatchComputeGroupSizeARB_no_error
0000000000486f80 0000000000000204 T _mesa_DispatchComputeGroupSizeARB
0000000000487190 00000000000000a0 T _mesa_BeginConditionalRender_no_error
0000000000487230 00000000000001a4 T _mesa_BeginConditionalRender
00000000004873e0 0000000000000068 T _mesa_EndConditionalRender_no_error
0000000000487450 00000000000000a8 T _mesa_EndConditionalRender
0000000000487500 0000000000000174 t _mesa_check_conditional_render
0000000000487680 0000000000000124 T _mesa_ConservativeRasterParameteriNV_no_error
00000000004877b0 00000000000001ec T _mesa_ConservativeRasterParameteriNV
00000000004879a0 0000000000000120 T _mesa_ConservativeRasterParameterfNV_no_error
0000000000487ac0 00000000000001e0 T _mesa_ConservativeRasterParameterfNV
0000000000487ca0 0000000000000018 t _mesa_init_conservative_raster
0000000000487cc0 000000000000002c T _mesa_ConvolutionFilter1D
0000000000487cf0 000000000000002c T _mesa_ConvolutionFilter2D
0000000000487d20 000000000000002c T _mesa_ConvolutionParameterf
0000000000487d50 000000000000002c T _mesa_ConvolutionParameterfv
0000000000487d80 000000000000002c T _mesa_ConvolutionParameteri
0000000000487db0 000000000000002c T _mesa_ConvolutionParameteriv
0000000000487de0 000000000000002c T _mesa_CopyConvolutionFilter1D
0000000000487e10 000000000000002c T _mesa_CopyConvolutionFilter2D
0000000000487e40 000000000000002c T _mesa_GetnConvolutionFilterARB
0000000000487e70 000000000000002c T _mesa_GetConvolutionFilter
0000000000487ea0 000000000000002c T _mesa_GetConvolutionParameterfv
0000000000487ed0 000000000000002c T _mesa_GetConvolutionParameteriv
0000000000487f00 000000000000002c T _mesa_GetnSeparableFilterARB
0000000000487f30 000000000000002c T _mesa_GetSeparableFilter
0000000000487f60 000000000000002c T _mesa_SeparableFilter2D
0000000000487f90 0000000000000160 t copy_image_subdata
00000000004880f0 00000000000001bc t check_region_bounds
00000000004882b0 0000000000000398 t prepare_target_err
0000000000488650 00000000000000a4 t prepare_target
0000000000488700 0000000000000224 t compressed_format_compatible.part.0
0000000000488930 0000000000000110 T _mesa_CopyImageSubData_no_error
0000000000488a40 0000000000000490 T _mesa_CopyImageSubData
0000000000488ed0 00000000000003a0 T _mesa_CopyImageSubDataNV
0000000000489270 0000000000000378 t _mesa_validated_multidrawelements
00000000004895f0 00000000000000e8 t _mesa_exec_Rectf
00000000004896e0 0000000000000060 t skip_validated_draw
0000000000489740 0000000000000124 T _mesa_MultiDrawElements
0000000000489870 0000000000000178 T _mesa_MultiDrawElementsBaseVertex
00000000004899f0 0000000000000298 t _mesa_exec_MultiDrawArrays
0000000000489c90 00000000000000c0 t _mesa_validated_drawrangeelements
0000000000489d50 0000000000000284 t _mesa_DrawRangeElementsBaseVertex
0000000000489fe0 0000000000000008 T _mesa_DrawRangeElements
0000000000489ff0 0000000000000150 T _mesa_DrawElements
000000000048a140 0000000000000160 T _mesa_DrawElementsBaseVertex
000000000048a2a0 00000000000000c8 t _mesa_draw_arrays.constprop.0
000000000048a370 00000000000001dc t _mesa_draw_transform_feedback
000000000048a550 000000000000011c T _mesa_DrawArrays
000000000048a670 0000000000000114 T _mesa_EvalMesh1
000000000048a790 0000000000000330 T _mesa_EvalMesh2
000000000048aac0 0000000000000128 T _mesa_DrawArraysInstancedARB
000000000048abf0 0000000000000138 t _mesa_DrawArraysInstancedBaseInstance
000000000048ad30 0000000000000160 T _mesa_DrawElementsInstancedARB
000000000048ae90 0000000000000164 T _mesa_DrawElementsInstancedBaseVertex
000000000048b000 0000000000000164 T _mesa_DrawElementsInstancedBaseInstance
000000000048b170 0000000000000174 t _mesa_DrawElementsInstancedBaseVertexBaseInstance
000000000048b2f0 0000000000000048 T _mesa_DrawTransformFeedback
000000000048b340 0000000000000054 T _mesa_DrawTransformFeedbackStream
000000000048b3a0 0000000000000054 T _mesa_DrawTransformFeedbackInstanced
000000000048b400 0000000000000058 T _mesa_DrawTransformFeedbackStreamInstanced
000000000048b460 00000000000001ac T _mesa_DrawArraysIndirect
000000000048b610 0000000000000224 t _mesa_DrawElementsIndirect
000000000048b840 00000000000001e0 T _mesa_MultiDrawArraysIndirect
000000000048ba20 000000000000024c T _mesa_MultiDrawElementsIndirect
000000000048bc70 0000000000000178 T _mesa_MultiDrawArraysIndirectCountARB
000000000048bdf0 00000000000001b0 T _mesa_MultiDrawElementsIndirectCountARB
000000000048bfa0 0000000000000124 t _mesa_initialize_exec_dispatch
000000000048c0d0 00000000000000b8 T _mesa_MultiModeDrawArraysIBM
000000000048c190 00000000000000c0 T _mesa_MultiModeDrawElementsIBM
000000000048c250 0000000000000360 T _mesa_DrawPixels
000000000048c5b0 00000000000002c4 T _mesa_CopyPixels
000000000048c880 00000000000002f4 T _mesa_Bitmap
000000000048cb80 00000000000000e0 t draw_texture
000000000048cc60 0000000000000104 t _mesa_DrawTexfOES
000000000048cd70 0000000000000030 t _mesa_DrawTexfvOES
000000000048cda0 0000000000000038 T _mesa_DrawTexiOES
000000000048cde0 0000000000000044 T _mesa_DrawTexivOES
000000000048ce30 0000000000000048 T _mesa_DrawTexsOES
000000000048ce80 000000000000004c T _mesa_DrawTexsvOES
000000000048ced0 00000000000000b0 t enable_texture
000000000048cf80 00000000000002dc t client_state
000000000048d260 00000000000000a4 t client_state_i.part.0
000000000048d310 0000000000000060 t _mesa_update_derived_primitive_restart_state
000000000048d370 0000000000000030 t _mesa_EnableClientState
000000000048d3a0 00000000000000d0 T _mesa_EnableVertexArrayEXT
000000000048d470 000000000000007c T _mesa_EnableClientStateiEXT
000000000048d4f0 0000000000000030 t _mesa_DisableClientState
000000000048d520 00000000000000d0 T _mesa_DisableVertexArrayEXT
000000000048d5f0 000000000000007c T _mesa_DisableClientStateiEXT
000000000048d670 00000000000000d8 t _mesa_set_multisample
000000000048d750 00000000000000a4 t _mesa_set_framebuffer_srgb
000000000048d800 00000000000026e8 t _mesa_set_enable
000000000048fef0 0000000000000028 T _mesa_Enable
000000000048ff20 0000000000000028 t _mesa_Disable
000000000048ff50 00000000000003a8 t _mesa_set_enablei
0000000000490300 0000000000000030 T _mesa_Disablei
0000000000490330 0000000000000030 T _mesa_Enablei
0000000000490360 0000000000001340 t _mesa_IsEnabled
00000000004916a0 00000000000001ec T _mesa_IsEnabledi
0000000000491890 0000000000000008 t _mesa_delete_memory_object
00000000004918a0 0000000000000080 t lookup_memory_object_err
0000000000491920 0000000000000008 t _mesa_initialize_memory_object
0000000000491930 0000000000000134 T _mesa_DeleteMemoryObjectsEXT
0000000000491a70 0000000000000078 T _mesa_IsMemoryObjectEXT
0000000000491af0 0000000000000164 T _mesa_CreateMemoryObjectsEXT
0000000000491c60 00000000000000fc T _mesa_MemoryObjectParameterivEXT
0000000000491d60 00000000000000cc T _mesa_GetMemoryObjectParameterivEXT
0000000000491e30 0000000000000104 T _mesa_TexStorageMem2DEXT
0000000000491f40 0000000000000114 T _mesa_TexStorageMem2DMultisampleEXT
0000000000492060 0000000000000104 T _mesa_TexStorageMem3DEXT
0000000000492170 0000000000000118 T _mesa_TexStorageMem3DMultisampleEXT
0000000000492290 0000000000000100 T _mesa_TextureStorageMem2DEXT
0000000000492390 000000000000010c T _mesa_TextureStorageMem2DMultisampleEXT
00000000004924a0 0000000000000108 T _mesa_TextureStorageMem3DEXT
00000000004925b0 0000000000000118 T _mesa_TextureStorageMem3DMultisampleEXT
00000000004926d0 00000000000000fc T _mesa_TexStorageMem1DEXT
00000000004927d0 00000000000000f8 T _mesa_TextureStorageMem1DEXT
00000000004928d0 000000000000001c t _mesa_delete_semaphore_object
00000000004928f0 0000000000000008 t _mesa_initialize_semaphore_object
0000000000492900 0000000000000114 T _mesa_GenSemaphoresEXT
0000000000492a20 0000000000000144 T _mesa_DeleteSemaphoresEXT
0000000000492b70 0000000000000078 T _mesa_IsSemaphoreEXT
0000000000492bf0 000000000000005c T _mesa_SemaphoreParameterui64vEXT
0000000000492c50 000000000000005c T _mesa_GetSemaphoreParameterui64vEXT
0000000000492cb0 00000000000001fc T _mesa_WaitSemaphoreEXT
0000000000492eb0 00000000000001fc T _mesa_SignalSemaphoreEXT
00000000004930b0 00000000000000e8 T _mesa_ImportMemoryFdEXT
00000000004931a0 0000000000000158 T _mesa_ImportSemaphoreFdEXT
0000000000493300 00000000000000a4 t get_current_attrib(texenv_fragment_program*, unsigned int)
00000000004933b0 0000000000000068 t get_gl_Color(texenv_fragment_program*)
0000000000493420 0000000000000524 t load_texture(texenv_fragment_program*, unsigned int) [clone .part.0]
0000000000493950 0000000000000040 t load_texenv_source(texenv_fragment_program*, unsigned int, unsigned int)
0000000000493990 0000000000000654 t emit_combine(texenv_fragment_program*, unsigned int, unsigned int, unsigned int, gl_tex_env_argument const*)
0000000000493ff0 0000000000001270 t _mesa_get_fixed_func_fragment_program
0000000000495260 0000000000000084 t get_temp
00000000004952f0 0000000000000210 t emit_op3fn.constprop.0
0000000000495500 0000000000000090 t make_temp
0000000000495590 00000000000000b8 t emit_matrix_transform_vec4
0000000000495650 0000000000000074 t get_identity_param
00000000004956d0 000000000000007c t register_input
0000000000495750 0000000000000080 t get_material
00000000004957d0 0000000000000064 t emit_passthrough
0000000000495840 0000000000000128 t get_lightprod
0000000000495970 0000000000000150 t get_scenecolor
0000000000495ac0 00000000000000a8 t emit_degenerate_lit
0000000000495b70 00000000000000ec t emit_normalize_vec3
0000000000495c60 0000000000000264 t get_transformed_normal
0000000000495ed0 0000000000000194 t emit_transpose_matrix_transform_vec4
0000000000496070 0000000000000194 t get_eye_position
0000000000496210 0000000000000078 t get_eye_position_normalized
0000000000496290 0000000000000148 t get_eye_position_z
00000000004963e0 00000000000003ec t calculate_light_attenuation
00000000004967d0 0000000000002c1c t _mesa_get_fixed_func_vertex_program
00000000004993f0 0000000000000068 t _set_default_response
0000000000499460 000000000000024c t _mesa_query_internal_format_default
00000000004996b0 0000000000001870 t _mesa_GetInternalformativ
000000000049af20 0000000000000190 T _mesa_GetInternalformati64v
000000000049b0b0 0000000000000100 t convert_ubyte_rgba_to_bgra
000000000049b1b0 0000000000006194 t convert_float
00000000004a1350 0000000000007698 t convert_half_float
00000000004a89f0 0000000000007d64 t convert_int
00000000004b0760 0000000000008ac8 t convert_byte
00000000004b9230 0000000000008928 t convert_ushort
00000000004c1b60 0000000000008a2c t convert_ubyte
00000000004ca590 0000000000007590 t convert_uint
00000000004d1b20 0000000000000090 t _mesa_compute_rgba2base2rgba_component_mapping
00000000004d1bb0 0000000000008c84 t _mesa_swizzle_and_convert
00000000004da840 0000000000000e98 t _mesa_format_convert
00000000004db6e0 000000000000007c t get_value_size
00000000004db760 0000000000001330 t find_value_indexed
00000000004dca90 0000000000001f44 t find_value
00000000004de9e0 00000000000002f4 T _mesa_GetBooleanv
00000000004dece0 00000000000002dc t _mesa_GetFloatv
00000000004defc0 0000000000000344 t _mesa_GetIntegerv
00000000004df310 0000000000000368 T _mesa_GetInteger64v
00000000004df680 00000000000002c8 T _mesa_GetDoublev
00000000004df950 0000000000000198 T _mesa_GetUnsignedBytevEXT
00000000004dfaf0 00000000000000e4 T _mesa_GetBooleani_v
00000000004dfbe0 0000000000000188 T _mesa_GetIntegeri_v
00000000004dfd70 00000000000000dc T _mesa_GetInteger64i_v
00000000004dfe50 00000000000001f0 T _mesa_GetFloati_v
00000000004e0040 0000000000000200 T _mesa_GetDoublei_v
00000000004e0240 0000000000000148 T _mesa_GetUnsignedBytei_vEXT
00000000004e0390 00000000000004c0 T _mesa_GetFixedv
00000000004e0850 0000000000000148 t _mesa_is_valid_generate_texture_mipmap_target
00000000004e09a0 00000000000000f0 t _mesa_is_valid_generate_texture_mipmap_internalformat
00000000004e0a90 0000000000000220 t validate_params_and_generate_mipmap
00000000004e0cb0 000000000000012c T _mesa_GenerateMipmap_no_error
00000000004e0de0 0000000000000234 T _mesa_GenerateMipmap
00000000004e1020 000000000000012c T _mesa_GenerateTextureMipmap_no_error
00000000004e1150 0000000000000040 T _mesa_GenerateTextureMipmap
00000000004e1190 0000000000000048 T _mesa_GenerateTextureMipmapEXT
00000000004e11e0 000000000000004c T _mesa_GenerateMultiTexMipmapEXT
00000000004e1230 000000000000005c t _mesa_spirv_module_reference
00000000004e1290 0000000000000094 t _mesa_shader_spirv_data_reference
00000000004e1330 0000000000000100 t _mesa_spirv_shader_binary
00000000004e1430 000000000000022c t _mesa_spirv_link_shaders
00000000004e1660 0000000000000040 T _mesa_SpecializeShaderARB
00000000004e16a0 000000000000002c T _mesa_GetnMinmaxARB
00000000004e16d0 000000000000002c T _mesa_GetMinmax
00000000004e1700 000000000000002c T _mesa_GetnHistogramARB
00000000004e1730 000000000000002c T _mesa_GetHistogram
00000000004e1760 000000000000002c T _mesa_GetHistogramParameterfv
00000000004e1790 000000000000002c T _mesa_GetHistogramParameteriv
00000000004e17c0 000000000000002c T _mesa_GetMinmaxParameterfv
00000000004e17f0 000000000000002c T _mesa_GetMinmaxParameteriv
00000000004e1820 000000000000002c T _mesa_Histogram
00000000004e1850 000000000000002c T _mesa_Minmax
00000000004e1880 000000000000002c T _mesa_ResetHistogram
00000000004e18b0 000000000000002c T _mesa_ResetMinmax
00000000004e18e0 00000000000001e8 t float3_to_rgb9e5
00000000004e1ad0 0000000000000040 t rgb9e5_to_float3
00000000004e1b10 0000000000000184 t float3_to_r11g11b10f
00000000004e1ca0 000000000000017c t r11g11b10f_to_float3
00000000004e1e20 0000000000001978 t do_row
00000000004e37a0 00000000000000f4 t make_1d_mipmap
00000000004e38a0 0000000000000450 t make_2d_mipmap
00000000004e3cf0 0000000000000050 t _mesa_compute_num_levels
00000000004e3d40 0000000000003424 t _mesa_generate_mipmap_level
00000000004e7170 00000000000000a0 t _mesa_next_mipmap_level_size
00000000004e7210 0000000000000208 t _mesa_prepare_mipmap_levels
00000000004e7420 0000000000000924 t _mesa_generate_mipmap
00000000004e7d50 0000000000000254 t get_label_pointer
00000000004e7fb0 000000000000008c t copy_label
00000000004e8040 00000000000000f8 t set_label
00000000004e8140 000000000000009c T _mesa_ObjectLabel
00000000004e81e0 00000000000000b4 T _mesa_GetObjectLabel
00000000004e82a0 00000000000000b8 T _mesa_ObjectPtrLabel
00000000004e8360 00000000000000f4 T _mesa_GetObjectPtrLabel
00000000004e8460 0000000000000228 T _mesa_ObjectPurgeableAPPLE
00000000004e8690 0000000000000210 T _mesa_ObjectUnpurgeableAPPLE
00000000004e88a0 0000000000000178 T _mesa_GetObjectParameterivAPPLE
00000000004e8a20 00000000000000bc t write_program_payload
00000000004e8ae0 000000000000007c t _mesa_get_program_binary_length
00000000004e8b60 0000000000000148 t _mesa_get_program_binary
00000000004e8cb0 00000000000001f8 t _mesa_program_binary
00000000004e8eb0 000000000000025c t supported_interface_enum
00000000004e9110 00000000000004c8 T _mesa_GetProgramInterfaceiv
00000000004e95e0 000000000000015c T _mesa_GetProgramResourceIndex
00000000004e9740 0000000000000110 T _mesa_GetProgramResourceName
00000000004e9850 00000000000000e4 T _mesa_GetProgramResourceiv
00000000004e9940 00000000000002a4 T _mesa_GetProgramResourceLocation
00000000004e9bf0 00000000000000cc T _mesa_GetProgramResourceLocationIndex
00000000004e9cc0 0000000000000174 T _mesa_QueryMatrixxOES
00000000004e9e40 0000000000000058 t _context_lost_GetQueryObjectuiv
00000000004e9ea0 0000000000000068 t _context_lost_GetSynciv
00000000004e9f10 0000000000000038 t context_lost_nop_handler
00000000004e9f50 00000000000000fc t _mesa_set_context_lost_dispatch
00000000004ea050 00000000000000dc T _mesa_GetGraphicsResetStatusARB
00000000004ea130 0000000000000088 T _mesa_new_sampler_object
00000000004ea1c0 00000000000000e4 t create_samplers.part.0
00000000004ea2b0 000000000000009c t sampler_parameter_error_check
00000000004ea350 00000000000000b4 t set_sampler_cube_map_seamless
00000000004ea410 000000000000016c t set_sampler_wrap_r
00000000004ea580 000000000000016c t set_sampler_wrap_t
00000000004ea6f0 000000000000016c t set_sampler_wrap_s
00000000004ea860 0000000000000018 t _mesa_lookup_samplerobj
00000000004ea880 00000000000000c0 t _mesa_reference_sampler_object_
00000000004ea940 0000000000000190 t delete_samplers
00000000004eaad0 0000000000000038 T _mesa_GenSamplers_no_error
00000000004eab10 0000000000000060 T _mesa_GenSamplers
00000000004eab70 0000000000000038 T _mesa_CreateSamplers_no_error
00000000004eabb0 0000000000000060 T _mesa_CreateSamplers
00000000004eac10 000000000000002c T _mesa_DeleteSamplers_no_error
00000000004eac40 0000000000000044 T _mesa_DeleteSamplers
00000000004eac90 0000000000000070 T _mesa_IsSampler
00000000004ead00 00000000000000b0 t _mesa_bind_sampler
00000000004eadb0 00000000000000d4 T _mesa_BindSampler_no_error
00000000004eae90 00000000000000b0 T _mesa_BindSampler
00000000004eaf40 00000000000001c0 T _mesa_BindSamplers_no_error
00000000004eb100 000000000000024c T _mesa_BindSamplers
00000000004eb350 0000000000000520 T _mesa_SamplerParameteri
00000000004eb870 00000000000004fc T _mesa_SamplerParameterf
00000000004ebd70 000000000000062c T _mesa_SamplerParameteriv
00000000004ec3a0 00000000000005b0 T _mesa_SamplerParameterfv
00000000004ec950 00000000000005bc T _mesa_SamplerParameterIiv
00000000004ecf10 00000000000005bc T _mesa_SamplerParameterIuiv
00000000004ed4d0 000000000000027c T _mesa_GetSamplerParameteriv
00000000004ed750 0000000000000254 T _mesa_GetSamplerParameterfv
00000000004ed9b0 0000000000000240 T _mesa_GetSamplerParameterIiv
00000000004edbf0 0000000000000240 T _mesa_GetSamplerParameterIuiv
00000000004ede30 0000000000000010 t _mesa_init_sampler_object_functions
00000000004ede40 0000000000000150 t unpack_quint_block(int, unsigned int, unsigned char*)
00000000004edf90 0000000000000074 t Block::decode_void_extent(InputBitVector)
00000000004ee010 0000000000000178 t Block::decode_block_mode(InputBitVector)
00000000004ee190 0000000000000798 t Block::decode_cem(InputBitVector)
00000000004ee930 00000000000005a4 t Block::unpack_colour_endpoints(InputBitVector)
00000000004eeee0 000000000000059c t Block::decode_colour_endpoints()
00000000004ef480 0000000000000690 t Block::unpack_weights(InputBitVector)
00000000004efb10 00000000000001f0 t Block::unquantise_weights()
00000000004efd00 0000000000000294 t Block::compute_infill_weights(int, int, int)
00000000004effa0 00000000000002c8 t Block::unquantise_colour_endpoints()
00000000004f0270 00000000000006c0 t Block::write_decoded(Decoder const&, unsigned short*)
00000000004f0930 0000000000000270 t Block::calculate_from_weights()
00000000004f0ba0 0000000000000104 t Block::calculate_colour_endpoints_size()
00000000004f0cb0 00000000000002c0 t Block::decode(Decoder const&, InputBitVector)
00000000004f0f70 00000000000000d4 t Decoder::decode(unsigned char const*, unsigned short*) const
00000000004f1050 00000000000001d0 t _mesa_unpack_astc_2d_ldr
00000000004f1220 0000000000000088 t _mesa_cpal_compressed_size
00000000004f12b0 0000000000000390 t _mesa_cpal_compressed_teximage2d
00000000004f1640 00000000000001c8 t get_texenvi
00000000004f1810 00000000000001cc t _mesa_gettexenviv_indexed
00000000004f19e0 0000000000000c1c t _mesa_texenvfv_indexed
00000000004f2600 0000000000000230 t _mesa_gettexenvfv_indexed
00000000004f2830 0000000000000038 t _mesa_TexEnvfv
00000000004f2870 0000000000000044 t _mesa_TexEnvf
00000000004f28c0 000000000000004c t _mesa_TexEnvi
00000000004f2910 00000000000000dc T _mesa_TexEnviv
00000000004f29f0 000000000000004c T _mesa_MultiTexEnvfEXT
00000000004f2a40 0000000000000040 T _mesa_MultiTexEnvfvEXT
00000000004f2a80 0000000000000050 T _mesa_MultiTexEnviEXT
00000000004f2ad0 00000000000000f4 T _mesa_MultiTexEnvivEXT
00000000004f2bd0 000000000000003c t _mesa_GetTexEnvfv
00000000004f2c10 000000000000000c T _mesa_GetMultiTexEnvfvEXT
00000000004f2c20 000000000000003c T _mesa_GetTexEnviv
00000000004f2c60 000000000000000c T _mesa_GetMultiTexEnvivEXT
00000000004f2c70 0000000000000418 t texgenfv
00000000004f3090 0000000000000198 t gettexgendv
00000000004f3230 00000000000001bc t gettexgenfv
00000000004f33f0 000000000000019c t gettexgeniv
00000000004f3590 0000000000000044 t _mesa_TexGenfv
00000000004f35e0 0000000000000014 T _mesa_MultiTexGenfvEXT
00000000004f3600 00000000000000a4 T _mesa_TexGeniv
00000000004f36b0 0000000000000084 T _mesa_MultiTexGenivEXT
00000000004f3740 0000000000000054 T _mesa_TexGend
00000000004f37a0 0000000000000038 T _mesa_MultiTexGendEXT
00000000004f37e0 0000000000000104 t _es_TexGenf
00000000004f38f0 00000000000000a4 T _mesa_TexGendv
00000000004f39a0 0000000000000084 T _mesa_MultiTexGendvEXT
00000000004f3a30 0000000000000050 T _mesa_TexGenf
00000000004f3a80 0000000000000034 T _mesa_MultiTexGenfEXT
00000000004f3ac0 0000000000000058 t _mesa_TexGeni
00000000004f3b20 0000000000000038 T _mesa_MultiTexGeniEXT
00000000004f3b60 0000000000000044 T _mesa_GetTexGendv
00000000004f3bb0 0000000000000014 T _mesa_GetMultiTexGendvEXT
00000000004f3bd0 0000000000000044 T _mesa_GetTexGenfv
00000000004f3c20 0000000000000014 T _mesa_GetMultiTexGenfvEXT
00000000004f3c40 0000000000000044 t _mesa_GetTexGeniv
00000000004f3c90 0000000000000014 T _mesa_GetMultiTexGenivEXT
00000000004f3cb0 00000000000000c8 t legal_getteximage_target
00000000004f3d80 0000000000000120 t pbo_error_check
00000000004f3ea0 00000000000001b8 t teximage_error_check
00000000004f4060 0000000000000478 t dimensions_error_check
00000000004f44e0 0000000000000128 t common_error_check.part.0
00000000004f4610 000000000000025c t getcompressedteximage_error_check.part.0
00000000004f4870 00000000000003e0 t get_compressed_texture_image.constprop.0
00000000004f4c50 0000000000000258 t get_texture_image.constprop.0
00000000004f4eb0 0000000000000154 t getteximage_error_check
00000000004f5010 000000000000013c t _get_texture_image
00000000004f5150 0000000000000104 t _mesa_base_pack_format
00000000004f5260 00000000000010b8 t _mesa_GetTexSubImage_sw
00000000004f6320 0000000000000110 T _mesa_GetnTexImageARB
00000000004f6430 000000000000010c T _mesa_GetTexImage
00000000004f6540 00000000000000f0 T _mesa_GetTextureImage
00000000004f6630 00000000000000f8 T _mesa_GetTextureImageEXT
00000000004f6730 00000000000001d4 T _mesa_GetMultiTexImageEXT
00000000004f6910 0000000000000238 T _mesa_GetTextureSubImage
00000000004f6b50 000000000000019c T _mesa_GetnCompressedTexImageARB
00000000004f6cf0 000000000000019c T _mesa_GetCompressedTexImage
00000000004f6e90 0000000000000178 T _mesa_GetCompressedTextureImageEXT
00000000004f7010 0000000000000178 T _mesa_GetCompressedMultiTexImageEXT
00000000004f7190 000000000000018c T _mesa_GetCompressedTextureImage
00000000004f7320 0000000000000144 T _mesa_GetCompressedTextureSubImage
00000000004f7470 00000000000000a0 t is_texparameteri_target_valid
00000000004f7510 0000000000000198 t validate_texture_wrap_mode
00000000004f76b0 0000000000000834 t get_tex_level_parameteriv
00000000004f7ef0 0000000000000858 t get_tex_parameteriv
00000000004f8750 00000000000009e8 t get_tex_parameterfv
00000000004f9140 000000000000053c t set_tex_parameterf
00000000004f9680 0000000000000d4c t set_tex_parameteri
00000000004fa3d0 0000000000000014 t _mesa_target_allows_setting_sampler_parameters
00000000004fa3f0 0000000000000228 t _mesa_texture_parameterf
00000000004fa620 00000000000001f8 t _mesa_texture_parameterfv
00000000004fa820 0000000000000154 t _mesa_texture_parameteri
00000000004fa980 0000000000000198 t _mesa_texture_parameteriv
00000000004fab20 00000000000000d8 t _mesa_texture_parameterIiv
00000000004fac00 00000000000000d8 t _mesa_texture_parameterIuiv
00000000004face0 0000000000000084 t _mesa_TexParameterf
00000000004fad70 0000000000000084 t _mesa_TexParameterfv
00000000004fae00 0000000000000084 t _mesa_TexParameteri
00000000004fae90 0000000000000084 T _mesa_TexParameteriv
00000000004faf20 0000000000000084 T _mesa_TexParameterIiv
00000000004fafb0 0000000000000084 T _mesa_TexParameterIuiv
00000000004fb040 00000000000000b4 T _mesa_TextureParameterfvEXT
00000000004fb100 00000000000000b4 T _mesa_TextureParameterfv
00000000004fb1c0 00000000000000b4 T _mesa_MultiTexParameterfvEXT
00000000004fb280 00000000000000c4 T _mesa_TextureParameterfEXT
00000000004fb350 00000000000000c4 T _mesa_MultiTexParameterfEXT
00000000004fb420 00000000000000c4 T _mesa_TextureParameterf
00000000004fb4f0 00000000000000b4 T _mesa_TextureParameteriEXT
00000000004fb5b0 00000000000000b4 T _mesa_MultiTexParameteriEXT
00000000004fb670 00000000000000b4 T _mesa_TextureParameteri
00000000004fb730 00000000000000b4 T _mesa_TextureParameterivEXT
00000000004fb7f0 00000000000000b4 T _mesa_MultiTexParameterivEXT
00000000004fb8b0 00000000000000b4 T _mesa_TextureParameteriv
00000000004fb970 00000000000000b4 T _mesa_TextureParameterIiv
00000000004fba30 0000000000000080 T _mesa_TextureParameterIivEXT
00000000004fbab0 0000000000000080 T _mesa_MultiTexParameterIivEXT
00000000004fbb30 00000000000000b4 T _mesa_TextureParameterIuiv
00000000004fbbf0 0000000000000080 T _mesa_TextureParameterIuivEXT
00000000004fbc70 0000000000000080 T _mesa_MultiTexParameterIuivEXT
00000000004fbcf0 000000000000025c t _mesa_legal_get_tex_level_parameter_target
00000000004fbf50 00000000000000d4 T _mesa_GetTexLevelParameterfv
00000000004fc030 00000000000000d8 T _mesa_GetTexLevelParameteriv
00000000004fc110 00000000000000d8 T _mesa_GetTextureLevelParameterfv
00000000004fc1f0 00000000000000e0 T _mesa_GetTextureLevelParameterfvEXT
00000000004fc2d0 00000000000000e0 T _mesa_GetMultiTexLevelParameterfvEXT
00000000004fc3b0 00000000000000d8 T _mesa_GetTextureLevelParameteriv
00000000004fc490 00000000000000e0 T _mesa_GetTextureLevelParameterivEXT
00000000004fc570 00000000000000e0 T _mesa_GetMultiTexLevelParameterivEXT
00000000004fc650 0000000000000084 t _mesa_GetTexParameterfv
00000000004fc6e0 0000000000000084 T _mesa_GetTexParameteriv
00000000004fc770 00000000000000b0 T _mesa_GetTexParameterIiv
00000000004fc820 00000000000000b0 T _mesa_GetTexParameterIuiv
00000000004fc8d0 00000000000000b4 T _mesa_GetTextureParameterfvEXT
00000000004fc990 00000000000000b4 T _mesa_GetMultiTexParameterfvEXT
00000000004fca50 00000000000000b4 T _mesa_GetTextureParameterfv
00000000004fcb10 00000000000000b4 T _mesa_GetTextureParameterivEXT
00000000004fcbd0 00000000000000b4 T _mesa_GetMultiTexParameterivEXT
00000000004fcc90 00000000000000b4 T _mesa_GetTextureParameteriv
00000000004fcd50 00000000000000e0 T _mesa_GetTextureParameterIiv
00000000004fce30 00000000000000ac T _mesa_GetTextureParameterIivEXT
00000000004fcee0 00000000000000ac T _mesa_GetMultiTexParameterIivEXT
00000000004fcf90 00000000000000e0 T _mesa_GetTextureParameterIuiv
00000000004fd070 00000000000000ac T _mesa_GetTextureParameterIuivEXT
00000000004fd120 00000000000000ac T _mesa_GetMultiTexParameterIuivEXT
00000000004fd1d0 0000000000000228 t register_surface.part.0
00000000004fd400 00000000000000b4 T _mesa_VDPAUInitNV
00000000004fd4c0 0000000000000078 T _mesa_VDPAUFiniNV
00000000004fd540 0000000000000094 T _mesa_VDPAURegisterVideoSurfaceNV
00000000004fd5e0 0000000000000094 T _mesa_VDPAURegisterOutputSurfaceNV
00000000004fd680 000000000000006c T _mesa_VDPAUIsSurfaceNV
00000000004fd6f0 00000000000000fc T _mesa_VDPAUUnregisterSurfaceNV
00000000004fd7f0 0000000000000104 T _mesa_VDPAUGetSurfaceivNV
00000000004fd900 00000000000000c4 T _mesa_VDPAUSurfaceAccessNV
00000000004fd9d0 000000000000022c T _mesa_VDPAUMapSurfacesNV
00000000004fdc00 00000000000001e8 t _mesa_VDPAUUnmapSurfacesNV
00000000004fddf0 0000000000000070 t unregister_surface
00000000004fde60 000000000000087c t install_vtxfmt
00000000004fe6e0 0000000000000048 t _mesa_install_exec_vtxfmt
00000000004fe730 0000000000000020 t _mesa_install_save_vtxfmt
00000000004fe750 0000000000000044 t _mesa_initialize_vbo_vtxfmt
00000000004fe7a0 0000000000000008 T _mesa_AlphaFuncx
00000000004fe7b0 000000000000002c T _mesa_ClearColorx
00000000004fe7e0 0000000000000008 T _mesa_ClearDepthx
00000000004fe7f0 0000000000000040 T _mesa_ClipPlanef
00000000004fe830 0000000000000048 T _mesa_ClipPlanex
00000000004fe880 000000000000002c T _mesa_Color4x
00000000004fe8b0 000000000000001c T _mesa_DepthRangex
00000000004fe8d0 0000000000000034 T _mesa_DrawTexxOES
00000000004fe910 0000000000000048 T _mesa_DrawTexxvOES
00000000004fe960 0000000000000020 T _mesa_Fogx
00000000004fe980 00000000000000c4 T _mesa_Fogxv
00000000004fea50 000000000000001c T _mesa_Frustumf
00000000004fea70 000000000000003c T _mesa_Frustumx
00000000004feab0 0000000000000048 T _mesa_GetClipPlanef
00000000004feb00 000000000000004c T _mesa_GetClipPlanex
00000000004feb50 00000000000000d4 T _mesa_GetLightxv
00000000004fec30 00000000000000fc T _mesa_GetMaterialxv
00000000004fed30 0000000000000220 T _mesa_GetTexEnvxv
00000000004fef50 0000000000000004 T _mesa_GetTexGenxvOES
00000000004fef60 0000000000000114 T _mesa_GetTexParameterxv
00000000004ff080 0000000000000008 T _mesa_LightModelx
00000000004ff090 00000000000000ac T _mesa_LightModelxv
00000000004ff140 0000000000000008 T _mesa_Lightx
00000000004ff150 00000000000000e8 T _mesa_Lightxv
00000000004ff240 0000000000000008 T _mesa_LineWidthx
00000000004ff250 000000000000004c T _mesa_LoadMatrixx
00000000004ff2a0 000000000000007c T _mesa_Materialx
00000000004ff320 0000000000000110 T _mesa_Materialxv
00000000004ff430 000000000000004c T _mesa_MultMatrixx
00000000004ff480 000000000000002c T _mesa_MultiTexCoord4x
00000000004ff4b0 0000000000000024 T _mesa_Normal3x
00000000004ff4e0 000000000000001c T _mesa_Orthof
00000000004ff500 000000000000003c T _mesa_Orthox
00000000004ff540 0000000000000008 T _mesa_PointParameterx
00000000004ff550 00000000000000a8 T _mesa_PointParameterxv
00000000004ff600 0000000000000008 T _mesa_PointSizex
00000000004ff610 000000000000001c T _mesa_PolygonOffsetx
00000000004ff630 000000000000002c T _mesa_Rotatex
00000000004ff660 0000000000000010 T _mesa_SampleCoveragex
00000000004ff670 0000000000000024 T _mesa_Scalex
00000000004ff6a0 0000000000000140 T _mesa_TexEnvx
00000000004ff7e0 00000000000001a0 T _mesa_TexEnvxv
00000000004ff980 0000000000000008 T _mesa_TexGenxOES
00000000004ff990 000000000000000c T _mesa_TexGenxvOES
00000000004ff9a0 0000000000000024 T _mesa_TexParameterx
00000000004ff9d0 0000000000000130 T _mesa_TexParameterxv
00000000004ffb00 0000000000000024 T _mesa_Translatex
00000000004ffb30 00000000000000f8 t _math_horner_bezier_curve
00000000004ffc30 00000000000001cc t _math_horner_bezier_surf
00000000004ffe00 0000000000000d44 t _math_de_casteljau_surf
0000000000500b50 000000000000002c t _math_init_eval
0000000000500b80 000000000000002c t vbo_minmax_cache_key_equal
0000000000500bb0 0000000000000008 t vbo_minmax_cache_delete_entry
0000000000500bc0 0000000000000008 t vbo_minmax_cache_hash
0000000000500bd0 0000000000000030 t vbo_delete_minmax_cache
0000000000500c00 00000000000001c0 t vbo_get_minmax_index_mapped
0000000000500dc0 00000000000004b0 t vbo_get_minmax_indices
0000000000501270 000000000000006c t util_format_linear_float_to_srgb_8unorm
00000000005012e0 0000000000000080 t pack_ubyte_rgb_float16
0000000000501360 000000000000003c t _mesa_float_to_unorm
00000000005013a0 0000000000000044 t _mesa_float_to_snorm
00000000005013f0 0000000000000070 t _mesa_unorm_to_unorm.constprop.0
0000000000501460 0000000000000184 t float3_to_r11g11b10f
00000000005015f0 00000000000000d0 t pack_float_rgb_snorm16
00000000005016c0 0000000000000034 t pack_ubyte_rgb_snorm16
0000000000501700 00000000000000e0 t pack_float_a1r5g5b5_unorm
00000000005017e0 00000000000000e8 t pack_float_r4g4b4a4_unorm
00000000005018d0 00000000000000e8 t pack_float_a4b4g4r4_unorm
00000000005019c0 00000000000000e8 t pack_float_b4g4r4a4_unorm
0000000000501ab0 00000000000000f4 t pack_float_r8g8b8a8_unorm
0000000000501bb0 00000000000000f4 t pack_float_a8r8g8b8_unorm
0000000000501cb0 00000000000000f4 t pack_float_b8g8r8a8_unorm
0000000000501db0 00000000000000f4 t pack_float_a8b8g8r8_unorm
0000000000501eb0 0000000000000060 t pack_ubyte_b2g3r3_unorm
0000000000501f10 0000000000000064 t pack_ubyte_r8g8b8x8_snorm
0000000000501f80 0000000000000064 t pack_ubyte_x8b8g8r8_snorm
0000000000501ff0 0000000000000064 t pack_ubyte_b5g5r5x1_unorm
0000000000502060 0000000000000068 t pack_ubyte_x1b5g5r5_unorm
00000000005020d0 0000000000000020 t pack_ubyte_r8g8b8x8_unorm
00000000005020f0 0000000000000020 t pack_ubyte_b8g8r8x8_unorm
0000000000502110 0000000000000064 t pack_ubyte_b4g4r4x4_unorm
0000000000502180 0000000000000020 t pack_ubyte_x8b8g8r8_unorm
00000000005021a0 0000000000000020 t pack_ubyte_x8r8g8b8_unorm
00000000005021c0 0000000000000038 t pack_ubyte_b10g10r10x2_unorm
0000000000502200 0000000000000038 t pack_ubyte_r10g10b10x2_unorm
0000000000502240 0000000000000034 t pack_ubyte_rgba_unorm16
0000000000502280 0000000000000044 t pack_ubyte_rgba_snorm16
00000000005022d0 0000000000000080 t pack_ubyte_r4g4b4a4_unorm
0000000000502350 0000000000000080 t pack_ubyte_a4b4g4r4_unorm
00000000005023d0 0000000000000078 t pack_ubyte_b5g5r5a1_unorm
0000000000502450 0000000000000078 t pack_ubyte_a1b5g5r5_unorm
00000000005024d0 0000000000000078 t pack_ubyte_a1r5g5b5_unorm
0000000000502550 0000000000000080 t pack_ubyte_b4g4r4a4_unorm
00000000005025d0 0000000000000080 t pack_ubyte_a4r4g4b4_unorm
0000000000502650 0000000000000080 t pack_ubyte_a8b8g8r8_snorm
00000000005026d0 0000000000000078 t pack_ubyte_r5g5b5a1_unorm
0000000000502750 0000000000000080 t pack_ubyte_r8g8b8a8_snorm
00000000005027d0 000000000000000c t pack_ubyte_r8g8b8a8_unorm
00000000005027e0 0000000000000028 t pack_ubyte_a8r8g8b8_unorm
0000000000502810 0000000000000010 t pack_ubyte_a8b8g8r8_unorm
0000000000502820 0000000000000028 t pack_ubyte_b8g8r8a8_unorm
0000000000502850 0000000000000058 t pack_ubyte_a2r10g10b10_unorm
00000000005028b0 0000000000000058 t pack_ubyte_b10g10r10a2_unorm
0000000000502910 0000000000000058 t pack_ubyte_a2b10g10r10_unorm
0000000000502970 0000000000000058 t pack_ubyte_r10g10b10a2_unorm
00000000005029d0 00000000000000fc t pack_float_a2b10g10r10_unorm
0000000000502ad0 00000000000000fc t pack_float_a2r10g10b10_unorm
0000000000502bd0 00000000000000fc t pack_float_r10g10b10a2_unorm
0000000000502cd0 00000000000000fc t pack_float_b10g10r10a2_unorm
0000000000502dd0 0000000000002b8c t _mesa_pack_ubyte_rgba_row
0000000000505960 00000000000014cc t _mesa_pack_uint_rgba_row
0000000000506e30 0000000000003048 t _mesa_pack_float_rgba_row
0000000000509e80 000000000000009c t _mesa_pack_ubyte_stencil_row
0000000000509f20 0000000000000040 t transform_decl
0000000000509f60 00000000000007dc t transform_instr
000000000050a740 0000000000001994 t st_translate_atifs_program
000000000050c0e0 0000000000000210 t st_init_atifs_prog
000000000050c2f0 00000000000000a0 t st_fixup_atifs
000000000050c390 0000000000000200 t check_program_state
000000000050c590 0000000000000004 t st_init_atoms
000000000050c5a0 0000000000000004 t st_destroy_atoms
000000000050c5b0 0000000000000278 t st_validate_state
000000000050c830 00000000000000cc T st_update_clip
000000000050c900 00000000000000e4 t st_bind_ubos
000000000050c9f0 0000000000000214 t st_upload_constants
000000000050cc10 0000000000000008 T st_update_vs_constants
000000000050cc20 0000000000000008 T st_update_fs_constants
000000000050cc30 0000000000000010 T st_update_gs_constants
000000000050cc40 0000000000000010 T st_update_tcs_constants
000000000050cc50 0000000000000010 T st_update_tes_constants
000000000050cc60 0000000000000010 T st_update_cs_constants
000000000050cc70 0000000000000018 T st_bind_vs_ubos
000000000050cc90 0000000000000018 T st_bind_fs_ubos
000000000050ccb0 0000000000000018 T st_bind_gs_ubos
000000000050ccd0 0000000000000018 T st_bind_tcs_ubos
000000000050ccf0 0000000000000018 T st_bind_tes_ubos
000000000050cd10 0000000000000018 T st_bind_cs_ubos
000000000050cd30 0000000000000008 t st_compare_func_to_pipe
000000000050cd40 0000000000000578 T st_update_depth_stencil_alpha
000000000050d2c0 0000000000000410 T st_update_framebuffer_state
000000000050d6d0 00000000000001bc t st_convert_image
000000000050d890 0000000000000164 t st_bind_images.part.0
000000000050da00 0000000000000078 t st_convert_image_from_unit
000000000050da80 000000000000002c T st_bind_vs_images
000000000050dab0 000000000000002c T st_bind_fs_images
000000000050dae0 000000000000002c T st_bind_gs_images
000000000050db10 000000000000002c T st_bind_tcs_images
000000000050db40 000000000000002c T st_bind_tes_images
000000000050db70 000000000000002c T st_bind_cs_images
000000000050dba0 000000000000023c t update_sample_locations
000000000050dde0 00000000000000ac T st_update_sample_state
000000000050de90 0000000000000048 T st_update_sample_shading
000000000050dee0 00000000000005e8 T st_update_pixel_transfer
000000000050e4d0 0000000000000778 T st_update_rasterizer
000000000050ec50 000000000000031c t st_convert_sampler
000000000050ef70 0000000000000084 t st_convert_sampler_from_unit
000000000050f000 0000000000000288 t update_shader_samplers
000000000050f290 000000000000001c T st_update_vertex_samplers
000000000050f2b0 0000000000000024 T st_update_tessctrl_samplers
000000000050f2e0 0000000000000024 T st_update_tesseval_samplers
000000000050f310 0000000000000024 T st_update_geometry_samplers
000000000050f340 000000000000001c T st_update_fragment_samplers
000000000050f360 0000000000000024 T st_update_compute_samplers
000000000050f390 00000000000001b4 T st_update_scissor
000000000050f550 00000000000001a8 T st_update_window_rectangles
000000000050f700 0000000000000134 t st_update_common_program
000000000050f840 0000000000000470 T st_update_fp
000000000050fcb0 00000000000001e0 T st_update_vp
000000000050fe90 0000000000000040 T st_update_gp
000000000050fed0 0000000000000040 T st_update_tcp
000000000050ff10 0000000000000040 T st_update_tep
000000000050ff50 0000000000000040 T st_update_cp
000000000050ff90 00000000000000f8 T st_update_polygon_stipple
0000000000510090 0000000000000160 t st_bind_ssbos
00000000005101f0 0000000000000018 T st_bind_vs_ssbos
0000000000510210 0000000000000018 T st_bind_fs_ssbos
0000000000510230 0000000000000018 T st_bind_gs_ssbos
0000000000510250 0000000000000018 T st_bind_tcs_ssbos
0000000000510270 0000000000000018 T st_bind_tes_ssbos
0000000000510290 0000000000000018 T st_bind_cs_ssbos
00000000005102b0 0000000000000030 T st_update_tess
00000000005102e0 0000000000000100 t st_update_single_texture
00000000005103e0 000000000000047c t update_textures
0000000000510860 00000000000000a4 t update_textures_local
0000000000510910 0000000000000028 T st_update_vertex_textures
0000000000510940 0000000000000018 T st_update_fragment_textures
0000000000510960 000000000000001c T st_update_geometry_textures
0000000000510980 000000000000001c T st_update_tessctrl_textures
00000000005109a0 000000000000001c T st_update_tesseval_textures
00000000005109c0 000000000000001c T st_update_compute_textures
00000000005109e0 0000000000000130 T st_update_viewport
0000000000510b10 00000000000003ac t transform_instr
0000000000510ec0 00000000000000b8 t st_get_bitmap_shader
0000000000510f80 00000000000008a8 t st_BlitFramebuffer
0000000000511830 0000000000000010 t st_init_blit_functions
0000000000511840 00000000000000ec t buffer_target_to_bind_flags
0000000000511930 0000000000000088 t buffer_usage
00000000005119c0 0000000000000040 t st_bufferobj_invalidate
0000000000511a00 0000000000000064 t st_bufferobj_flush_mapped_range
0000000000511a70 000000000000006c t st_bufferobj_unmap
0000000000511ae0 000000000000006c t st_copy_buffer_subdata
0000000000511b50 000000000000007c t st_bufferobj_page_commitment
0000000000511bd0 000000000000004c t st_clear_buffer_subdata
0000000000511c20 0000000000000050 t st_bufferobj_alloc
0000000000511c70 000000000000004c t st_bufferobj_subdata
0000000000511cc0 000000000000009c t st_bufferobj_get_subdata
0000000000511d60 0000000000000080 t st_bufferobj_free
0000000000511de0 0000000000000370 t st_bufferobj_data
0000000000512150 0000000000000354 t st_bufferobj_data_mem
00000000005124b0 0000000000000074 t st_access_flags_to_transfer_flags
0000000000512530 00000000000000cc t st_bufferobj_map_range
0000000000512600 00000000000000c8 t st_init_bufferobject_functions
00000000005126d0 000000000000097c t st_Clear
0000000000513050 0000000000000030 t st_init_clear
0000000000513080 000000000000007c t st_destroy_clear
0000000000513100 0000000000000010 t st_init_clear_functions
0000000000513110 00000000000001d0 t st_dispatch_compute_common
00000000005132e0 000000000000000c t st_dispatch_compute_group_size
00000000005132f0 000000000000001c t st_dispatch_compute_indirect
0000000000513310 0000000000000010 t st_dispatch_compute
0000000000513320 0000000000000028 t st_init_compute_functions
0000000000513350 0000000000000038 t st_EndConditionalRender
0000000000513390 0000000000000088 t st_BeginConditionalRender
0000000000513420 000000000000001c t st_init_cond_render_functions
0000000000513440 0000000000000304 t get_canonical_format
0000000000513750 00000000000000c4 t canonical_format_from_bits
0000000000513820 00000000000000a0 t same_size_and_swizzle
00000000005138c0 000000000000018c t swizzled_copy
0000000000513a50 00000000000004c8 t handle_complex_copy
0000000000513f20 0000000000000750 t st_CopyImageSubData
0000000000514670 0000000000000010 t st_init_copy_image_functions
0000000000514680 00000000000007f4 t transform_instr
0000000000514e80 00000000000000ec t st_get_drawpix_shader
0000000000514f70 0000000000000858 t st_DrawTex
00000000005157d0 0000000000000010 t st_init_drawtex_functions
00000000005157e0 0000000000000074 t st_destroy_drawtex
0000000000515860 00000000000003a0 t st_get_egl_image
0000000000515c00 0000000000000368 t st_bind_egl_image
0000000000515f70 00000000000000d4 t st_egl_image_target_tex_storage
0000000000516050 00000000000000d4 t st_egl_image_target_texture_2d
0000000000516130 00000000000001d0 t st_egl_image_target_renderbuffer_storage
0000000000516300 0000000000000028 t st_init_eglimage_functions
0000000000516330 0000000000000060 t st_import_memoryobj_fd
0000000000516390 0000000000000004 t st_memoryobj_free
00000000005163a0 0000000000000050 t st_memoryobj_alloc
00000000005163f0 0000000000000028 t st_init_memoryobject_functions
0000000000516420 00000000000000b4 t st_GetProgrammableSampleCaps
00000000005164e0 000000000000009c t st_GetSamplePosition
0000000000516580 000000000000001c t st_init_msaa_functions
00000000005165a0 0000000000000090 t st_EndPerfMonitor
0000000000516630 00000000000000dc t st_IsPerfMonitorResultAvailable
0000000000516710 00000000000001dc t st_GetPerfMonitorResult
00000000005168f0 00000000000000a0 t reset_perf_monitor
0000000000516990 0000000000000034 t st_DeletePerfMonitor
00000000005169d0 000000000000000c t st_NewPerfMonitor
00000000005169e0 000000000000033c t st_BeginPerfMonitor
0000000000516d20 0000000000000080 t st_ResetPerfMonitor
0000000000516da0 0000000000000324 t st_InitPerfMonitorGroups
00000000005170d0 0000000000000044 t st_have_perfmon
0000000000517120 000000000000007c t st_destroy_perfmon
00000000005171a0 0000000000000064 t st_init_perfmon_functions
0000000000517210 0000000000000018 t st_InitPerfQueryInfo
0000000000517230 0000000000000018 t st_GetPerfQueryInfo
0000000000517250 0000000000000018 t st_DeletePerfQuery
0000000000517270 0000000000000028 t st_BeginPerfQuery
00000000005172a0 0000000000000018 t st_EndPerfQuery
00000000005172c0 0000000000000018 t st_WaitPerfQuery
00000000005172e0 0000000000000028 t st_IsPerfQueryReady
0000000000517310 000000000000001c t st_GetPerfQueryData
0000000000517330 0000000000000018 t st_NewPerfQueryObject
0000000000517350 000000000000006c t st_GetPerfCounterInfo
00000000005173c0 0000000000000068 t st_have_perfquery
0000000000517430 000000000000007c t st_init_perfquery_functions
00000000005174b0 0000000000000038 t st_new_ati_fs
00000000005174f0 0000000000000024 t st_max_shader_compiler_threads
0000000000517520 00000000000000a0 t st_get_shader_program_completion_status
00000000005175c0 00000000000000d8 t st_program_string_notify
00000000005176a0 0000000000000048 t st_delete_program
00000000005176f0 0000000000000070 t st_new_program
0000000000517760 0000000000000050 t st_init_program_functions
00000000005177b0 0000000000000030 t st_GetTimestamp
00000000005177e0 00000000000001c0 t st_StoreQueryResult
00000000005179a0 00000000000001d8 t get_query_result
0000000000517b80 0000000000000034 t st_CheckQuery
0000000000517bc0 0000000000000054 t st_WaitQuery
0000000000517c20 00000000000000d0 t st_EndQuery
0000000000517cf0 0000000000000044 t st_NewQueryObject
0000000000517d40 000000000000006c t st_DeleteQuery
0000000000517db0 00000000000003b8 t st_BeginQuery
0000000000518170 0000000000000064 t st_init_query_functions
00000000005181e0 0000000000000214 t blit_to_staging
0000000000518400 0000000000000ef0 t st_ReadPixels
00000000005192f0 0000000000000010 t st_init_readpixels_functions
0000000000519300 0000000000000048 t st_get_string
0000000000519350 0000000000000010 t st_init_string_functions
0000000000519360 0000000000000020 t st_import_semaphoreobj_fd
0000000000519380 00000000000000d0 t st_server_signal_semaphore
0000000000519450 00000000000000c8 t st_server_wait_semaphore
0000000000519520 0000000000000004 t st_semaphoreobj_free
0000000000519530 0000000000000050 t st_semaphoreobj_alloc
0000000000519580 0000000000000040 t st_init_semaphoreobject_functions
00000000005195c0 0000000000000030 t st_fence_sync
00000000005195f0 00000000000000ac t st_server_wait_sync
00000000005196a0 00000000000000f4 t st_client_wait_sync
00000000005197a0 000000000000000c t st_check_sync
00000000005197b0 0000000000000050 t st_delete_sync_object
0000000000519800 0000000000000038 t st_new_sync_object
0000000000519840 000000000000004c t st_init_syncobj_functions
0000000000519890 000000000000001c t st_TextureBarrier
00000000005198b0 000000000000001c t st_FramebufferFetchBarrier
00000000005198d0 00000000000000b4 t st_MemoryBarrier
0000000000519990 0000000000000028 t st_init_texture_barrier_functions
00000000005199c0 00000000000000e0 t st_viewport
0000000000519aa0 0000000000000010 t st_init_viewport_functions
0000000000519ab0 0000000000000034 t st_resume_transform_feedback
0000000000519af0 000000000000001c t st_pause_transform_feedback
0000000000519b10 000000000000003c t st_new_transform_feedback
0000000000519b50 00000000000000d0 t st_end_transform_feedback
0000000000519c20 00000000000000c0 t st_delete_transform_feedback
0000000000519ce0 0000000000000158 t st_begin_transform_feedback
0000000000519e40 0000000000000018 t st_transform_feedback_draw_init
0000000000519e60 000000000000004c t st_init_xformfb_functions
0000000000519eb0 000000000000032c T st_link_shader
000000000051a1e0 0000000000000004 T glsl_to_tgsi_visitor::visit(ir_function_signature*)
000000000051a1f0 0000000000000158 t shrink_array_declarations(inout_decl*, unsigned int, unsigned long*, unsigned long, unsigned int*)
000000000051a350 0000000000000028 W ir_control_flow_info_visitor::visit_enter(ir_call*)
000000000051a380 0000000000000028 W ir_control_flow_info_visitor::visit_enter(ir_return*)
000000000051a3b0 00000000000000c0 t add_buffer_to_load_and_stores(glsl_to_tgsi_instruction*, st_src_reg*, exec_list*, ir_constant*)
000000000051a470 0000000000000164 T glsl_to_tgsi_visitor::visit(ir_swizzle*)
000000000051a5e0 000000000000002c W ir_control_flow_info_visitor::visit_enter(ir_function*)
000000000051a610 0000000000000044 T glsl_to_tgsi_visitor::~glsl_to_tgsi_visitor()
000000000051a610 0000000000000044 T glsl_to_tgsi_visitor::~glsl_to_tgsi_visitor()
000000000051a660 0000000000000010 t var_destroy(hash_entry*)
000000000051a670 0000000000000098 T glsl_to_tgsi_visitor::visit(ir_function*)
000000000051a710 000000000000008c t mark_array_io(inout_decl*, unsigned int, unsigned long*, unsigned long, unsigned int*) [clone .constprop.0]
000000000051a7a0 000000000000009c t fail_link(gl_shader_program*, char const*, ...) [clone .constprop.0]
000000000051a840 0000000000000050 T glsl_to_tgsi_visitor::~glsl_to_tgsi_visitor()
000000000051a890 0000000000000098 t type_has_array_or_matrix(glsl_type const*)
000000000051a930 00000000000000dc t is_inout_array(unsigned int, ir_variable*, bool*)
000000000051aa10 0000000000000094 t emit_immediate(st_translate*, gl_constant_value*, unsigned int, int) [clone .isra.0]
000000000051aab0 0000000000000240 t dst_register(st_translate*, gl_register_file, unsigned int, unsigned int)
000000000051acf0 0000000000000c4c t emit_wpos(st_context*, st_translate*, gl_program const*, ureg_program*, int)
000000000051b940 0000000000000c2c t translate_src(st_translate*, st_src_reg const*)
000000000051c570 00000000000000c0 t translate_addr(st_translate*, st_src_reg const*, unsigned int)
000000000051c630 0000000000000014 t swizzle_for_size(int)
000000000051c650 0000000000000928 t glsl_to_tgsi_visitor::get_opcode(tgsi_opcode, st_dst_reg, st_src_reg, st_src_reg)
000000000051cf80 0000000000000218 t glsl_to_tgsi_visitor::add_constant(gl_register_file, gl_constant_value*, int, unsigned int, unsigned short*)
000000000051d1a0 0000000000000070 t glsl_to_tgsi_visitor::st_src_reg_for_float(float)
000000000051d210 00000000000000e4 t glsl_to_tgsi_visitor::st_src_reg_for_type(glsl_base_type, int)
000000000051d300 0000000000000164 t glsl_to_tgsi_visitor::get_temp(glsl_type const*)
000000000051d470 00000000000001c0 t glsl_to_tgsi_visitor::reladdr_to_temp(ir_instruction*, st_src_reg*, int*)
000000000051d630 0000000000000a84 t glsl_to_tgsi_visitor::emit_asm(ir_instruction*, tgsi_opcode, st_dst_reg, st_dst_reg, st_src_reg, st_src_reg, st_src_reg, st_src_reg)
000000000051e0c0 00000000000000ec t glsl_to_tgsi_visitor::emit_asm(ir_instruction*, tgsi_opcode, st_dst_reg, st_src_reg, st_src_reg, st_src_reg, st_src_reg)
000000000051e1b0 00000000000000d4 t glsl_to_tgsi_visitor::emit_dp(ir_instruction*, st_dst_reg, st_src_reg, st_src_reg, unsigned int)
000000000051e290 00000000000001cc t glsl_to_tgsi_visitor::emit_scalar(ir_instruction*, tgsi_opcode, st_dst_reg, st_src_reg, st_src_reg)
000000000051e460 0000000000000128 t glsl_to_tgsi_visitor::emit_arl(ir_instruction*, st_dst_reg, st_src_reg)
000000000051e590 00000000000002f8 t glsl_to_tgsi_visitor::visit(ir_variable*) [clone .part.0]
000000000051e890 0000000000000040 T glsl_to_tgsi_visitor::visit(ir_variable*)
000000000051e8d0 0000000000000130 T glsl_to_tgsi_visitor::visit(ir_loop*)
000000000051ea00 000000000000014c T glsl_to_tgsi_visitor::visit(ir_loop_jump*)
000000000051eb50 0000000000000234 t glsl_to_tgsi_visitor::try_emit_mad(ir_expression*, int)
000000000051ed90 00000000000001e0 t glsl_to_tgsi_visitor::try_emit_mad_for_and_not(ir_expression*, int)
000000000051ef70 0000000000000b1c T glsl_to_tgsi_visitor::visit(ir_constant*)
000000000051fa90 00000000000000b8 T glsl_to_tgsi_visitor::visit(ir_return*)
000000000051fb50 00000000000002b0 T glsl_to_tgsi_visitor::visit(ir_discard*)
000000000051fe00 00000000000000b8 T glsl_to_tgsi_visitor::visit(ir_demote*)
000000000051fec0 0000000000000214 T glsl_to_tgsi_visitor::visit(ir_if*)
00000000005200e0 00000000000000d0 T glsl_to_tgsi_visitor::visit(ir_emit_vertex*)
00000000005201b0 00000000000000d0 T glsl_to_tgsi_visitor::visit(ir_end_primitive*)
0000000000520280 00000000000000b8 T glsl_to_tgsi_visitor::visit(ir_barrier*)
0000000000520340 00000000000058cc t glsl_to_tgsi_visitor::visit_expression(ir_expression*, st_src_reg*)
0000000000525c10 00000000000001a4 T glsl_to_tgsi_visitor::visit(ir_expression*)
0000000000525dc0 00000000000001d8 t glsl_to_tgsi_visitor::process_move_condition(ir_rvalue*)
0000000000525fa0 000000000000040c t glsl_to_tgsi_visitor::emit_block_mov(ir_assignment*, glsl_type const*, st_dst_reg*, st_src_reg*, st_src_reg*, bool)
00000000005263b0 0000000000000430 T glsl_to_tgsi_visitor::visit(ir_assignment*)
00000000005267e0 0000000000000640 t glsl_to_tgsi_visitor::visit_ssbo_intrinsic(ir_call*)
0000000000526e20 00000000000002a8 t glsl_to_tgsi_visitor::visit_membar_intrinsic(ir_call*)
00000000005270d0 0000000000000504 t glsl_to_tgsi_visitor::visit_shared_intrinsic(ir_call*)
00000000005275e0 0000000000000200 t glsl_to_tgsi_visitor::visit_generic_intrinsic(ir_call*, tgsi_opcode)
00000000005277e0 00000000000003fc t glsl_to_tgsi_visitor::calc_deref_offsets(ir_dereference*, unsigned int*, unsigned short*, st_src_reg*, unsigned int*)
0000000000527be0 0000000000000180 t glsl_to_tgsi_visitor::get_deref_offsets(ir_dereference*, unsigned int*, unsigned int*, unsigned short*, st_src_reg*, bool)
0000000000527d60 0000000000000a6c t glsl_to_tgsi_visitor::visit_atomic_counter_intrinsic(ir_call*)
00000000005287d0 0000000000000c98 t glsl_to_tgsi_visitor::visit_image_intrinsic(ir_call*)
0000000000529470 00000000000000fc T glsl_to_tgsi_visitor::visit(ir_call*)
0000000000529570 0000000000000154 t glsl_to_tgsi_visitor::canonicalize_gather_offset(st_src_reg)
00000000005296d0 0000000000001784 T glsl_to_tgsi_visitor::visit(ir_texture*)
000000000052ae60 00000000000002a4 t glsl_to_tgsi_visitor::handle_bound_deref(ir_dereference*)
000000000052b110 000000000000070c T glsl_to_tgsi_visitor::visit(ir_dereference_variable*)
000000000052b820 0000000000000508 T glsl_to_tgsi_visitor::visit(ir_dereference_array*)
000000000052bd30 0000000000000154 T glsl_to_tgsi_visitor::visit(ir_dereference_record*)
000000000052be90 00000000000000e8 t glsl_to_tgsi_visitor::glsl_to_tgsi_visitor()
000000000052be90 00000000000000e8 T glsl_to_tgsi_visitor::glsl_to_tgsi_visitor()
000000000052bf80 0000000000000080 t free_glsl_to_tgsi_visitor
000000000052c000 000000000000024c t glsl_to_tgsi_visitor::simplify_cmp()
000000000052c250 0000000000000354 t glsl_to_tgsi_visitor::rename_temp_registers(rename_reg_pair*)
000000000052c5b0 00000000000000d8 t glsl_to_tgsi_visitor::get_first_temp_write(int*)
000000000052c690 000000000000052c t glsl_to_tgsi_visitor::copy_propagate()
000000000052cbc0 0000000000000690 t glsl_to_tgsi_visitor::eliminate_dead_code()
000000000052d250 00000000000001b8 t glsl_to_tgsi_visitor::merge_two_dsts()
000000000052d410 000000000000016c t glsl_to_tgsi_visitor::merge_registers()
000000000052d580 00000000000000e0 t glsl_to_tgsi_visitor::renumber_registers()
000000000052d660 0000000000000084 t void test_indirect_access<st_src_reg>(st_src_reg const&, bool*)
000000000052d6f0 00000000000000a0 t void remap_array<st_src_reg>(st_src_reg&, int const*, bool const*)
000000000052d790 00000000000004e8 t glsl_to_tgsi_visitor::split_arrays()
000000000052dc80 000000000000095c t st_link_tgsi
000000000052e5e0 000000000000006c t void std::__unguarded_linear_insert<inout_decl*, __gnu_cxx::__ops::_Val_comp_iter<sort_inout_decls> >(inout_decl*, __gnu_cxx::__ops::_Val_comp_iter<sort_inout_decls>)
000000000052e650 00000000000000bc t void std::__insertion_sort<inout_decl*, __gnu_cxx::__ops::_Iter_comp_iter<sort_inout_decls> >(inout_decl*, inout_decl*, __gnu_cxx::__ops::_Iter_comp_iter<sort_inout_decls>)
000000000052e710 0000000000000158 t void std::__adjust_heap<inout_decl*, long, inout_decl, __gnu_cxx::__ops::_Iter_comp_iter<sort_inout_decls> >(inout_decl*, long, long, inout_decl, __gnu_cxx::__ops::_Iter_comp_iter<sort_inout_decls>)
000000000052e870 0000000000000114 t void std::__heap_select<inout_decl*, __gnu_cxx::__ops::_Iter_comp_iter<sort_inout_decls> >(inout_decl*, inout_decl*, inout_decl*, __gnu_cxx::__ops::_Iter_comp_iter<sort_inout_decls>)
000000000052e990 00000000000001e8 t void std::__introsort_loop<inout_decl*, long, __gnu_cxx::__ops::_Iter_comp_iter<sort_inout_decls> >(inout_decl*, inout_decl*, long, __gnu_cxx::__ops::_Iter_comp_iter<sort_inout_decls>)
000000000052eb80 00000000000023fc t st_translate_program
0000000000530f80 0000000000000014 t tgsi_array_merge::sort_by_begin(array_live_range const&, array_live_range const&)
0000000000530fa0 000000000000001c t array_live_range::array_live_range()
0000000000530fa0 000000000000001c T array_live_range::array_live_range()
0000000000530fc0 0000000000000020 t array_live_range::array_live_range(unsigned int, unsigned int)
0000000000530fc0 0000000000000020 T array_live_range::array_live_range(unsigned int, unsigned int)
0000000000530fe0 0000000000000008 t array_live_range::set_live_range(int, int)
0000000000530ff0 0000000000000018 t array_live_range::set_access_mask(int)
0000000000531010 0000000000000060 t array_live_range::merge(array_live_range*, array_live_range*)
0000000000531070 00000000000000b8 t array_live_range::interleave_into(array_live_range*)
0000000000531130 0000000000000064 t tgsi_array_merge::array_remapping::init_from(array_live_range const&)
00000000005311a0 0000000000000570 t tgsi_array_merge::remap_arrays(int, unsigned int*, exec_list*, tgsi_array_merge::array_remapping*)
0000000000531710 000000000000013c t void std::__move_median_to_first<array_live_range*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(array_live_range const&, array_live_range const&)> >(array_live_range*, array_live_range*, array_live_range*, array_live_range*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(array_live_range const&, array_live_range const&)>)
0000000000531850 0000000000000080 t void std::__unguarded_linear_insert<array_live_range*, __gnu_cxx::__ops::_Val_comp_iter<bool (*)(array_live_range const&, array_live_range const&)> >(array_live_range*, __gnu_cxx::__ops::_Val_comp_iter<bool (*)(array_live_range const&, array_live_range const&)>)
00000000005318d0 00000000000000cc t void std::__insertion_sort<array_live_range*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(array_live_range const&, array_live_range const&)> >(array_live_range*, array_live_range*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(array_live_range const&, array_live_range const&)>)
00000000005319a0 00000000000001cc t void std::__adjust_heap<array_live_range*, long, array_live_range, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(array_live_range const&, array_live_range const&)> >(array_live_range*, long, long, array_live_range, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(array_live_range const&, array_live_range const&)>)
0000000000531b70 0000000000000150 t void std::__heap_select<array_live_range*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(array_live_range const&, array_live_range const&)> >(array_live_range*, array_live_range*, array_live_range*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(array_live_range const&, array_live_range const&)>)
0000000000531cc0 00000000000001d0 t void std::__introsort_loop<array_live_range*, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(array_live_range const&, array_live_range const&)> >(array_live_range*, array_live_range*, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(array_live_range const&, array_live_range const&)>)
0000000000531e90 0000000000000398 t tgsi_array_merge::get_array_remapping(int, array_live_range*, tgsi_array_merge::array_remapping*)
0000000000532230 00000000000000f4 t merge_arrays(int, unsigned int*, exec_list*, array_live_range*)
0000000000532330 00000000000000b0 t dup_reladdr(st_src_reg const*)
00000000005323e0 0000000000000128 t st_src_reg::st_src_reg(gl_register_file, int, glsl_type const*, int, unsigned int)
00000000005323e0 0000000000000128 T st_src_reg::st_src_reg(gl_register_file, int, glsl_type const*, int, unsigned int)
0000000000532510 0000000000000030 t st_src_reg::st_src_reg(gl_register_file, int, glsl_base_type)
0000000000532510 0000000000000030 T st_src_reg::st_src_reg(gl_register_file, int, glsl_base_type)
0000000000532540 0000000000000034 t st_src_reg::st_src_reg(gl_register_file, int, glsl_base_type, int)
0000000000532540 0000000000000034 T st_src_reg::st_src_reg(gl_register_file, int, glsl_base_type, int)
0000000000532580 0000000000000020 t st_src_reg::reset()
00000000005325a0 0000000000000020 t st_src_reg::st_src_reg()
00000000005325a0 0000000000000020 T st_src_reg::st_src_reg()
00000000005325c0 00000000000000f8 t st_src_reg::operator=(st_src_reg const&)
00000000005326c0 00000000000000e0 t st_src_reg::st_src_reg(st_src_reg const&)
00000000005326c0 00000000000000e0 T st_src_reg::st_src_reg(st_src_reg const&)
00000000005327a0 0000000000000100 t st_src_reg::st_src_reg(st_dst_reg)
00000000005327a0 0000000000000100 T st_src_reg::st_src_reg(st_dst_reg)
00000000005328a0 0000000000000128 t st_src_reg::get_abs()
00000000005329d0 00000000000000f8 t st_dst_reg::st_dst_reg(st_src_reg)
00000000005329d0 00000000000000f8 T st_dst_reg::st_dst_reg(st_src_reg)
0000000000532ad0 000000000000002c t st_dst_reg::st_dst_reg(gl_register_file, int, glsl_base_type, int)
0000000000532ad0 000000000000002c T st_dst_reg::st_dst_reg(gl_register_file, int, glsl_base_type, int)
0000000000532b00 000000000000002c t st_dst_reg::st_dst_reg(gl_register_file, int, glsl_base_type)
0000000000532b00 000000000000002c T st_dst_reg::st_dst_reg(gl_register_file, int, glsl_base_type)
0000000000532b30 000000000000001c t st_dst_reg::st_dst_reg()
0000000000532b30 000000000000001c T st_dst_reg::st_dst_reg()
0000000000532b50 00000000000000e0 t st_dst_reg::st_dst_reg(st_dst_reg const&)
0000000000532b50 00000000000000e0 T st_dst_reg::st_dst_reg(st_dst_reg const&)
0000000000532c30 0000000000000108 t st_dst_reg::operator=(st_dst_reg const&)
0000000000532d40 00000000000000d0 t (anonymous namespace)::temp_comp_access::record_read(int, (anonymous namespace)::prog_scope*)
0000000000532e10 000000000000007c t (anonymous namespace)::array_access::record_access(int, (anonymous namespace)::prog_scope*, int)
0000000000532e90 0000000000000170 t (anonymous namespace)::access_recorder::record_read(st_src_reg const&, int, (anonymous namespace)::prog_scope*)
0000000000533000 0000000000000124 t void std::__adjust_heap<(anonymous namespace)::register_merge_record*, long, (anonymous namespace)::register_merge_record, __gnu_cxx::__ops::_Iter_less_iter>((anonymous namespace)::register_merge_record*, long, long, (anonymous namespace)::register_merge_record, __gnu_cxx::__ops::_Iter_less_iter) [clone .constprop.0]
0000000000533130 00000000000000e4 t void std::__insertion_sort<(anonymous namespace)::register_merge_record*, __gnu_cxx::__ops::_Iter_less_iter>((anonymous namespace)::register_merge_record*, (anonymous namespace)::register_merge_record*, __gnu_cxx::__ops::_Iter_less_iter) [clone .constprop.0]
0000000000533220 0000000000000218 t void std::__introsort_loop<(anonymous namespace)::register_merge_record*, long, __gnu_cxx::__ops::_Iter_less_iter>((anonymous namespace)::register_merge_record*, (anonymous namespace)::register_merge_record*, long, __gnu_cxx::__ops::_Iter_less_iter) [clone .constprop.0]
0000000000533440 00000000000001e0 t (anonymous namespace)::temp_comp_access::record_ifelse_write((anonymous namespace)::prog_scope const&)
0000000000533620 00000000000000f0 t (anonymous namespace)::temp_comp_access::record_write(int, (anonymous namespace)::prog_scope*)
0000000000533710 0000000000000d40 t get_temp_registers_required_live_ranges(void*, exec_list*, int, register_live_range*, int, array_live_range*)
0000000000534450 0000000000000254 t get_temp_registers_remapping(void*, int, register_live_range const*, rename_reg_pair*)
00000000005346b0 000000000000007c t swizzle_4v
0000000000534730 00000000000002cc t src_register
0000000000534a00 00000000000001bc t translate_src
0000000000534bc0 0000000000000bf0 t emit_wpos
00000000005357b0 000000000000008c t st_translate_texture_target
0000000000535840 0000000000000020 t st_translate_texture_type
0000000000535860 000000000000191c t st_translate_mesa_program
0000000000537180 0000000000000088 T ast_array_specifier::print() const
0000000000537210 00000000000008a8 t _mesa_ast_array_index_to_hir(void*, _mesa_glsl_parse_state*, ir_rvalue*, ir_rvalue*, YYLTYPE&, YYLTYPE&)
0000000000537ac0 0000000000000058 T ast_expression_bin::print() const
0000000000537b20 0000000000000010 t ast_expression::operator_string(ast_operators)
0000000000537b30 0000000000000030 t ast_expression_bin::ast_expression_bin(int, ast_expression*, ast_expression*)
0000000000537b30 0000000000000030 T ast_expression_bin::ast_expression_bin(int, ast_expression*, ast_expression*)
0000000000537b60 000000000000005c T ast_function_expression::has_sequence_subexpression() const
0000000000537bc0 0000000000000894 t convert_component(ir_rvalue*, glsl_type const*)
0000000000538460 00000000000000d8 t implicitly_convert_component(ir_rvalue*&, glsl_base_type, _mesa_glsl_parse_state*)
0000000000538540 0000000000000190 t match_subroutine_by_name(char const*, exec_list*, _mesa_glsl_parse_state*, ir_variable**)
00000000005386d0 000000000000015c t generate_array_index(void*, exec_list*, _mesa_glsl_parse_state*, YYLTYPE, ast_expression const*, ast_expression*, char const**, exec_list*)
0000000000538830 000000000000008c t function_exists(_mesa_glsl_parse_state*, glsl_symbol_table*, char const*)
00000000005388c0 000000000000015c t copy_index_derefs_to_temps(ir_instruction*, void*)
0000000000538a20 00000000000000fc t process_parameters(exec_list*, exec_list*, exec_list*, _mesa_glsl_parse_state*) [clone .constprop.0]
0000000000538b20 00000000000002d0 t process_record_constructor(exec_list*, glsl_type const*, YYLTYPE*, exec_list*, _mesa_glsl_parse_state*)
0000000000538df0 00000000000003c8 t process_array_constructor(exec_list*, glsl_type const*, YYLTYPE*, exec_list*, _mesa_glsl_parse_state*)
00000000005391c0 0000000000000580 T ast_aggregate_initializer::hir(exec_list*, _mesa_glsl_parse_state*)
0000000000539740 00000000000000cc t prototype_string(glsl_type const*, char const*, exec_list*)
0000000000539810 00000000000000c0 t print_function_prototypes(_mesa_glsl_parse_state*, YYLTYPE*, ir_function*)
00000000005398d0 00000000000002e0 t ast_function_expression::handle_method(exec_list*, _mesa_glsl_parse_state*)
0000000000539bb0 00000000000029bc T ast_function_expression::hir(exec_list*, _mesa_glsl_parse_state*)
000000000053c570 0000000000000010 W read_from_write_only_variable_visitor::visit_enter(ir_expression*)
000000000053c580 0000000000000008 T ast_node::has_sequence_subexpression() const
000000000053c590 0000000000000004 T ast_node::set_is_lhs(bool)
000000000053c5a0 0000000000000100 T ast_expression::has_sequence_subexpression() const
000000000053c6a0 0000000000000014 t compare_case_value(void const*, void const*)
000000000053c6c0 0000000000000008 t key_contents(void const*)
000000000053c6d0 0000000000000048 W interface_block_usage_visitor::visit(ir_dereference_variable*)
000000000053c720 0000000000000010 T ast_warnings_toggle::hir(exec_list*, _mesa_glsl_parse_state*)
000000000053c730 0000000000000128 t remove_per_vertex_blocks(exec_list*, _mesa_glsl_parse_state*, ir_variable_mode)
000000000053c860 00000000000000b8 t validate_layout_qualifier_vertex_count(_mesa_glsl_parse_state*, YYLTYPE, ir_variable*, unsigned int, unsigned int*, char const*)
000000000053c920 00000000000000ac t handle_tess_shader_input_decl(_mesa_glsl_parse_state*, YYLTYPE, ir_variable*)
000000000053c9d0 00000000000000f8 t get_scalar_boolean_operand(exec_list*, _mesa_glsl_parse_state*, ast_expression*, int, char const*, bool*)
000000000053cad0 00000000000001a4 t validate_xfb_offset_qualifier(YYLTYPE*, _mesa_glsl_parse_state*, int, glsl_type const*, unsigned int)
000000000053cc80 0000000000000154 T ast_gs_input_layout::hir(exec_list*, _mesa_glsl_parse_state*)
000000000053cde0 0000000000000104 t handle_tess_ctrl_shader_output_decl(_mesa_glsl_parse_state*, YYLTYPE, ir_variable*)
000000000053cef0 0000000000000160 T ast_tcs_output_layout::hir(exec_list*, _mesa_glsl_parse_state*)
000000000053d050 00000000000002e8 T ast_cs_input_layout::hir(exec_list*, _mesa_glsl_parse_state*)
000000000053d340 000000000000005c t is_varying_var(ir_variable*, gl_shader_stage)
000000000053d3a0 00000000000000a8 t validate_storage_for_sampler_image_types(ir_variable*, _mesa_glsl_parse_state*, YYLTYPE*)
000000000053d450 0000000000000288 t process_array_type(YYLTYPE*, glsl_type const*, ast_array_specifier*, _mesa_glsl_parse_state*)
000000000053d6e0 0000000000000100 t constant_one_for_inc_dec(void*, glsl_type const*) [clone .isra.0]
000000000053d7e0 000000000000007c W read_from_write_only_variable_visitor::visit(ir_dereference_variable*)
000000000053d860 00000000000001c8 t shift_result_type(glsl_type const*, glsl_type const*, ast_operators, _mesa_glsl_parse_state*, YYLTYPE*)
000000000053da30 00000000000000a8 t validate_identifier(char const*, YYLTYPE, _mesa_glsl_parse_state*)
000000000053dae0 00000000000002a8 t validate_interpolation_qualifier(_mesa_glsl_parse_state*, YYLTYPE*, glsl_interp_mode, ast_type_qualifier const*, glsl_type const*, ir_variable_mode)
000000000053dd90 00000000000003c8 t select_gles_precision(unsigned int, glsl_type const*, _mesa_glsl_parse_state*, YYLTYPE*)
000000000053e160 000000000000090c t apply_type_qualifier_to_variable(ast_type_qualifier const*, ir_variable*, _mesa_glsl_parse_state*, YYLTYPE*, bool)
000000000053ea70 00000000000000e0 t is_allowed_invariant(ir_variable*, _mesa_glsl_parse_state*)
000000000053eb50 000000000000023c t apply_implicit_conversion(glsl_type const*, ir_rvalue*&, _mesa_glsl_parse_state*)
000000000053ed90 00000000000001e0 t modulus_result_type(ir_rvalue*&, ir_rvalue*&, _mesa_glsl_parse_state*, YYLTYPE*)
000000000053ef70 00000000000002ac t bit_logic_result_type(ir_rvalue*&, ir_rvalue*&, ast_operators, _mesa_glsl_parse_state*, YYLTYPE*)
000000000053f220 0000000000000234 t arithmetic_result_type(ir_rvalue*&, ir_rvalue*&, bool, _mesa_glsl_parse_state*, YYLTYPE*)
000000000053f460 00000000000002b4 t validate_assignment(_mesa_glsl_parse_state*, YYLTYPE, ir_rvalue*, ir_rvalue*, bool)
000000000053f720 0000000000000230 t apply_explicit_binding(_mesa_glsl_parse_state*, YYLTYPE*, ir_variable*, glsl_type const*, ast_type_qualifier const*) [clone .part.0]
000000000053f950 0000000000000404 t do_comparison(void*, int, ir_rvalue*, ir_rvalue*)
000000000053fd60 0000000000000478 t do_assignment(exec_list*, _mesa_glsl_parse_state*, char const*, ir_rvalue*, ir_rvalue*, ir_rvalue**, bool, bool, YYLTYPE)
00000000005401e0 000000000000008c T ast_expression::set_is_lhs(bool)
0000000000540270 0000000000000514 t _mesa_ast_to_hir(exec_list*, _mesa_glsl_parse_state*)
0000000000540790 0000000000000008 T ast_node::hir(exec_list*, _mesa_glsl_parse_state*)
00000000005407a0 0000000000000010 T ast_function_expression::hir_no_rvalue(exec_list*, _mesa_glsl_parse_state*)
00000000005407b0 0000000000000010 T ast_aggregate_initializer::hir_no_rvalue(exec_list*, _mesa_glsl_parse_state*)
00000000005407c0 0000000000000108 t check_builtin_array_max_size(char const*, unsigned int, YYLTYPE, _mesa_glsl_parse_state*)
00000000005408d0 0000000000000464 t get_variable_being_redeclared(ir_variable**, YYLTYPE, _mesa_glsl_parse_state*, bool, bool*)
0000000000540d40 000000000000214c t ast_expression::do_hir(exec_list*, _mesa_glsl_parse_state*, bool)
0000000000542e90 0000000000000008 T ast_expression::hir(exec_list*, _mesa_glsl_parse_state*)
0000000000542ea0 0000000000000008 T ast_expression::hir_no_rvalue(exec_list*, _mesa_glsl_parse_state*)
0000000000542eb0 0000000000000030 T ast_expression_statement::hir(exec_list*, _mesa_glsl_parse_state*)
0000000000542ee0 00000000000000a8 T ast_compound_statement::hir(exec_list*, _mesa_glsl_parse_state*)
0000000000542f90 000000000000008c t ast_type_specifier::glsl_type(char const**, _mesa_glsl_parse_state*) const
0000000000543020 000000000000105c t ast_process_struct_or_iface_block_members(exec_list*, _mesa_glsl_parse_state*, exec_list*, glsl_struct_field**, bool, glsl_matrix_layout, bool, ir_variable_mode, ast_type_qualifier*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
0000000000544080 00000000000013fc T ast_interface_block::hir(exec_list*, _mesa_glsl_parse_state*)
0000000000545480 0000000000002b4c T ast_declarator_list::hir(exec_list*, _mesa_glsl_parse_state*)
0000000000547fd0 00000000000002cc T ast_parameter_declarator::hir(exec_list*, _mesa_glsl_parse_state*)
00000000005482a0 00000000000000e8 t ast_parameter_declarator::parameters_to_hir(exec_list*, bool, exec_list*, _mesa_glsl_parse_state*)
0000000000548390 0000000000000b4c T ast_function::hir(exec_list*, _mesa_glsl_parse_state*)
0000000000548ee0 0000000000000198 T ast_function_definition::hir(exec_list*, _mesa_glsl_parse_state*)
0000000000549080 00000000000000a4 T ast_demote_statement::hir(exec_list*, _mesa_glsl_parse_state*)
0000000000549130 0000000000000170 T ast_selection_statement::hir(exec_list*, _mesa_glsl_parse_state*)
00000000005492a0 00000000000001c4 t ast_switch_statement::test_to_hir(exec_list*, _mesa_glsl_parse_state*)
0000000000549470 0000000000000030 T ast_switch_body::hir(exec_list*, _mesa_glsl_parse_state*)
00000000005494a0 0000000000000344 T ast_case_statement_list::hir(exec_list*, _mesa_glsl_parse_state*)
00000000005497f0 000000000000010c T ast_case_statement::hir(exec_list*, _mesa_glsl_parse_state*)
0000000000549900 0000000000000068 T ast_case_label_list::hir(exec_list*, _mesa_glsl_parse_state*)
0000000000549970 0000000000000444 T ast_case_label::hir(exec_list*, _mesa_glsl_parse_state*)
0000000000549dc0 000000000000016c t ast_iteration_statement::condition_to_hir(exec_list*, _mesa_glsl_parse_state*)
0000000000549f30 0000000000000538 T ast_jump_statement::hir(exec_list*, _mesa_glsl_parse_state*)
000000000054a470 0000000000000460 T ast_switch_statement::hir(exec_list*, _mesa_glsl_parse_state*)
000000000054a8d0 000000000000015c T ast_iteration_statement::hir(exec_list*, _mesa_glsl_parse_state*)
000000000054aa30 0000000000000188 T ast_type_specifier::hir(exec_list*, _mesa_glsl_parse_state*)
000000000054abc0 0000000000000234 T ast_struct_specifier::hir(exec_list*, _mesa_glsl_parse_state*)
000000000054ae00 0000000000000064 T ast_type_specifier::print() const
000000000054ae70 000000000000009c t ast_fully_specified_type::has_qualifiers(_mesa_glsl_parse_state*) const
000000000054af10 0000000000000010 t ast_type_qualifier::has_interpolation() const
000000000054af20 0000000000000040 t ast_type_qualifier::has_layout() const
000000000054af60 0000000000000014 t ast_type_qualifier::has_storage() const
000000000054af80 0000000000000010 t ast_type_qualifier::has_auxiliary_storage() const
000000000054af90 0000000000000010 t ast_type_qualifier::has_memory() const
000000000054afa0 0000000000000020 t ast_type_qualifier::is_subroutine_decl() const
000000000054afc0 000000000000099c t ast_type_qualifier::merge_qualifier(YYLTYPE*, _mesa_glsl_parse_state*, ast_type_qualifier const&, bool, bool)
000000000054b960 0000000000000160 t ast_type_qualifier::validate_out_qualifier(YYLTYPE*, _mesa_glsl_parse_state*)
000000000054bac0 00000000000000d0 t ast_type_qualifier::merge_into_out_qualifier(YYLTYPE*, _mesa_glsl_parse_state*, ast_node*&)
000000000054bb90 000000000000028c t ast_type_qualifier::validate_in_qualifier(YYLTYPE*, _mesa_glsl_parse_state*)
000000000054be20 0000000000000358 t ast_type_qualifier::merge_into_in_qualifier(YYLTYPE*, _mesa_glsl_parse_state*, ast_node*&)
000000000054c180 0000000000000668 t ast_type_qualifier::validate_flags(YYLTYPE*, _mesa_glsl_parse_state*, ast_type_qualifier const&, char const*, char const*)
000000000054c7f0 00000000000001b4 t ast_layout_expression::process_qualifier_constant(_mesa_glsl_parse_state*, char const*, unsigned int*, bool)
000000000054c9b0 0000000000000114 t process_qualifier_constant(_mesa_glsl_parse_state*, YYLTYPE*, char const*, ast_expression*, unsigned int*)
000000000054cad0 0000000000000194 t ast_type_qualifier::push_to_global(YYLTYPE*, _mesa_glsl_parse_state*)
000000000054cc70 0000000000000c44 t _mesa_glsl_initialize_types
000000000054d8c0 0000000000000100 t (anonymous namespace)::builtin_variable_generator::add_variable(char const*, glsl_type const*, int, ir_variable_mode, int)
000000000054d9c0 00000000000000e0 t (anonymous namespace)::builtin_variable_generator::add_index_variable(char const*, glsl_type const*, int, ir_variable_mode, int, int) [clone .constprop.0] [clone .isra.0]
000000000054daa0 00000000000000c8 t (anonymous namespace)::builtin_variable_generator::add_const_ivec3(char const*, int, int, int) [clone .isra.0]
000000000054db70 000000000000008c t (anonymous namespace)::builtin_variable_generator::add_const(char const*, int, int) [clone .isra.0]
000000000054dc00 0000000000000204 t (anonymous namespace)::builtin_variable_generator::add_uniform(glsl_type const*, int, char const*) [clone .isra.0]
000000000054de10 0000000000000114 t (anonymous namespace)::builtin_variable_generator::add_varying(int, glsl_type const*, int, char const*)
000000000054df30 0000000000000e60 t (anonymous namespace)::builtin_variable_generator::generate_constants()
000000000054ed90 00000000000020c0 t _mesa_glsl_initialize_variables(exec_list*, _mesa_glsl_parse_state*)
0000000000550e50 0000000000000170 t _mesa_ast_field_selection_to_hir(ast_expression const*, exec_list*, _mesa_glsl_parse_state*)
0000000000550fc0 0000000000000040 t free_entry(hash_entry*)
0000000000551000 0000000000000020 T ir_array_refcount_visitor::visit_enter(ir_function_signature*)
0000000000551020 0000000000000050 t ir_array_refcount_visitor::ir_array_refcount_visitor()
0000000000551020 0000000000000050 T ir_array_refcount_visitor::ir_array_refcount_visitor()
0000000000551070 000000000000003c t ir_array_refcount_visitor::~ir_array_refcount_visitor()
0000000000551070 000000000000003c T ir_array_refcount_visitor::~ir_array_refcount_visitor()
00000000005510b0 00000000000000d8 t ir_array_refcount_entry::ir_array_refcount_entry(ir_variable*)
00000000005510b0 00000000000000d8 T ir_array_refcount_entry::ir_array_refcount_entry(ir_variable*)
0000000000551190 00000000000000b0 T ir_array_refcount_visitor::visit(ir_dereference_variable*)
0000000000551240 00000000000001b8 T ir_array_refcount_visitor::visit_enter(ir_dereference_array*)
0000000000551400 0000000000000074 t ir_array_refcount_visitor::get_variable_entry(ir_variable*)
0000000000551480 000000000000017c t call_for_basic_blocks(exec_list*, void (*)(ir_instruction*, ir_instruction*, void*), void*)
0000000000551600 0000000000000018 T ir_function_can_inline_visitor::visit_enter(ir_return*)
0000000000551620 00000000000000a8 t can_inline(ir_call*)
00000000005516d0 0000000000000010 t (anonymous namespace)::has_recursion_visitor::visit_leave(ir_function_signature*)
00000000005516e0 0000000000000100 t (anonymous namespace)::has_recursion_visitor::visit_enter(ir_call*)
00000000005517e0 000000000000005c t destroy_links(exec_list*, (anonymous namespace)::function*) [clone .isra.0]
0000000000551840 00000000000000dc t remove_unlinked_functions(void const*, void*, void*)
0000000000551920 00000000000000a4 t (anonymous namespace)::has_recursion_visitor::visit_enter(ir_function_signature*)
00000000005519d0 0000000000000170 t detect_recursion_unlinked(_mesa_glsl_parse_state*, exec_list*)
0000000000551b40 0000000000000158 t detect_recursion_linked(gl_shader_program*, exec_list*)
0000000000551ca0 0000000000000064 t ir_rvalue_visitor::visit_leave(ir_expression*)
0000000000551d10 0000000000000024 T ir_rvalue_visitor::visit_leave(ir_swizzle*)
0000000000551d10 0000000000000024 T ir_rvalue_visitor::visit_leave(ir_dereference_record*)
0000000000551d40 0000000000000024 T ir_rvalue_visitor::visit_leave(ir_discard*)
0000000000551d40 0000000000000024 T ir_rvalue_visitor::visit_leave(ir_emit_vertex*)
0000000000551d40 0000000000000024 T ir_rvalue_visitor::visit_leave(ir_end_primitive*)
0000000000551d40 0000000000000024 T ir_rvalue_visitor::visit_leave(ir_if*)
0000000000551d40 0000000000000024 T ir_rvalue_visitor::visit_leave(ir_return*)
0000000000551d70 0000000000000064 T ir_rvalue_enter_visitor::visit_enter(ir_expression*)
0000000000551de0 0000000000000024 T ir_rvalue_enter_visitor::visit_enter(ir_swizzle*)
0000000000551de0 0000000000000024 T ir_rvalue_enter_visitor::visit_enter(ir_dereference_record*)
0000000000551e10 0000000000000024 T ir_rvalue_enter_visitor::visit_enter(ir_discard*)
0000000000551e10 0000000000000024 T ir_rvalue_enter_visitor::visit_enter(ir_emit_vertex*)
0000000000551e10 0000000000000024 T ir_rvalue_enter_visitor::visit_enter(ir_end_primitive*)
0000000000551e10 0000000000000024 T ir_rvalue_enter_visitor::visit_enter(ir_if*)
0000000000551e10 0000000000000024 T ir_rvalue_enter_visitor::visit_enter(ir_return*)
0000000000551e40 0000000000000048 t ir_rvalue_visitor::visit_leave(ir_assignment*)
0000000000551e90 0000000000000048 t ir_rvalue_enter_visitor::visit_enter(ir_assignment*)
0000000000551ee0 000000000000005c T ir_rvalue_visitor::visit_leave(ir_dereference_array*)
0000000000551f40 000000000000005c T ir_rvalue_enter_visitor::visit_enter(ir_dereference_array*)
0000000000551fa0 0000000000000064 t ir_rvalue_base_visitor::rvalue_visit(ir_expression*)
0000000000552010 000000000000010c t ir_rvalue_base_visitor::rvalue_visit(ir_texture*)
0000000000552120 0000000000000004 T ir_rvalue_visitor::visit_leave(ir_texture*)
0000000000552130 0000000000000004 T ir_rvalue_enter_visitor::visit_enter(ir_texture*)
0000000000552140 0000000000000048 t ir_rvalue_base_visitor::rvalue_visit(ir_assignment*)
0000000000552190 00000000000000b4 t ir_rvalue_base_visitor::rvalue_visit(ir_call*)
0000000000552250 0000000000000004 T ir_rvalue_visitor::visit_leave(ir_call*)
0000000000552260 0000000000000004 t ir_rvalue_enter_visitor::visit_enter(ir_call*)
0000000000552270 0000000000000180 t mark(gl_program*, ir_variable*, int, int, gl_shader_stage)
00000000005523f0 000000000000001c t (anonymous namespace)::ir_set_program_inouts_visitor::visit_enter(ir_discard*)
0000000000552410 0000000000000024 t (anonymous namespace)::ir_set_program_inouts_visitor::visit_enter(ir_texture*)
0000000000552440 0000000000000020 t (anonymous namespace)::ir_set_program_inouts_visitor::visit_enter(ir_function_signature*)
0000000000552460 00000000000000f4 t (anonymous namespace)::ir_set_program_inouts_visitor::mark_whole_variable(ir_variable*)
0000000000552560 0000000000000040 t (anonymous namespace)::ir_set_program_inouts_visitor::visit(ir_dereference_variable*)
00000000005525a0 0000000000000058 t is_multiple_vertices(gl_shader_stage, ir_variable*)
0000000000552600 00000000000001b0 t (anonymous namespace)::ir_set_program_inouts_visitor::try_mark_partial_variable(ir_variable*, ir_rvalue*)
00000000005527b0 00000000000000f4 t (anonymous namespace)::ir_set_program_inouts_visitor::visit_enter(ir_dereference_array*)
00000000005528b0 0000000000000088 t do_set_program_inouts(exec_list*, gl_program*, gl_shader_stage)
0000000000552940 0000000000000068 t free_entry(hash_entry*)
00000000005529b0 0000000000000020 T ir_variable_refcount_visitor::visit_enter(ir_function_signature*)
00000000005529d0 0000000000000088 T ir_variable_refcount_visitor::visit(ir_variable*)
0000000000552a60 0000000000000048 t ir_variable_refcount_visitor::ir_variable_refcount_visitor()
0000000000552a60 0000000000000048 T ir_variable_refcount_visitor::ir_variable_refcount_visitor()
0000000000552ab0 000000000000003c t ir_variable_refcount_visitor::~ir_variable_refcount_visitor()
0000000000552ab0 000000000000003c T ir_variable_refcount_visitor::~ir_variable_refcount_visitor()
0000000000552af0 000000000000008c t ir_variable_refcount_visitor::get_variable_entry(ir_variable*)
0000000000552b80 0000000000000064 T ir_variable_refcount_visitor::visit(ir_dereference_variable*)
0000000000552bf0 0000000000000090 T ir_variable_refcount_visitor::visit_leave(ir_assignment*)
0000000000552c80 0000000000000158 t process_block(void*, hash_table*, ir_variable*)
0000000000552de0 0000000000000074 T link_uniform_block_active_visitor::visit(ir_dereference_variable*)
0000000000552e60 00000000000001ac t process_arrays(void*, ir_dereference_array*, link_uniform_block_active*)
0000000000553010 0000000000000120 T link_uniform_block_active_visitor::visit_enter(ir_dereference_array*)
0000000000553130 0000000000000180 T link_uniform_block_active_visitor::visit(ir_variable*)
00000000005532b0 00000000000000a0 t deref_output(ir_variable*)
0000000000553350 0000000000000068 t is_mode(ir_variable*, gl_advanced_blend_mode)
00000000005533c0 0000000000000090 t lumv3(ir_variable*)
0000000000553450 00000000000000a8 t maxv3(ir_variable*)
0000000000553500 00000000000000a8 t minv3(ir_variable*)
00000000005535b0 00000000000004f0 t set_lum(ir_builder::ir_factory*, ir_variable*, ir_variable*, ir_variable*)
0000000000553aa0 0000000000000234 t set_lum_sat(ir_builder::ir_factory*, ir_variable*, ir_variable*, ir_variable*, ir_variable*)
0000000000553ce0 0000000000001a38 t calc_blend_result(ir_builder::ir_factory, ir_variable*, ir_variable*, ir_rvalue*, unsigned int)
0000000000555720 000000000000048c t lower_blend_equation_advanced(gl_linked_shader*, bool)
0000000000555bb0 0000000000000594 t lower_buffer_access::lower_buffer_access::emit_access(void*, bool, ir_dereference*, ir_variable*, unsigned int, bool, glsl_type const*, glsl_interface_packing, unsigned int)
0000000000556150 0000000000000154 t lower_buffer_access::lower_buffer_access::is_dereferenced_thing_row_major(ir_rvalue const*)
00000000005562b0 0000000000000438 t lower_buffer_access::lower_buffer_access::setup_buffer_access(void*, ir_rvalue*, ir_rvalue**, unsigned int*, bool*, glsl_type const**, glsl_struct_field const**, glsl_interface_packing)
00000000005566f0 00000000000000b0 t replace_discard(void*, ir_variable*, ir_discard*)
00000000005567a0 0000000000000208 t (anonymous namespace)::lower_discard_visitor::visit_leave(ir_if*)
00000000005569b0 0000000000000050 t lower_discard(exec_list*)
0000000000556a00 0000000000000018 t (anonymous namespace)::ir_if_to_cond_assign_visitor::visit_enter(ir_if*)
0000000000556a20 00000000000001c0 t move_block_to_cond_assign(void*, ir_if*, ir_rvalue*, exec_list*, set*)
0000000000556be0 000000000000031c t (anonymous namespace)::ir_if_to_cond_assign_visitor::visit_leave(ir_if*)
0000000000556f00 0000000000000134 t check_ir_node(ir_instruction*, void*)
0000000000557040 00000000000000a8 t lower_if_to_cond_assign(gl_shader_stage, exec_list*, unsigned int, unsigned int)
00000000005570f0 000000000000017c t lower_64bit_integer_instructions(exec_list*, unsigned int)
0000000000557270 0000000000000190 t lower_64bit::expand_source(ir_builder::ir_factory&, ir_rvalue*, ir_variable**)
0000000000557400 0000000000000108 t lower_64bit::compact_destination(ir_builder::ir_factory&, glsl_type const*, ir_variable**)
0000000000557510 00000000000002d8 t lower_64bit::lower_op_to_function_call(ir_instruction*, ir_expression*, ir_function_signature*)
00000000005577f0 0000000000000120 t (anonymous namespace)::lower_64bit_visitor::handle_op(ir_expression*, char const*, ir_function_signature* (*)(void*, bool (*)(_mesa_glsl_parse_state const*)))
0000000000557910 0000000000000140 t (anonymous namespace)::lower_64bit_visitor::handle_rvalue(ir_rvalue**)
0000000000557a50 0000000000000064 t mat_op_to_vec_predicate(ir_instruction*)
0000000000557ac0 00000000000000a4 t (anonymous namespace)::ir_mat_op_to_vec_visitor::get_column(ir_dereference*, int)
0000000000557b70 0000000000000114 t (anonymous namespace)::ir_mat_op_to_vec_visitor::do_mul_mat_scalar(ir_dereference*, ir_dereference*, ir_dereference*)
0000000000557c90 0000000000000b38 t (anonymous namespace)::ir_mat_op_to_vec_visitor::visit_leave(ir_assignment*)
00000000005587d0 0000000000000064 t do_mat_op_to_vec(exec_list*)
0000000000558840 00000000000001c8 T lower_offset_array_visitor::handle_rvalue(ir_rvalue**)
0000000000558a10 000000000000004c t lower_offset_arrays(exec_list*)
0000000000558a60 0000000000000004 t (anonymous namespace)::lower_packing_builtins_visitor::~lower_packing_builtins_visitor()
0000000000558a60 0000000000000004 t (anonymous namespace)::lower_packing_builtins_visitor::~lower_packing_builtins_visitor()
0000000000558a70 0000000000000008 t (anonymous namespace)::lower_packing_builtins_visitor::~lower_packing_builtins_visitor()
0000000000558a80 00000000000001c0 t (anonymous namespace)::lower_packing_builtins_visitor::unpack_uint_to_uvec2(ir_rvalue*)
0000000000558c40 0000000000000210 t (anonymous namespace)::lower_packing_builtins_visitor::pack_uvec2_to_uint(ir_rvalue*)
0000000000558e50 0000000000000410 t (anonymous namespace)::lower_packing_builtins_visitor::unpack_half_1x16_nosign(ir_rvalue*, ir_rvalue*)
0000000000559260 0000000000000510 t (anonymous namespace)::lower_packing_builtins_visitor::pack_half_1x16_nosign(ir_rvalue*, ir_rvalue*, ir_rvalue*)
0000000000559770 00000000000003f0 t (anonymous namespace)::lower_packing_builtins_visitor::pack_uvec4_to_uint(ir_rvalue*)
0000000000559b60 0000000000000438 t (anonymous namespace)::lower_packing_builtins_visitor::unpack_uint_to_uvec4(ir_rvalue*)
0000000000559fa0 000000000000143c t (anonymous namespace)::lower_packing_builtins_visitor::handle_rvalue(ir_rvalue**)
000000000055b3e0 0000000000000078 t lower_packing_builtins(exec_list*, int)
000000000055b460 0000000000000078 t (anonymous namespace)::deref_replacer::handle_rvalue(ir_rvalue**)
000000000055b4e0 000000000000005c t (anonymous namespace)::find_variable_index::visit_enter(ir_dereference_array*)
000000000055b540 0000000000000150 t (anonymous namespace)::assignment_generator::generate(unsigned int, ir_rvalue*, ir_builder::ir_factory&) const
000000000055b690 0000000000000130 t compare_index_block(ir_builder::ir_factory&, ir_variable*, unsigned int, unsigned int)
000000000055b7c0 0000000000000284 t (anonymous namespace)::switch_generator::generate(unsigned int, unsigned int, ir_builder::ir_factory&)
000000000055ba50 00000000000002ac t (anonymous namespace)::variable_index_to_cond_assign_visitor::convert_dereference_array(ir_dereference_array*, ir_assignment*, ir_dereference*)
000000000055bd00 00000000000001a8 t (anonymous namespace)::variable_index_to_cond_assign_visitor::handle_rvalue(ir_rvalue**)
000000000055beb0 00000000000001a0 t (anonymous namespace)::variable_index_to_cond_assign_visitor::visit_leave(ir_assignment*)
000000000055c050 00000000000000a0 t lower_variable_index_to_cond_assign(gl_shader_stage, exec_list*, bool, bool, bool, bool)
000000000055c0f0 0000000000000254 t (anonymous namespace)::ir_vec_index_to_cond_assign_visitor::convert_vec_index_to_cond_assign(void*, ir_rvalue*, ir_rvalue*, glsl_type const*) [clone .constprop.0]
000000000055c350 00000000000000e8 t (anonymous namespace)::ir_vec_index_to_cond_assign_visitor::convert_vector_extract_to_cond_assign(ir_rvalue*)
000000000055c440 0000000000000030 t (anonymous namespace)::ir_vec_index_to_cond_assign_visitor::visit_enter(ir_if*)
000000000055c470 0000000000000030 t (anonymous namespace)::ir_vec_index_to_cond_assign_visitor::visit_enter(ir_return*)
000000000055c4a0 000000000000009c t (anonymous namespace)::ir_vec_index_to_cond_assign_visitor::visit_enter(ir_call*)
000000000055c540 0000000000000044 t (anonymous namespace)::ir_vec_index_to_cond_assign_visitor::visit_leave(ir_assignment*)
000000000055c590 0000000000000030 t (anonymous namespace)::ir_vec_index_to_cond_assign_visitor::visit_enter(ir_swizzle*)
000000000055c5c0 000000000000005c t (anonymous namespace)::ir_vec_index_to_cond_assign_visitor::visit_enter(ir_expression*)
000000000055c620 0000000000000050 t do_vec_index_to_cond_assign(exec_list*)
000000000055c670 00000000000003bc t (anonymous namespace)::lower_vector_visitor::handle_rvalue(ir_rvalue**)
000000000055ca30 0000000000000060 t lower_quadop_vector(exec_list*, bool)
000000000055ca90 0000000000000008 t hash_table_var_hash(void const*)
000000000055caa0 000000000000007c t copy(void*, ir_variable*, ir_variable*)
000000000055cb20 0000000000000104 t (anonymous namespace)::output_read_remover::visit(ir_dereference_variable*)
000000000055cc30 000000000000008c t (anonymous namespace)::output_read_remover::visit_leave(ir_emit_vertex*)
000000000055cc30 000000000000008c t (anonymous namespace)::output_read_remover::visit_leave(ir_return*)
000000000055ccc0 00000000000000b8 t (anonymous namespace)::output_read_remover::visit_leave(ir_function_signature*)
000000000055cd80 0000000000000094 t lower_output_reads(unsigned int, exec_list*)
000000000055ce20 0000000000000170 t write_uniform_remap_table(blob*, unsigned int, gl_uniform_storage*, gl_uniform_storage**)
000000000055cf90 0000000000000044 t write_hash_table_entry(char const*, unsigned int, void*)
000000000055cfe0 00000000000000d0 t write_buffer_block(blob*, gl_uniform_block*)
000000000055d0b0 0000000000000104 t read_uniform_remap_table(blob_reader*, gl_shader_program*, unsigned int*, gl_uniform_storage*)
000000000055d1c0 000000000000015c t read_buffer_block(blob_reader*, gl_uniform_block*, gl_shader_program*)
000000000055d320 00000000000000c8 t write_hash_table(blob*, string_to_uint_map*)
000000000055d3f0 00000000000000b4 t read_hash_table(blob_reader*, string_to_uint_map*)
000000000055d4b0 0000000000000f40 t serialize_glsl_program
000000000055e3f0 0000000000001218 t deserialize_glsl_program
000000000055f610 0000000000000100 t sanitize_cb
000000000055f710 0000000000000038 t cso_construct_key
000000000055f750 0000000000000060 t cso_insert_state
000000000055f7b0 00000000000000cc t cso_hash_find_data_from_template
000000000055f880 0000000000000100 t cso_find_state_template
000000000055f980 0000000000000064 t cso_cache_create
000000000055f9f0 00000000000001f4 t cso_cache_delete
000000000055fbf0 0000000000000008 t cso_cache_set_sanitize_callback
000000000055fc00 0000000000000040 t eat_opt_white
000000000055fc40 0000000000000088 t str_match_nocase_whole
000000000055fcd0 00000000000000b4 t parse_int
000000000055fd90 00000000000000cc t parse_register_file_bracket
000000000055fe60 000000000000012c t parse_optional_swizzle
000000000055ff90 0000000000000170 t parse_opt_writemask
0000000000560100 00000000000004a8 t parse_register_bracket
00000000005605b0 0000000000000214 t parse_register_dcl_bracket
00000000005607d0 0000000000000f28 t parse_instruction
0000000000561700 0000000000001c48 t tgsi_text_translate
0000000000563350 0000000000000004 t translate_create
0000000000563360 0000000000000030 t translate_cache_create
0000000000563390 0000000000000074 t translate_cache_destroy
0000000000563410 0000000000000094 t translate_cache_find
00000000005634b0 0000000000000024 t emit_R64G64B64A64_FLOAT
00000000005634e0 0000000000000020 t emit_R64G64B64_FLOAT
0000000000563500 0000000000000014 t emit_R64G64_FLOAT
0000000000563520 0000000000000010 t emit_R64_FLOAT
0000000000563530 000000000000001c t emit_R32G32B32A32_FLOAT
0000000000563550 000000000000001c t emit_R32G32B32_FLOAT
0000000000563570 0000000000000014 t emit_R32G32_FLOAT
0000000000563590 000000000000000c t emit_R32_FLOAT
00000000005635a0 0000000000000020 t emit_R32G32B32A32_USCALED
00000000005635c0 0000000000000020 t emit_R32G32B32_USCALED
00000000005635e0 0000000000000014 t emit_R32G32_USCALED
0000000000563600 0000000000000010 t emit_R32_USCALED
0000000000563610 0000000000000020 t emit_R32G32B32A32_SSCALED
0000000000563630 0000000000000020 t emit_R32G32B32_SSCALED
0000000000563650 0000000000000014 t emit_R32G32_SSCALED
0000000000563670 0000000000000010 t emit_R32_SSCALED
0000000000563680 0000000000000020 t emit_R32G32B32A32_UNORM
00000000005636a0 0000000000000020 t emit_R32G32B32_UNORM
00000000005636c0 0000000000000014 t emit_R32G32_UNORM
00000000005636e0 0000000000000010 t emit_R32_UNORM
00000000005636f0 0000000000000020 t emit_R32G32B32A32_SNORM
0000000000563710 0000000000000020 t emit_R32G32B32_SNORM
0000000000563730 0000000000000014 t emit_R32G32_SNORM
0000000000563750 0000000000000010 t emit_R32_SNORM
0000000000563760 0000000000000020 t emit_R16G16B16A16_USCALED
0000000000563780 0000000000000024 t emit_R16G16B16_USCALED
00000000005637b0 0000000000000018 t emit_R16G16_USCALED
00000000005637d0 0000000000000010 t emit_R16_USCALED
00000000005637e0 0000000000000020 t emit_R16G16B16A16_SSCALED
0000000000563800 0000000000000024 t emit_R16G16B16_SSCALED
0000000000563830 0000000000000018 t emit_R16G16_SSCALED
0000000000563850 0000000000000010 t emit_R16_SSCALED
0000000000563860 0000000000000030 t emit_R16G16B16A16_UNORM
0000000000563890 000000000000003c t emit_R16G16B16_UNORM
00000000005638d0 000000000000002c t emit_R16G16_UNORM
0000000000563900 0000000000000020 t emit_R16_UNORM
0000000000563920 0000000000000030 t emit_R16G16B16A16_SNORM
0000000000563950 000000000000003c t emit_R16G16B16_SNORM
0000000000563990 000000000000002c t emit_R16G16_SNORM
00000000005639c0 0000000000000020 t emit_R16_SNORM
00000000005639e0 0000000000000020 t emit_R8G8B8A8_USCALED
0000000000563a00 0000000000000028 t emit_R8G8B8_USCALED
0000000000563a30 000000000000001c t emit_R8G8_USCALED
0000000000563a50 0000000000000010 t emit_R8_USCALED
0000000000563a60 000000000000002c t emit_R8G8B8A8_UNORM
0000000000563a90 000000000000002c t emit_R8G8B8_UNORM
0000000000563ac0 000000000000002c t emit_R8G8_UNORM
0000000000563af0 000000000000001c t emit_R8_UNORM
0000000000563b10 000000000000002c t emit_R8G8B8A8_SNORM
0000000000563b40 000000000000002c t emit_R8G8B8_SNORM
0000000000563b70 000000000000002c t emit_R8G8_SNORM
0000000000563ba0 000000000000001c t emit_R8_SNORM
0000000000563bc0 000000000000001c t emit_R32G32B32A32_UINT
0000000000563be0 000000000000001c t emit_R32G32B32_UINT
0000000000563c00 0000000000000014 t emit_R32G32_UINT
0000000000563c20 000000000000000c t emit_R32_UINT
0000000000563c30 000000000000001c t emit_R16G16B16A16_UINT
0000000000563c50 0000000000000018 t emit_R16G16B16_UINT
0000000000563c70 0000000000000010 t emit_R16G16_UINT
0000000000563c80 000000000000000c t emit_R16_UINT
0000000000563c90 000000000000001c t emit_R8G8B8A8_UINT
0000000000563cb0 000000000000001c t emit_R8G8B8_UINT
0000000000563cd0 0000000000000014 t emit_R8G8_UINT
0000000000563cf0 000000000000000c t emit_R8_UINT
0000000000563d00 000000000000001c t emit_R32G32B32A32_SINT
0000000000563d20 000000000000001c t emit_R32G32B32_SINT
0000000000563d40 0000000000000014 t emit_R32G32_SINT
0000000000563d60 000000000000000c t emit_R32_SINT
0000000000563d70 000000000000001c t emit_R16G16B16A16_SINT
0000000000563d90 0000000000000018 t emit_R16G16B16_SINT
0000000000563db0 0000000000000010 t emit_R16G16_SINT
0000000000563dc0 000000000000000c t emit_R16_SINT
0000000000563dd0 000000000000001c t emit_R8G8B8A8_SINT
0000000000563df0 000000000000001c t emit_R8G8B8_SINT
0000000000563e10 0000000000000014 t emit_R8G8_SINT
0000000000563e30 000000000000000c t emit_R8_SINT
0000000000563e40 000000000000004c t emit_A8R8G8B8_UNORM
0000000000563e90 000000000000004c t emit_B8G8R8A8_UNORM
0000000000563ee0 0000000000000104 t emit_B10G10R10A2_UNORM
0000000000563ff0 00000000000000d0 t emit_B10G10R10A2_USCALED
00000000005640c0 0000000000000104 t emit_B10G10R10A2_SNORM
00000000005641d0 00000000000000e0 t emit_B10G10R10A2_SSCALED
00000000005642b0 0000000000000104 t emit_R10G10B10A2_UNORM
00000000005643c0 00000000000000d0 t emit_R10G10B10A2_USCALED
0000000000564490 0000000000000104 t emit_R10G10B10A2_SNORM
00000000005645a0 00000000000000e0 t emit_R10G10B10A2_SSCALED
0000000000564680 0000000000000004 t emit_NULL
0000000000564690 000000000000004c t generic_set_buffer
00000000005646e0 0000000000000004 t generic_release
00000000005646f0 0000000000000168 t generic_run_elts
0000000000564860 0000000000000168 t generic_run_elts16
00000000005649d0 0000000000000168 t generic_run_elts8
0000000000564b40 0000000000000160 t generic_run
0000000000564ca0 0000000000000044 t emit_R16G16B16A16_FLOAT
0000000000564cf0 0000000000000044 t emit_R16G16B16_FLOAT
0000000000564d40 0000000000000038 t emit_R16G16_FLOAT
0000000000564d80 0000000000000028 t emit_R16_FLOAT
0000000000564db0 0000000000000010 t emit_R8_SSCALED
0000000000564dc0 0000000000000020 t emit_R8G8B8A8_SSCALED
0000000000564de0 0000000000000028 t emit_R8G8B8_SSCALED
0000000000564e10 000000000000001c t emit_R8G8_SSCALED
0000000000564e30 0000000000000700 t translate_generic_create
0000000000565530 00000000000000c0 t util_draw_vertex_buffer
00000000005655f0 00000000000000a4 T u_default_buffer_subdata
00000000005656a0 00000000000000bc T u_default_texture_subdata
0000000000565760 0000000000000008 T u_default_resource_get_handle
0000000000565770 0000000000000004 T u_default_transfer_flush_region
0000000000565780 0000000000000018 T u_resource_get_handle_vtbl
00000000005657a0 0000000000000010 T u_resource_destroy_vtbl
00000000005657b0 0000000000000010 T u_transfer_map_vtbl
00000000005657c0 0000000000000014 T u_transfer_flush_region_vtbl
00000000005657e0 0000000000000014 T u_transfer_unmap_vtbl
0000000000565800 0000000000000008 t vl_create_decoder
0000000000565810 0000000000000008 t vl_video_buffer_is_format_supported
0000000000565820 0000000000000008 t vl_video_buffer_create
0000000000565830 0000000000000024 t nv50_miptree_get_handle
0000000000565860 00000000000000a4 T nv50_miptree_destroy
0000000000565910 00000000000000a0 t nv50_tex_choose_tile_dims_helper
00000000005659b0 0000000000000100 t nv50_miptree_init_layout_linear
0000000000565ab0 000000000000010c t nv50_miptree_from_handle
0000000000565bc0 000000000000014c t nv50_surface_from_miptree
0000000000565d10 0000000000000010 T nv50_invalidate_resource
0000000000565d20 0000000000000068 T nv50_surface_destroy
0000000000565d90 0000000000000158 t nv50_surface_from_buffer
0000000000565ef0 0000000000000384 T nv50_sampler_state_create
0000000000566280 0000000000000004 W nv50_ir::Iterator::reset()
0000000000566290 0000000000000008 W nv50_ir::Value::isUniform() const
00000000005662a0 0000000000000050 W nv50_ir::Target::parseDriverInfo(nv50_ir_prog_info const*)
00000000005662f0 0000000000000018 T nv50_ir::Symbol::isUniform() const
0000000000566310 0000000000000028 T nv50_ir::ImmediateValue::equals(nv50_ir::Value const*, bool) const
0000000000566340 0000000000000070 t _debug_printf
00000000005663b0 0000000000000058 T nv50_ir::Value::equals(nv50_ir::Value const*, bool) const
0000000000566410 0000000000000080 T nv50_ir::Symbol::equals(nv50_ir::Value const*, bool) const
0000000000566490 0000000000000094 t nv50_ir::Value::interfers(nv50_ir::Value const*) const [clone .part.0]
0000000000566530 00000000000000a8 T nv50_ir::Value::interfers(nv50_ir::Value const*) const
00000000005665e0 00000000000000c4 W nv50_ir::LValue::~LValue()
00000000005665e0 00000000000000c4 W nv50_ir::LValue::~LValue()
00000000005666b0 00000000000000c4 W nv50_ir::Symbol::~Symbol()
00000000005666b0 00000000000000c4 W nv50_ir::Symbol::~Symbol()
0000000000566780 00000000000000c4 W nv50_ir::ImmediateValue::~ImmediateValue()
0000000000566780 00000000000000c4 W nv50_ir::ImmediateValue::~ImmediateValue()
0000000000566850 00000000000000c0 W nv50_ir::LValue::~LValue()
0000000000566910 00000000000000c0 W nv50_ir::ImmediateValue::~ImmediateValue()
00000000005669d0 00000000000000c0 W nv50_ir::Symbol::~Symbol()
0000000000566a90 0000000000000198 T nv50_ir::LValue::isUniform() const
0000000000566c30 0000000000000048 t nv50_ir::Modifier::Modifier(nv50_ir::operation)
0000000000566c30 0000000000000048 T nv50_ir::Modifier::Modifier(nv50_ir::operation)
0000000000566c80 0000000000000034 t nv50_ir::Modifier::operator*(nv50_ir::Modifier) const
0000000000566cc0 00000000000001e8 t nv50_ir::ValueRef::getImmediate(nv50_ir::ImmediateValue&) const
0000000000566eb0 0000000000000060 t nv50_ir::ValueDef::ValueDef(nv50_ir::Value*)
0000000000566eb0 0000000000000060 T nv50_ir::ValueDef::ValueDef(nv50_ir::Value*)
0000000000566f10 000000000000005c t nv50_ir::ValueDef::ValueDef(nv50_ir::ValueDef const&)
0000000000566f10 000000000000005c T nv50_ir::ValueDef::ValueDef(nv50_ir::ValueDef const&)
0000000000566f70 00000000000000fc t nv50_ir::ValueDef::set(nv50_ir::Value*)
0000000000567070 0000000000000008 t nv50_ir::ValueDef::~ValueDef()
0000000000567070 0000000000000008 T nv50_ir::ValueDef::~ValueDef()
0000000000567080 000000000000010c t std::deque<nv50_ir::ValueDef, std::allocator<nv50_ir::ValueDef> >::_M_destroy_data_aux(std::_Deque_iterator<nv50_ir::ValueDef, nv50_ir::ValueDef&, nv50_ir::ValueDef*>, std::_Deque_iterator<nv50_ir::ValueDef, nv50_ir::ValueDef&, nv50_ir::ValueDef*>) [clone .isra.0]
0000000000567190 0000000000000214 t nv50_ir::ValueDef::mayReplace(nv50_ir::ValueRef const&)
00000000005673b0 000000000000005c T nv50_ir::Value::Value()
00000000005673b0 000000000000005c t nv50_ir::Value::Value()
0000000000567410 0000000000000144 t nv50_ir::LValue::LValue(nv50_ir::Function*, nv50_ir::DataFile)
0000000000567410 0000000000000144 T nv50_ir::LValue::LValue(nv50_ir::Function*, nv50_ir::DataFile)
0000000000567560 000000000000014c t nv50_ir::LValue::LValue(nv50_ir::Function*, nv50_ir::LValue*)
0000000000567560 000000000000014c T nv50_ir::LValue::LValue(nv50_ir::Function*, nv50_ir::LValue*)
00000000005676b0 000000000000012c t nv50_ir::Symbol::Symbol(nv50_ir::Program*, nv50_ir::DataFile, unsigned char)
00000000005676b0 000000000000012c T nv50_ir::Symbol::Symbol(nv50_ir::Program*, nv50_ir::DataFile, unsigned char)
00000000005677e0 000000000000013c t nv50_ir::ImmediateValue::ImmediateValue(nv50_ir::Program*, unsigned int)
00000000005677e0 000000000000013c T nv50_ir::ImmediateValue::ImmediateValue(nv50_ir::Program*, unsigned int)
0000000000567920 000000000000013c t nv50_ir::ImmediateValue::ImmediateValue(nv50_ir::Program*, float)
0000000000567920 000000000000013c T nv50_ir::ImmediateValue::ImmediateValue(nv50_ir::Program*, float)
0000000000567a60 0000000000000134 t nv50_ir::ImmediateValue::ImmediateValue(nv50_ir::Program*, double)
0000000000567a60 0000000000000134 T nv50_ir::ImmediateValue::ImmediateValue(nv50_ir::Program*, double)
0000000000567ba0 00000000000000e4 t nv50_ir::ImmediateValue::isInteger(int) const
0000000000567c90 0000000000000070 t nv50_ir::ImmediateValue::isNegative() const
0000000000567d00 0000000000000038 t nv50_ir::ImmediateValue::isPow2() const
0000000000567d40 00000000000000b4 t nv50_ir::ImmediateValue::applyLog2()
0000000000567e00 0000000000000134 t nv50_ir::ImmediateValue::compare(nv50_ir::CondCode, float) const
0000000000567f40 0000000000000340 t nv50_ir::Instruction::defCount(unsigned int, bool) const
0000000000568280 0000000000000340 t nv50_ir::Instruction::srcCount(unsigned int, bool) const
00000000005685c0 0000000000000408 t nv50_ir::Instruction::canCommuteDefSrc(nv50_ir::Instruction const*) const
00000000005689d0 0000000000000408 t nv50_ir::Instruction::canCommuteDefDef(nv50_ir::Instruction const*) const
0000000000568de0 0000000000000058 t nv50_ir::Instruction::isCommutationLegal(nv50_ir::Instruction const*) const
0000000000568e40 00000000000002b0 t nv50_ir::TexInstruction::translateImgFormat(pipe_format)
00000000005690f0 0000000000000134 t nv50_ir::Program::Program(nv50_ir::Program::Type, nv50_ir::Target*)
00000000005690f0 0000000000000134 T nv50_ir::Program::Program(nv50_ir::Program::Type, nv50_ir::Target*)
0000000000569230 00000000000000ac t nv50_ir::Program::releaseInstruction(nv50_ir::Instruction*)
00000000005692e0 0000000000000088 t nv50_ir::Program::releaseValue(nv50_ir::Value*)
0000000000569370 0000000000000114 t std::_Deque_base<nv50_ir::ValueDef, std::allocator<nv50_ir::ValueDef> >::_M_initialize_map(unsigned long)
0000000000569490 0000000000000114 t std::_Deque_base<nv50_ir::ValueRef, std::allocator<nv50_ir::ValueRef> >::_M_initialize_map(unsigned long)
00000000005695b0 0000000000000164 t nv50_ir::Instruction::Instruction(nv50_ir::Function*, nv50_ir::operation, nv50_ir::DataType)
00000000005695b0 0000000000000164 t nv50_ir::Instruction::Instruction(nv50_ir::Function*, nv50_ir::operation, nv50_ir::DataType)
0000000000569720 0000000000000038 t nv50_ir::CmpInstruction::CmpInstruction(nv50_ir::Function*, nv50_ir::operation)
0000000000569720 0000000000000038 T nv50_ir::CmpInstruction::CmpInstruction(nv50_ir::Function*, nv50_ir::operation)
0000000000569760 00000000000000c8 t nv50_ir::FlowInstruction::FlowInstruction(nv50_ir::Function*, nv50_ir::operation, void*)
0000000000569760 00000000000000c8 T nv50_ir::FlowInstruction::FlowInstruction(nv50_ir::Function*, nv50_ir::operation, void*)
0000000000569830 00000000000000ec t nv50_ir::TexInstruction::TexInstruction(nv50_ir::Function*, nv50_ir::operation)
0000000000569830 00000000000000ec T nv50_ir::TexInstruction::TexInstruction(nv50_ir::Function*, nv50_ir::operation)
0000000000569920 0000000000000340 t std::deque<nv50_ir::ValueDef, std::allocator<nv50_ir::ValueDef> >::_M_default_append(unsigned long)
0000000000569c60 0000000000000350 t nv50_ir::Instruction::setDef(int, nv50_ir::Value*)
0000000000569fb0 0000000000000348 t std::deque<nv50_ir::ValueRef, std::allocator<nv50_ir::ValueRef> >::_M_default_append(unsigned long)
000000000056a300 00000000000001b0 t std::_Hashtable<nv50_ir::ValueRef*, nv50_ir::ValueRef*, std::allocator<nv50_ir::ValueRef*>, std::__detail::_Identity, std::equal_to<nv50_ir::ValueRef*>, std::hash<nv50_ir::ValueRef*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<nv50_ir::ValueRef*, false>*, unsigned long)
000000000056a4b0 00000000000001c8 t nv50_ir::ValueRef::set(nv50_ir::Value*)
000000000056a680 0000000000000010 t nv50_ir::ValueRef::ValueRef(nv50_ir::Value*)
000000000056a680 0000000000000010 T nv50_ir::ValueRef::ValueRef(nv50_ir::Value*)
000000000056a690 0000000000000008 t nv50_ir::ValueRef::~ValueRef()
000000000056a690 0000000000000008 T nv50_ir::ValueRef::~ValueRef()
000000000056a6a0 0000000000000040 t nv50_ir::ValueRef::set(nv50_ir::ValueRef const&)
000000000056a6e0 00000000000000cc t nv50_ir::ValueDef::replace(nv50_ir::ValueRef const&, bool)
000000000056a7b0 000000000000010c t std::deque<nv50_ir::ValueRef, std::allocator<nv50_ir::ValueRef> >::_M_destroy_data_aux(std::_Deque_iterator<nv50_ir::ValueRef, nv50_ir::ValueRef&, nv50_ir::ValueRef*>, std::_Deque_iterator<nv50_ir::ValueRef, nv50_ir::ValueRef&, nv50_ir::ValueRef*>) [clone .isra.0]
000000000056a8c0 0000000000000350 t nv50_ir::Instruction::setSrc(int, nv50_ir::Value*)
000000000056ac10 00000000000000e8 t nv50_ir::Instruction::setSrc(int, nv50_ir::ValueRef const&)
000000000056ad00 0000000000000370 t nv50_ir::Instruction::setIndirect(int, int, nv50_ir::Value*)
000000000056b070 000000000000020c t nv50_ir::Instruction::setPredicate(nv50_ir::CondCode, nv50_ir::Value*)
000000000056b280 0000000000000074 t nv50_ir::Instruction::putExtraSources(int, nv50_ir::Value**)
000000000056b300 0000000000000154 t nv50_ir::TexInstruction::setIndirectR(nv50_ir::Value*)
000000000056b460 0000000000000154 t nv50_ir::TexInstruction::setIndirectS(nv50_ir::Value*)
000000000056b5c0 000000000000037c t nv50_ir::Instruction::swapSources(int, int)
000000000056b940 0000000000000714 t nv50_ir::Instruction::moveSources(int, int)
000000000056c060 000000000000052c t nv50_ir::Instruction::~Instruction()
000000000056c060 000000000000052c t nv50_ir::Instruction::~Instruction()
000000000056c590 0000000000000028 T nv50_ir::Instruction::~Instruction()
000000000056c5c0 00000000000000fc t nv50_ir::TexInstruction::~TexInstruction()
000000000056c5c0 00000000000000fc T nv50_ir::TexInstruction::~TexInstruction()
000000000056c6c0 0000000000000028 T nv50_ir::TexInstruction::~TexInstruction()
000000000056c6f0 0000000000000010 W nv50_ir::FlowInstruction::~FlowInstruction()
000000000056c6f0 0000000000000010 W nv50_ir::FlowInstruction::~FlowInstruction()
000000000056c700 0000000000000034 W nv50_ir::FlowInstruction::~FlowInstruction()
000000000056c740 0000000000000010 W nv50_ir::CmpInstruction::~CmpInstruction()
000000000056c740 0000000000000010 W nv50_ir::CmpInstruction::~CmpInstruction()
000000000056c750 0000000000000034 W nv50_ir::CmpInstruction::~CmpInstruction()
000000000056c790 0000000000000048 t nv50_ir::ValueRef::ValueRef(nv50_ir::ValueRef const&)
000000000056c790 0000000000000048 T nv50_ir::ValueRef::ValueRef(nv50_ir::ValueRef const&)
000000000056c7e0 00000000000003f0 t nv50_ir::Instruction::takeExtraSources(int, nv50_ir::Value**)
000000000056cbd0 00000000000000a8 W std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_get_insert_unique_pos(void const* const&)
000000000056cc80 0000000000000114 W std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<void const* const, void*> >, void const* const&)
000000000056cda0 00000000000000c0 t std::_Rb_tree_iterator<std::pair<void const* const, void*> > std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<void const* const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<void const* const, void*> >, std::piecewise_construct_t const&, std::tuple<void const* const&>&&, std::tuple<>&&) [clone .isra.0]
000000000056ce60 00000000000000ac W nv50_ir::DeepClonePolicy<nv50_ir::Function>::insert(void const*, void*)
000000000056cf10 00000000000000a0 W nv50_ir::DeepClonePolicy<nv50_ir::Function>::lookup(void*)
000000000056cfb0 00000000000002d8 T nv50_ir::ImmediateValue::clone(nv50_ir::ClonePolicy<nv50_ir::Function>&) const
000000000056d290 00000000000002e0 T nv50_ir::Symbol::clone(nv50_ir::ClonePolicy<nv50_ir::Function>&) const
000000000056d570 00000000000002f8 T nv50_ir::LValue::clone(nv50_ir::ClonePolicy<nv50_ir::Function>&) const
000000000056d870 0000000000000848 t nv50_ir::Instruction::clone(nv50_ir::ClonePolicy<nv50_ir::Function>&, nv50_ir::Instruction*) const
000000000056e0c0 0000000000000274 T nv50_ir::TexInstruction::clone(nv50_ir::ClonePolicy<nv50_ir::Function>&, nv50_ir::Instruction*) const
000000000056e340 000000000000017c T nv50_ir::CmpInstruction::clone(nv50_ir::ClonePolicy<nv50_ir::Function>&, nv50_ir::Instruction*) const
000000000056e4c0 00000000000002a8 T nv50_ir::FlowInstruction::clone(nv50_ir::ClonePolicy<nv50_ir::Function>&, nv50_ir::Instruction*) const
000000000056e770 0000000000000440 t nv50_ir::Program::~Program()
000000000056e770 0000000000000440 T nv50_ir::Program::~Program()
000000000056ebb0 00000000000002a4 t nv50_ir_generate_code
000000000056ee60 0000000000000008 W nv50_ir::Pass::visit(nv50_ir::Function*)
000000000056ee70 0000000000000008 W nv50_ir::Pass::visit(nv50_ir::BasicBlock*)
000000000056ee80 0000000000000008 W nv50_ir::Pass::visit(nv50_ir::Instruction*)
000000000056ee90 00000000000000f8 t std::deque<nv50_ir::ValueRef, std::allocator<nv50_ir::ValueRef> >::_M_destroy_data_aux(std::_Deque_iterator<nv50_ir::ValueRef, nv50_ir::ValueRef&, nv50_ir::ValueRef*>, std::_Deque_iterator<nv50_ir::ValueRef, nv50_ir::ValueRef&, nv50_ir::ValueRef*>) [clone .isra.0]
000000000056ef90 00000000000000f8 t std::deque<nv50_ir::ValueDef, std::allocator<nv50_ir::ValueDef> >::_M_destroy_data_aux(std::_Deque_iterator<nv50_ir::ValueDef, nv50_ir::ValueDef&, nv50_ir::ValueDef*>, std::_Deque_iterator<nv50_ir::ValueDef, nv50_ir::ValueDef&, nv50_ir::ValueDef*>) [clone .isra.0]
000000000056f090 000000000000027c t nv50_ir::Function::Function(nv50_ir::Program*, char const*, unsigned int)
000000000056f090 000000000000027c T nv50_ir::Function::Function(nv50_ir::Program*, char const*, unsigned int)
000000000056f310 000000000000012c t nv50_ir::BasicBlock::BasicBlock(nv50_ir::Function*)
000000000056f310 000000000000012c T nv50_ir::BasicBlock::BasicBlock(nv50_ir::Function*)
000000000056f440 000000000000002c t nv50_ir::BasicBlock::idom() const
000000000056f470 0000000000000068 t nv50_ir::BasicBlock::insertBefore(nv50_ir::Instruction*, nv50_ir::Instruction*)
000000000056f4e0 00000000000000a8 t nv50_ir::BasicBlock::insertHead(nv50_ir::Instruction*)
000000000056f590 00000000000000c0 t nv50_ir::BasicBlock::insertTail(nv50_ir::Instruction*)
000000000056f650 000000000000005c t nv50_ir::BasicBlock::insertAfter(nv50_ir::Instruction*, nv50_ir::Instruction*)
000000000056f6b0 00000000000000c8 t nv50_ir::BasicBlock::remove(nv50_ir::Instruction*)
000000000056f780 0000000000000088 t nv50_ir::BasicBlock::permuteAdjacent(nv50_ir::Instruction*, nv50_ir::Instruction*)
000000000056f810 00000000000000e8 t nv50_ir::BasicBlock::splitCommon(nv50_ir::Instruction*, nv50_ir::BasicBlock*, bool)
000000000056f900 0000000000000064 t nv50_ir::BasicBlock::splitBefore(nv50_ir::Instruction*, bool)
000000000056f970 000000000000006c t nv50_ir::BasicBlock::splitAfter(nv50_ir::Instruction*, bool)
000000000056f9e0 0000000000000050 t nv50_ir::BasicBlock::dominatedBy(nv50_ir::BasicBlock*)
000000000056fa30 0000000000000090 t nv50_ir::BasicBlock::initiatesSimpleConditional() const
000000000056fac0 000000000000002c t nv50_ir::Function::setEntry(nv50_ir::BasicBlock*)
000000000056faf0 0000000000000020 t nv50_ir::Function::setExit(nv50_ir::BasicBlock*)
000000000056fb10 0000000000000198 t nv50_ir::Function::orderInstructions(nv50_ir::ArrayList&)
000000000056fcb0 00000000000000d0 t nv50_ir::Function::buildLiveSets()
000000000056fd80 00000000000000d0 t nv50_ir::Function::buildDefSets()
000000000056fe50 0000000000000198 t nv50_ir::Pass::doRun(nv50_ir::Function*, bool, bool)
000000000056fff0 0000000000000010 t nv50_ir::Pass::run(nv50_ir::Function*, bool, bool)
0000000000570000 00000000000000d8 t nv50_ir::Pass::doRun(nv50_ir::Program*, bool, bool)
00000000005700e0 000000000000000c t nv50_ir::Pass::run(nv50_ir::Program*, bool, bool)
00000000005700f0 00000000000000c0 t std::_Rb_tree_iterator<std::pair<void const* const, void*> > std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<void const* const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<void const* const, void*> >, std::piecewise_construct_t const&, std::tuple<void const* const&>&&, std::tuple<>&&) [clone .isra.0]
00000000005701b0 0000000000000230 t nv50_ir::BasicBlock::clone(nv50_ir::ClonePolicy<nv50_ir::Function>&) const
00000000005703e0 0000000000000584 t nv50_ir::Function::~Function()
00000000005703e0 0000000000000584 T nv50_ir::Function::~Function()
0000000000570970 0000000000000008 t (anonymous namespace)::Converter::BindArgumentsPass::visit(nv50_ir::BasicBlock*)
0000000000570980 0000000000000070 t _debug_printf
00000000005709f0 000000000000006c t (anonymous namespace)::Converter::adjustTempIndex(int, int&, int&) const [clone .isra.0]
0000000000570a60 0000000000000140 t std::_Rb_tree<int, std::pair<int const, std::pair<int, int> >, std::_Select1st<std::pair<int const, std::pair<int, int> > >, std::less<int>, std::allocator<std::pair<int const, std::pair<int, int> > > >::_M_erase(std::_Rb_tree_node<std::pair<int const, std::pair<int, int> > >*) [clone .isra.0]
0000000000570ba0 0000000000000140 t std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_erase(std::_Rb_tree_node<std::pair<void const* const, void*> >*) [clone .isra.0]
0000000000570ce0 0000000000000140 t std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase(std::_Rb_tree_node<int>*) [clone .isra.0]
0000000000570e20 0000000000000140 t std::_Rb_tree<nv50_ir::BuildUtil::Location, nv50_ir::BuildUtil::Location, std::_Identity<nv50_ir::BuildUtil::Location>, std::less<nv50_ir::BuildUtil::Location>, std::allocator<nv50_ir::BuildUtil::Location> >::_M_erase(std::_Rb_tree_node<nv50_ir::BuildUtil::Location>*) [clone .isra.0]
0000000000570f60 0000000000000140 t std::_Rb_tree<nv50_ir::Value*, std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location>, std::_Select1st<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> >, std::less<nv50_ir::Value*>, std::allocator<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> > >::_M_erase(std::_Rb_tree_node<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> >*) [clone .isra.0]
00000000005710a0 0000000000000140 t std::_Rb_tree<nv50_ir::BuildUtil::Location, std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*>, std::_Select1st<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >, std::less<nv50_ir::BuildUtil::Location>, std::allocator<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> > >::_M_erase(std::_Rb_tree_node<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >*) [clone .isra.0]
00000000005711e0 0000000000000094 t std::_Rb_tree<unsigned int, std::pair<unsigned int const, nv50_ir::ConverterCommon::Subroutine>, std::_Select1st<std::pair<unsigned int const, nv50_ir::ConverterCommon::Subroutine> >, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, nv50_ir::ConverterCommon::Subroutine> > >::_M_erase(std::_Rb_tree_node<std::pair<unsigned int const, nv50_ir::ConverterCommon::Subroutine> >*) [clone .isra.0]
0000000000571280 0000000000000140 t std::_Rb_tree<int, std::pair<int const, int>, std::_Select1st<std::pair<int const, int> >, std::less<int>, std::allocator<std::pair<int const, int> > >::_M_erase(std::_Rb_tree_node<std::pair<int const, int> >*) [clone .isra.0]
00000000005713c0 0000000000000188 t (anonymous namespace)::Converter::shiftAddress(nv50_ir::Value*)
0000000000571550 00000000000002d4 t (anonymous namespace)::Converter::makeSym(unsigned int, int, int, int, unsigned int)
0000000000571830 000000000000008c t (anonymous namespace)::Converter::srcToSym(tgsi::Instruction::SrcRegister, int)
00000000005718c0 0000000000000258 t (anonymous namespace)::Converter::storeDst(tgsi::Instruction::DstRegister, int, nv50_ir::Value*, nv50_ir::Value*)
0000000000571b20 00000000000006a4 t (anonymous namespace)::Converter::handleFBFETCH(nv50_ir::Value**)
00000000005721d0 0000000000000114 t nv50_ir::MemoryPool::allocate()
00000000005722f0 0000000000000140 t nv50_ir::BuildUtil::getScratch(int, nv50_ir::DataFile)
0000000000572430 0000000000000154 t nv50_ir::BuildUtil::getSSA(int, nv50_ir::DataFile)
0000000000572590 0000000000000d60 t (anonymous namespace)::Converter::fetchSrc(tgsi::Instruction::SrcRegister, int, nv50_ir::Value*)
00000000005732f0 00000000000009a8 t (anonymous namespace)::Converter::fetchSrc(int, int)
0000000000573ca0 0000000000000204 t (anonymous namespace)::Converter::buildDot(int)
0000000000573eb0 00000000000001dc t nv50_ir::BuildUtil::mkOp(nv50_ir::operation, nv50_ir::DataType, nv50_ir::Value*)
0000000000574090 0000000000000058 t tgsi::Instruction::texOffsetMask() const
00000000005740f0 00000000000001e0 t tgsi::Instruction::srcMask(unsigned int) const
00000000005742d0 0000000000000198 t tgsi::Instruction::inferDstType() const
0000000000574470 0000000000000098 t tgsi::Instruction::getSetCond() const
0000000000574510 000000000000005c t tgsi::Instruction::checkDstSrcAliasing() const
0000000000574570 00000000000000a0 t tgsi::Source::Source(nv50_ir_prog_info*)
0000000000574570 00000000000000a0 T tgsi::Source::Source(nv50_ir_prog_info*)
0000000000574610 0000000000000148 t tgsi::Source::~Source()
0000000000574610 0000000000000148 T tgsi::Source::~Source()
0000000000574760 0000000000000184 t tgsi::Source::scanProperty(tgsi_full_property const*)
00000000005748f0 0000000000000050 t tgsi::Source::scanImmediate(tgsi_full_immediate const*)
0000000000574940 0000000000000084 t tgsi::Instruction::getTexture(tgsi::Source const*, int) const
00000000005749d0 0000000000000204 t (anonymous namespace)::Converter::setTexRS(nv50_ir::TexInstruction*, unsigned int&, int, int)
0000000000574be0 00000000000001f8 t (anonymous namespace)::Converter::handleTXQ(nv50_ir::Value**, nv50_ir::TexQuery, int)
0000000000574de0 00000000000003f4 t (anonymous namespace)::Converter::handleTXF(nv50_ir::Value**, int, int) [clone .constprop.0]
00000000005751e0 00000000000000e4 t std::_Rb_tree<nv50_ir::BuildUtil::Location, std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*>, std::_Select1st<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >, std::less<nv50_ir::BuildUtil::Location>, std::allocator<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> > >::find(nv50_ir::BuildUtil::Location const&) const
00000000005752d0 0000000000000190 t std::vector<tgsi::Source::TextureView, std::allocator<tgsi::Source::TextureView> >::_M_default_append(unsigned long)
0000000000575460 0000000000000188 W std::vector<int, std::allocator<int> >::_M_default_append(unsigned long)
00000000005755f0 0000000000000190 t std::vector<tgsi::Source::MemoryFile, std::allocator<tgsi::Source::MemoryFile> >::_M_default_append(unsigned long)
0000000000575780 0000000000000134 W std::pair<std::_Rb_tree_iterator<std::pair<int const, int> >, bool> std::_Rb_tree<int, std::pair<int const, int>, std::_Select1st<std::pair<int const, int> >, std::less<int>, std::allocator<std::pair<int const, int> > >::_M_emplace_unique<std::pair<int, int> >(std::pair<int, int>&&)
00000000005758c0 0000000000000188 t std::vector<nv50_ir::Value*, std::allocator<nv50_ir::Value*> >::_M_default_append(unsigned long)
0000000000575a50 00000000000005f0 W std::vector<bool, std::allocator<bool> >::_M_fill_insert(std::_Bit_iterator, unsigned long, bool)
0000000000576040 00000000000000a8 W std::_Rb_tree<int, std::pair<int const, std::pair<int, int> >, std::_Select1st<std::pair<int const, std::pair<int, int> > >, std::less<int>, std::allocator<std::pair<int const, std::pair<int, int> > > >::_M_get_insert_unique_pos(int const&)
00000000005760f0 0000000000000114 W std::_Rb_tree<int, std::pair<int const, std::pair<int, int> >, std::_Select1st<std::pair<int const, std::pair<int, int> > >, std::less<int>, std::allocator<std::pair<int const, std::pair<int, int> > > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<int const, std::pair<int, int> > >, int const&)
0000000000576210 00000000000000cc W std::pair<std::_Rb_tree_iterator<std::pair<int const, std::pair<int, int> > >, bool> std::_Rb_tree<int, std::pair<int const, std::pair<int, int> >, std::_Select1st<std::pair<int const, std::pair<int, int> > >, std::less<int>, std::allocator<std::pair<int const, std::pair<int, int> > > >::_M_emplace_unique<std::pair<int, std::pair<unsigned int, unsigned int> > >(std::pair<int, std::pair<unsigned int, unsigned int> >&&)
00000000005762e0 0000000000000aa4 t tgsi::Source::scanDeclaration(tgsi_full_declaration const*)
0000000000576d90 00000000000000a8 W std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_get_insert_unique_pos(int const&)
0000000000576e40 00000000000000bc W std::pair<std::_Rb_tree_iterator<int>, bool> std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_insert_unique<int>(int&&)
0000000000576f00 0000000000000278 t tgsi::Source::scanInstructionSrc(tgsi::Instruction const&, tgsi::Instruction::SrcRegister const&, unsigned int)
0000000000577180 00000000000004b4 t tgsi::Source::scanInstruction(tgsi_full_instruction const*)
0000000000577640 00000000000005a8 t tgsi::Source::scanSource()
0000000000577bf0 0000000000000128 t void std::vector<nv50_ir::Value*, std::allocator<nv50_ir::Value*> >::_M_realloc_insert<nv50_ir::Value*>(__gnu_cxx::__normal_iterator<nv50_ir::Value**, std::vector<nv50_ir::Value*, std::allocator<nv50_ir::Value*> > >, nv50_ir::Value*&&)
0000000000577d20 000000000000015c t (anonymous namespace)::Converter::getImageCoords(std::vector<nv50_ir::Value*, std::allocator<nv50_ir::Value*> >&, int)
0000000000577e80 0000000000000680 t (anonymous namespace)::Converter::handleLOAD(nv50_ir::Value**)
0000000000578500 0000000000000654 t (anonymous namespace)::Converter::handleSTORE()
0000000000578b60 00000000000000e4 t std::_Rb_tree<nv50_ir::BuildUtil::Location, nv50_ir::BuildUtil::Location, std::_Identity<nv50_ir::BuildUtil::Location>, std::less<nv50_ir::BuildUtil::Location>, std::allocator<nv50_ir::BuildUtil::Location> >::find(nv50_ir::BuildUtil::Location const&) const
0000000000578c50 0000000000000c04 t (anonymous namespace)::Converter::BindArgumentsPass::visit(nv50_ir::Function*)
0000000000579860 00000000000000c0 t std::_Rb_tree_iterator<std::pair<void const* const, void*> > std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<void const* const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<void const* const, void*> >, std::piecewise_construct_t const&, std::tuple<void const* const&>&&, std::tuple<>&&) [clone .isra.0]
0000000000579920 00000000000002a8 t nv50_ir::cloneForward(nv50_ir::Function*, nv50_ir::Instruction*)
0000000000579bd0 0000000000000e44 t (anonymous namespace)::Converter::handleTEX(nv50_ir::Value**, int, int, int, int, int, int)
000000000057aa20 0000000000008704 t nv50_ir::Program::makeFromTGSI(nv50_ir_prog_info*)
0000000000583130 0000000000000010 W nv50_ir::DFSIterator::end() const
0000000000583140 0000000000000018 W nv50_ir::DFSIterator::next()
0000000000583160 0000000000000010 W nv50_ir::DFSIterator::get() const
0000000000583170 0000000000000008 W nv50_ir::DFSIterator::reset()
0000000000583180 0000000000000010 W nv50_ir::CFGIterator::get() const
0000000000583190 0000000000000010 W nv50_ir::CFGIterator::end() const
00000000005831a0 0000000000000018 W nv50_ir::CFGIterator::next()
00000000005831c0 0000000000000008 W nv50_ir::CFGIterator::reset()
00000000005831d0 0000000000000010 W nv50_ir::CFGIterator::~CFGIterator()
00000000005831d0 0000000000000010 W nv50_ir::CFGIterator::~CFGIterator()
00000000005831e0 0000000000000030 W nv50_ir::CFGIterator::~CFGIterator()
0000000000583210 0000000000000010 W nv50_ir::DFSIterator::~DFSIterator()
0000000000583210 0000000000000010 W nv50_ir::DFSIterator::~DFSIterator()
0000000000583220 0000000000000030 W nv50_ir::DFSIterator::~DFSIterator()
0000000000583250 0000000000000078 t _debug_printf.constprop.0
00000000005832d0 0000000000000014 t nv50_ir::Graph::Graph()
00000000005832d0 0000000000000014 t nv50_ir::Graph::Graph()
00000000005832f0 0000000000000034 t nv50_ir::Graph::insert(nv50_ir::Graph::Node*)
0000000000583330 0000000000000094 t nv50_ir::Graph::Edge::unlink()
00000000005833d0 0000000000000010 t nv50_ir::Graph::Node::Node(void*)
00000000005833d0 0000000000000010 t nv50_ir::Graph::Node::Node(void*)
00000000005833e0 000000000000006c t nv50_ir::Graph::Node::detach(nv50_ir::Graph::Node*)
0000000000583450 0000000000000088 t nv50_ir::Graph::Node::cut()
00000000005834e0 00000000000004b8 t nv50_ir::DFSIterator::search(nv50_ir::Graph::Node*, bool, int)
00000000005839a0 0000000000000114 t nv50_ir::Graph::iteratorDFS(bool)
0000000000583ac0 0000000000000078 t nv50_ir::Graph::~Graph()
0000000000583ac0 0000000000000078 t nv50_ir::Graph::~Graph()
0000000000583b40 0000000000000028 T nv50_ir::Graph::~Graph()
0000000000583b70 000000000000024c t nv50_ir::CFGIterator::search(nv50_ir::Graph::Node*, int)
0000000000583dc0 00000000000000e4 t nv50_ir::Graph::iteratorCFG()
0000000000583eb0 0000000000000118 t nv50_ir::Graph::classifyDFS(nv50_ir::Graph::Node*, int&)
0000000000583fd0 00000000000000a8 t nv50_ir::Graph::classifyEdges()
0000000000584080 0000000000000114 t nv50_ir::Graph::Node::attach(nv50_ir::Graph::Node*, nv50_ir::Graph::Edge::Type)
00000000005841a0 00000000000002b0 t nv50_ir::Graph::findLightestPathWeight(nv50_ir::Graph::Node*, nv50_ir::Graph::Node*, std::vector<int, std::allocator<int> > const&)
0000000000584450 0000000000000008 W nv50_ir::Target::isPostMultiplySupported(nv50_ir::operation, float, int&) const
0000000000584460 0000000000000040 T nv50_ir::FlatteningPass::visit(nv50_ir::Function*)
00000000005844a0 0000000000000008 W nv50_ir::ShallowClonePolicy<nv50_ir::Function>::lookup(void*)
00000000005844b0 0000000000000004 W nv50_ir::ShallowClonePolicy<nv50_ir::Function>::insert(void const*, void*)
00000000005844c0 00000000000001b8 t nv50_ir::Instruction::isActionEqual(nv50_ir::Instruction const*) const [clone .part.0]
0000000000584680 0000000000000078 t _debug_printf.constprop.0
0000000000584700 0000000000000140 t std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_erase(std::_Rb_tree_node<std::pair<void const* const, void*> >*) [clone .isra.0]
0000000000584840 000000000000012c t nv50_ir::post_ra_dead(nv50_ir::Instruction*)
0000000000584970 00000000000000c4 W nv50_ir::Value::~Value()
0000000000584970 00000000000000c4 t nv50_ir::Value::~Value()
0000000000584a40 00000000000000c0 W nv50_ir::Value::~Value()
0000000000584b00 0000000000000058 t nv50_ir::Value::getUniqueInsn() const
0000000000584b60 00000000000000b8 t nv50_ir::Instruction::getPredicate() const
0000000000584c20 0000000000000190 t nv50_ir::Instruction::isDead() const
0000000000584db0 000000000000010c t nv50_ir::Modifier::applyTo(nv50_ir::ImmediateValue&) const
0000000000584ec0 00000000000001b4 W nv50_ir::Value::Value(nv50_ir::Value const&)
0000000000584ec0 00000000000001b4 t nv50_ir::Value::Value(nv50_ir::Value const&)
0000000000585080 0000000000000098 t nv50_ir::ConstantFolding::opnd3(nv50_ir::Instruction*, nv50_ir::ImmediateValue&)
0000000000585120 0000000000000078 t nv50_ir::MemoryOpt::reset()
00000000005851a0 000000000000014c t nv50_ir::MemoryOpt::getList(nv50_ir::Instruction const*)
00000000005852f0 0000000000000148 t nv50_ir::FlatteningPass::tryPropagateBranch(nv50_ir::BasicBlock*)
0000000000585440 00000000000005c0 t nv50_ir::Program::optimizeSSA(int)
0000000000585a00 000000000000007c t nv50_ir::Program::optimizePostRA(int)
0000000000585a80 0000000000000098 t std::_Deque_iterator<nv50_ir::ValueRef, nv50_ir::ValueRef&, nv50_ir::ValueRef*>::operator[](long) const
0000000000585b20 00000000000001a8 t nv50_ir::AlgebraicOpt::handleSLCT(nv50_ir::Instruction*)
0000000000585cd0 0000000000000150 t nv50_ir::updateLdStOffset(nv50_ir::Instruction*, int, nv50_ir::Function*)
0000000000585e20 0000000000000088 t nv50_ir::Instruction::srcExists(unsigned int) const
0000000000585eb0 0000000000000068 t nv50_ir::LoadPropagation::isAttribOrSharedLoad(nv50_ir::Instruction*)
0000000000585f20 0000000000000294 t nv50_ir::ConstantFolding::expr(nv50_ir::Instruction*, nv50_ir::ImmediateValue&, nv50_ir::ImmediateValue&, nv50_ir::ImmediateValue&)
00000000005861c0 00000000000001a0 t nv50_ir::ConstantFolding::unary(nv50_ir::Instruction*, nv50_ir::ImmediateValue const&)
0000000000586360 0000000000000398 t nv50_ir::ConstantFolding::createMul(nv50_ir::DataType, nv50_ir::Value*, nv50_ir::Value*, long, nv50_ir::Value*)
0000000000586700 000000000000029c t nv50_ir::AlgebraicOpt::handleABS(nv50_ir::Instruction*)
00000000005869a0 000000000000020c t nv50_ir::AlgebraicOpt::handleRCP(nv50_ir::Instruction*)
0000000000586bb0 00000000000001c4 t nv50_ir::AlgebraicOpt::handleCVT_CVT(nv50_ir::Instruction*)
0000000000586d80 00000000000000e0 t nv50_ir::LoadPropagation::isImmdLoad(nv50_ir::Instruction*)
0000000000586e60 000000000000083c T nv50_ir::IndirectPropagation::visit(nv50_ir::BasicBlock*)
00000000005876a0 00000000000001d0 t nv50_ir::ConstantFolding::findOriginForTestWithZero(nv50_ir::Value*)
0000000000587870 00000000000004f8 t nv50_ir::AlgebraicOpt::tryADDToMADOrSAD(nv50_ir::Instruction*, nv50_ir::operation)
0000000000587d70 00000000000001d8 t nv50_ir::AlgebraicOpt::handleADD(nv50_ir::Instruction*)
0000000000587f50 000000000000044c t nv50_ir::AlgebraicOpt::handleCVT_EXTBF(nv50_ir::Instruction*)
00000000005883a0 0000000000000304 t nv50_ir::AlgebraicOpt::handleSUCLAMP(nv50_ir::Instruction*)
00000000005886b0 00000000000002d0 t nv50_ir::LateAlgebraicOpt::tryADDToSHLADD(nv50_ir::Instruction*)
0000000000588980 0000000000000188 t nv50_ir::LateAlgebraicOpt::handleADD(nv50_ir::Instruction*)
0000000000588b10 00000000000001cc t nv50_ir::MemoryOpt::addRecord(nv50_ir::Instruction*)
0000000000588ce0 0000000000000258 t nv50_ir::MemoryOpt::Record::overlaps(nv50_ir::Instruction const*) const
0000000000588f40 0000000000000104 t nv50_ir::MemoryOpt::lockStores(nv50_ir::Instruction*)
0000000000589050 0000000000000178 t nv50_ir::MemoryOpt::purgeRecords(nv50_ir::Instruction*, nv50_ir::DataFile)
00000000005891d0 00000000000004cc t nv50_ir::MemoryOpt::combineSt(nv50_ir::MemoryOpt::Record*, nv50_ir::Instruction*)
00000000005896a0 00000000000002cc t nv50_ir::MemoryOpt::findRecord(nv50_ir::Instruction const*, bool, bool&) const
0000000000589970 0000000000000134 t nv50_ir::FlatteningPass::removeFlow(nv50_ir::Instruction*)
0000000000589ab0 0000000000000714 t nv50_ir::MemoryOpt::replaceStFromSt(nv50_ir::Instruction*, nv50_ir::MemoryOpt::Record*)
000000000058a1d0 0000000000000348 t nv50_ir::LoadPropagation::checkSwapSrc01(nv50_ir::Instruction*)
000000000058a520 00000000000004e0 T nv50_ir::LoadPropagation::visit(nv50_ir::BasicBlock*)
000000000058aa00 0000000000000260 t nv50_ir::LateAlgebraicOpt::handleMULMAD(nv50_ir::Instruction*) [clone .part.0]
000000000058ac60 000000000000008c T nv50_ir::LateAlgebraicOpt::visit(nv50_ir::Instruction*)
000000000058acf0 0000000000000248 t nv50_ir::FlatteningPass::isConstantCondition(nv50_ir::Value*)
000000000058af40 0000000000000098 t std::_Deque_iterator<nv50_ir::ValueDef, nv50_ir::ValueDef&, nv50_ir::ValueDef*>::operator[](long) const
000000000058afe0 0000000000000088 t nv50_ir::Instruction::defExists(unsigned int) const
000000000058b070 0000000000000444 T nv50_ir::ModifierFolding::visit(nv50_ir::BasicBlock*)
000000000058b4c0 00000000000002a4 t nv50_ir::AlgebraicOpt::handleCVT_NEG(nv50_ir::Instruction*)
000000000058b770 0000000000000398 t nv50_ir::Split64BitOpPreRA::split64MulMad(nv50_ir::Function*, nv50_ir::Instruction*, nv50_ir::DataType)
000000000058bb10 0000000000000078 T nv50_ir::Split64BitOpPreRA::visit(nv50_ir::BasicBlock*)
000000000058bb90 0000000000000520 t nv50_ir::MemoryOpt::combineLd(nv50_ir::MemoryOpt::Record*, nv50_ir::Instruction*)
000000000058c0b0 00000000000001b4 t nv50_ir::Instruction::isNop() const
000000000058c270 0000000000000184 t nv50_ir::FlatteningPass::predicateInstructions(nv50_ir::BasicBlock*, nv50_ir::Value*, nv50_ir::CondCode)
000000000058c400 00000000000001ec T nv50_ir::CopyPropagation::visit(nv50_ir::BasicBlock*)
000000000058c5f0 00000000000001d4 T nv50_ir::MergeSplits::visit(nv50_ir::BasicBlock*)
000000000058c7d0 000000000000023c t nv50_ir::AlgebraicOpt::handleMINMAX(nv50_ir::Instruction*)
000000000058ca10 00000000000003f8 t nv50_ir::ConstantFolding::tryCollapseChainedMULs(nv50_ir::Instruction*, int, nv50_ir::ImmediateValue&)
000000000058ce10 00000000000028b8 t nv50_ir::ConstantFolding::opnd(nv50_ir::Instruction*, nv50_ir::ImmediateValue&, int)
000000000058f6d0 00000000000002e0 t nv50_ir::AlgebraicOpt::handleNEG(nv50_ir::Instruction*)
000000000058f9b0 0000000000000278 t nv50_ir::AlgebraicOpt::handleEXTBF_RDSV(nv50_ir::Instruction*)
000000000058fc30 0000000000000328 t nv50_ir::PostRaLoadPropagation::handleMADforNV50(nv50_ir::Instruction*)
000000000058ff60 0000000000000294 t nv50_ir::PostRaLoadPropagation::handleMADforNVC0(nv50_ir::Instruction*)
0000000000590200 0000000000000054 T nv50_ir::PostRaLoadPropagation::visit(nv50_ir::Instruction*)
0000000000590260 0000000000000930 t nv50_ir::ConstantFolding::expr(nv50_ir::Instruction*, nv50_ir::ImmediateValue&, nv50_ir::ImmediateValue&)
0000000000590b90 00000000000005e8 T nv50_ir::ConstantFolding::visit(nv50_ir::BasicBlock*)
0000000000591180 0000000000000578 t nv50_ir::MemoryOpt::replaceLdFromSt(nv50_ir::Instruction*, nv50_ir::MemoryOpt::Record*)
0000000000591700 00000000000005a0 t nv50_ir::MemoryOpt::replaceLdFromLd(nv50_ir::Instruction*, nv50_ir::MemoryOpt::Record*)
0000000000591ca0 000000000000044c t nv50_ir::MemoryOpt::runOpt(nv50_ir::BasicBlock*)
00000000005920f0 0000000000000044 T nv50_ir::MemoryOpt::visit(nv50_ir::BasicBlock*)
0000000000592140 000000000000060c t nv50_ir::FlatteningPass::tryPredicateConditional(nv50_ir::BasicBlock*)
0000000000592750 000000000000015c T nv50_ir::FlatteningPass::visit(nv50_ir::BasicBlock*)
00000000005928b0 0000000000000910 t nv50_ir::DeadCodeElim::checkSplitLoad(nv50_ir::Instruction*)
00000000005931c0 00000000000002bc T nv50_ir::DeadCodeElim::visit(nv50_ir::BasicBlock*)
0000000000593480 0000000000000654 t nv50_ir::Instruction::isResultEqual(nv50_ir::Instruction const*) const
0000000000593ae0 000000000000040c T nv50_ir::GlobalCSE::visit(nv50_ir::BasicBlock*)
0000000000593ef0 00000000000008f8 T nv50_ir::LocalCSE::visit(nv50_ir::BasicBlock*)
00000000005947f0 00000000000000c0 t std::_Rb_tree_iterator<std::pair<void const* const, void*> > std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<void const* const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<void const* const, void*> >, std::piecewise_construct_t const&, std::tuple<void const* const&>&&, std::tuple<>&&) [clone .isra.0]
00000000005948b0 000000000000049c t nv50_ir::AlgebraicOpt::handleLOGOP(nv50_ir::Instruction*)
0000000000594d50 00000000000001b0 T nv50_ir::AlgebraicOpt::visit(nv50_ir::BasicBlock*)
0000000000594f00 0000000000000070 t _debug_printf
0000000000594f70 0000000000000174 t nv50_ir::Modifier::print(char*, unsigned long) const
00000000005950f0 00000000000001e4 T nv50_ir::LValue::print(char*, unsigned long, nv50_ir::DataType) const
00000000005952e0 0000000000000230 T nv50_ir::ImmediateValue::print(char*, unsigned long, nv50_ir::DataType) const
0000000000595510 0000000000000270 t nv50_ir::Symbol::print(char*, unsigned long, nv50_ir::Value*, nv50_ir::Value*, nv50_ir::DataType) const
0000000000595780 0000000000000010 T nv50_ir::Symbol::print(char*, unsigned long, nv50_ir::DataType) const
0000000000595790 0000000000001420 t nv50_ir::Instruction::print() const
0000000000596bb0 0000000000000040 t nv50_ir::value_cmp(nv50_ir::ValueRef*, nv50_ir::ValueRef*)
0000000000596bf0 0000000000000070 t _debug_printf
0000000000596c60 0000000000000168 t nv50_ir::RegAlloc::InsertConstraintsPass::isScalarTexGM107(nv50_ir::TexInstruction*) [clone .part.0]
0000000000596dd0 00000000000001d8 t nv50_ir::GCRA::checkInterference(nv50_ir::GCRA::RIG_Node const*, nv50_ir::Graph::EdgeIterator&) [clone .isra.0]
0000000000596fb0 0000000000000134 t nv50_ir::isShortRegOp(nv50_ir::Instruction*) [clone .part.0]
00000000005970f0 00000000000000a0 t nv50_ir::RegisterSet::init(nv50_ir::Target const*)
0000000000597190 0000000000000068 t nv50_ir::RegisterSet::RegisterSet(nv50_ir::Target const*)
0000000000597190 0000000000000068 T nv50_ir::RegisterSet::RegisterSet(nv50_ir::Target const*)
0000000000597200 0000000000000074 t nv50_ir::RegisterSet::testOccupy(nv50_ir::DataFile, int, unsigned int)
0000000000597280 0000000000001304 T nv50_ir::RegAlloc::ArgumentMovesPass::visit(nv50_ir::BasicBlock*)
0000000000598590 00000000000000a0 t nv50_ir::RegAlloc::BuildIntervalsPass::addLiveRange(nv50_ir::Value*, nv50_ir::BasicBlock const*, int)
0000000000598630 00000000000005c4 t nv50_ir::RegAlloc::buildLiveSets(nv50_ir::BasicBlock*)
0000000000598c00 00000000000000d4 t nv50_ir::RegAlloc::BuildIntervalsPass::collectLiveValues(nv50_ir::BasicBlock*)
0000000000598ce0 000000000000097c T nv50_ir::RegAlloc::BuildIntervalsPass::visit(nv50_ir::BasicBlock*)
0000000000599660 0000000000000310 t nv50_ir::GCRA::RIG_Node::init(nv50_ir::RegisterSet const&, nv50_ir::LValue*)
0000000000599970 000000000000034c t nv50_ir::GCRA::coalesceValues(nv50_ir::Value*, nv50_ir::Value*, bool)
0000000000599cc0 0000000000000428 t nv50_ir::GCRA::makeCompound(nv50_ir::Instruction*, bool)
000000000059a0f0 0000000000000178 t nv50_ir::GCRA::GCRA(nv50_ir::Function*, nv50_ir::SpillCodeInserter&)
000000000059a0f0 0000000000000178 T nv50_ir::GCRA::GCRA(nv50_ir::Function*, nv50_ir::SpillCodeInserter&)
000000000059a270 0000000000000570 t nv50_ir::GCRA::buildRIG(nv50_ir::ArrayList&)
000000000059a7e0 000000000000018c t nv50_ir::GCRA::calculateSpillWeights()
000000000059a970 0000000000000098 t nv50_ir::GCRA::simplifyEdge(nv50_ir::GCRA::RIG_Node*, nv50_ir::GCRA::RIG_Node*)
000000000059aa10 0000000000000270 t nv50_ir::GCRA::simplifyNode(nv50_ir::GCRA::RIG_Node*)
000000000059ac80 0000000000000144 t nv50_ir::GCRA::simplify()
000000000059add0 0000000000000370 t nv50_ir::SpillCodeInserter::assignSlot(nv50_ir::Interval const&, unsigned int)
000000000059b140 0000000000000348 t nv50_ir::GCRA::selectRegisters()
000000000059b490 0000000000000080 t nv50_ir::SpillCodeInserter::offsetSlot(nv50_ir::Value*, nv50_ir::LValue const*)
000000000059b510 0000000000000770 t nv50_ir::SpillCodeInserter::spill(nv50_ir::Instruction*, nv50_ir::Value*, nv50_ir::LValue*)
000000000059bc80 000000000000075c t nv50_ir::SpillCodeInserter::unspill(nv50_ir::Instruction*, nv50_ir::LValue*, nv50_ir::Value*)
000000000059c3e0 000000000000056c t nv50_ir::GCRA::resolveSplitsAndMerges()
000000000059c950 0000000000000328 t nv50_ir::GCRA::cleanup(bool)
000000000059cc80 00000000000001a0 t nv50_ir::RegAlloc::InsertConstraintsPass::textureMask(nv50_ir::TexInstruction*)
000000000059ce20 0000000000000154 t nv50_ir::RegAlloc::InsertConstraintsPass::addHazard(nv50_ir::Instruction*, nv50_ir::ValueRef const*)
000000000059cf80 00000000000007dc t nv50_ir::RegAlloc::InsertConstraintsPass::condenseDefs(nv50_ir::Instruction*, int, int)
000000000059d760 0000000000000138 t nv50_ir::RegAlloc::InsertConstraintsPass::condenseDefs(nv50_ir::Instruction*)
000000000059d8a0 0000000000000584 t nv50_ir::RegAlloc::InsertConstraintsPass::condenseSrcs(nv50_ir::Instruction*, int, int)
000000000059de30 0000000000000114 t nv50_ir::RegAlloc::InsertConstraintsPass::handleScalarTexGM107(nv50_ir::TexInstruction*)
000000000059df50 00000000000004e8 t nv50_ir::RegAlloc::InsertConstraintsPass::texConstraintGM107(nv50_ir::TexInstruction*)
000000000059e440 0000000000000398 t nv50_ir::RegAlloc::InsertConstraintsPass::texConstraintNVE0(nv50_ir::TexInstruction*)
000000000059e7e0 00000000000001c0 t nv50_ir::RegAlloc::InsertConstraintsPass::texConstraintNVC0(nv50_ir::TexInstruction*)
000000000059e9a0 0000000000000d04 t nv50_ir::GCRA::doCoalesce(nv50_ir::ArrayList&, unsigned int)
000000000059f6b0 0000000000000110 t nv50_ir::GCRA::coalesce(nv50_ir::ArrayList&)
000000000059f7c0 0000000000000c04 t nv50_ir::RegAlloc::InsertConstraintsPass::insertConstraintMove(nv50_ir::Instruction*, int)
00000000005a03d0 00000000000004cc t nv50_ir::RegAlloc::InsertConstraintsPass::insertConstraintMoves()
00000000005a08a0 0000000000000090 t nv50_ir::RegAlloc::InsertConstraintsPass::exec(nv50_ir::Function*)
00000000005a0930 00000000000008dc t nv50_ir::RegAlloc::InsertConstraintsPass::texConstraintNV50(nv50_ir::TexInstruction*)
00000000005a1210 0000000000000450 T nv50_ir::RegAlloc::InsertConstraintsPass::visit(nv50_ir::BasicBlock*)
00000000005a1660 000000000000006c W std::_Deque_base<nv50_ir::BasicBlock*, std::allocator<nv50_ir::BasicBlock*> >::~_Deque_base()
00000000005a1660 000000000000006c t std::_Deque_base<nv50_ir::BasicBlock*, std::allocator<nv50_ir::BasicBlock*> >::~_Deque_base()
00000000005a16d0 000000000000007c t std::_Hashtable<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*>, std::pair<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*> const, nv50_ir::Value*>, std::allocator<std::pair<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*> const, nv50_ir::Value*> >, std::__detail::_Select1st, std::equal_to<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*> >, nv50_ir::PhiMapHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*> const&, unsigned long) const
00000000005a1750 0000000000000244 t std::pair<std::__detail::_Node_iterator<std::pair<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*> const, nv50_ir::Value*>, false, true>, bool> std::_Hashtable<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*>, std::pair<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*> const, nv50_ir::Value*>, std::allocator<std::pair<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*> const, nv50_ir::Value*> >, std::__detail::_Select1st, std::equal_to<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*> >, nv50_ir::PhiMapHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_emplace<std::pair<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*>, nv50_ir::Value*> >(std::integral_constant<bool, true>, std::pair<std::pair<nv50_ir::Instruction*, nv50_ir::BasicBlock*>, nv50_ir::Value*>&&) [clone .isra.0]
00000000005a19a0 0000000000000710 t nv50_ir::RegAlloc::PhiMovesPass::splitEdges(nv50_ir::BasicBlock*)
00000000005a20b0 000000000000065c T nv50_ir::RegAlloc::PhiMovesPass::visit(nv50_ir::BasicBlock*)
00000000005a2710 00000000000000d0 t void std::__insertion_sort<__gnu_cxx::__normal_iterator<nv50_ir::ValueRef**, std::vector<nv50_ir::ValueRef*, std::allocator<nv50_ir::ValueRef*> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(nv50_ir::ValueRef*, nv50_ir::ValueRef*)> >(__gnu_cxx::__normal_iterator<nv50_ir::ValueRef**, std::vector<nv50_ir::ValueRef*, std::allocator<nv50_ir::ValueRef*> > >, __gnu_cxx::__normal_iterator<nv50_ir::ValueRef**, std::vector<nv50_ir::ValueRef*, std::allocator<nv50_ir::ValueRef*> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(nv50_ir::ValueRef*, nv50_ir::ValueRef*)>)
00000000005a27e0 0000000000000180 t void std::__adjust_heap<__gnu_cxx::__normal_iterator<nv50_ir::ValueRef**, std::vector<nv50_ir::ValueRef*, std::allocator<nv50_ir::ValueRef*> > >, long, nv50_ir::ValueRef*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(nv50_ir::ValueRef*, nv50_ir::ValueRef*)> >(__gnu_cxx::__normal_iterator<nv50_ir::ValueRef**, std::vector<nv50_ir::ValueRef*, std::allocator<nv50_ir::ValueRef*> > >, long, long, nv50_ir::ValueRef*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(nv50_ir::ValueRef*, nv50_ir::ValueRef*)>)
00000000005a2960 0000000000000208 t void std::__introsort_loop<__gnu_cxx::__normal_iterator<nv50_ir::ValueRef**, std::vector<nv50_ir::ValueRef*, std::allocator<nv50_ir::ValueRef*> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(nv50_ir::ValueRef*, nv50_ir::ValueRef*)> >(__gnu_cxx::__normal_iterator<nv50_ir::ValueRef**, std::vector<nv50_ir::ValueRef*, std::allocator<nv50_ir::ValueRef*> > >, __gnu_cxx::__normal_iterator<nv50_ir::ValueRef**, std::vector<nv50_ir::ValueRef*, std::allocator<nv50_ir::ValueRef*> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(nv50_ir::ValueRef*, nv50_ir::ValueRef*)>)
00000000005a2b70 00000000000006f4 t nv50_ir::SpillCodeInserter::run(std::__cxx11::list<std::pair<nv50_ir::Value*, nv50_ir::Value*>, std::allocator<std::pair<nv50_ir::Value*, nv50_ir::Value*> > > const&)
00000000005a3270 00000000000004e4 t nv50_ir::GCRA::allocateRegisters(nv50_ir::ArrayList&)
00000000005a3760 0000000000000230 t nv50_ir::GCRA::~GCRA()
00000000005a3760 0000000000000230 T nv50_ir::GCRA::~GCRA()
00000000005a3990 00000000000003d4 t nv50_ir::RegAlloc::execFunc()
00000000005a3d70 00000000000000d4 t nv50_ir::RegAlloc::exec()
00000000005a3e50 000000000000005c t nv50_ir::Program::registerAllocation()
00000000005a3eb0 0000000000000010 W nv50_ir::DominatorTree::~DominatorTree()
00000000005a3eb0 0000000000000010 W nv50_ir::DominatorTree::~DominatorTree()
00000000005a3ec0 0000000000000034 W nv50_ir::DominatorTree::~DominatorTree()
00000000005a3f00 0000000000000090 t nv50_ir::DominatorTree::buildDFS(nv50_ir::Graph::Node*)
00000000005a3f90 00000000000000ac t nv50_ir::DominatorTree::squash(int)
00000000005a4040 000000000000036c t nv50_ir::DominatorTree::build()
00000000005a43b0 0000000000000154 t nv50_ir::DominatorTree::DominatorTree(nv50_ir::Graph*)
00000000005a43b0 0000000000000154 T nv50_ir::DominatorTree::DominatorTree(nv50_ir::Graph*)
00000000005a4510 000000000000017c t nv50_ir::DominatorTree::findDominanceFrontiers()
00000000005a4690 00000000000004e8 t nv50_ir::Function::buildLiveSetsPreSSA(nv50_ir::BasicBlock*, int)
00000000005a4b80 00000000000001e0 t nv50_ir::Function::buildDefSetsPreSSA(nv50_ir::BasicBlock*, int)
00000000005a4d60 0000000000000078 t nv50_ir::RenamePass::RenamePass(nv50_ir::Function*)
00000000005a4d60 0000000000000078 T nv50_ir::RenamePass::RenamePass(nv50_ir::Function*)
00000000005a4de0 0000000000000074 t nv50_ir::RenamePass::~RenamePass()
00000000005a4de0 0000000000000074 T nv50_ir::RenamePass::~RenamePass()
00000000005a4e60 00000000000002f8 t nv50_ir::RenamePass::mkUndefined(nv50_ir::Value*)
00000000005a5160 0000000000000dac t nv50_ir::RenamePass::search(nv50_ir::BasicBlock*)
00000000005a5f10 0000000000000544 t nv50_ir::Function::convertToSSA()
00000000005a6460 00000000000000a4 t nv50_ir::Program::convertToSSA()
00000000005a6510 0000000000000070 t _debug_printf
00000000005a6580 00000000000000c0 t nv50_ir::CodeEmitter::prepareEmission(nv50_ir::Function*)
00000000005a6640 0000000000000390 T nv50_ir::CodeEmitter::prepareEmission(nv50_ir::BasicBlock*)
00000000005a69d0 0000000000000164 T nv50_ir::CodeEmitter::prepareEmission(nv50_ir::Program*)
00000000005a6b40 0000000000000048 t nv50_ir::Target::create(unsigned int)
00000000005a6b90 0000000000000018 t nv50_ir::Target::destroy(nv50_ir::Target*)
00000000005a6bb0 0000000000000014 T nv50_ir::CodeEmitter::CodeEmitter(nv50_ir::Target const*)
00000000005a6bb0 0000000000000014 t nv50_ir::CodeEmitter::CodeEmitter(nv50_ir::Target const*)
00000000005a6bd0 00000000000000ec t nv50_ir::Program::emitSymbolTable(nv50_ir_prog_info*)
00000000005a6cc0 000000000000023c t nv50_ir::Program::emitBinary(nv50_ir_prog_info*)
00000000005a6f00 00000000000000fc t nv50_ir::CodeEmitter::addReloc(nv50_ir::RelocEntry::Type, int, unsigned int, unsigned int, int)
00000000005a7000 00000000000000ec t nv50_ir::CodeEmitter::addInterp(int, int, void (*)(nv50_ir::FixupEntry const*, unsigned int*, nv50_ir::FixupData const&))
00000000005a70f0 00000000000000c0 t nv50_ir_relocate_code
00000000005a71b0 0000000000000084 t nv50_ir_apply_fixups
00000000005a7240 000000000000008c t nv50_ir_get_target_library
00000000005a72d0 000000000000000c W nv50_ir::DLList::Iterator::get() const
00000000005a72e0 0000000000000010 W nv50_ir::DLList::Iterator::end() const
00000000005a72f0 0000000000000004 W nv50_ir::DLList::Iterator::~Iterator()
00000000005a72f0 0000000000000004 W nv50_ir::DLList::Iterator::~Iterator()
00000000005a7300 0000000000000030 t nv50_ir::DLList::Iterator::erase()
00000000005a7330 0000000000000008 W nv50_ir::DLList::Iterator::~Iterator()
00000000005a7340 0000000000000068 t nv50_ir::DLList::Iterator::insert(void*)
00000000005a73b0 0000000000000070 t _debug_printf
00000000005a7420 000000000000007c W nv50_ir::DLList::Iterator::next()
00000000005a74a0 0000000000000048 t nv50_ir::DLList::clear()
00000000005a74f0 0000000000000090 t nv50_ir::Stack::moveTo(nv50_ir::Stack&)
00000000005a7580 0000000000000038 t nv50_ir::Interval::~Interval()
00000000005a7580 0000000000000038 T nv50_ir::Interval::~Interval()
00000000005a75c0 000000000000003c t nv50_ir::Interval::clear()
00000000005a7600 0000000000000184 t nv50_ir::Interval::extend(int, int)
00000000005a7790 0000000000000040 t nv50_ir::Interval::Interval(nv50_ir::Interval const&)
00000000005a7790 0000000000000040 T nv50_ir::Interval::Interval(nv50_ir::Interval const&)
00000000005a77d0 0000000000000090 t nv50_ir::Interval::overlaps(nv50_ir::Interval const&) const
00000000005a7860 0000000000000038 t nv50_ir::Interval::insert(nv50_ir::Interval const&)
00000000005a78a0 0000000000000058 t nv50_ir::Interval::unify(nv50_ir::Interval&)
00000000005a7900 000000000000006c t nv50_ir::Interval::print() const
00000000005a7970 0000000000000048 t nv50_ir::BitSet::andNot(nv50_ir::BitSet const&)
00000000005a79c0 0000000000000048 t nv50_ir::BitSet::operator|=(nv50_ir::BitSet const&)
00000000005a7a10 00000000000000c8 t nv50_ir::BitSet::allocate(unsigned int, bool)
00000000005a7ae0 0000000000000058 t nv50_ir::BitSet::popCount() const
00000000005a7b40 0000000000000050 t nv50_ir::BitSet::fill(unsigned int)
00000000005a7b90 0000000000000068 t nv50_ir::BitSet::setOr(nv50_ir::BitSet*, nv50_ir::BitSet*)
00000000005a7c00 0000000000000210 t nv50_ir::BitSet::findFreeRange(unsigned int, unsigned int) const
00000000005a7e10 0000000000000018 T nv50_ir::TargetGM107::getBuiltinCode(unsigned int const**, unsigned int*) const
00000000005a7e30 0000000000000010 T nv50_ir::TargetGM107::getBuiltinOffset(int) const
00000000005a7e40 000000000000006c T nv50_ir::TargetGM107::isOpSupported(nv50_ir::operation, nv50_ir::DataType) const
00000000005a7eb0 0000000000000058 T nv50_ir::TargetGM107::isReuseSupported(nv50_ir::Instruction const*) const
00000000005a7f10 0000000000000008 T nv50_ir::TargetGM107::canDualIssue(nv50_ir::Instruction const*, nv50_ir::Instruction const*) const
00000000005a7f20 000000000000000c T nv50_ir::TargetGM107::isCS2RSV(nv50_ir::SVSemantic) const
00000000005a7f30 0000000000000004 W nv50_ir::TargetGM107::~TargetGM107()
00000000005a7f30 0000000000000004 W nv50_ir::TargetGM107::~TargetGM107()
00000000005a7f40 0000000000000004 T nv50_ir::TargetGM107::getCodeEmitter(nv50_ir::Program::Type)
00000000005a7f50 0000000000000008 W nv50_ir::TargetGM107::~TargetGM107()
00000000005a7f60 0000000000000118 T nv50_ir::TargetGM107::runLegalizePass(nv50_ir::Program*, nv50_ir::CGStage) const
00000000005a8080 00000000000002a4 T nv50_ir::TargetGM107::getReadLatency(nv50_ir::Instruction const*) const
00000000005a8330 0000000000000330 T nv50_ir::TargetGM107::isBarrierRequired(nv50_ir::Instruction const*) const
00000000005a8660 0000000000000338 T nv50_ir::TargetGM107::getLatency(nv50_ir::Instruction const*) const
00000000005a89a0 0000000000000040 t nv50_ir::getTargetGM107(unsigned int)
00000000005a89e0 000000000000006c T nv50_ir::TargetNVC0::getBuiltinCode(unsigned int const**, unsigned int*) const
00000000005a8a50 0000000000000054 T nv50_ir::TargetNVC0::getBuiltinOffset(int) const
00000000005a8ab0 0000000000000150 t nv50_ir::TargetNVC0::initProps(nv50_ir::opProperties const*, int)
00000000005a8c00 00000000000002f4 t nv50_ir::TargetNVC0::initOpInfo()
00000000005a8f00 0000000000000034 T nv50_ir::TargetNVC0::TargetNVC0(unsigned int)
00000000005a8f00 0000000000000034 t nv50_ir::TargetNVC0::TargetNVC0(unsigned int)
00000000005a8f40 00000000000000c8 T nv50_ir::TargetNVC0::getFileSize(nv50_ir::DataFile) const
00000000005a9010 0000000000000018 T nv50_ir::TargetNVC0::getFileUnit(nv50_ir::DataFile) const
00000000005a9030 00000000000000f0 T nv50_ir::TargetNVC0::getSVAddress(nv50_ir::DataFile, nv50_ir::Symbol const*) const
00000000005a9120 00000000000007bc T nv50_ir::TargetNVC0::insnCanLoad(nv50_ir::Instruction const*, int, nv50_ir::Instruction const*) const
00000000005a98e0 00000000000000ec T nv50_ir::TargetNVC0::insnCanLoadOffset(nv50_ir::Instruction const*, int, int) const
00000000005a99d0 0000000000000084 T nv50_ir::TargetNVC0::isAccessSupported(nv50_ir::DataFile, nv50_ir::DataType) const
00000000005a9a60 0000000000000034 T nv50_ir::TargetNVC0::isOpSupported(nv50_ir::operation, nv50_ir::DataType) const
00000000005a9aa0 0000000000000324 T nv50_ir::TargetNVC0::isModSupported(nv50_ir::Instruction const*, int, nv50_ir::Modifier) const
00000000005a9dd0 00000000000000c8 T nv50_ir::TargetNVC0::mayPredicate(nv50_ir::Instruction const*, nv50_ir::Value const*) const
00000000005a9ea0 0000000000000134 T nv50_ir::TargetNVC0::isSatSupported(nv50_ir::Instruction const*) const
00000000005a9fe0 0000000000000078 T nv50_ir::TargetNVC0::isPostMultiplySupported(nv50_ir::operation, float, int&) const
00000000005aa060 0000000000000170 T nv50_ir::TargetNVC0::getLatency(nv50_ir::Instruction const*) const
00000000005aa1d0 0000000000000090 T nv50_ir::TargetNVC0::getThroughput(nv50_ir::Instruction const*) const
00000000005aa260 00000000000002ec T nv50_ir::TargetNVC0::canDualIssue(nv50_ir::Instruction const*, nv50_ir::Instruction const*) const
00000000005aa550 000000000000005c t nvc0_decoder_bsp_begin
00000000005aa5b0 00000000000001d8 t nvc0_decoder_bsp_next
00000000005aa790 00000000000003a0 t nvc0_decoder_bsp_end
00000000005aab30 0000000000000040 t util_hash_crc32
00000000005aab70 00000000000001ec t _mesa_parse_arb_fragment_program
00000000005aad60 0000000000000140 t _mesa_parse_arb_vertex_program
00000000005aaea0 00000000000000d0 t clear_cache
00000000005aaf70 0000000000000094 t rehash
00000000005ab010 000000000000005c t _mesa_new_program_cache
00000000005ab070 0000000000000030 t _mesa_delete_program_cache
00000000005ab0a0 0000000000000030 t _mesa_delete_shader_cache
00000000005ab0d0 00000000000000f0 t _mesa_search_program_cache
00000000005ab1c0 0000000000000120 t _mesa_program_cache_insert
00000000005ab2e0 0000000000000120 t _mesa_shader_cache_insert
00000000005ab400 00000000000000c0 t _mesa_init_instructions
00000000005ab4c0 000000000000002c t _mesa_copy_instructions
00000000005ab4f0 000000000000001c t _mesa_num_inst_src_regs
00000000005ab510 000000000000001c t _mesa_num_inst_dst_regs
00000000005ab530 0000000000000060 t _mesa_opcode_string
00000000005ab590 0000000000000080 t get_value.isra.0
00000000005ab610 0000000000000708 t _mesa_constant_fold
00000000005abd20 00000000000000c0 t yytnamerr
00000000005abde0 0000000000000280 t yysyntax_error
00000000005ac060 00000000000000a0 t asm_instruction_set_operands
00000000005ac100 0000000000000084 t add_state_reference
00000000005ac190 0000000000000108 t initialize_symbol_from_state
00000000005ac2a0 0000000000000100 t initialize_symbol_from_param
00000000005ac3a0 00000000000000ec t make_error_string
00000000005ac490 00000000000000a4 t yyerror
00000000005ac540 0000000000000088 t validate_inputs
00000000005ac5d0 0000000000000150 t declare_variable
00000000005ac720 00000000000000ac t asm_instruction_ctor.constprop.0
00000000005ac7d0 0000000000003184 t yyparse.isra.0
00000000005af960 0000000000000340 t _mesa_parse_arb_program
00000000005afca0 00000000000000a4 t init_velement_64bit
00000000005afd50 00000000000004e4 T st_update_array
00000000005b0240 0000000000000140 t st_bind_atomics
00000000005b0380 00000000000000c8 t st_bind_hw_atomic_buffers.part.0
00000000005b0450 0000000000000018 T st_bind_vs_atomics
00000000005b0470 0000000000000018 T st_bind_fs_atomics
00000000005b0490 0000000000000018 T st_bind_gs_atomics
00000000005b04b0 0000000000000018 T st_bind_tcs_atomics
00000000005b04d0 0000000000000018 T st_bind_tes_atomics
00000000005b04f0 0000000000000024 T st_bind_cs_atomics
00000000005b0520 0000000000000010 T st_bind_hw_atomic_buffers
00000000005b0530 0000000000000198 t translate_blend
00000000005b06d0 00000000000004c8 T st_update_blend
00000000005b0ba0 0000000000000034 T st_update_blend_color
00000000005b0be0 0000000000000004 W ir_expression_flattening_visitor::~ir_expression_flattening_visitor()
00000000005b0be0 0000000000000004 W ir_expression_flattening_visitor::~ir_expression_flattening_visitor()
00000000005b0bf0 0000000000000008 W ir_expression_flattening_visitor::~ir_expression_flattening_visitor()
00000000005b0c00 0000000000000134 T ir_expression_flattening_visitor::handle_rvalue(ir_rvalue**)
00000000005b0d40 000000000000007c t do_expression_flattening(exec_list*, bool (*)(ir_instruction*))
00000000005b0dc0 0000000000000024 t prolog
00000000005b0df0 000000000000008c t report_error
00000000005b0e80 00000000000000b4 t iter_immediate
00000000005b0f40 0000000000000070 t regs_hash_destroy
00000000005b0fb0 0000000000000074 t iter_property
00000000005b1030 0000000000000090 t report_warning.constprop.0
00000000005b10c0 00000000000001ec t check_register_usage.isra.0
00000000005b12b0 00000000000002e8 t iter_instruction
00000000005b15a0 000000000000010c t epilog
00000000005b16b0 00000000000000a0 t check_and_declare
00000000005b1750 00000000000001c8 t iter_declaration
00000000005b1920 000000000000010c t tgsi_sanity_check
00000000005b1a30 0000000000000070 t nouveau_vp3_bsp_begin
00000000005b1aa0 0000000000000090 t nouveau_vp3_bsp_next
00000000005b1b30 000000000000034c t nouveau_vp3_bsp_end
00000000005b1e80 00000000000000fc t nouveau_vp3_handle_references
00000000005b1f80 00000000000001a4 t nouveau_vp3_fill_picparm_mpeg4_vp
00000000005b2130 0000000000000478 t nouveau_vp3_fill_picparm_h264_vp
00000000005b25b0 00000000000005fc t nouveau_vp3_vp_caps
00000000005b2bb0 0000000000000140 t std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_erase(std::_Rb_tree_node<std::pair<void const* const, void*> >*) [clone .isra.0]
00000000005b2cf0 0000000000000038 t nv50_ir::BuildUtil::BuildUtil()
00000000005b2cf0 0000000000000038 T nv50_ir::BuildUtil::BuildUtil()
00000000005b2d30 000000000000003c T nv50_ir::BuildUtil::BuildUtil(nv50_ir::Program*)
00000000005b2d30 000000000000003c t nv50_ir::BuildUtil::BuildUtil(nv50_ir::Program*)
00000000005b2d70 0000000000000228 t nv50_ir::BuildUtil::mkOp1(nv50_ir::operation, nv50_ir::DataType, nv50_ir::Value*, nv50_ir::Value*)
00000000005b2fa0 0000000000000240 t nv50_ir::BuildUtil::mkOp2(nv50_ir::operation, nv50_ir::DataType, nv50_ir::Value*, nv50_ir::Value*, nv50_ir::Value*)
00000000005b31e0 0000000000000284 t nv50_ir::BuildUtil::mkOp3(nv50_ir::operation, nv50_ir::DataType, nv50_ir::Value*, nv50_ir::Value*, nv50_ir::Value*, nv50_ir::Value*)
00000000005b3470 0000000000000230 t nv50_ir::BuildUtil::mkLoad(nv50_ir::DataType, nv50_ir::Value*, nv50_ir::Symbol*, nv50_ir::Value*)
00000000005b36a0 0000000000000238 t nv50_ir::BuildUtil::mkStore(nv50_ir::operation, nv50_ir::DataType, nv50_ir::Symbol*, nv50_ir::Value*, nv50_ir::Value*)
00000000005b38e0 00000000000001dc t nv50_ir::BuildUtil::mkFetch(nv50_ir::Value*, nv50_ir::DataType, nv50_ir::DataFile, int, nv50_ir::Value*, nv50_ir::Value*)
00000000005b3ac0 00000000000001dc t nv50_ir::BuildUtil::mkInterp(unsigned int, nv50_ir::Value*, int, nv50_ir::Value*)
00000000005b3ca0 0000000000000210 t nv50_ir::BuildUtil::mkMov(nv50_ir::Value*, nv50_ir::Value*, nv50_ir::DataType)
00000000005b3eb0 0000000000000418 t nv50_ir::BuildUtil::mkMovToReg(int, nv50_ir::Value*)
00000000005b42d0 0000000000000420 t nv50_ir::BuildUtil::mkMovFromReg(nv50_ir::Value*, int)
00000000005b46f0 0000000000000234 t nv50_ir::BuildUtil::mkCvt(nv50_ir::operation, nv50_ir::DataType, nv50_ir::Value*, nv50_ir::DataType, nv50_ir::Value*)
00000000005b4930 0000000000000288 t nv50_ir::BuildUtil::mkCmp(nv50_ir::operation, nv50_ir::CondCode, nv50_ir::DataType, nv50_ir::Value*, nv50_ir::DataType, nv50_ir::Value*, nv50_ir::Value*, nv50_ir::Value*)
00000000005b4bc0 00000000000002a0 t nv50_ir::BuildUtil::mkTex(nv50_ir::operation, nv50_ir::TexTarget, unsigned short, unsigned short, std::vector<nv50_ir::Value*, std::allocator<nv50_ir::Value*> > const&, std::vector<nv50_ir::Value*, std::allocator<nv50_ir::Value*> > const&)
00000000005b4e60 0000000000000044 t nv50_ir::BuildUtil::mkQuadop(unsigned char, nv50_ir::Value*, unsigned char, nv50_ir::Value*, nv50_ir::Value*)
00000000005b4eb0 0000000000000568 t nv50_ir::BuildUtil::mkSplit(nv50_ir::Value**, unsigned char, nv50_ir::Value*)
00000000005b5420 0000000000000218 t nv50_ir::BuildUtil::mkFlow(nv50_ir::operation, void*, nv50_ir::CondCode, nv50_ir::Value*)
00000000005b5640 00000000000004c4 t nv50_ir::BuildUtil::mkClobber(nv50_ir::DataFile, unsigned int, int)
00000000005b5b10 000000000000021c t nv50_ir::BuildUtil::mkImm(unsigned int)
00000000005b5d30 0000000000000008 t nv50_ir::BuildUtil::mkImm(float)
00000000005b5d40 000000000000015c t nv50_ir::BuildUtil::mkImm(double)
00000000005b5ea0 0000000000000170 t nv50_ir::BuildUtil::loadImm(nv50_ir::Value*, float)
00000000005b6010 0000000000000298 t nv50_ir::BuildUtil::loadImm(nv50_ir::Value*, double)
00000000005b62b0 0000000000000170 t nv50_ir::BuildUtil::loadImm(nv50_ir::Value*, unsigned int)
00000000005b6420 0000000000000180 t nv50_ir::BuildUtil::mkSymbol(nv50_ir::DataFile, signed char, nv50_ir::DataType, unsigned int)
00000000005b65a0 0000000000000198 t nv50_ir::BuildUtil::mkSysVal(nv50_ir::SVSemantic, unsigned int)
00000000005b6740 000000000000019c t nv50_ir::BuildUtil::DataArray::setup(unsigned int, unsigned int, unsigned int, int, int, int, nv50_ir::DataFile, signed char)
00000000005b68e0 00000000000001a0 t nv50_ir::BuildUtil::DataArray::mkSymbol(int, int)
00000000005b6a80 0000000000000138 t std::pair<std::_Rb_tree_iterator<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> >, bool> std::_Rb_tree<nv50_ir::Value*, std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location>, std::_Select1st<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> >, std::less<nv50_ir::Value*>, std::allocator<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> > >::_M_emplace_unique<std::pair<nv50_ir::Value*, nv50_ir::BuildUtil::Location> >(std::pair<nv50_ir::Value*, nv50_ir::BuildUtil::Location>&&)
00000000005b6bc0 0000000000000158 t std::_Rb_tree<nv50_ir::BuildUtil::Location, std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*>, std::_Select1st<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >, std::less<nv50_ir::BuildUtil::Location>, std::allocator<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> > >::_M_get_insert_unique_pos(nv50_ir::BuildUtil::Location const&)
00000000005b6d20 000000000000011c t std::pair<std::_Rb_tree_iterator<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >, bool> std::_Rb_tree<nv50_ir::BuildUtil::Location, std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*>, std::_Select1st<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >, std::less<nv50_ir::BuildUtil::Location>, std::allocator<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> > >::_M_emplace_unique<std::pair<nv50_ir::BuildUtil::Location, nv50_ir::Value*> >(std::pair<nv50_ir::BuildUtil::Location, nv50_ir::Value*>&&)
00000000005b6e40 0000000000000358 t nv50_ir::BuildUtil::DataArray::acquire(nv50_ir::bimap<nv50_ir::BuildUtil::Location, nv50_ir::Value*>&, int, int)
00000000005b71a0 000000000000054c t nv50_ir::BuildUtil::DataArray::load(nv50_ir::bimap<nv50_ir::BuildUtil::Location, nv50_ir::Value*>&, int, int, nv50_ir::Value*)
00000000005b76f0 0000000000000328 t nv50_ir::BuildUtil::DataArray::store(nv50_ir::bimap<nv50_ir::BuildUtil::Location, nv50_ir::Value*>&, int, int, nv50_ir::Value*, nv50_ir::Value*)
00000000005b7a20 00000000000000c0 t std::_Rb_tree_iterator<std::pair<void const* const, void*> > std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<void const* const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<void const* const, void*> >, std::piecewise_construct_t const&, std::tuple<void const* const&>&&, std::tuple<>&&) [clone .isra.0]
00000000005b7ae0 0000000000000b2c t nv50_ir::BuildUtil::split64BitOpPostRA(nv50_ir::Function*, nv50_ir::Instruction*, nv50_ir::Value*, nv50_ir::Value*)
00000000005b8610 00000000000000c8 t std::_Rb_tree_node<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >* std::_Rb_tree<nv50_ir::BuildUtil::Location, std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*>, std::_Select1st<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >, std::less<nv50_ir::BuildUtil::Location>, std::allocator<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> > >::_M_copy<false, std::_Rb_tree<nv50_ir::BuildUtil::Location, std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*>, std::_Select1st<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >, std::less<nv50_ir::BuildUtil::Location>, std::allocator<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >*, std::_Rb_tree_node_base*, std::_Rb_tree<nv50_ir::BuildUtil::Location, std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*>, std::_Select1st<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >, std::less<nv50_ir::BuildUtil::Location>, std::allocator<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> > >::_Alloc_node&) [clone .isra.0]
00000000005b86e0 00000000000000c8 t std::_Rb_tree_node<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> >* std::_Rb_tree<nv50_ir::Value*, std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location>, std::_Select1st<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> >, std::less<nv50_ir::Value*>, std::allocator<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> > >::_M_copy<false, std::_Rb_tree<nv50_ir::Value*, std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location>, std::_Select1st<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> >, std::less<nv50_ir::Value*>, std::allocator<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> >*, std::_Rb_tree_node_base*, std::_Rb_tree<nv50_ir::Value*, std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location>, std::_Select1st<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> >, std::less<nv50_ir::Value*>, std::allocator<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> > >::_Alloc_node&) [clone .isra.0]
00000000005b87b0 0000000000000140 t std::_Rb_tree<nv50_ir::Value*, std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location>, std::_Select1st<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> >, std::less<nv50_ir::Value*>, std::allocator<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> > >::_M_erase(std::_Rb_tree_node<std::pair<nv50_ir::Value* const, nv50_ir::BuildUtil::Location> >*) [clone .isra.0]
00000000005b88f0 0000000000000140 t std::_Rb_tree<nv50_ir::BuildUtil::Location, std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*>, std::_Select1st<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >, std::less<nv50_ir::BuildUtil::Location>, std::allocator<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> > >::_M_erase(std::_Rb_tree_node<std::pair<nv50_ir::BuildUtil::Location const, nv50_ir::Value*> >*) [clone .isra.0]
00000000005b8a30 000000000000003c T nv50_ir::ConverterCommon::ConverterCommon(nv50_ir::Program*, nv50_ir_prog_info*)
00000000005b8a30 000000000000003c t nv50_ir::ConverterCommon::ConverterCommon(nv50_ir::Program*, nv50_ir_prog_info*)
00000000005b8a70 0000000000000080 t nv50_ir::ConverterCommon::translateInterpMode(nv50_ir_varying const*, nv50_ir::operation&)
00000000005b8af0 0000000000000414 t nv50_ir::ConverterCommon::handleUserClipPlanes()
00000000005b8f10 000000000000025c t std::pair<std::_Rb_tree_iterator<std::pair<unsigned int const, nv50_ir::ConverterCommon::Subroutine> >, bool> std::_Rb_tree<unsigned int, std::pair<unsigned int const, nv50_ir::ConverterCommon::Subroutine>, std::_Select1st<std::pair<unsigned int const, nv50_ir::ConverterCommon::Subroutine> >, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, nv50_ir::ConverterCommon::Subroutine> > >::_M_emplace_unique<std::pair<unsigned int, nv50_ir::ConverterCommon::Subroutine> >(std::pair<unsigned int, nv50_ir::ConverterCommon::Subroutine>&&)
00000000005b9170 0000000000000160 t nv50_ir::ConverterCommon::getSubroutine(unsigned int)
00000000005b92d0 0000000000000130 t nv50_ir::ConverterCommon::getSubroutine(nv50_ir::Function*)
00000000005b9400 000000000000002c t nv50_ir::selpFlip(nv50_ir::FixupEntry const*, unsigned int*, nv50_ir::FixupData const&)
00000000005b9430 00000000000000a0 t nv50_ir::interpApply(nv50_ir::FixupEntry const*, unsigned int*, nv50_ir::FixupData const&)
00000000005b94d0 0000000000000008 T nv50_ir::CodeEmitterGM107::getMinEncodingSize(nv50_ir::Instruction const*) const
00000000005b94e0 0000000000000004 W nv50_ir::CodeEmitterGM107::~CodeEmitterGM107()
00000000005b94e0 0000000000000004 W nv50_ir::CodeEmitterGM107::~CodeEmitterGM107()
00000000005b94f0 0000000000000070 t _debug_printf
00000000005b9560 0000000000000008 W nv50_ir::CodeEmitterGM107::~CodeEmitterGM107()
00000000005b9570 0000000000000064 T nv50_ir::CodeEmitterGM107::prepareEmission(nv50_ir::Function*)
00000000005b95e0 0000000000000160 T nv50_ir::CodeEmitterGM107::prepareEmission(nv50_ir::Program*)
00000000005b9740 0000000000000048 t nv50_ir::CodeEmitterGM107::emitGPR(int, nv50_ir::ValueRef const&) [clone .isra.0]
00000000005b9790 0000000000000048 t nv50_ir::CodeEmitterGM107::emitGPR(int, nv50_ir::ValueDef const&) [clone .isra.0]
00000000005b97e0 00000000000000b8 t nv50_ir::CodeEmitterGM107::emitIMMD(int, int, nv50_ir::ValueRef const&) [clone .isra.0]
00000000005b98a0 00000000000000ac t nv50_ir::CodeEmitterGM107::emitLDSTs(int, nv50_ir::DataType)
00000000005b9950 0000000000000078 t nv50_ir::CodeEmitterGM107::emitSUTarget()
00000000005b99d0 0000000000000074 t nv50_ir::SchedDataCalculatorGM107::recordWr(nv50_ir::Value const*, int, int)
00000000005b9a50 00000000000000a4 t nv50_ir::SchedDataCalculatorGM107::checkRd(nv50_ir::Value const*, int, int&) const
00000000005b9b00 0000000000000150 t nv50_ir::SchedDataCalculatorGM107::commitInsn(nv50_ir::Instruction const*, int)
00000000005b9c50 000000000000013c t nv50_ir::SchedDataCalculatorGM107::calcDelay(nv50_ir::Instruction const*, int) const
00000000005b9d90 0000000000000174 t nv50_ir::SchedDataCalculatorGM107::setDelay(nv50_ir::Instruction*, int, nv50_ir::Instruction const*)
00000000005b9f10 0000000000000294 t nv50_ir::SchedDataCalculatorGM107::needWrDepBar(nv50_ir::Instruction const*) const
00000000005ba1b0 0000000000000064 t nv50_ir::TargetGM107::createCodeEmitterGM107(nv50_ir::Program::Type)
00000000005ba220 0000000000000080 t nv50_ir::CodeEmitterGM107::emitPred()
00000000005ba2a0 0000000000000054 t nv50_ir::CodeEmitterGM107::emitDEPBAR()
00000000005ba300 000000000000015c t nv50_ir::CodeEmitterGM107::emitSUHandle(int)
00000000005ba460 0000000000000128 t nv50_ir::CodeEmitterGM107::emitSUSTx()
00000000005ba590 0000000000000128 t nv50_ir::CodeEmitterGM107::emitISBERD()
00000000005ba6c0 00000000000000ec t nv50_ir::CodeEmitterGM107::emitCBUF(int, int, int, int, int, nv50_ir::ValueRef const&) [clone .constprop.0]
00000000005ba7b0 00000000000000f4 t nv50_ir::CodeEmitterGM107::emitSTS()
00000000005ba8b0 0000000000000104 t nv50_ir::CodeEmitterGM107::emitTEXs(int)
00000000005ba9c0 0000000000000118 t nv50_ir::CodeEmitterGM107::emitSTL()
00000000005baae0 0000000000000124 t nv50_ir::CodeEmitterGM107::emitPRET()
00000000005bac10 0000000000000124 t nv50_ir::CodeEmitterGM107::emitSSY()
00000000005bad40 0000000000000124 t nv50_ir::CodeEmitterGM107::emitPBK()
00000000005bae70 0000000000000124 t nv50_ir::CodeEmitterGM107::emitPCNT()
00000000005bafa0 000000000000016c t nv50_ir::CodeEmitterGM107::emitRED()
00000000005bb110 0000000000000170 t nv50_ir::CodeEmitterGM107::emitST()
00000000005bb280 0000000000000180 t nv50_ir::CodeEmitterGM107::emitAST()
00000000005bb400 000000000000016c t nv50_ir::CodeEmitterGM107::emitCCTL()
00000000005bb570 00000000000001b4 t nv50_ir::CodeEmitterGM107::emitCAL()
00000000005bb730 00000000000001e0 t nv50_ir::CodeEmitterGM107::emitBRA()
00000000005bb910 0000000000000200 t nv50_ir::CodeEmitterGM107::emitBAR()
00000000005bbb10 000000000000007c t nv50_ir::CodeEmitterGM107::emitCONT()
00000000005bbb90 000000000000007c t nv50_ir::CodeEmitterGM107::emitEXIT()
00000000005bbc10 000000000000007c t nv50_ir::CodeEmitterGM107::emitRET()
00000000005bbc90 000000000000007c t nv50_ir::CodeEmitterGM107::emitBRK()
00000000005bbd10 000000000000007c t nv50_ir::CodeEmitterGM107::emitSYNC()
00000000005bbd90 000000000000007c t nv50_ir::CodeEmitterGM107::emitKIL()
00000000005bbe10 0000000000000070 t nv50_ir::CodeEmitterGM107::emitMEMBAR()
00000000005bbe80 000000000000014c t nv50_ir::CodeEmitterGM107::emitPSETP()
00000000005bbfd0 0000000000000344 t nv50_ir::CodeEmitterGM107::emitMOV()
00000000005bc320 0000000000000178 t nv50_ir::CodeEmitterGM107::emitS2R()
00000000005bc4a0 0000000000000178 t nv50_ir::CodeEmitterGM107::emitCS2R()
00000000005bc620 00000000000002f8 t nv50_ir::CodeEmitterGM107::emitF2F()
00000000005bc920 00000000000002c0 t nv50_ir::CodeEmitterGM107::emitF2I()
00000000005bcbe0 00000000000002a8 t nv50_ir::CodeEmitterGM107::emitI2F()
00000000005bce90 00000000000002a4 t nv50_ir::CodeEmitterGM107::emitI2I()
00000000005bd140 0000000000000218 t nv50_ir::CodeEmitterGM107::emitSEL()
00000000005bd360 000000000000024c t nv50_ir::CodeEmitterGM107::emitDADD()
00000000005bd5b0 0000000000000214 t nv50_ir::CodeEmitterGM107::emitDMUL()
00000000005bd7d0 00000000000002d4 t nv50_ir::CodeEmitterGM107::emitDFMA()
00000000005bdab0 0000000000000254 t nv50_ir::CodeEmitterGM107::emitDMNMX()
00000000005bdd10 00000000000002bc t nv50_ir::CodeEmitterGM107::emitDSET()
00000000005bdfd0 000000000000031c t nv50_ir::CodeEmitterGM107::emitFADD()
00000000005be2f0 00000000000002dc t nv50_ir::CodeEmitterGM107::emitFMUL()
00000000005be5d0 0000000000000440 t nv50_ir::CodeEmitterGM107::emitFFMA()
00000000005bea10 000000000000017c t nv50_ir::CodeEmitterGM107::emitMUFU()
00000000005beb90 0000000000000234 t nv50_ir::CodeEmitterGM107::emitFMNMX()
00000000005bedd0 00000000000001bc t nv50_ir::CodeEmitterGM107::emitRRO()
00000000005bef90 00000000000002c8 t nv50_ir::CodeEmitterGM107::emitFCMP()
00000000005bf260 00000000000002cc t nv50_ir::CodeEmitterGM107::emitFSET()
00000000005bf530 000000000000016c t nv50_ir::CodeEmitterGM107::emitFSWZADD()
00000000005bf6a0 00000000000002a0 t nv50_ir::CodeEmitterGM107::emitLOP()
00000000005bf940 00000000000001e0 t nv50_ir::CodeEmitterGM107::emitNOT()
00000000005bfb20 00000000000002b8 t nv50_ir::CodeEmitterGM107::emitIADD()
00000000005bfde0 00000000000002cc t nv50_ir::CodeEmitterGM107::emitIMUL()
00000000005c00b0 00000000000002ec t nv50_ir::CodeEmitterGM107::emitIMAD()
00000000005c03a0 0000000000000220 t nv50_ir::CodeEmitterGM107::emitISCADD()
00000000005c05c0 0000000000000310 t nv50_ir::CodeEmitterGM107::emitXMAD()
00000000005c08d0 00000000000001e0 t nv50_ir::CodeEmitterGM107::emitIMNMX()
00000000005c0ab0 00000000000002d8 t nv50_ir::CodeEmitterGM107::emitICMP()
00000000005c0d90 0000000000000298 t nv50_ir::CodeEmitterGM107::emitISET()
00000000005c1030 00000000000001b8 t nv50_ir::CodeEmitterGM107::emitSHL()
00000000005c11f0 00000000000001e0 t nv50_ir::CodeEmitterGM107::emitSHR()
00000000005c13d0 00000000000001f8 t nv50_ir::CodeEmitterGM107::emitSHF()
00000000005c15d0 000000000000018c t nv50_ir::CodeEmitterGM107::emitPOPC()
00000000005c1760 000000000000025c t nv50_ir::CodeEmitterGM107::emitBFI()
00000000005c19c0 00000000000001d0 t nv50_ir::CodeEmitterGM107::emitBFE()
00000000005c1b90 00000000000001b0 t nv50_ir::CodeEmitterGM107::emitFLO()
00000000005c1d40 0000000000000124 t nv50_ir::CodeEmitterGM107::emitLDC()
00000000005c1e70 0000000000000114 t nv50_ir::CodeEmitterGM107::emitLDL()
00000000005c1f90 00000000000000f0 t nv50_ir::CodeEmitterGM107::emitLDS()
00000000005c2080 0000000000000170 t nv50_ir::CodeEmitterGM107::emitLD()
00000000005c21f0 0000000000000288 t nv50_ir::CodeEmitterGM107::emitIPA()
00000000005c2480 00000000000001e8 t nv50_ir::CodeEmitterGM107::emitATOM()
00000000005c2670 0000000000000190 t nv50_ir::CodeEmitterGM107::emitATOMS()
00000000005c2800 00000000000000c8 t nv50_ir::CodeEmitterGM107::emitPIXLD()
00000000005c28d0 00000000000001e4 t nv50_ir::CodeEmitterGM107::emitTEX()
00000000005c2ac0 00000000000001a4 t nv50_ir::CodeEmitterGM107::emitTLD()
00000000005c2c70 00000000000001d4 t nv50_ir::CodeEmitterGM107::emitTLD4()
00000000005c2e50 0000000000000180 t nv50_ir::CodeEmitterGM107::emitTXD()
00000000005c2fd0 000000000000017c t nv50_ir::CodeEmitterGM107::emitTMML()
00000000005c3150 0000000000000144 t nv50_ir::CodeEmitterGM107::emitTXQ()
00000000005c32a0 00000000000001bc t nv50_ir::CodeEmitterGM107::emitOUT()
00000000005c3460 0000000000000148 t nv50_ir::CodeEmitterGM107::emitSULDx()
00000000005c35b0 00000000000001c4 t nv50_ir::CodeEmitterGM107::emitSUREDx()
00000000005c3780 00000000000001a8 t nv50_ir::CodeEmitterGM107::emitALD()
00000000005c3930 000000000000014c t nv50_ir::CodeEmitterGM107::emitAL2P()
00000000005c3a80 00000000000001c8 t nv50_ir::SchedDataCalculatorGM107::doesInsnWriteTo(nv50_ir::Instruction const*, nv50_ir::Value const*) const
00000000005c3c50 0000000000000190 t nv50_ir::SchedDataCalculatorGM107::findFirstDef(nv50_ir::Instruction const*) const
00000000005c3de0 0000000000000478 t nv50_ir::SchedDataCalculatorGM107::setReuseFlag(nv50_ir::Instruction*)
00000000005c4260 00000000000003b4 t nv50_ir::CodeEmitterGM107::emitVOTE()
00000000005c4620 00000000000003c8 t nv50_ir::SchedDataCalculatorGM107::needRdDepBar(nv50_ir::Instruction const*) const
00000000005c49f0 0000000000000330 t nv50_ir::SchedDataCalculatorGM107::findFirstUse(nv50_ir::Instruction const*) const
00000000005c4d20 000000000000047c t nv50_ir::SchedDataCalculatorGM107::insertBarriers(nv50_ir::BasicBlock*)
00000000005c51a0 000000000000051c T nv50_ir::SchedDataCalculatorGM107::visit(nv50_ir::BasicBlock*)
00000000005c56c0 000000000000020c t nv50_ir::CodeEmitterGM107::emitSHFL()
00000000005c58d0 000000000000030c t nv50_ir::CodeEmitterGM107::emitISETP()
00000000005c5be0 00000000000003bc t nv50_ir::CodeEmitterGM107::emitTEXS()
00000000005c5fa0 000000000000033c t nv50_ir::CodeEmitterGM107::emitDSETP()
00000000005c62e0 0000000000000350 t nv50_ir::CodeEmitterGM107::emitFSETP()
00000000005c6630 0000000000000b08 T nv50_ir::CodeEmitterGM107::emitInstruction(nv50_ir::Instruction*)
00000000005c7140 0000000000000250 t std::vector<nv50_ir::SchedDataCalculatorGM107::RegScores, std::allocator<nv50_ir::SchedDataCalculatorGM107::RegScores> >::_M_default_append(unsigned long)
00000000005c7390 0000000000000134 T nv50_ir::SchedDataCalculatorGM107::visit(nv50_ir::Function*)
00000000005c74d0 0000000000000140 t std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_erase(std::_Rb_tree_node<std::pair<void const* const, void*> >*) [clone .isra.0]
00000000005c7610 0000000000000574 t nv50_ir::GM107LegalizeSSA::handlePFETCH(nv50_ir::Instruction*)
00000000005c7b90 000000000000014c t nv50_ir::GM107LegalizeSSA::handleLOAD(nv50_ir::Instruction*)
00000000005c7ce0 000000000000003c T nv50_ir::GM107LegalizeSSA::visit(nv50_ir::Instruction*)
00000000005c7d20 00000000000003a0 t nv50_ir::GM107LoweringPass::handleDFDX(nv50_ir::Instruction*)
00000000005c80c0 00000000000005fc t nv50_ir::GM107LoweringPass::handlePFETCH(nv50_ir::Instruction*)
00000000005c86c0 0000000000000294 t nv50_ir::GM107LoweringPass::handlePOPCNT(nv50_ir::Instruction*)
00000000005c8960 00000000000005f8 t nv50_ir::GM107LoweringPass::handleSUQ(nv50_ir::TexInstruction*)
00000000005c8f60 00000000000000c0 t std::_Rb_tree_iterator<std::pair<void const* const, void*> > std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<void const* const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<void const* const, void*> >, std::piecewise_construct_t const&, std::tuple<void const* const&>&&, std::tuple<>&&) [clone .isra.0]
00000000005c9020 0000000000001c5c T nv50_ir::GM107LoweringPass::handleManualTXD(nv50_ir::TexInstruction*)
00000000005cac80 00000000000000d4 T nv50_ir::GM107LoweringPass::visit(nv50_ir::Instruction*)
00000000005cad60 0000000000000014 T nv50_ir::NVC0LegalizeSSA::visit(nv50_ir::Function*)
00000000005cad80 0000000000000008 T nv50_ir::NVC0LoweringPass::visit(nv50_ir::BasicBlock*)
00000000005cad90 00000000000000c8 t nv50_ir::getSrcType(nv50_ir::TexInstruction::ImgFormatDesc const*, int)
00000000005cae60 0000000000000070 t _debug_printf
00000000005caed0 00000000000000d8 T nv50_ir::NVC0LoweringPass::visit(nv50_ir::Function*)
00000000005cafb0 000000000000011c T nv50_ir::TargetNVC0::runLegalizePass(nv50_ir::Program*, nv50_ir::CGStage) const
00000000005cb0d0 0000000000000140 t std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_erase(std::_Rb_tree_node<std::pair<void const* const, void*> >*) [clone .isra.0]
00000000005cb210 0000000000000140 t nv50_ir::Instruction::getIndirect(int, int) const
00000000005cb350 00000000000000b8 t nv50_ir::TexInstruction::getIndirectR() const
00000000005cb410 0000000000000220 t nv50_ir::NVC0LegalizeSSA::handleRCPRSQLib(nv50_ir::Instruction*, nv50_ir::Value**)
00000000005cb630 0000000000000270 t nv50_ir::NVC0LegalizeSSA::handleRCPRSQ(nv50_ir::Instruction*)
00000000005cb8a0 0000000000000278 t nv50_ir::NVC0LegalizeSSA::handleTEXLOD(nv50_ir::TexInstruction*)
00000000005cbb20 00000000000002a8 t nv50_ir::NVC0LegalizeSSA::handleSET(nv50_ir::CmpInstruction*)
00000000005cbdd0 0000000000000030 t nv50_ir::NVC0LegalizePostRA::NVC0LegalizePostRA(nv50_ir::Program const*)
00000000005cbdd0 0000000000000030 T nv50_ir::NVC0LegalizePostRA::NVC0LegalizePostRA(nv50_ir::Program const*)
00000000005cbe00 000000000000014c t nv50_ir::NVC0LegalizePostRA::addTexUse(std::__cxx11::list<nv50_ir::NVC0LegalizePostRA::TexUse, std::allocator<nv50_ir::NVC0LegalizePostRA::TexUse> >&, nv50_ir::Instruction*, nv50_ir::Instruction const*)
00000000005cbf50 00000000000000f8 t nv50_ir::NVC0LegalizePostRA::propagateJoin(nv50_ir::BasicBlock*)
00000000005cc050 000000000000003c T nv50_ir::NVC0LoweringPass::NVC0LoweringPass(nv50_ir::Program*)
00000000005cc050 000000000000003c t nv50_ir::NVC0LoweringPass::NVC0LoweringPass(nv50_ir::Program*)
00000000005cc090 00000000000001fc t nv50_ir::NVC0LoweringPass::loadTexHandle(nv50_ir::Value*, unsigned int)
00000000005cc290 00000000000001ec t nv50_ir::NVC0LoweringPass::loadResInfo64(nv50_ir::Value*, unsigned int, unsigned short)
00000000005cc480 00000000000001f0 t nv50_ir::NVC0LoweringPass::loadResLength32(nv50_ir::Value*, unsigned int, unsigned short)
00000000005cc670 00000000000002dc t nv50_ir::NVC0LoweringPass::loadSuInfo32(nv50_ir::Value*, int, unsigned int, bool)
00000000005cc950 00000000000002d0 t nv50_ir::NVC0LoweringPass::readTessCoord(nv50_ir::LValue*, int)
00000000005ccc20 00000000000001fc t nv50_ir::NVC0LoweringPass::handleDIV(nv50_ir::Instruction*)
00000000005cce20 00000000000002cc t nv50_ir::NVC0LoweringPass::handleMOD(nv50_ir::Instruction*)
00000000005cd0f0 00000000000002e4 t nv50_ir::NVC0LoweringPass::handlePOW(nv50_ir::Instruction*)
00000000005cd3e0 0000000000000320 t nv50_ir::NVC0LoweringPass::calculateSampleOffset(nv50_ir::Value*)
00000000005cd700 0000000000000168 t nv50_ir::NVC0LoweringPass::checkPredicate(nv50_ir::Instruction*)
00000000005cd870 0000000000000250 t std::unordered_set<nv50_ir::BasicBlock const*, std::hash<nv50_ir::BasicBlock const*>, std::equal_to<nv50_ir::BasicBlock const*>, std::allocator<nv50_ir::BasicBlock const*> >::insert(nv50_ir::BasicBlock const* const&)
00000000005cdac0 000000000000017c t nv50_ir::NVC0LegalizePostRA::replaceCvt(nv50_ir::Instruction*)
00000000005cdc40 00000000000000ec t nv50_ir::NVC0LegalizePostRA::tryReplaceContWithBra(nv50_ir::BasicBlock*)
00000000005cdd30 0000000000000288 t nv50_ir::NVC0LegalizePostRA::replaceZero(nv50_ir::Instruction*)
00000000005cdfc0 0000000000000390 T nv50_ir::NVC0LegalizePostRA::visit(nv50_ir::BasicBlock*)
00000000005ce350 0000000000000234 t nv50_ir::NVC0LoweringPass::handleSQRT(nv50_ir::Instruction*) [clone .part.0]
00000000005ce590 0000000000000148 t nv50_ir::NVC0LoweringPass::handlePIXLD(nv50_ir::Instruction*)
00000000005ce6e0 00000000000002c0 t nv50_ir::NVC0LoweringPass::handleOUT(nv50_ir::Instruction*)
00000000005ce9a0 0000000000000704 t nv50_ir::NVC0LoweringPass::insertOOBSurfaceOpResult(nv50_ir::TexInstruction*)
00000000005cf0b0 0000000000000320 t nv50_ir::NVC0LoweringPass::handleTXQ(nv50_ir::TexInstruction*)
00000000005cf3d0 00000000000002cc t nv50_ir::NVC0LoweringPass::handleCasExch(nv50_ir::Instruction*, bool)
00000000005cf6a0 000000000000040c t nv50_ir::NVC0LegalizePostRA::findFirstUsesBB(int, int, nv50_ir::Instruction*, nv50_ir::Instruction const*, std::__cxx11::list<nv50_ir::NVC0LegalizePostRA::TexUse, std::allocator<nv50_ir::NVC0LegalizePostRA::TexUse> >&, std::unordered_set<nv50_ir::BasicBlock const*, std::hash<nv50_ir::BasicBlock const*>, std::equal_to<nv50_ir::BasicBlock const*>, std::allocator<nv50_ir::BasicBlock const*> >&)
00000000005cfab0 0000000000000138 t nv50_ir::NVC0LegalizePostRA::findFirstUses(nv50_ir::Instruction*, std::__cxx11::list<nv50_ir::NVC0LegalizePostRA::TexUse, std::allocator<nv50_ir::NVC0LegalizePostRA::TexUse> >&)
00000000005cfbf0 0000000000000330 t nv50_ir::NVC0LoweringPass::handleBUFQ(nv50_ir::Instruction*)
00000000005cff20 00000000000002a4 t nv50_ir::NVC0LoweringPass::handleWRSV(nv50_ir::Instruction*)
00000000005d01d0 0000000000000c7c t nv50_ir::NVC0LoweringPass::handleTEX(nv50_ir::TexInstruction*)
00000000005d0e50 00000000000003a8 t nv50_ir::NVC0LoweringPass::handleTXD(nv50_ir::TexInstruction*)
00000000005d1200 000000000000040c t nv50_ir::NVC0LegalizeSSA::handleDIV(nv50_ir::Instruction*)
00000000005d1610 000000000000052c t nv50_ir::NVC0LegalizeSSA::handleShift(nv50_ir::Instruction*)
00000000005d1b40 0000000000000170 T nv50_ir::NVC0LegalizeSSA::visit(nv50_ir::BasicBlock*)
00000000005d1cb0 000000000000060c t nv50_ir::NVC0LoweringPass::handleSharedATOMNVE4(nv50_ir::Instruction*)
00000000005d22c0 0000000000000504 t nv50_ir::NVC0LoweringPass::handleSharedATOM(nv50_ir::Instruction*)
00000000005d27d0 00000000000002d8 t nv50_ir::NVC0LoweringPass::loadMsAdjInfo32(nv50_ir::TexInstruction::Target, unsigned int, int, nv50_ir::Value*, bool)
00000000005d2ab0 00000000000003a0 t nv50_ir::NVC0LoweringPass::adjustCoordinatesMS(nv50_ir::TexInstruction*)
00000000005d2e50 0000000000000360 t nv50_ir::NVC0LoweringPass::handleSUQ(nv50_ir::TexInstruction*)
00000000005d31b0 0000000000000d90 t nv50_ir::NVC0LoweringPass::processSurfaceCoordsNVE4(nv50_ir::TexInstruction*)
00000000005d3f40 0000000000000730 t nv50_ir::NVC0LoweringPass::convertSurfaceFormat(nv50_ir::TexInstruction*, nv50_ir::Instruction**)
00000000005d4670 0000000000000594 t nv50_ir::NVC0LoweringPass::processSurfaceCoordsNVC0(nv50_ir::TexInstruction*)
00000000005d4c10 00000000000009b4 t nv50_ir::NVC0LoweringPass::handleRDSV(nv50_ir::Instruction*)
00000000005d55d0 000000000000016c t nv50_ir::NVC0LoweringPass::handleEXPORT(nv50_ir::Instruction*)
00000000005d5740 00000000000008bc t nv50_ir::NVC0LoweringPass::handleLDST(nv50_ir::Instruction*)
00000000005d6000 0000000000000328 t nv50_ir::NVC0LoweringPass::handleSurfaceOpNVE4(nv50_ir::TexInstruction*)
00000000005d6330 00000000000003a8 t nv50_ir::NVC0LoweringPass::handleSurfaceOpNVC0(nv50_ir::TexInstruction*)
00000000005d66e0 0000000000000344 t nv50_ir::NVC0LoweringPass::handleTXLQ(nv50_ir::TexInstruction*)
00000000005d6a30 0000000000000640 t nv50_ir::NVC0LoweringPass::handleATOM(nv50_ir::Instruction*)
00000000005d7070 0000000000000284 W std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&)
00000000005d7300 0000000000000128 t void std::vector<nv50_ir::Instruction*, std::allocator<nv50_ir::Instruction*> >::_M_realloc_insert<nv50_ir::Instruction* const&>(__gnu_cxx::__normal_iterator<nv50_ir::Instruction**, std::vector<nv50_ir::Instruction*, std::allocator<nv50_ir::Instruction*> > >, nv50_ir::Instruction* const&)
00000000005d7430 00000000000001a4 t void std::vector<nv50_ir::NVC0LegalizePostRA::TexUse, std::allocator<nv50_ir::NVC0LegalizePostRA::TexUse> >::_M_realloc_insert<nv50_ir::NVC0LegalizePostRA::TexUse const&>(__gnu_cxx::__normal_iterator<nv50_ir::NVC0LegalizePostRA::TexUse*, std::vector<nv50_ir::NVC0LegalizePostRA::TexUse, std::allocator<nv50_ir::NVC0LegalizePostRA::TexUse> > >, nv50_ir::NVC0LegalizePostRA::TexUse const&)
00000000005d75e0 0000000000000284 t std::vector<nv50_ir::NVC0LegalizePostRA::Limits, std::allocator<nv50_ir::NVC0LegalizePostRA::Limits> >::_M_fill_insert(__gnu_cxx::__normal_iterator<nv50_ir::NVC0LegalizePostRA::Limits*, std::vector<nv50_ir::NVC0LegalizePostRA::Limits, std::allocator<nv50_ir::NVC0LegalizePostRA::Limits> > >, unsigned long, nv50_ir::NVC0LegalizePostRA::Limits const&)
00000000005d7870 0000000000000118 t std::vector<nv50_ir::NVC0LegalizePostRA::Limits, std::allocator<nv50_ir::NVC0LegalizePostRA::Limits> >::_M_default_append(unsigned long)
00000000005d7990 0000000000000e1c t nv50_ir::NVC0LegalizePostRA::insertTextureBarriers(nv50_ir::Function*)
00000000005d87b0 000000000000030c T nv50_ir::NVC0LegalizePostRA::visit(nv50_ir::Function*)
00000000005d8ac0 00000000000000c0 t std::_Rb_tree_iterator<std::pair<void const* const, void*> > std::_Rb_tree<void const*, std::pair<void const* const, void*>, std::_Select1st<std::pair<void const* const, void*> >, std::less<void const*>, std::allocator<std::pair<void const* const, void*> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<void const* const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<void const* const, void*> >, std::piecewise_construct_t const&, std::tuple<void const* const&>&&, std::tuple<>&&) [clone .isra.0]
00000000005d8b80 00000000000002a8 t nv50_ir::cloneForward(nv50_ir::Function*, nv50_ir::Instruction*)
00000000005d8e30 0000000000001258 T nv50_ir::NVC0LoweringPass::handleManualTXD(nv50_ir::TexInstruction*)
00000000005da090 0000000000000f24 t nv50_ir::NVC0LoweringPass::processSurfaceCoordsGM107(nv50_ir::TexInstruction*, nv50_ir::Instruction**)
00000000005dafc0 0000000000000094 t nv50_ir::NVC0LoweringPass::handleSurfaceOpGM107(nv50_ir::TexInstruction*)
00000000005db060 0000000000000480 t nv50_ir::NVC0LoweringPass::visit(nv50_ir::Instruction*)
00000000005db4e0 0000000000000044 t _mesa_combine_swizzles
00000000005db530 0000000000000470 t _mesa_layout_parameters
00000000005db9a0 0000000000000088 t _mesa_parse_instruction_suffix
00000000005dba30 0000000000000054 t _mesa_ARBvp_parse_option
00000000005dba90 00000000000002d8 t _mesa_ARBfp_parse_option
00000000005dbd70 00000000000000e0 t yy_get_previous_state
00000000005dbe50 0000000000000030 t yy_fatal_error.constprop.0
00000000005dbe80 00000000000000a0 t _mesa_program_lexer_ensure_buffer_stack
00000000005dbf20 00000000000000b4 t _mesa_program_lexer__switch_to_buffer
00000000005dbfe0 000000000000006c t _mesa_program_lexer__delete_buffer
00000000005dc050 000000000000006c t _mesa_program_lexer__flush_buffer
00000000005dc0c0 0000000000000098 t _mesa_program_lexer__init_buffer
00000000005dc160 000000000000007c t _mesa_program_lexer__create_buffer
00000000005dc1e0 00000000000000bc t _mesa_program_lexer_restart
00000000005dc2a0 00000000000046e4 t _mesa_program_lexer_lex
00000000005e0990 000000000000008c t _mesa_program_lexer_pop_buffer_state
00000000005e0a20 00000000000000bc t _mesa_program_lexer__scan_buffer
00000000005e0ae0 00000000000000a4 t _mesa_program_lexer__scan_bytes
00000000005e0b90 0000000000000098 t _mesa_program_lexer_lex_init_extra
00000000005e0c30 000000000000007c t _mesa_program_lexer_lex_destroy
00000000005e0cb0 0000000000000044 t _mesa_program_lexer_ctor
00000000005e0d00 0000000000000004 t _mesa_program_lexer_dtor
00000000005e0d10 0000000000000004 T _glapi_check_multithread
00000000005e0d20 0000000000000004 T _glapi_set_context
00000000005e0d30 0000000000000004 T _glapi_set_dispatch
00000000005e0d40 0000000000000008 T _glapi_get_dispatch_table_size
00000000005e0d50 00000000000001a4 T _glapi_add_dispatch
00000000005e0f00 000000000000006c T _glapi_get_proc_address
00000000005e0f70 0000000000000014 t stub_compare
00000000005e0f90 0000000000000014 t stub_init_once
00000000005e0fb0 000000000000001c t stub_find_public
00000000005e0fd0 0000000000000100 t stub_find_dynamic
00000000005e10d0 0000000000000050 t stub_fix_dynamic
00000000005e1120 0000000000000008 t stub_get_slot
00000000005e1130 0000000000000018 t stub_get_addr
00000000005e1150 00000000000000a8 t noop_generic
00000000005e1200 0000000000000004 t u_current_init
00000000005e1210 0000000000000024 t u_current_set_context
00000000005e1240 0000000000000020 T _glapi_get_context
00000000005e1260 0000000000000040 t u_current_set_table
00000000005e12a0 0000000000000034 T shared_dispatch_stub_0
00000000005e12e0 0000000000000028 T shared_dispatch_stub_1
00000000005e1310 0000000000000034 T shared_dispatch_stub_2
00000000005e1350 0000000000000034 T shared_dispatch_stub_3
00000000005e1390 0000000000000034 T shared_dispatch_stub_4
00000000005e13d0 0000000000000034 T shared_dispatch_stub_5
00000000005e1410 0000000000000034 T shared_dispatch_stub_6
00000000005e1450 0000000000000034 T shared_dispatch_stub_7
00000000005e1490 0000000000000034 T shared_dispatch_stub_8
00000000005e14d0 0000000000000034 T shared_dispatch_stub_9
00000000005e1510 0000000000000034 T shared_dispatch_stub_10
00000000005e1550 0000000000000028 T shared_dispatch_stub_11
00000000005e1580 0000000000000034 T shared_dispatch_stub_12
00000000005e15c0 0000000000000028 T shared_dispatch_stub_13
00000000005e15f0 0000000000000034 T shared_dispatch_stub_14
00000000005e1630 0000000000000034 T shared_dispatch_stub_15
00000000005e1670 0000000000000034 T shared_dispatch_stub_16
00000000005e16b0 0000000000000034 T shared_dispatch_stub_17
00000000005e16f0 0000000000000034 T shared_dispatch_stub_18
00000000005e1730 0000000000000034 T shared_dispatch_stub_19
00000000005e1770 0000000000000034 T shared_dispatch_stub_20
00000000005e17b0 0000000000000034 T shared_dispatch_stub_21
00000000005e17f0 0000000000000034 T shared_dispatch_stub_22
00000000005e1830 0000000000000034 T shared_dispatch_stub_23
00000000005e1870 0000000000000034 T shared_dispatch_stub_24
00000000005e18b0 0000000000000034 T shared_dispatch_stub_25
00000000005e18f0 0000000000000034 T shared_dispatch_stub_26
00000000005e1930 0000000000000028 T shared_dispatch_stub_27
00000000005e1960 0000000000000034 T shared_dispatch_stub_28
00000000005e19a0 0000000000000028 T shared_dispatch_stub_29
00000000005e19d0 0000000000000034 T shared_dispatch_stub_30
00000000005e1a10 0000000000000034 T shared_dispatch_stub_31
00000000005e1a50 0000000000000034 T shared_dispatch_stub_32
00000000005e1a90 0000000000000034 T shared_dispatch_stub_33
00000000005e1ad0 0000000000000034 T shared_dispatch_stub_34
00000000005e1b10 0000000000000034 T shared_dispatch_stub_35
00000000005e1b50 0000000000000034 T shared_dispatch_stub_36
00000000005e1b90 0000000000000034 T shared_dispatch_stub_37
00000000005e1bd0 0000000000000034 T shared_dispatch_stub_38
00000000005e1c10 0000000000000034 T shared_dispatch_stub_39
00000000005e1c50 0000000000000034 T shared_dispatch_stub_40
00000000005e1c90 0000000000000034 T shared_dispatch_stub_41
00000000005e1cd0 0000000000000034 T shared_dispatch_stub_42
00000000005e1d10 0000000000000028 T shared_dispatch_stub_43
00000000005e1d40 0000000000000028 T shared_dispatch_stub_44
00000000005e1d70 0000000000000034 T shared_dispatch_stub_45
00000000005e1db0 0000000000000028 T shared_dispatch_stub_46
00000000005e1de0 0000000000000034 T shared_dispatch_stub_47
00000000005e1e20 0000000000000034 T shared_dispatch_stub_48
00000000005e1e60 0000000000000034 T shared_dispatch_stub_49
00000000005e1ea0 0000000000000034 T shared_dispatch_stub_50
00000000005e1ee0 0000000000000034 T shared_dispatch_stub_51
00000000005e1f20 0000000000000034 T shared_dispatch_stub_52
00000000005e1f60 0000000000000034 T shared_dispatch_stub_53
00000000005e1fa0 0000000000000028 T shared_dispatch_stub_54
00000000005e1fd0 0000000000000034 T shared_dispatch_stub_55
00000000005e2010 0000000000000028 T shared_dispatch_stub_56
00000000005e2040 0000000000000034 T shared_dispatch_stub_57
00000000005e2080 0000000000000034 T shared_dispatch_stub_58
00000000005e20c0 0000000000000034 T shared_dispatch_stub_59
00000000005e2100 0000000000000034 T shared_dispatch_stub_60
00000000005e2140 0000000000000034 T shared_dispatch_stub_61
00000000005e2180 0000000000000028 T shared_dispatch_stub_62
00000000005e21b0 0000000000000034 T shared_dispatch_stub_63
00000000005e21f0 0000000000000028 T shared_dispatch_stub_64
00000000005e2220 0000000000000034 T shared_dispatch_stub_65
00000000005e2260 0000000000000034 T shared_dispatch_stub_66
00000000005e22a0 0000000000000034 T shared_dispatch_stub_67
00000000005e22e0 0000000000000034 T shared_dispatch_stub_68
00000000005e2320 0000000000000034 T shared_dispatch_stub_69
00000000005e2360 0000000000000028 T shared_dispatch_stub_70
00000000005e2390 0000000000000034 T shared_dispatch_stub_71
00000000005e23d0 0000000000000028 T shared_dispatch_stub_72
00000000005e2400 0000000000000034 T shared_dispatch_stub_73
00000000005e2440 0000000000000034 T shared_dispatch_stub_74
00000000005e2480 0000000000000034 T shared_dispatch_stub_75
00000000005e24c0 0000000000000034 T shared_dispatch_stub_76
00000000005e2500 0000000000000034 T shared_dispatch_stub_77
00000000005e2540 0000000000000028 T shared_dispatch_stub_78
00000000005e2570 0000000000000034 T shared_dispatch_stub_79
00000000005e25b0 0000000000000028 T shared_dispatch_stub_80
00000000005e25e0 0000000000000034 T shared_dispatch_stub_81
00000000005e2620 0000000000000034 T shared_dispatch_stub_82
00000000005e2660 0000000000000034 T shared_dispatch_stub_83
00000000005e26a0 0000000000000034 T shared_dispatch_stub_84
00000000005e26e0 0000000000000034 T shared_dispatch_stub_85
00000000005e2720 0000000000000028 T shared_dispatch_stub_86
00000000005e2750 0000000000000034 T shared_dispatch_stub_87
00000000005e2790 0000000000000028 T shared_dispatch_stub_88
00000000005e27c0 0000000000000034 T shared_dispatch_stub_89
00000000005e2800 0000000000000034 T shared_dispatch_stub_90
00000000005e2840 0000000000000034 T shared_dispatch_stub_91
00000000005e2880 0000000000000034 T shared_dispatch_stub_92
00000000005e28c0 0000000000000034 T shared_dispatch_stub_93
00000000005e2900 0000000000000028 T shared_dispatch_stub_94
00000000005e2930 0000000000000034 T shared_dispatch_stub_95
00000000005e2970 0000000000000028 T shared_dispatch_stub_96
00000000005e29a0 0000000000000034 T shared_dispatch_stub_97
00000000005e29e0 0000000000000034 T shared_dispatch_stub_98
00000000005e2a20 0000000000000034 T shared_dispatch_stub_99
00000000005e2a60 0000000000000034 T shared_dispatch_stub_100
00000000005e2aa0 0000000000000034 T shared_dispatch_stub_101
00000000005e2ae0 0000000000000028 T shared_dispatch_stub_102
00000000005e2b10 0000000000000034 T shared_dispatch_stub_103
00000000005e2b50 0000000000000028 T shared_dispatch_stub_104
00000000005e2b80 0000000000000034 T shared_dispatch_stub_105
00000000005e2bc0 0000000000000034 T shared_dispatch_stub_106
00000000005e2c00 0000000000000034 T shared_dispatch_stub_107
00000000005e2c40 0000000000000034 T shared_dispatch_stub_108
00000000005e2c80 0000000000000034 T shared_dispatch_stub_109
00000000005e2cc0 0000000000000028 T shared_dispatch_stub_110
00000000005e2cf0 0000000000000034 T shared_dispatch_stub_111
00000000005e2d30 0000000000000028 T shared_dispatch_stub_112
00000000005e2d60 0000000000000034 T shared_dispatch_stub_113
00000000005e2da0 0000000000000034 T shared_dispatch_stub_114
00000000005e2de0 0000000000000034 T shared_dispatch_stub_115
00000000005e2e20 0000000000000034 T shared_dispatch_stub_116
00000000005e2e60 0000000000000034 T shared_dispatch_stub_117
00000000005e2ea0 0000000000000028 T shared_dispatch_stub_118
00000000005e2ed0 0000000000000034 T shared_dispatch_stub_119
00000000005e2f10 0000000000000028 T shared_dispatch_stub_120
00000000005e2f40 0000000000000034 T shared_dispatch_stub_121
00000000005e2f80 0000000000000034 T shared_dispatch_stub_122
00000000005e2fc0 0000000000000034 T shared_dispatch_stub_123
00000000005e3000 0000000000000034 T shared_dispatch_stub_124
00000000005e3040 0000000000000034 T shared_dispatch_stub_125
00000000005e3080 0000000000000028 T shared_dispatch_stub_126
00000000005e30b0 0000000000000034 T shared_dispatch_stub_127
00000000005e30f0 0000000000000028 T shared_dispatch_stub_128
00000000005e3120 0000000000000034 T shared_dispatch_stub_129
00000000005e3160 0000000000000034 T shared_dispatch_stub_130
00000000005e31a0 0000000000000034 T shared_dispatch_stub_131
00000000005e31e0 0000000000000034 T shared_dispatch_stub_132
00000000005e3220 0000000000000034 T shared_dispatch_stub_133
00000000005e3260 0000000000000028 T shared_dispatch_stub_134
00000000005e3290 0000000000000034 T shared_dispatch_stub_135
00000000005e32d0 0000000000000028 T shared_dispatch_stub_136
00000000005e3300 0000000000000034 T shared_dispatch_stub_137
00000000005e3340 0000000000000034 T shared_dispatch_stub_138
00000000005e3380 0000000000000034 T shared_dispatch_stub_139
00000000005e33c0 0000000000000034 T shared_dispatch_stub_140
00000000005e3400 0000000000000034 T shared_dispatch_stub_141
00000000005e3440 0000000000000028 T shared_dispatch_stub_142
00000000005e3470 0000000000000034 T shared_dispatch_stub_143
00000000005e34b0 0000000000000028 T shared_dispatch_stub_144
00000000005e34e0 0000000000000034 T shared_dispatch_stub_145
00000000005e3520 0000000000000034 T shared_dispatch_stub_146
00000000005e3560 0000000000000034 T shared_dispatch_stub_147
00000000005e35a0 0000000000000034 T shared_dispatch_stub_148
00000000005e35e0 0000000000000034 T shared_dispatch_stub_149
00000000005e3620 0000000000000034 T shared_dispatch_stub_150
00000000005e3660 0000000000000034 T shared_dispatch_stub_151
00000000005e36a0 0000000000000034 T shared_dispatch_stub_152
00000000005e36e0 0000000000000034 T shared_dispatch_stub_153
00000000005e3720 0000000000000034 T shared_dispatch_stub_154
00000000005e3760 0000000000000034 T shared_dispatch_stub_155
00000000005e37a0 0000000000000034 T shared_dispatch_stub_156
00000000005e37e0 0000000000000034 T shared_dispatch_stub_157
00000000005e3820 0000000000000034 T shared_dispatch_stub_158
00000000005e3860 0000000000000034 T shared_dispatch_stub_159
00000000005e38a0 0000000000000034 T shared_dispatch_stub_160
00000000005e38e0 0000000000000034 T shared_dispatch_stub_161
00000000005e3920 0000000000000034 T shared_dispatch_stub_162
00000000005e3960 0000000000000034 T shared_dispatch_stub_163
00000000005e39a0 0000000000000034 T shared_dispatch_stub_164
00000000005e39e0 0000000000000034 T shared_dispatch_stub_165
00000000005e3a20 0000000000000034 T shared_dispatch_stub_166
00000000005e3a60 0000000000000034 T shared_dispatch_stub_167
00000000005e3aa0 0000000000000028 T shared_dispatch_stub_168
00000000005e3ad0 0000000000000034 T shared_dispatch_stub_169
00000000005e3b10 0000000000000034 T shared_dispatch_stub_170
00000000005e3b50 0000000000000034 T shared_dispatch_stub_171
00000000005e3b90 0000000000000034 T shared_dispatch_stub_172
00000000005e3bd0 0000000000000028 T shared_dispatch_stub_173
00000000005e3c00 0000000000000034 T shared_dispatch_stub_174
00000000005e3c40 0000000000000034 T shared_dispatch_stub_175
00000000005e3c80 0000000000000034 T shared_dispatch_stub_176
00000000005e3cc0 0000000000000034 T shared_dispatch_stub_177
00000000005e3d00 0000000000000034 T shared_dispatch_stub_178
00000000005e3d40 0000000000000034 T shared_dispatch_stub_179
00000000005e3d80 0000000000000034 T shared_dispatch_stub_180
00000000005e3dc0 0000000000000034 T shared_dispatch_stub_181
00000000005e3e00 0000000000000034 T shared_dispatch_stub_182
00000000005e3e40 0000000000000034 T shared_dispatch_stub_183
00000000005e3e80 0000000000000034 T shared_dispatch_stub_184
00000000005e3ec0 0000000000000034 T shared_dispatch_stub_185
00000000005e3f00 0000000000000034 T shared_dispatch_stub_186
00000000005e3f40 0000000000000034 T shared_dispatch_stub_187
00000000005e3f80 0000000000000034 T shared_dispatch_stub_188
00000000005e3fc0 0000000000000034 T shared_dispatch_stub_189
00000000005e4000 0000000000000034 T shared_dispatch_stub_190
00000000005e4040 0000000000000034 T shared_dispatch_stub_191
00000000005e4080 0000000000000034 T shared_dispatch_stub_192
00000000005e40c0 0000000000000034 T shared_dispatch_stub_193
00000000005e4100 0000000000000034 T shared_dispatch_stub_194
00000000005e4140 0000000000000034 T shared_dispatch_stub_195
00000000005e4180 0000000000000034 T shared_dispatch_stub_196
00000000005e41c0 0000000000000028 T shared_dispatch_stub_197
00000000005e41f0 0000000000000034 T shared_dispatch_stub_198
00000000005e4230 0000000000000028 T shared_dispatch_stub_199
00000000005e4260 0000000000000028 T shared_dispatch_stub_200
00000000005e4290 0000000000000034 T shared_dispatch_stub_201
00000000005e42d0 0000000000000034 T shared_dispatch_stub_202
00000000005e4310 0000000000000034 T shared_dispatch_stub_203
00000000005e4350 0000000000000028 T shared_dispatch_stub_204
00000000005e4380 0000000000000028 T shared_dispatch_stub_205
00000000005e43b0 0000000000000028 T shared_dispatch_stub_206
00000000005e43e0 0000000000000034 T shared_dispatch_stub_207
00000000005e4420 0000000000000028 T shared_dispatch_stub_208
00000000005e4450 0000000000000034 T shared_dispatch_stub_209
00000000005e4490 0000000000000034 T shared_dispatch_stub_210
00000000005e44d0 0000000000000034 T shared_dispatch_stub_211
00000000005e4510 0000000000000034 T shared_dispatch_stub_212
00000000005e4550 0000000000000034 T shared_dispatch_stub_213
00000000005e4590 0000000000000034 T shared_dispatch_stub_214
00000000005e45d0 0000000000000034 T shared_dispatch_stub_215
00000000005e4610 0000000000000028 T shared_dispatch_stub_216
00000000005e4640 0000000000000028 T shared_dispatch_stub_217
00000000005e4670 0000000000000028 T shared_dispatch_stub_218
00000000005e46a0 0000000000000034 T shared_dispatch_stub_219
00000000005e46e0 0000000000000034 T shared_dispatch_stub_220
00000000005e4720 0000000000000034 T shared_dispatch_stub_221
00000000005e4760 0000000000000034 T shared_dispatch_stub_222
00000000005e47a0 0000000000000034 T shared_dispatch_stub_223
00000000005e47e0 0000000000000034 T shared_dispatch_stub_224
00000000005e4820 0000000000000034 T shared_dispatch_stub_225
00000000005e4860 0000000000000034 T shared_dispatch_stub_226
00000000005e48a0 0000000000000034 T shared_dispatch_stub_227
00000000005e48e0 0000000000000028 T shared_dispatch_stub_228
00000000005e4910 0000000000000034 T shared_dispatch_stub_229
00000000005e4950 0000000000000028 T shared_dispatch_stub_230
00000000005e4980 0000000000000034 T shared_dispatch_stub_231
00000000005e49c0 0000000000000028 T shared_dispatch_stub_232
00000000005e49f0 0000000000000034 T shared_dispatch_stub_233
00000000005e4a30 0000000000000028 T shared_dispatch_stub_234
00000000005e4a60 0000000000000034 T shared_dispatch_stub_235
00000000005e4aa0 0000000000000034 T shared_dispatch_stub_236
00000000005e4ae0 0000000000000034 T shared_dispatch_stub_237
00000000005e4b20 0000000000000034 T shared_dispatch_stub_238
00000000005e4b60 0000000000000034 T shared_dispatch_stub_239
00000000005e4ba0 0000000000000034 T shared_dispatch_stub_240
00000000005e4be0 0000000000000034 T shared_dispatch_stub_241
00000000005e4c20 0000000000000034 T shared_dispatch_stub_242
00000000005e4c60 0000000000000034 T shared_dispatch_stub_243
00000000005e4ca0 0000000000000034 T shared_dispatch_stub_244
00000000005e4ce0 0000000000000034 T shared_dispatch_stub_245
00000000005e4d20 0000000000000028 T shared_dispatch_stub_246
00000000005e4d50 0000000000000034 T shared_dispatch_stub_247
00000000005e4d90 0000000000000034 T shared_dispatch_stub_248
00000000005e4dd0 0000000000000034 T shared_dispatch_stub_249
00000000005e4e10 0000000000000034 T shared_dispatch_stub_250
00000000005e4e50 0000000000000034 T shared_dispatch_stub_251
00000000005e4e90 0000000000000034 T shared_dispatch_stub_252
00000000005e4ed0 0000000000000034 T shared_dispatch_stub_253
00000000005e4f10 0000000000000034 T shared_dispatch_stub_254
00000000005e4f50 0000000000000034 T shared_dispatch_stub_255
00000000005e4f90 0000000000000034 T shared_dispatch_stub_256
00000000005e4fd0 0000000000000034 T shared_dispatch_stub_257
00000000005e5010 0000000000000034 T shared_dispatch_stub_258
00000000005e5050 0000000000000034 T shared_dispatch_stub_259
00000000005e5090 0000000000000034 T shared_dispatch_stub_260
00000000005e50d0 0000000000000028 T shared_dispatch_stub_261
00000000005e5100 0000000000000034 T shared_dispatch_stub_262
00000000005e5140 0000000000000034 T shared_dispatch_stub_263
00000000005e5180 0000000000000034 T shared_dispatch_stub_264
00000000005e51c0 0000000000000034 T shared_dispatch_stub_265
00000000005e5200 0000000000000034 T shared_dispatch_stub_266
00000000005e5240 0000000000000034 T shared_dispatch_stub_267
00000000005e5280 0000000000000034 T shared_dispatch_stub_268
00000000005e52c0 0000000000000034 T shared_dispatch_stub_269
00000000005e5300 0000000000000034 T shared_dispatch_stub_270
00000000005e5340 0000000000000034 T shared_dispatch_stub_271
00000000005e5380 0000000000000034 T shared_dispatch_stub_272
00000000005e53c0 0000000000000034 T shared_dispatch_stub_273
00000000005e5400 0000000000000034 T shared_dispatch_stub_274
00000000005e5440 0000000000000034 T shared_dispatch_stub_275
00000000005e5480 0000000000000034 T shared_dispatch_stub_276
00000000005e54c0 0000000000000034 T shared_dispatch_stub_277
00000000005e5500 0000000000000034 T shared_dispatch_stub_278
00000000005e5540 0000000000000034 T shared_dispatch_stub_279
00000000005e5580 0000000000000034 T shared_dispatch_stub_280
00000000005e55c0 0000000000000034 T shared_dispatch_stub_281
00000000005e5600 0000000000000034 T shared_dispatch_stub_282
00000000005e5640 0000000000000034 T shared_dispatch_stub_283
00000000005e5680 0000000000000034 T shared_dispatch_stub_284
00000000005e56c0 0000000000000034 T shared_dispatch_stub_285
00000000005e5700 0000000000000034 T shared_dispatch_stub_286
00000000005e5740 0000000000000034 T shared_dispatch_stub_287
00000000005e5780 0000000000000028 T shared_dispatch_stub_288
00000000005e57b0 0000000000000028 T shared_dispatch_stub_289
00000000005e57e0 0000000000000028 T shared_dispatch_stub_290
00000000005e5810 0000000000000034 T shared_dispatch_stub_291
00000000005e5850 0000000000000034 T shared_dispatch_stub_292
00000000005e5890 0000000000000034 T shared_dispatch_stub_293
00000000005e58d0 0000000000000034 T shared_dispatch_stub_294
00000000005e5910 0000000000000034 T shared_dispatch_stub_295
00000000005e5950 0000000000000028 T shared_dispatch_stub_296
00000000005e5980 0000000000000028 T shared_dispatch_stub_297
00000000005e59b0 0000000000000028 T shared_dispatch_stub_298
00000000005e59e0 0000000000000028 T shared_dispatch_stub_299
00000000005e5a10 0000000000000028 T shared_dispatch_stub_300
00000000005e5a40 0000000000000028 T shared_dispatch_stub_301
00000000005e5a70 0000000000000028 T shared_dispatch_stub_302
00000000005e5aa0 0000000000000028 T shared_dispatch_stub_303
00000000005e5ad0 0000000000000028 T shared_dispatch_stub_304
00000000005e5b00 0000000000000034 T shared_dispatch_stub_305
00000000005e5b40 0000000000000034 T shared_dispatch_stub_306
00000000005e5b80 0000000000000034 T shared_dispatch_stub_307
00000000005e5bc0 0000000000000034 T shared_dispatch_stub_308
00000000005e5c00 0000000000000034 T shared_dispatch_stub_309
00000000005e5c40 0000000000000034 T shared_dispatch_stub_310
00000000005e5c80 0000000000000034 T shared_dispatch_stub_311
00000000005e5cc0 0000000000000034 T shared_dispatch_stub_312
00000000005e5d00 0000000000000034 T shared_dispatch_stub_313
00000000005e5d40 0000000000000034 T shared_dispatch_stub_314
00000000005e5d80 0000000000000034 T shared_dispatch_stub_315
00000000005e5dc0 0000000000000034 T shared_dispatch_stub_316
00000000005e5e00 0000000000000034 T shared_dispatch_stub_317
00000000005e5e40 0000000000000034 T shared_dispatch_stub_318
00000000005e5e80 0000000000000028 T shared_dispatch_stub_319
00000000005e5eb0 0000000000000034 T shared_dispatch_stub_320
00000000005e5ef0 0000000000000034 T shared_dispatch_stub_321
00000000005e5f30 0000000000000034 T shared_dispatch_stub_322
00000000005e5f70 0000000000000034 T shared_dispatch_stub_323
00000000005e5fb0 0000000000000034 T shared_dispatch_stub_324
00000000005e5ff0 0000000000000034 T shared_dispatch_stub_325
00000000005e6030 0000000000000034 T shared_dispatch_stub_326
00000000005e6070 0000000000000034 T shared_dispatch_stub_327
00000000005e60b0 0000000000000034 T shared_dispatch_stub_328
00000000005e60f0 0000000000000034 T shared_dispatch_stub_329
00000000005e6130 0000000000000034 T shared_dispatch_stub_330
00000000005e6170 0000000000000034 T shared_dispatch_stub_331
00000000005e61b0 0000000000000034 T shared_dispatch_stub_332
00000000005e61f0 0000000000000034 T shared_dispatch_stub_333
00000000005e6230 0000000000000028 T shared_dispatch_stub_334
00000000005e6260 0000000000000034 T shared_dispatch_stub_335
00000000005e62a0 0000000000000028 T shared_dispatch_stub_336
00000000005e62d0 0000000000000034 T shared_dispatch_stub_337
00000000005e6310 0000000000000034 T shared_dispatch_stub_338
00000000005e6350 0000000000000034 T shared_dispatch_stub_339
00000000005e6390 0000000000000034 T shared_dispatch_stub_340
00000000005e63d0 0000000000000034 T shared_dispatch_stub_341
00000000005e6410 0000000000000034 T shared_dispatch_stub_342
00000000005e6450 0000000000000034 T shared_dispatch_stub_343
00000000005e6490 0000000000000034 T shared_dispatch_stub_344
00000000005e64d0 0000000000000034 T shared_dispatch_stub_345
00000000005e6510 0000000000000034 T shared_dispatch_stub_346
00000000005e6550 0000000000000034 T shared_dispatch_stub_347
00000000005e6590 0000000000000034 T shared_dispatch_stub_348
00000000005e65d0 0000000000000034 T shared_dispatch_stub_349
00000000005e6610 0000000000000034 T shared_dispatch_stub_350
00000000005e6650 0000000000000034 T shared_dispatch_stub_351
00000000005e6690 0000000000000034 T shared_dispatch_stub_352
00000000005e66d0 0000000000000034 T shared_dispatch_stub_353
00000000005e6710 0000000000000034 T shared_dispatch_stub_354
00000000005e6750 0000000000000034 T shared_dispatch_stub_355
00000000005e6790 0000000000000034 T shared_dispatch_stub_356
00000000005e67d0 0000000000000034 T shared_dispatch_stub_357
00000000005e6810 0000000000000034 T shared_dispatch_stub_358
00000000005e6850 0000000000000034 T shared_dispatch_stub_359
00000000005e6890 0000000000000034 T shared_dispatch_stub_360
00000000005e68d0 0000000000000034 T shared_dispatch_stub_361
00000000005e6910 0000000000000034 T shared_dispatch_stub_362
00000000005e6950 0000000000000034 T shared_dispatch_stub_363
00000000005e6990 0000000000000034 T shared_dispatch_stub_364
00000000005e69d0 0000000000000034 T shared_dispatch_stub_365
00000000005e6a10 0000000000000034 T shared_dispatch_stub_366
00000000005e6a50 0000000000000034 T shared_dispatch_stub_367
00000000005e6a90 0000000000000034 T shared_dispatch_stub_368
00000000005e6ad0 0000000000000034 T shared_dispatch_stub_369
00000000005e6b10 0000000000000034 T shared_dispatch_stub_370
00000000005e6b50 0000000000000034 T shared_dispatch_stub_371
00000000005e6b90 0000000000000034 T shared_dispatch_stub_372
00000000005e6bd0 0000000000000034 T shared_dispatch_stub_373
00000000005e6c10 0000000000000034 T shared_dispatch_stub_374
00000000005e6c50 0000000000000034 T shared_dispatch_stub_375
00000000005e6c90 0000000000000034 T shared_dispatch_stub_376
00000000005e6cd0 0000000000000034 T shared_dispatch_stub_377
00000000005e6d10 0000000000000034 T shared_dispatch_stub_378
00000000005e6d50 0000000000000034 T shared_dispatch_stub_379
00000000005e6d90 0000000000000034 T shared_dispatch_stub_380
00000000005e6dd0 0000000000000034 T shared_dispatch_stub_381
00000000005e6e10 0000000000000034 T shared_dispatch_stub_382
00000000005e6e50 0000000000000034 T shared_dispatch_stub_383
00000000005e6e90 0000000000000034 T shared_dispatch_stub_384
00000000005e6ed0 0000000000000034 T shared_dispatch_stub_385
00000000005e6f10 0000000000000034 T shared_dispatch_stub_386
00000000005e6f50 0000000000000034 T shared_dispatch_stub_387
00000000005e6f90 0000000000000034 T shared_dispatch_stub_388
00000000005e6fd0 0000000000000034 T shared_dispatch_stub_389
00000000005e7010 0000000000000034 T shared_dispatch_stub_390
00000000005e7050 0000000000000034 T shared_dispatch_stub_391
00000000005e7090 0000000000000034 T shared_dispatch_stub_392
00000000005e70d0 0000000000000034 T shared_dispatch_stub_393
00000000005e7110 0000000000000034 T shared_dispatch_stub_394
00000000005e7150 0000000000000034 T shared_dispatch_stub_395
00000000005e7190 0000000000000034 T shared_dispatch_stub_396
00000000005e71d0 0000000000000034 T shared_dispatch_stub_397
00000000005e7210 0000000000000034 T shared_dispatch_stub_398
00000000005e7250 0000000000000034 T shared_dispatch_stub_399
00000000005e7290 0000000000000034 T shared_dispatch_stub_400
00000000005e72d0 0000000000000034 T shared_dispatch_stub_401
00000000005e7310 0000000000000034 T shared_dispatch_stub_402
00000000005e7350 0000000000000034 T shared_dispatch_stub_403
00000000005e7390 0000000000000034 T shared_dispatch_stub_404
00000000005e73d0 0000000000000034 T shared_dispatch_stub_405
00000000005e7410 0000000000000034 T shared_dispatch_stub_406
00000000005e7450 0000000000000034 T shared_dispatch_stub_407
00000000005e7490 0000000000000034 T shared_dispatch_stub_408
00000000005e74d0 0000000000000034 T shared_dispatch_stub_409
00000000005e7510 0000000000000034 T shared_dispatch_stub_410
00000000005e7550 0000000000000034 T shared_dispatch_stub_411
00000000005e7590 0000000000000034 T shared_dispatch_stub_412
00000000005e75d0 0000000000000034 T shared_dispatch_stub_413
00000000005e7610 0000000000000034 T shared_dispatch_stub_414
00000000005e7650 0000000000000034 T shared_dispatch_stub_415
00000000005e7690 0000000000000034 T shared_dispatch_stub_416
00000000005e76d0 0000000000000034 T shared_dispatch_stub_417
00000000005e7710 0000000000000034 T shared_dispatch_stub_418
00000000005e7750 0000000000000034 T shared_dispatch_stub_419
00000000005e7790 0000000000000034 T shared_dispatch_stub_420
00000000005e77d0 0000000000000034 T shared_dispatch_stub_421
00000000005e7810 0000000000000028 T shared_dispatch_stub_422
00000000005e7840 0000000000000034 T shared_dispatch_stub_423
00000000005e7880 0000000000000034 T shared_dispatch_stub_424
00000000005e78c0 0000000000000034 T shared_dispatch_stub_425
00000000005e7900 0000000000000034 T shared_dispatch_stub_426
00000000005e7940 0000000000000034 T shared_dispatch_stub_427
00000000005e7980 0000000000000034 T shared_dispatch_stub_428
00000000005e79c0 0000000000000034 T shared_dispatch_stub_429
00000000005e7a00 0000000000000034 T shared_dispatch_stub_430
00000000005e7a40 0000000000000028 T shared_dispatch_stub_431
00000000005e7a70 0000000000000034 T shared_dispatch_stub_432
00000000005e7ab0 0000000000000034 T shared_dispatch_stub_433
00000000005e7af0 0000000000000034 T shared_dispatch_stub_434
00000000005e7b30 0000000000000034 T shared_dispatch_stub_435
00000000005e7b70 0000000000000034 T shared_dispatch_stub_436
00000000005e7bb0 0000000000000034 T shared_dispatch_stub_437
00000000005e7bf0 0000000000000034 T shared_dispatch_stub_438
00000000005e7c30 0000000000000034 T shared_dispatch_stub_439
00000000005e7c70 0000000000000034 T shared_dispatch_stub_440
00000000005e7cb0 0000000000000034 T shared_dispatch_stub_441
00000000005e7cf0 0000000000000034 T shared_dispatch_stub_442
00000000005e7d30 0000000000000034 T shared_dispatch_stub_443
00000000005e7d70 0000000000000028 T shared_dispatch_stub_444
00000000005e7da0 0000000000000034 T shared_dispatch_stub_445
00000000005e7de0 0000000000000028 T shared_dispatch_stub_446
00000000005e7e10 0000000000000034 T shared_dispatch_stub_447
00000000005e7e50 0000000000000034 T shared_dispatch_stub_448
00000000005e7e90 0000000000000034 T shared_dispatch_stub_449
00000000005e7ed0 0000000000000034 T shared_dispatch_stub_450
00000000005e7f10 0000000000000034 T shared_dispatch_stub_451
00000000005e7f50 0000000000000028 T shared_dispatch_stub_452
00000000005e7f80 0000000000000034 T shared_dispatch_stub_453
00000000005e7fc0 0000000000000028 T shared_dispatch_stub_454
00000000005e7ff0 0000000000000034 T shared_dispatch_stub_455
00000000005e8030 0000000000000034 T shared_dispatch_stub_456
00000000005e8070 0000000000000034 T shared_dispatch_stub_457
00000000005e80b0 0000000000000034 T shared_dispatch_stub_458
00000000005e80f0 0000000000000034 T shared_dispatch_stub_459
00000000005e8130 0000000000000034 T shared_dispatch_stub_460
00000000005e8170 0000000000000034 T shared_dispatch_stub_461
00000000005e81b0 0000000000000034 T shared_dispatch_stub_462
00000000005e81f0 0000000000000034 T shared_dispatch_stub_463
00000000005e8230 0000000000000034 T shared_dispatch_stub_464
00000000005e8270 0000000000000034 T shared_dispatch_stub_465
00000000005e82b0 0000000000000034 T shared_dispatch_stub_466
00000000005e82f0 0000000000000034 T shared_dispatch_stub_467
00000000005e8330 0000000000000034 T shared_dispatch_stub_468
00000000005e8370 0000000000000034 T shared_dispatch_stub_469
00000000005e83b0 0000000000000034 T shared_dispatch_stub_470
00000000005e83f0 0000000000000034 T shared_dispatch_stub_471
00000000005e8430 0000000000000034 T shared_dispatch_stub_472
00000000005e8470 0000000000000034 T shared_dispatch_stub_473
00000000005e84b0 0000000000000034 T shared_dispatch_stub_474
00000000005e84f0 0000000000000034 T shared_dispatch_stub_475
00000000005e8530 0000000000000034 T shared_dispatch_stub_476
00000000005e8570 0000000000000034 T shared_dispatch_stub_477
00000000005e85b0 0000000000000034 T shared_dispatch_stub_478
00000000005e85f0 0000000000000034 T shared_dispatch_stub_479
00000000005e8630 0000000000000034 T shared_dispatch_stub_480
00000000005e8670 0000000000000034 T shared_dispatch_stub_481
00000000005e86b0 0000000000000034 T shared_dispatch_stub_482
00000000005e86f0 0000000000000028 T shared_dispatch_stub_483
00000000005e8720 0000000000000034 T shared_dispatch_stub_484
00000000005e8760 0000000000000034 T shared_dispatch_stub_485
00000000005e87a0 0000000000000034 T shared_dispatch_stub_486
00000000005e87e0 0000000000000034 T shared_dispatch_stub_487
00000000005e8820 0000000000000034 T shared_dispatch_stub_488
00000000005e8860 0000000000000034 T shared_dispatch_stub_489
00000000005e88a0 0000000000000034 T shared_dispatch_stub_490
00000000005e88e0 0000000000000034 T shared_dispatch_stub_491
00000000005e8920 0000000000000034 T shared_dispatch_stub_492
00000000005e8960 0000000000000034 T shared_dispatch_stub_493
00000000005e89a0 0000000000000034 T shared_dispatch_stub_494
00000000005e89e0 0000000000000034 T shared_dispatch_stub_495
00000000005e8a20 0000000000000034 T shared_dispatch_stub_496
00000000005e8a60 0000000000000034 T shared_dispatch_stub_497
00000000005e8aa0 0000000000000034 T shared_dispatch_stub_498
00000000005e8ae0 0000000000000034 T shared_dispatch_stub_499
00000000005e8b20 0000000000000034 T shared_dispatch_stub_500
00000000005e8b60 0000000000000034 T shared_dispatch_stub_501
00000000005e8ba0 0000000000000034 T shared_dispatch_stub_502
00000000005e8be0 0000000000000034 T shared_dispatch_stub_503
00000000005e8c20 0000000000000034 T shared_dispatch_stub_504
00000000005e8c60 0000000000000034 T shared_dispatch_stub_505
00000000005e8ca0 0000000000000034 T shared_dispatch_stub_506
00000000005e8ce0 0000000000000034 T shared_dispatch_stub_507
00000000005e8d20 0000000000000034 T shared_dispatch_stub_508
00000000005e8d60 0000000000000034 T shared_dispatch_stub_509
00000000005e8da0 0000000000000034 T shared_dispatch_stub_510
00000000005e8de0 0000000000000034 T shared_dispatch_stub_511
00000000005e8e20 0000000000000034 T shared_dispatch_stub_512
00000000005e8e60 0000000000000034 T shared_dispatch_stub_513
00000000005e8ea0 0000000000000034 T shared_dispatch_stub_514
00000000005e8ee0 0000000000000034 T shared_dispatch_stub_515
00000000005e8f20 0000000000000034 T shared_dispatch_stub_516
00000000005e8f60 0000000000000034 T shared_dispatch_stub_517
00000000005e8fa0 0000000000000034 T shared_dispatch_stub_518
00000000005e8fe0 0000000000000034 T shared_dispatch_stub_519
00000000005e9020 0000000000000034 T shared_dispatch_stub_520
00000000005e9060 0000000000000034 T shared_dispatch_stub_521
00000000005e90a0 0000000000000034 T shared_dispatch_stub_522
00000000005e90e0 0000000000000034 T shared_dispatch_stub_523
00000000005e9120 0000000000000034 T shared_dispatch_stub_524
00000000005e9160 0000000000000034 T shared_dispatch_stub_525
00000000005e91a0 0000000000000034 T shared_dispatch_stub_526
00000000005e91e0 0000000000000034 T shared_dispatch_stub_527
00000000005e9220 0000000000000034 T shared_dispatch_stub_528
00000000005e9260 0000000000000034 T shared_dispatch_stub_529
00000000005e92a0 0000000000000034 T shared_dispatch_stub_530
00000000005e92e0 0000000000000034 T shared_dispatch_stub_531
00000000005e9320 0000000000000034 T shared_dispatch_stub_532
00000000005e9360 0000000000000034 T shared_dispatch_stub_533
00000000005e93a0 0000000000000034 T shared_dispatch_stub_534
00000000005e93e0 0000000000000034 T shared_dispatch_stub_535
00000000005e9420 0000000000000034 T shared_dispatch_stub_536
00000000005e9460 0000000000000034 T shared_dispatch_stub_537
00000000005e94a0 0000000000000034 T shared_dispatch_stub_538
00000000005e94e0 0000000000000034 T shared_dispatch_stub_539
00000000005e9520 0000000000000034 T shared_dispatch_stub_540
00000000005e9560 0000000000000034 T shared_dispatch_stub_541
00000000005e95a0 0000000000000034 T shared_dispatch_stub_542
00000000005e95e0 0000000000000034 T shared_dispatch_stub_543
00000000005e9620 0000000000000034 T shared_dispatch_stub_544
00000000005e9660 0000000000000034 T shared_dispatch_stub_545
00000000005e96a0 0000000000000034 T shared_dispatch_stub_546
00000000005e96e0 0000000000000034 T shared_dispatch_stub_547
00000000005e9720 0000000000000034 T shared_dispatch_stub_548
00000000005e9760 0000000000000034 T shared_dispatch_stub_549
00000000005e97a0 0000000000000034 T shared_dispatch_stub_550
00000000005e97e0 0000000000000034 T shared_dispatch_stub_551
00000000005e9820 0000000000000034 T shared_dispatch_stub_552
00000000005e9860 0000000000000034 T shared_dispatch_stub_553
00000000005e98a0 0000000000000034 T shared_dispatch_stub_554
00000000005e98e0 0000000000000034 T shared_dispatch_stub_555
00000000005e9920 0000000000000034 T shared_dispatch_stub_556
00000000005e9960 0000000000000034 T shared_dispatch_stub_557
00000000005e99a0 0000000000000034 T shared_dispatch_stub_558
00000000005e99e0 0000000000000034 T shared_dispatch_stub_559
00000000005e9a20 0000000000000034 T shared_dispatch_stub_560
00000000005e9a60 0000000000000034 T shared_dispatch_stub_561
00000000005e9aa0 0000000000000034 T shared_dispatch_stub_562
00000000005e9ae0 0000000000000034 T shared_dispatch_stub_563
00000000005e9b20 0000000000000034 T shared_dispatch_stub_564
00000000005e9b60 0000000000000034 T shared_dispatch_stub_565
00000000005e9ba0 0000000000000034 T shared_dispatch_stub_566
00000000005e9be0 0000000000000034 T shared_dispatch_stub_567
00000000005e9c20 0000000000000034 T shared_dispatch_stub_568
00000000005e9c60 0000000000000034 T shared_dispatch_stub_569
00000000005e9ca0 0000000000000034 T shared_dispatch_stub_570
00000000005e9ce0 0000000000000034 T shared_dispatch_stub_571
00000000005e9d20 0000000000000034 T shared_dispatch_stub_572
00000000005e9d60 0000000000000034 T shared_dispatch_stub_573
00000000005e9da0 0000000000000034 T shared_dispatch_stub_574
00000000005e9de0 0000000000000034 T shared_dispatch_stub_575
00000000005e9e20 0000000000000034 T shared_dispatch_stub_576
00000000005e9e60 0000000000000034 T shared_dispatch_stub_577
00000000005e9ea0 0000000000000034 T shared_dispatch_stub_578
00000000005e9ee0 0000000000000034 T shared_dispatch_stub_579
00000000005e9f20 0000000000000034 T shared_dispatch_stub_580
00000000005e9f60 0000000000000034 T shared_dispatch_stub_581
00000000005e9fa0 0000000000000034 T shared_dispatch_stub_582
00000000005e9fe0 0000000000000028 T shared_dispatch_stub_583
00000000005ea010 0000000000000028 T shared_dispatch_stub_584
00000000005ea040 0000000000000034 T shared_dispatch_stub_585
00000000005ea080 0000000000000034 T shared_dispatch_stub_586
00000000005ea0c0 0000000000000034 T shared_dispatch_stub_587
00000000005ea100 0000000000000034 T shared_dispatch_stub_588
00000000005ea140 0000000000000034 T shared_dispatch_stub_589
00000000005ea180 0000000000000034 T shared_dispatch_stub_590
00000000005ea1c0 0000000000000034 T shared_dispatch_stub_591
00000000005ea200 0000000000000034 T shared_dispatch_stub_592
00000000005ea240 0000000000000034 T shared_dispatch_stub_593
00000000005ea280 0000000000000034 T shared_dispatch_stub_594
00000000005ea2c0 0000000000000034 T shared_dispatch_stub_595
00000000005ea300 0000000000000034 T shared_dispatch_stub_596
00000000005ea340 0000000000000034 T shared_dispatch_stub_597
00000000005ea380 0000000000000034 T shared_dispatch_stub_598
00000000005ea3c0 0000000000000034 T shared_dispatch_stub_599
00000000005ea400 0000000000000034 T shared_dispatch_stub_600
00000000005ea440 0000000000000034 T shared_dispatch_stub_601
00000000005ea480 0000000000000034 T shared_dispatch_stub_602
00000000005ea4c0 0000000000000034 T shared_dispatch_stub_603
00000000005ea500 0000000000000034 T shared_dispatch_stub_604
00000000005ea540 0000000000000034 T shared_dispatch_stub_605
00000000005ea580 0000000000000034 T shared_dispatch_stub_606
00000000005ea5c0 0000000000000034 T shared_dispatch_stub_607
00000000005ea600 0000000000000034 T shared_dispatch_stub_608
00000000005ea640 0000000000000034 T shared_dispatch_stub_609
00000000005ea680 0000000000000034 T shared_dispatch_stub_610
00000000005ea6c0 0000000000000034 T shared_dispatch_stub_611
00000000005ea700 0000000000000034 T shared_dispatch_stub_612
00000000005ea740 0000000000000034 T shared_dispatch_stub_613
00000000005ea780 0000000000000034 T shared_dispatch_stub_614
00000000005ea7c0 0000000000000034 T shared_dispatch_stub_615
00000000005ea800 0000000000000034 T shared_dispatch_stub_616
00000000005ea840 0000000000000034 T shared_dispatch_stub_617
00000000005ea880 0000000000000034 T shared_dispatch_stub_618
00000000005ea8c0 0000000000000034 T shared_dispatch_stub_619
00000000005ea900 0000000000000028 T shared_dispatch_stub_620
00000000005ea930 0000000000000034 T shared_dispatch_stub_621
00000000005ea970 0000000000000034 T shared_dispatch_stub_622
00000000005ea9b0 0000000000000034 T shared_dispatch_stub_623
00000000005ea9f0 0000000000000034 T shared_dispatch_stub_624
00000000005eaa30 0000000000000034 T shared_dispatch_stub_625
00000000005eaa70 0000000000000034 T shared_dispatch_stub_626
00000000005eaab0 0000000000000034 T shared_dispatch_stub_627
00000000005eaaf0 0000000000000034 T shared_dispatch_stub_628
00000000005eab30 0000000000000034 T shared_dispatch_stub_629
00000000005eab70 0000000000000034 T shared_dispatch_stub_630
00000000005eabb0 0000000000000034 T shared_dispatch_stub_631
00000000005eabf0 0000000000000034 T shared_dispatch_stub_632
00000000005eac30 0000000000000034 T shared_dispatch_stub_633
00000000005eac70 0000000000000034 T shared_dispatch_stub_634
00000000005eacb0 0000000000000034 T shared_dispatch_stub_635
00000000005eacf0 0000000000000034 T shared_dispatch_stub_636
00000000005ead30 0000000000000034 T shared_dispatch_stub_637
00000000005ead70 0000000000000034 T shared_dispatch_stub_638
00000000005eadb0 0000000000000034 T shared_dispatch_stub_639
00000000005eadf0 0000000000000034 T shared_dispatch_stub_640
00000000005eae30 0000000000000034 T shared_dispatch_stub_641
00000000005eae70 0000000000000034 T shared_dispatch_stub_642
00000000005eaeb0 0000000000000034 T shared_dispatch_stub_643
00000000005eaef0 0000000000000034 T shared_dispatch_stub_644
00000000005eaf30 0000000000000034 T shared_dispatch_stub_645
00000000005eaf70 0000000000000034 T shared_dispatch_stub_646
00000000005eafb0 0000000000000034 T shared_dispatch_stub_647
00000000005eaff0 0000000000000034 T shared_dispatch_stub_648
00000000005eb030 0000000000000034 T shared_dispatch_stub_649
00000000005eb070 0000000000000028 T shared_dispatch_stub_650
00000000005eb0a0 0000000000000034 T shared_dispatch_stub_651
00000000005eb0e0 0000000000000034 T shared_dispatch_stub_652
00000000005eb120 0000000000000034 T shared_dispatch_stub_653
00000000005eb160 0000000000000034 T shared_dispatch_stub_654
00000000005eb1a0 0000000000000034 T shared_dispatch_stub_655
00000000005eb1e0 0000000000000034 T shared_dispatch_stub_656
00000000005eb220 0000000000000034 T shared_dispatch_stub_657
00000000005eb260 0000000000000034 T shared_dispatch_stub_658
00000000005eb2a0 0000000000000034 T shared_dispatch_stub_659
00000000005eb2e0 0000000000000034 T shared_dispatch_stub_660
00000000005eb320 0000000000000034 T shared_dispatch_stub_661
00000000005eb360 0000000000000034 T shared_dispatch_stub_662
00000000005eb3a0 0000000000000034 T shared_dispatch_stub_663
00000000005eb3e0 0000000000000034 T shared_dispatch_stub_664
00000000005eb420 0000000000000034 T shared_dispatch_stub_665
00000000005eb460 0000000000000034 T shared_dispatch_stub_666
00000000005eb4a0 0000000000000034 T shared_dispatch_stub_667
00000000005eb4e0 0000000000000034 T shared_dispatch_stub_668
00000000005eb520 0000000000000034 T shared_dispatch_stub_669
00000000005eb560 0000000000000034 T shared_dispatch_stub_670
00000000005eb5a0 0000000000000034 T shared_dispatch_stub_671
00000000005eb5e0 0000000000000034 T shared_dispatch_stub_672
00000000005eb620 0000000000000034 T shared_dispatch_stub_673
00000000005eb660 0000000000000034 T shared_dispatch_stub_674
00000000005eb6a0 0000000000000034 T shared_dispatch_stub_675
00000000005eb6e0 0000000000000034 T shared_dispatch_stub_676
00000000005eb720 0000000000000034 T shared_dispatch_stub_677
00000000005eb760 0000000000000034 T shared_dispatch_stub_678
00000000005eb7a0 0000000000000034 T shared_dispatch_stub_679
00000000005eb7e0 0000000000000034 T shared_dispatch_stub_680
00000000005eb820 0000000000000034 T shared_dispatch_stub_681
00000000005eb860 0000000000000034 T shared_dispatch_stub_682
00000000005eb8a0 0000000000000034 T shared_dispatch_stub_683
00000000005eb8e0 0000000000000034 T shared_dispatch_stub_684
00000000005eb920 0000000000000034 T shared_dispatch_stub_685
00000000005eb960 0000000000000034 T shared_dispatch_stub_686
00000000005eb9a0 0000000000000034 T shared_dispatch_stub_687
00000000005eb9e0 0000000000000034 T shared_dispatch_stub_688
00000000005eba20 0000000000000034 T shared_dispatch_stub_689
00000000005eba60 0000000000000034 T shared_dispatch_stub_690
00000000005ebaa0 0000000000000034 T shared_dispatch_stub_691
00000000005ebae0 0000000000000034 T shared_dispatch_stub_692
00000000005ebb20 0000000000000034 T shared_dispatch_stub_693
00000000005ebb60 0000000000000034 T shared_dispatch_stub_694
00000000005ebba0 0000000000000034 T shared_dispatch_stub_695
00000000005ebbe0 0000000000000034 T shared_dispatch_stub_696
00000000005ebc20 0000000000000034 T shared_dispatch_stub_697
00000000005ebc60 0000000000000034 T shared_dispatch_stub_698
00000000005ebca0 0000000000000034 T shared_dispatch_stub_699
00000000005ebce0 0000000000000034 T shared_dispatch_stub_700
00000000005ebd20 0000000000000034 T shared_dispatch_stub_701
00000000005ebd60 0000000000000034 T shared_dispatch_stub_702
00000000005ebda0 0000000000000034 T shared_dispatch_stub_703
00000000005ebde0 0000000000000034 T shared_dispatch_stub_704
00000000005ebe20 0000000000000034 T shared_dispatch_stub_705
00000000005ebe60 0000000000000034 T shared_dispatch_stub_706
00000000005ebea0 0000000000000034 T shared_dispatch_stub_707
00000000005ebee0 0000000000000034 T shared_dispatch_stub_708
00000000005ebf20 0000000000000034 T shared_dispatch_stub_709
00000000005ebf60 0000000000000034 T shared_dispatch_stub_710
00000000005ebfa0 0000000000000034 T shared_dispatch_stub_711
00000000005ebfe0 0000000000000034 T shared_dispatch_stub_712
00000000005ec020 0000000000000034 T shared_dispatch_stub_713
00000000005ec060 0000000000000034 T shared_dispatch_stub_714
00000000005ec0a0 0000000000000034 T shared_dispatch_stub_715
00000000005ec0e0 0000000000000034 T shared_dispatch_stub_716
00000000005ec120 0000000000000034 T shared_dispatch_stub_717
00000000005ec160 0000000000000034 T shared_dispatch_stub_718
00000000005ec1a0 0000000000000034 T shared_dispatch_stub_719
00000000005ec1e0 0000000000000034 T shared_dispatch_stub_720
00000000005ec220 0000000000000034 T shared_dispatch_stub_721
00000000005ec260 0000000000000034 T shared_dispatch_stub_722
00000000005ec2a0 0000000000000034 T shared_dispatch_stub_723
00000000005ec2e0 0000000000000034 T shared_dispatch_stub_724
00000000005ec320 0000000000000034 T shared_dispatch_stub_725
00000000005ec360 0000000000000034 T shared_dispatch_stub_726
00000000005ec3a0 0000000000000034 T shared_dispatch_stub_727
00000000005ec3e0 0000000000000034 T shared_dispatch_stub_728
00000000005ec420 0000000000000034 T shared_dispatch_stub_729
00000000005ec460 0000000000000034 T shared_dispatch_stub_730
00000000005ec4a0 0000000000000034 T shared_dispatch_stub_731
00000000005ec4e0 0000000000000034 T shared_dispatch_stub_732
00000000005ec520 0000000000000034 T shared_dispatch_stub_733
00000000005ec560 0000000000000034 T shared_dispatch_stub_734
00000000005ec5a0 0000000000000034 T shared_dispatch_stub_735
00000000005ec5e0 0000000000000034 T shared_dispatch_stub_736
00000000005ec620 0000000000000034 T shared_dispatch_stub_737
00000000005ec660 0000000000000034 T shared_dispatch_stub_738
00000000005ec6a0 0000000000000034 T shared_dispatch_stub_739
00000000005ec6e0 0000000000000034 T shared_dispatch_stub_740
00000000005ec720 0000000000000034 T shared_dispatch_stub_741
00000000005ec760 0000000000000034 T shared_dispatch_stub_742
00000000005ec7a0 0000000000000034 T shared_dispatch_stub_743
00000000005ec7e0 0000000000000034 T shared_dispatch_stub_744
00000000005ec820 0000000000000034 T shared_dispatch_stub_745
00000000005ec860 0000000000000034 T shared_dispatch_stub_746
00000000005ec8a0 0000000000000034 T shared_dispatch_stub_747
00000000005ec8e0 0000000000000034 T shared_dispatch_stub_748
00000000005ec920 0000000000000034 T shared_dispatch_stub_749
00000000005ec960 0000000000000034 T shared_dispatch_stub_750
00000000005ec9a0 0000000000000034 T shared_dispatch_stub_751
00000000005ec9e0 0000000000000034 T shared_dispatch_stub_752
00000000005eca20 0000000000000034 T shared_dispatch_stub_753
00000000005eca60 0000000000000034 T shared_dispatch_stub_754
00000000005ecaa0 0000000000000034 T shared_dispatch_stub_755
00000000005ecae0 0000000000000034 T shared_dispatch_stub_756
00000000005ecb20 0000000000000034 T shared_dispatch_stub_757
00000000005ecb60 0000000000000034 T shared_dispatch_stub_758
00000000005ecba0 0000000000000034 T shared_dispatch_stub_759
00000000005ecbe0 0000000000000034 T shared_dispatch_stub_760
00000000005ecc20 0000000000000034 T shared_dispatch_stub_761
00000000005ecc60 0000000000000034 T shared_dispatch_stub_762
00000000005ecca0 0000000000000034 T shared_dispatch_stub_763
00000000005ecce0 0000000000000034 T shared_dispatch_stub_764
00000000005ecd20 0000000000000034 T shared_dispatch_stub_765
00000000005ecd60 0000000000000034 T shared_dispatch_stub_766
00000000005ecda0 0000000000000034 T shared_dispatch_stub_767
00000000005ecde0 0000000000000034 T shared_dispatch_stub_768
00000000005ece20 0000000000000034 T shared_dispatch_stub_769
00000000005ece60 0000000000000034 T shared_dispatch_stub_770
00000000005ecea0 0000000000000034 T shared_dispatch_stub_771
00000000005ecee0 0000000000000034 T shared_dispatch_stub_772
00000000005ecf20 0000000000000034 T shared_dispatch_stub_773
00000000005ecf60 0000000000000034 T shared_dispatch_stub_774
00000000005ecfa0 0000000000000034 T shared_dispatch_stub_775
00000000005ecfe0 0000000000000034 T shared_dispatch_stub_776
00000000005ed020 0000000000000034 T shared_dispatch_stub_777
00000000005ed060 0000000000000034 T shared_dispatch_stub_778
00000000005ed0a0 0000000000000034 T shared_dispatch_stub_779
00000000005ed0e0 0000000000000034 T shared_dispatch_stub_780
00000000005ed120 0000000000000034 T shared_dispatch_stub_781
00000000005ed160 0000000000000034 T shared_dispatch_stub_782
00000000005ed1a0 0000000000000034 T shared_dispatch_stub_783
00000000005ed1e0 0000000000000034 T shared_dispatch_stub_784
00000000005ed220 0000000000000034 T shared_dispatch_stub_785
00000000005ed260 0000000000000034 T shared_dispatch_stub_786
00000000005ed2a0 0000000000000034 T shared_dispatch_stub_787
00000000005ed2e0 0000000000000034 T shared_dispatch_stub_788
00000000005ed320 0000000000000034 T shared_dispatch_stub_789
00000000005ed360 0000000000000034 T shared_dispatch_stub_790
00000000005ed3a0 0000000000000034 T shared_dispatch_stub_791
00000000005ed3e0 0000000000000034 T shared_dispatch_stub_792
00000000005ed420 0000000000000034 T shared_dispatch_stub_793
00000000005ed460 0000000000000034 T shared_dispatch_stub_794
00000000005ed4a0 0000000000000034 T shared_dispatch_stub_795
00000000005ed4e0 0000000000000034 T shared_dispatch_stub_796
00000000005ed520 0000000000000034 T shared_dispatch_stub_797
00000000005ed560 0000000000000034 T shared_dispatch_stub_798
00000000005ed5a0 0000000000000034 T shared_dispatch_stub_799
00000000005ed5e0 0000000000000034 T shared_dispatch_stub_800
00000000005ed620 0000000000000034 T shared_dispatch_stub_801
00000000005ed660 0000000000000034 T shared_dispatch_stub_802
00000000005ed6a0 0000000000000034 T shared_dispatch_stub_803
00000000005ed6e0 0000000000000034 T shared_dispatch_stub_804
00000000005ed720 0000000000000034 T shared_dispatch_stub_805
00000000005ed760 0000000000000034 T shared_dispatch_stub_806
00000000005ed7a0 0000000000000028 T shared_dispatch_stub_807
00000000005ed7d0 0000000000000028 T shared_dispatch_stub_808
00000000005ed800 0000000000000034 T shared_dispatch_stub_809
00000000005ed840 0000000000000034 T shared_dispatch_stub_810
00000000005ed880 0000000000000034 T shared_dispatch_stub_811
00000000005ed8c0 0000000000000034 T shared_dispatch_stub_812
00000000005ed900 0000000000000028 T shared_dispatch_stub_813
00000000005ed930 0000000000000028 T shared_dispatch_stub_814
00000000005ed960 0000000000000034 T shared_dispatch_stub_815
00000000005ed9a0 0000000000000028 T shared_dispatch_stub_816
00000000005ed9d0 0000000000000034 T shared_dispatch_stub_817
00000000005eda10 0000000000000034 T shared_dispatch_stub_818
00000000005eda50 0000000000000034 T shared_dispatch_stub_819
00000000005eda90 0000000000000034 T shared_dispatch_stub_820
00000000005edad0 0000000000000034 T shared_dispatch_stub_821
00000000005edb10 0000000000000034 T shared_dispatch_stub_822
00000000005edb50 0000000000000034 T shared_dispatch_stub_823
00000000005edb90 0000000000000034 T shared_dispatch_stub_824
00000000005edbd0 0000000000000034 T shared_dispatch_stub_825
00000000005edc10 0000000000000034 T shared_dispatch_stub_826
00000000005edc50 0000000000000034 T shared_dispatch_stub_827
00000000005edc90 0000000000000034 T shared_dispatch_stub_828
00000000005edcd0 0000000000000034 T shared_dispatch_stub_829
00000000005edd10 0000000000000034 T shared_dispatch_stub_830
00000000005edd50 0000000000000034 T shared_dispatch_stub_831
00000000005edd90 0000000000000034 T shared_dispatch_stub_832
00000000005eddd0 0000000000000034 T shared_dispatch_stub_833
00000000005ede10 0000000000000034 T shared_dispatch_stub_834
00000000005ede50 0000000000000034 T shared_dispatch_stub_835
00000000005ede90 0000000000000034 T shared_dispatch_stub_836
00000000005eded0 0000000000000034 T shared_dispatch_stub_837
00000000005edf10 0000000000000034 T shared_dispatch_stub_838
00000000005edf50 0000000000000034 T shared_dispatch_stub_839
00000000005edf90 0000000000000034 T shared_dispatch_stub_840
00000000005edfd0 0000000000000028 T shared_dispatch_stub_841
00000000005ee000 0000000000000034 T shared_dispatch_stub_842
00000000005ee040 0000000000000034 T shared_dispatch_stub_843
00000000005ee080 0000000000000034 T shared_dispatch_stub_844
00000000005ee0c0 0000000000000034 T shared_dispatch_stub_845
00000000005ee100 0000000000000034 T shared_dispatch_stub_846
00000000005ee140 0000000000000034 T shared_dispatch_stub_847
00000000005ee180 0000000000000034 T shared_dispatch_stub_848
00000000005ee1c0 0000000000000034 T shared_dispatch_stub_849
00000000005ee200 0000000000000034 T shared_dispatch_stub_850
00000000005ee240 0000000000000034 T shared_dispatch_stub_851
00000000005ee280 0000000000000034 T shared_dispatch_stub_852
00000000005ee2c0 0000000000000034 T shared_dispatch_stub_853
00000000005ee300 0000000000000034 T shared_dispatch_stub_854
00000000005ee340 0000000000000034 T shared_dispatch_stub_855
00000000005ee380 0000000000000034 T shared_dispatch_stub_856
00000000005ee3c0 0000000000000034 T shared_dispatch_stub_857
00000000005ee400 0000000000000034 T shared_dispatch_stub_858
00000000005ee440 0000000000000034 T shared_dispatch_stub_859
00000000005ee480 0000000000000034 T shared_dispatch_stub_860
00000000005ee4c0 0000000000000034 T shared_dispatch_stub_861
00000000005ee500 0000000000000034 T shared_dispatch_stub_862
00000000005ee540 0000000000000034 T shared_dispatch_stub_863
00000000005ee580 0000000000000034 T shared_dispatch_stub_864
00000000005ee5c0 0000000000000034 T shared_dispatch_stub_865
00000000005ee600 0000000000000034 T shared_dispatch_stub_866
00000000005ee640 0000000000000034 T shared_dispatch_stub_867
00000000005ee680 0000000000000034 T shared_dispatch_stub_868
00000000005ee6c0 0000000000000034 T shared_dispatch_stub_869
00000000005ee700 0000000000000034 T shared_dispatch_stub_870
00000000005ee740 0000000000000034 T shared_dispatch_stub_871
00000000005ee780 0000000000000034 T shared_dispatch_stub_872
00000000005ee7c0 0000000000000034 T shared_dispatch_stub_873
00000000005ee800 0000000000000034 T shared_dispatch_stub_874
00000000005ee840 0000000000000034 T shared_dispatch_stub_875
00000000005ee880 0000000000000034 T shared_dispatch_stub_876
00000000005ee8c0 0000000000000034 T shared_dispatch_stub_877
00000000005ee900 0000000000000034 T shared_dispatch_stub_878
00000000005ee940 0000000000000034 T shared_dispatch_stub_879
00000000005ee980 0000000000000034 T shared_dispatch_stub_880
00000000005ee9c0 0000000000000034 T shared_dispatch_stub_881
00000000005eea00 0000000000000034 T shared_dispatch_stub_882
00000000005eea40 0000000000000034 T shared_dispatch_stub_883
00000000005eea80 0000000000000034 T shared_dispatch_stub_884
00000000005eeac0 0000000000000034 T shared_dispatch_stub_885
00000000005eeb00 0000000000000034 T shared_dispatch_stub_886
00000000005eeb40 0000000000000034 T shared_dispatch_stub_887
00000000005eeb80 0000000000000034 T shared_dispatch_stub_888
00000000005eebc0 0000000000000034 T shared_dispatch_stub_889
00000000005eec00 0000000000000034 T shared_dispatch_stub_890
00000000005eec40 0000000000000034 T shared_dispatch_stub_891
00000000005eec80 0000000000000034 T shared_dispatch_stub_892
00000000005eecc0 0000000000000034 T shared_dispatch_stub_893
00000000005eed00 0000000000000034 T shared_dispatch_stub_894
00000000005eed40 0000000000000034 T shared_dispatch_stub_895
00000000005eed80 0000000000000034 T shared_dispatch_stub_896
00000000005eedc0 0000000000000034 T shared_dispatch_stub_897
00000000005eee00 0000000000000034 T shared_dispatch_stub_898
00000000005eee40 0000000000000034 T shared_dispatch_stub_899
00000000005eee80 0000000000000034 T shared_dispatch_stub_900
00000000005eeec0 0000000000000034 T shared_dispatch_stub_901
00000000005eef00 0000000000000034 T shared_dispatch_stub_902
00000000005eef40 0000000000000034 T shared_dispatch_stub_903
00000000005eef80 0000000000000034 T shared_dispatch_stub_904
00000000005eefc0 0000000000000034 T shared_dispatch_stub_905
00000000005ef000 0000000000000034 T shared_dispatch_stub_906
00000000005ef040 0000000000000034 T shared_dispatch_stub_907
00000000005ef080 0000000000000034 T shared_dispatch_stub_908
00000000005ef0c0 0000000000000034 T shared_dispatch_stub_909
00000000005ef100 0000000000000034 T shared_dispatch_stub_910
00000000005ef140 0000000000000034 T shared_dispatch_stub_911
00000000005ef180 0000000000000034 T shared_dispatch_stub_912
00000000005ef1c0 0000000000000034 T shared_dispatch_stub_913
00000000005ef200 0000000000000034 T shared_dispatch_stub_914
00000000005ef240 0000000000000034 T shared_dispatch_stub_915
00000000005ef280 0000000000000034 T shared_dispatch_stub_916
00000000005ef2c0 0000000000000034 T shared_dispatch_stub_917
00000000005ef300 0000000000000034 T shared_dispatch_stub_918
00000000005ef340 0000000000000034 T shared_dispatch_stub_919
00000000005ef380 0000000000000034 T shared_dispatch_stub_920
00000000005ef3c0 0000000000000034 T shared_dispatch_stub_921
00000000005ef400 0000000000000034 T shared_dispatch_stub_922
00000000005ef440 0000000000000034 T shared_dispatch_stub_923
00000000005ef480 0000000000000034 T shared_dispatch_stub_924
00000000005ef4c0 0000000000000034 T shared_dispatch_stub_925
00000000005ef500 0000000000000034 T shared_dispatch_stub_926
00000000005ef540 0000000000000034 T shared_dispatch_stub_927
00000000005ef580 0000000000000034 T shared_dispatch_stub_928
00000000005ef5c0 0000000000000034 T shared_dispatch_stub_929
00000000005ef600 0000000000000034 T shared_dispatch_stub_930
00000000005ef640 0000000000000034 T shared_dispatch_stub_931
00000000005ef680 0000000000000034 T shared_dispatch_stub_932
00000000005ef6c0 0000000000000034 T shared_dispatch_stub_933
00000000005ef700 0000000000000034 T shared_dispatch_stub_934
00000000005ef740 0000000000000034 T shared_dispatch_stub_935
00000000005ef780 0000000000000034 T shared_dispatch_stub_936
00000000005ef7c0 0000000000000034 T shared_dispatch_stub_937
00000000005ef800 0000000000000034 T shared_dispatch_stub_938
00000000005ef840 0000000000000034 T shared_dispatch_stub_939
00000000005ef880 0000000000000034 T shared_dispatch_stub_940
00000000005ef8c0 0000000000000034 T shared_dispatch_stub_941
00000000005ef900 0000000000000034 T shared_dispatch_stub_942
00000000005ef940 0000000000000034 T shared_dispatch_stub_943
00000000005ef980 0000000000000034 T shared_dispatch_stub_944
00000000005ef9c0 0000000000000034 T shared_dispatch_stub_945
00000000005efa00 0000000000000034 T shared_dispatch_stub_946
00000000005efa40 0000000000000034 T shared_dispatch_stub_947
00000000005efa80 0000000000000034 T shared_dispatch_stub_948
00000000005efac0 0000000000000034 T shared_dispatch_stub_949
00000000005efb00 0000000000000034 T shared_dispatch_stub_950
00000000005efb40 0000000000000034 T shared_dispatch_stub_951
00000000005efb80 0000000000000034 T shared_dispatch_stub_952
00000000005efbc0 0000000000000034 T shared_dispatch_stub_953
00000000005efc00 0000000000000034 T shared_dispatch_stub_954
00000000005efc40 0000000000000034 T shared_dispatch_stub_955
00000000005efc80 0000000000000034 T shared_dispatch_stub_956
00000000005efcc0 0000000000000034 T shared_dispatch_stub_957
00000000005efd00 0000000000000034 T shared_dispatch_stub_958
00000000005efd40 0000000000000034 T shared_dispatch_stub_959
00000000005efd80 0000000000000034 T shared_dispatch_stub_960
00000000005efdc0 0000000000000034 T shared_dispatch_stub_961
00000000005efe00 0000000000000034 T shared_dispatch_stub_962
00000000005efe40 0000000000000034 T shared_dispatch_stub_963
00000000005efe80 0000000000000034 T shared_dispatch_stub_964
00000000005efec0 0000000000000034 T shared_dispatch_stub_965
00000000005eff00 0000000000000034 T shared_dispatch_stub_966
00000000005eff40 0000000000000034 T shared_dispatch_stub_967
00000000005eff80 0000000000000034 T shared_dispatch_stub_968
00000000005effc0 0000000000000034 T shared_dispatch_stub_969
00000000005f0000 0000000000000034 T shared_dispatch_stub_970
00000000005f0040 0000000000000034 T shared_dispatch_stub_971
00000000005f0080 0000000000000034 T shared_dispatch_stub_972
00000000005f00c0 0000000000000034 T shared_dispatch_stub_973
00000000005f0100 0000000000000034 T shared_dispatch_stub_974
00000000005f0140 0000000000000034 T shared_dispatch_stub_975
00000000005f0180 0000000000000034 T shared_dispatch_stub_976
00000000005f01c0 0000000000000034 T shared_dispatch_stub_977
00000000005f0200 0000000000000034 T shared_dispatch_stub_978
00000000005f0240 0000000000000034 T shared_dispatch_stub_979
00000000005f0280 0000000000000034 T shared_dispatch_stub_980
00000000005f02c0 0000000000000034 T shared_dispatch_stub_981
00000000005f0300 0000000000000034 T shared_dispatch_stub_982
00000000005f0340 0000000000000034 T shared_dispatch_stub_983
00000000005f0380 0000000000000034 T shared_dispatch_stub_984
00000000005f03c0 0000000000000034 T shared_dispatch_stub_985
00000000005f0400 0000000000000034 T shared_dispatch_stub_986
00000000005f0440 0000000000000034 T shared_dispatch_stub_987
00000000005f0480 0000000000000034 T shared_dispatch_stub_988
00000000005f04c0 0000000000000034 T shared_dispatch_stub_989
00000000005f0500 0000000000000034 T shared_dispatch_stub_990
00000000005f0540 0000000000000034 T shared_dispatch_stub_991
00000000005f0580 0000000000000034 T shared_dispatch_stub_992
00000000005f05c0 0000000000000034 T shared_dispatch_stub_993
00000000005f0600 0000000000000034 T shared_dispatch_stub_994
00000000005f0640 0000000000000034 T shared_dispatch_stub_995
00000000005f0680 0000000000000034 T shared_dispatch_stub_996
00000000005f06c0 0000000000000034 T shared_dispatch_stub_997
00000000005f0700 0000000000000034 T shared_dispatch_stub_998
00000000005f0740 0000000000000034 T shared_dispatch_stub_999
00000000005f0780 0000000000000034 T shared_dispatch_stub_1000
00000000005f07c0 0000000000000034 T shared_dispatch_stub_1001
00000000005f0800 0000000000000034 T shared_dispatch_stub_1002
00000000005f0840 0000000000000034 T shared_dispatch_stub_1003
00000000005f0880 0000000000000034 T shared_dispatch_stub_1004
00000000005f08c0 0000000000000034 T shared_dispatch_stub_1005
00000000005f0900 0000000000000034 T shared_dispatch_stub_1006
00000000005f0940 0000000000000034 T shared_dispatch_stub_1007
00000000005f0980 0000000000000034 T shared_dispatch_stub_1008
00000000005f09c0 0000000000000034 T shared_dispatch_stub_1009
00000000005f0a00 0000000000000034 T shared_dispatch_stub_1010
00000000005f0a40 0000000000000034 T shared_dispatch_stub_1011
00000000005f0a80 0000000000000034 T shared_dispatch_stub_1012
00000000005f0ac0 0000000000000034 T shared_dispatch_stub_1013
00000000005f0b00 0000000000000034 T shared_dispatch_stub_1014
00000000005f0b40 0000000000000034 T shared_dispatch_stub_1015
00000000005f0b80 0000000000000034 T shared_dispatch_stub_1016
00000000005f0bc0 0000000000000034 T shared_dispatch_stub_1017
00000000005f0c00 0000000000000034 T shared_dispatch_stub_1018
00000000005f0c40 0000000000000034 T shared_dispatch_stub_1019
00000000005f0c80 0000000000000034 T shared_dispatch_stub_1020
00000000005f0cc0 0000000000000034 T shared_dispatch_stub_1021
00000000005f0d00 0000000000000034 T shared_dispatch_stub_1022
00000000005f0d40 0000000000000034 T shared_dispatch_stub_1023
00000000005f0d80 0000000000000034 T shared_dispatch_stub_1024
00000000005f0dc0 0000000000000034 T shared_dispatch_stub_1025
00000000005f0e00 0000000000000034 T shared_dispatch_stub_1026
00000000005f0e40 0000000000000034 T shared_dispatch_stub_1027
00000000005f0e80 0000000000000034 T shared_dispatch_stub_1028
00000000005f0ec0 0000000000000034 T shared_dispatch_stub_1029
00000000005f0f00 0000000000000034 T shared_dispatch_stub_1030
00000000005f0f40 0000000000000034 T shared_dispatch_stub_1031
00000000005f0f80 0000000000000034 T shared_dispatch_stub_1032
00000000005f0fc0 0000000000000034 T shared_dispatch_stub_1033
00000000005f1000 0000000000000034 T shared_dispatch_stub_1034
00000000005f1040 0000000000000034 T shared_dispatch_stub_1035
00000000005f1080 0000000000000034 T shared_dispatch_stub_1036
00000000005f10c0 0000000000000034 T shared_dispatch_stub_1037
00000000005f1100 0000000000000034 T shared_dispatch_stub_1038
00000000005f1140 0000000000000034 T shared_dispatch_stub_1039
00000000005f1180 0000000000000034 T shared_dispatch_stub_1040
00000000005f11c0 0000000000000034 T shared_dispatch_stub_1041
00000000005f1200 0000000000000034 T shared_dispatch_stub_1042
00000000005f1240 0000000000000034 T shared_dispatch_stub_1043
00000000005f1280 0000000000000034 T shared_dispatch_stub_1044
00000000005f12c0 0000000000000034 T shared_dispatch_stub_1045
00000000005f1300 0000000000000034 T shared_dispatch_stub_1046
00000000005f1340 0000000000000034 T shared_dispatch_stub_1047
00000000005f1380 0000000000000034 T shared_dispatch_stub_1048
00000000005f13c0 0000000000000034 T shared_dispatch_stub_1049
00000000005f1400 0000000000000034 T shared_dispatch_stub_1050
00000000005f1440 0000000000000034 T shared_dispatch_stub_1051
00000000005f1480 0000000000000034 T shared_dispatch_stub_1052
00000000005f14c0 0000000000000034 T shared_dispatch_stub_1053
00000000005f1500 0000000000000034 T shared_dispatch_stub_1054
00000000005f1540 0000000000000034 T shared_dispatch_stub_1055
00000000005f1580 0000000000000034 T shared_dispatch_stub_1056
00000000005f15c0 0000000000000034 T shared_dispatch_stub_1057
00000000005f1600 0000000000000034 T shared_dispatch_stub_1058
00000000005f1640 0000000000000034 T shared_dispatch_stub_1059
00000000005f1680 0000000000000034 T shared_dispatch_stub_1060
00000000005f16c0 0000000000000034 T shared_dispatch_stub_1061
00000000005f1700 0000000000000034 T shared_dispatch_stub_1062
00000000005f1740 0000000000000034 T shared_dispatch_stub_1063
00000000005f1780 0000000000000034 T shared_dispatch_stub_1064
00000000005f17c0 0000000000000034 T shared_dispatch_stub_1065
00000000005f1800 0000000000000034 T shared_dispatch_stub_1066
00000000005f1840 0000000000000034 T shared_dispatch_stub_1067
00000000005f1880 0000000000000034 T shared_dispatch_stub_1068
00000000005f18c0 0000000000000028 T shared_dispatch_stub_1069
00000000005f18f0 0000000000000034 T shared_dispatch_stub_1070
00000000005f1930 0000000000000034 T shared_dispatch_stub_1071
00000000005f1970 0000000000000034 T shared_dispatch_stub_1072
00000000005f19b0 0000000000000034 T shared_dispatch_stub_1073
00000000005f19f0 0000000000000034 T shared_dispatch_stub_1074
00000000005f1a30 0000000000000034 T shared_dispatch_stub_1075
00000000005f1a70 0000000000000034 T shared_dispatch_stub_1076
00000000005f1ab0 0000000000000034 T shared_dispatch_stub_1077
00000000005f1af0 0000000000000034 T shared_dispatch_stub_1078
00000000005f1b30 0000000000000028 T shared_dispatch_stub_1079
00000000005f1b60 0000000000000034 T shared_dispatch_stub_1080
00000000005f1ba0 0000000000000034 T shared_dispatch_stub_1081
00000000005f1be0 0000000000000034 T shared_dispatch_stub_1082
00000000005f1c20 0000000000000034 T shared_dispatch_stub_1083
00000000005f1c60 0000000000000034 T shared_dispatch_stub_1084
00000000005f1ca0 0000000000000034 T shared_dispatch_stub_1085
00000000005f1ce0 0000000000000034 T shared_dispatch_stub_1086
00000000005f1d20 0000000000000034 T shared_dispatch_stub_1087
00000000005f1d60 0000000000000034 T shared_dispatch_stub_1088
00000000005f1da0 0000000000000034 T shared_dispatch_stub_1089
00000000005f1de0 0000000000000034 T shared_dispatch_stub_1090
00000000005f1e20 0000000000000034 T shared_dispatch_stub_1091
00000000005f1e60 0000000000000034 T shared_dispatch_stub_1092
00000000005f1ea0 0000000000000034 T shared_dispatch_stub_1093
00000000005f1ee0 0000000000000034 T shared_dispatch_stub_1094
00000000005f1f20 0000000000000034 T shared_dispatch_stub_1095
00000000005f1f60 0000000000000034 T shared_dispatch_stub_1096
00000000005f1fa0 0000000000000034 T shared_dispatch_stub_1097
00000000005f1fe0 0000000000000034 T shared_dispatch_stub_1098
00000000005f2020 0000000000000034 T shared_dispatch_stub_1099
00000000005f2060 0000000000000034 T shared_dispatch_stub_1100
00000000005f20a0 0000000000000034 T shared_dispatch_stub_1101
00000000005f20e0 0000000000000034 T shared_dispatch_stub_1102
00000000005f2120 0000000000000034 T shared_dispatch_stub_1103
00000000005f2160 0000000000000034 T shared_dispatch_stub_1104
00000000005f21a0 0000000000000034 T shared_dispatch_stub_1105
00000000005f21e0 0000000000000034 T shared_dispatch_stub_1106
00000000005f2220 0000000000000034 T shared_dispatch_stub_1107
00000000005f2260 0000000000000034 T shared_dispatch_stub_1108
00000000005f22a0 0000000000000034 T shared_dispatch_stub_1109
00000000005f22e0 0000000000000034 T shared_dispatch_stub_1110
00000000005f2320 0000000000000034 T shared_dispatch_stub_1111
00000000005f2360 0000000000000034 T shared_dispatch_stub_1112
00000000005f23a0 0000000000000034 T shared_dispatch_stub_1113
00000000005f23e0 0000000000000034 T shared_dispatch_stub_1114
00000000005f2420 0000000000000034 T shared_dispatch_stub_1115
00000000005f2460 0000000000000034 T shared_dispatch_stub_1116
00000000005f24a0 0000000000000034 T shared_dispatch_stub_1117
00000000005f24e0 0000000000000034 T shared_dispatch_stub_1118
00000000005f2520 0000000000000034 T shared_dispatch_stub_1119
00000000005f2560 0000000000000034 T shared_dispatch_stub_1120
00000000005f25a0 0000000000000034 T shared_dispatch_stub_1121
00000000005f25e0 0000000000000034 T shared_dispatch_stub_1122
00000000005f2620 0000000000000034 T shared_dispatch_stub_1123
00000000005f2660 0000000000000034 T shared_dispatch_stub_1124
00000000005f26a0 0000000000000034 T shared_dispatch_stub_1125
00000000005f26e0 0000000000000034 T shared_dispatch_stub_1126
00000000005f2720 0000000000000034 T shared_dispatch_stub_1127
00000000005f2760 0000000000000034 T shared_dispatch_stub_1128
00000000005f27a0 0000000000000034 T shared_dispatch_stub_1129
00000000005f27e0 0000000000000034 T shared_dispatch_stub_1130
00000000005f2820 0000000000000034 T shared_dispatch_stub_1131
00000000005f2860 0000000000000034 T shared_dispatch_stub_1132
00000000005f28a0 0000000000000034 T shared_dispatch_stub_1133
00000000005f28e0 0000000000000034 T shared_dispatch_stub_1134
00000000005f2920 0000000000000034 T shared_dispatch_stub_1135
00000000005f2960 0000000000000034 T shared_dispatch_stub_1136
00000000005f29a0 0000000000000034 T shared_dispatch_stub_1137
00000000005f29e0 0000000000000034 T shared_dispatch_stub_1138
00000000005f2a20 0000000000000034 T shared_dispatch_stub_1139
00000000005f2a60 0000000000000034 T shared_dispatch_stub_1140
00000000005f2aa0 0000000000000034 T shared_dispatch_stub_1141
00000000005f2ae0 0000000000000034 T shared_dispatch_stub_1142
00000000005f2b20 0000000000000034 T shared_dispatch_stub_1143
00000000005f2b60 0000000000000034 T shared_dispatch_stub_1144
00000000005f2ba0 0000000000000034 T shared_dispatch_stub_1145
00000000005f2be0 0000000000000034 T shared_dispatch_stub_1146
00000000005f2c20 0000000000000034 T shared_dispatch_stub_1147
00000000005f2c60 0000000000000034 T shared_dispatch_stub_1148
00000000005f2ca0 0000000000000034 T shared_dispatch_stub_1149
00000000005f2ce0 0000000000000034 T shared_dispatch_stub_1150
00000000005f2d20 0000000000000034 T shared_dispatch_stub_1151
00000000005f2d60 0000000000000034 T shared_dispatch_stub_1152
00000000005f2da0 0000000000000034 T shared_dispatch_stub_1153
00000000005f2de0 0000000000000034 T shared_dispatch_stub_1154
00000000005f2e20 0000000000000034 T shared_dispatch_stub_1155
00000000005f2e60 0000000000000034 T shared_dispatch_stub_1156
00000000005f2ea0 0000000000000028 T shared_dispatch_stub_1157
00000000005f2ed0 0000000000000034 T shared_dispatch_stub_1158
00000000005f2f10 0000000000000034 T shared_dispatch_stub_1159
00000000005f2f50 0000000000000034 T shared_dispatch_stub_1160
00000000005f2f90 0000000000000034 T shared_dispatch_stub_1161
00000000005f2fd0 0000000000000034 T shared_dispatch_stub_1162
00000000005f3010 0000000000000034 T shared_dispatch_stub_1163
00000000005f3050 0000000000000034 T shared_dispatch_stub_1164
00000000005f3090 0000000000000034 T shared_dispatch_stub_1165
00000000005f30d0 0000000000000034 T shared_dispatch_stub_1166
00000000005f3110 0000000000000034 T shared_dispatch_stub_1167
00000000005f3150 0000000000000034 T shared_dispatch_stub_1168
00000000005f3190 0000000000000028 T shared_dispatch_stub_1169
00000000005f31c0 0000000000000034 T shared_dispatch_stub_1170
00000000005f3200 0000000000000028 T shared_dispatch_stub_1171
00000000005f3230 0000000000000034 T shared_dispatch_stub_1172
00000000005f3270 0000000000000034 T shared_dispatch_stub_1173
00000000005f32b0 0000000000000028 T shared_dispatch_stub_1174
00000000005f32e0 0000000000000034 T shared_dispatch_stub_1175
00000000005f3320 0000000000000028 T shared_dispatch_stub_1176
00000000005f3350 0000000000000028 T shared_dispatch_stub_1177
00000000005f3380 0000000000000034 T shared_dispatch_stub_1178
00000000005f33c0 0000000000000028 T shared_dispatch_stub_1179
00000000005f33f0 0000000000000034 T shared_dispatch_stub_1180
00000000005f3430 0000000000000034 T shared_dispatch_stub_1181
00000000005f3470 0000000000000034 T shared_dispatch_stub_1182
00000000005f34b0 0000000000000034 T shared_dispatch_stub_1183
00000000005f34f0 0000000000000034 T shared_dispatch_stub_1184
00000000005f3530 0000000000000034 T shared_dispatch_stub_1185
00000000005f3570 0000000000000034 T shared_dispatch_stub_1186
00000000005f35b0 0000000000000034 T shared_dispatch_stub_1187
00000000005f35f0 0000000000000034 T shared_dispatch_stub_1188
00000000005f3630 0000000000000034 T shared_dispatch_stub_1189
00000000005f3670 0000000000000034 T shared_dispatch_stub_1190
00000000005f36b0 0000000000000034 T shared_dispatch_stub_1191
00000000005f36f0 0000000000000034 T shared_dispatch_stub_1192
00000000005f3730 0000000000000034 T shared_dispatch_stub_1193
00000000005f3770 0000000000000034 T shared_dispatch_stub_1194
00000000005f37b0 0000000000000034 T shared_dispatch_stub_1195
00000000005f37f0 0000000000000034 T shared_dispatch_stub_1196
00000000005f3830 0000000000000034 T shared_dispatch_stub_1197
00000000005f3870 0000000000000034 T shared_dispatch_stub_1198
00000000005f38b0 0000000000000034 T shared_dispatch_stub_1199
00000000005f38f0 0000000000000034 T shared_dispatch_stub_1200
00000000005f3930 0000000000000034 T shared_dispatch_stub_1201
00000000005f3970 0000000000000034 T shared_dispatch_stub_1202
00000000005f39b0 0000000000000034 T shared_dispatch_stub_1203
00000000005f39f0 0000000000000034 T shared_dispatch_stub_1204
00000000005f3a30 0000000000000034 T shared_dispatch_stub_1205
00000000005f3a70 0000000000000034 T shared_dispatch_stub_1206
00000000005f3ab0 0000000000000034 T shared_dispatch_stub_1207
00000000005f3af0 0000000000000034 T shared_dispatch_stub_1208
00000000005f3b30 0000000000000034 T shared_dispatch_stub_1209
00000000005f3b70 0000000000000034 T shared_dispatch_stub_1210
00000000005f3bb0 0000000000000034 T shared_dispatch_stub_1211
00000000005f3bf0 0000000000000034 T shared_dispatch_stub_1212
00000000005f3c30 0000000000000034 T shared_dispatch_stub_1213
00000000005f3c70 0000000000000034 T shared_dispatch_stub_1214
00000000005f3cb0 0000000000000034 T shared_dispatch_stub_1215
00000000005f3cf0 0000000000000034 T shared_dispatch_stub_1216
00000000005f3d30 0000000000000034 T shared_dispatch_stub_1217
00000000005f3d70 0000000000000034 T shared_dispatch_stub_1218
00000000005f3db0 0000000000000034 T shared_dispatch_stub_1219
00000000005f3df0 0000000000000034 T shared_dispatch_stub_1220
00000000005f3e30 0000000000000034 T shared_dispatch_stub_1221
00000000005f3e70 0000000000000034 T shared_dispatch_stub_1222
00000000005f3eb0 0000000000000034 T shared_dispatch_stub_1223
00000000005f3ef0 0000000000000034 T shared_dispatch_stub_1224
00000000005f3f30 0000000000000034 T shared_dispatch_stub_1225
00000000005f3f70 0000000000000034 T shared_dispatch_stub_1226
00000000005f3fb0 0000000000000034 T shared_dispatch_stub_1227
00000000005f3ff0 0000000000000034 T shared_dispatch_stub_1228
00000000005f4030 0000000000000034 T shared_dispatch_stub_1229
00000000005f4070 0000000000000034 T shared_dispatch_stub_1230
00000000005f40b0 0000000000000034 T shared_dispatch_stub_1231
00000000005f40f0 0000000000000034 T shared_dispatch_stub_1232
00000000005f4130 0000000000000034 T shared_dispatch_stub_1233
00000000005f4170 0000000000000034 T shared_dispatch_stub_1234
00000000005f41b0 0000000000000034 T shared_dispatch_stub_1235
00000000005f41f0 0000000000000034 T shared_dispatch_stub_1236
00000000005f4230 0000000000000034 T shared_dispatch_stub_1237
00000000005f4270 0000000000000034 T shared_dispatch_stub_1238
00000000005f42b0 0000000000000034 T shared_dispatch_stub_1239
00000000005f42f0 0000000000000034 T shared_dispatch_stub_1240
00000000005f4330 0000000000000034 T shared_dispatch_stub_1241
00000000005f4370 0000000000000034 T shared_dispatch_stub_1242
00000000005f43b0 0000000000000034 T shared_dispatch_stub_1243
00000000005f43f0 0000000000000034 T shared_dispatch_stub_1244
00000000005f4430 0000000000000034 T shared_dispatch_stub_1245
00000000005f4470 0000000000000034 T shared_dispatch_stub_1246
00000000005f44b0 0000000000000034 T shared_dispatch_stub_1247
00000000005f44f0 0000000000000034 T shared_dispatch_stub_1248
00000000005f4530 0000000000000028 T shared_dispatch_stub_1249
00000000005f4560 0000000000000034 T shared_dispatch_stub_1250
00000000005f45a0 0000000000000034 T shared_dispatch_stub_1251
00000000005f45e0 0000000000000034 T shared_dispatch_stub_1252
00000000005f4620 0000000000000034 T shared_dispatch_stub_1253
00000000005f4660 0000000000000034 T shared_dispatch_stub_1254
00000000005f46a0 0000000000000028 T shared_dispatch_stub_1255
00000000005f46d0 0000000000000034 T shared_dispatch_stub_1256
00000000005f4710 0000000000000034 T shared_dispatch_stub_1257
00000000005f4750 0000000000000034 T shared_dispatch_stub_1258
00000000005f4790 0000000000000034 T shared_dispatch_stub_1259
00000000005f47d0 0000000000000034 T shared_dispatch_stub_1260
00000000005f4810 0000000000000034 T shared_dispatch_stub_1261
00000000005f4850 0000000000000034 T shared_dispatch_stub_1262
00000000005f4890 0000000000000034 T shared_dispatch_stub_1263
00000000005f48d0 0000000000000034 T shared_dispatch_stub_1264
00000000005f4910 0000000000000034 T shared_dispatch_stub_1265
00000000005f4950 0000000000000034 T shared_dispatch_stub_1266
00000000005f4990 0000000000000034 T shared_dispatch_stub_1267
00000000005f49d0 0000000000000034 T shared_dispatch_stub_1268
00000000005f4a10 0000000000000028 T shared_dispatch_stub_1269
00000000005f4a40 0000000000000034 T shared_dispatch_stub_1270
00000000005f4a80 0000000000000034 T shared_dispatch_stub_1271
00000000005f4ac0 0000000000000034 T shared_dispatch_stub_1272
00000000005f4b00 0000000000000028 T shared_dispatch_stub_1273
00000000005f4b30 0000000000000034 T shared_dispatch_stub_1274
00000000005f4b70 0000000000000034 T shared_dispatch_stub_1275
00000000005f4bb0 0000000000000034 T shared_dispatch_stub_1276
00000000005f4bf0 0000000000000034 T shared_dispatch_stub_1277
00000000005f4c30 0000000000000034 T shared_dispatch_stub_1278
00000000005f4c70 0000000000000034 T shared_dispatch_stub_1279
00000000005f4cb0 0000000000000034 T shared_dispatch_stub_1280
00000000005f4cf0 0000000000000034 T shared_dispatch_stub_1281
00000000005f4d30 0000000000000034 T shared_dispatch_stub_1282
00000000005f4d70 0000000000000034 T shared_dispatch_stub_1283
00000000005f4db0 0000000000000034 T shared_dispatch_stub_1284
00000000005f4df0 0000000000000034 T shared_dispatch_stub_1285
00000000005f4e30 0000000000000034 T shared_dispatch_stub_1286
00000000005f4e70 0000000000000034 T shared_dispatch_stub_1287
00000000005f4eb0 0000000000000034 T shared_dispatch_stub_1288
00000000005f4ef0 0000000000000034 T shared_dispatch_stub_1289
00000000005f4f30 0000000000000034 T shared_dispatch_stub_1290
00000000005f4f70 0000000000000034 T shared_dispatch_stub_1291
00000000005f4fb0 0000000000000034 T shared_dispatch_stub_1292
00000000005f4ff0 0000000000000034 T shared_dispatch_stub_1293
00000000005f5030 0000000000000034 T shared_dispatch_stub_1294
00000000005f5070 0000000000000034 T shared_dispatch_stub_1295
00000000005f50b0 0000000000000034 T shared_dispatch_stub_1296
00000000005f50f0 0000000000000034 T shared_dispatch_stub_1297
00000000005f5130 0000000000000034 T shared_dispatch_stub_1298
00000000005f5170 0000000000000034 T shared_dispatch_stub_1299
00000000005f51b0 0000000000000034 T shared_dispatch_stub_1300
00000000005f51f0 0000000000000034 T shared_dispatch_stub_1301
00000000005f5230 0000000000000034 T shared_dispatch_stub_1302
00000000005f5270 0000000000000034 T shared_dispatch_stub_1303
00000000005f52b0 0000000000000034 T shared_dispatch_stub_1304
00000000005f52f0 0000000000000034 T shared_dispatch_stub_1305
00000000005f5330 0000000000000034 T shared_dispatch_stub_1306
00000000005f5370 0000000000000034 T shared_dispatch_stub_1307
00000000005f53b0 0000000000000034 T shared_dispatch_stub_1308
00000000005f53f0 0000000000000034 T shared_dispatch_stub_1309
00000000005f5430 0000000000000034 T shared_dispatch_stub_1310
00000000005f5470 0000000000000034 T shared_dispatch_stub_1311
00000000005f54b0 0000000000000034 T shared_dispatch_stub_1312
00000000005f54f0 0000000000000028 T shared_dispatch_stub_1313
00000000005f5520 0000000000000028 T shared_dispatch_stub_1314
00000000005f5550 0000000000000034 T shared_dispatch_stub_1315
00000000005f5590 0000000000000034 T shared_dispatch_stub_1316
00000000005f55d0 0000000000000034 T shared_dispatch_stub_1317
00000000005f5610 0000000000000034 T shared_dispatch_stub_1318
00000000005f5650 0000000000000034 T shared_dispatch_stub_1319
00000000005f5690 0000000000000034 T shared_dispatch_stub_1320
00000000005f56d0 0000000000000034 T shared_dispatch_stub_1321
00000000005f5710 0000000000000034 T shared_dispatch_stub_1322
00000000005f5750 0000000000000034 T shared_dispatch_stub_1323
00000000005f5790 0000000000000034 T shared_dispatch_stub_1324
00000000005f57d0 0000000000000034 T shared_dispatch_stub_1325
00000000005f5810 0000000000000034 T shared_dispatch_stub_1326
00000000005f5850 0000000000000034 T shared_dispatch_stub_1327
00000000005f5890 0000000000000034 T shared_dispatch_stub_1328
00000000005f58d0 0000000000000034 T shared_dispatch_stub_1329
00000000005f5910 0000000000000034 T shared_dispatch_stub_1330
00000000005f5950 0000000000000034 T shared_dispatch_stub_1331
00000000005f5990 0000000000000034 T shared_dispatch_stub_1332
00000000005f59d0 0000000000000034 T shared_dispatch_stub_1333
00000000005f5a10 0000000000000028 T shared_dispatch_stub_1334
00000000005f5a40 0000000000000034 T shared_dispatch_stub_1335
00000000005f5a80 0000000000000034 T shared_dispatch_stub_1336
00000000005f5ac0 0000000000000034 T shared_dispatch_stub_1337
00000000005f5b00 0000000000000034 T shared_dispatch_stub_1338
00000000005f5b40 0000000000000034 T shared_dispatch_stub_1339
00000000005f5b80 0000000000000034 T shared_dispatch_stub_1340
00000000005f5bc0 0000000000000034 T shared_dispatch_stub_1341
00000000005f5c00 0000000000000034 T shared_dispatch_stub_1342
00000000005f5c40 0000000000000034 T shared_dispatch_stub_1343
00000000005f5c80 0000000000000034 T shared_dispatch_stub_1344
00000000005f5cc0 0000000000000034 T shared_dispatch_stub_1345
00000000005f5d00 0000000000000034 T shared_dispatch_stub_1346
00000000005f5d40 0000000000000034 T shared_dispatch_stub_1347
00000000005f5d80 0000000000000034 T shared_dispatch_stub_1348
00000000005f5dc0 0000000000000034 T shared_dispatch_stub_1349
00000000005f5e00 0000000000000034 T shared_dispatch_stub_1350
00000000005f5e40 0000000000000034 T shared_dispatch_stub_1351
00000000005f5e80 0000000000000034 T shared_dispatch_stub_1352
00000000005f5ec0 0000000000000034 T shared_dispatch_stub_1353
00000000005f5f00 0000000000000034 T shared_dispatch_stub_1354
00000000005f5f40 0000000000000034 T shared_dispatch_stub_1355
00000000005f5f80 0000000000000034 T shared_dispatch_stub_1356
00000000005f5fc0 0000000000000034 T shared_dispatch_stub_1357
00000000005f6000 0000000000000034 T shared_dispatch_stub_1358
00000000005f6040 0000000000000034 T shared_dispatch_stub_1359
00000000005f6080 0000000000000034 T shared_dispatch_stub_1360
00000000005f60c0 0000000000000034 T shared_dispatch_stub_1361
00000000005f6100 0000000000000034 T shared_dispatch_stub_1362
00000000005f6140 0000000000000034 T shared_dispatch_stub_1363
00000000005f6180 0000000000000034 T shared_dispatch_stub_1364
00000000005f61c0 0000000000000034 T shared_dispatch_stub_1365
00000000005f6200 0000000000000034 T shared_dispatch_stub_1366
00000000005f6240 0000000000000028 T shared_dispatch_stub_1367
00000000005f6270 0000000000000034 T shared_dispatch_stub_1368
00000000005f62b0 0000000000000034 T shared_dispatch_stub_1369
00000000005f62f0 0000000000000034 T shared_dispatch_stub_1370
00000000005f6330 0000000000000034 T shared_dispatch_stub_1371
00000000005f6370 0000000000000034 T shared_dispatch_stub_1372
00000000005f63b0 0000000000000034 T shared_dispatch_stub_1373
00000000005f63f0 0000000000000034 T shared_dispatch_stub_1374
00000000005f6430 0000000000000034 T shared_dispatch_stub_1375
00000000005f6470 0000000000000034 T shared_dispatch_stub_1376
00000000005f64b0 0000000000000034 T shared_dispatch_stub_1377
00000000005f64f0 0000000000000034 T shared_dispatch_stub_1378
00000000005f6530 0000000000000034 T shared_dispatch_stub_1379
00000000005f6570 0000000000000034 T shared_dispatch_stub_1380
00000000005f65b0 0000000000000034 T shared_dispatch_stub_1381
00000000005f65f0 0000000000000028 T shared_dispatch_stub_1382
00000000005f6620 0000000000000034 T shared_dispatch_stub_1383
00000000005f6660 0000000000000034 T shared_dispatch_stub_1384
00000000005f66a0 0000000000000034 T shared_dispatch_stub_1385
00000000005f66e0 0000000000000034 T shared_dispatch_stub_1386
00000000005f6720 0000000000000034 T shared_dispatch_stub_1387
00000000005f6760 0000000000000034 T shared_dispatch_stub_1388
00000000005f67a0 0000000000000034 T shared_dispatch_stub_1389
00000000005f67e0 0000000000000034 T shared_dispatch_stub_1390
00000000005f6820 0000000000000034 T shared_dispatch_stub_1391
00000000005f6860 0000000000000034 T shared_dispatch_stub_1392
00000000005f68a0 0000000000000034 T shared_dispatch_stub_1393
00000000005f68e0 0000000000000034 T shared_dispatch_stub_1394
00000000005f6920 0000000000000028 T shared_dispatch_stub_1395
00000000005f6950 0000000000000034 T shared_dispatch_stub_1396
00000000005f6990 0000000000000034 T shared_dispatch_stub_1397
00000000005f69d0 0000000000000034 T shared_dispatch_stub_1398
00000000005f6a10 0000000000000034 T shared_dispatch_stub_1399
00000000005f6a50 0000000000000034 T shared_dispatch_stub_1400
00000000005f6a90 0000000000000034 T shared_dispatch_stub_1401
00000000005f6ad0 0000000000000034 T shared_dispatch_stub_1402
00000000005f6b10 0000000000000034 T shared_dispatch_stub_1403
00000000005f6b50 0000000000000034 T shared_dispatch_stub_1404
00000000005f6b90 0000000000000034 T shared_dispatch_stub_1405
00000000005f6bd0 0000000000000034 T shared_dispatch_stub_1406
00000000005f6c10 0000000000000034 T shared_dispatch_stub_1407
00000000005f6c50 0000000000000034 T shared_dispatch_stub_1408
00000000005f6c90 0000000000000034 T shared_dispatch_stub_1409
00000000005f6cd0 0000000000000034 T shared_dispatch_stub_1410
00000000005f6d10 0000000000000034 T shared_dispatch_stub_1411
00000000005f6d50 0000000000000034 T shared_dispatch_stub_1412
00000000005f6d90 0000000000000034 T shared_dispatch_stub_1413
00000000005f6dd0 0000000000000034 T shared_dispatch_stub_1414
00000000005f6e10 0000000000000034 T shared_dispatch_stub_1415
00000000005f6e50 0000000000000034 T shared_dispatch_stub_1416
00000000005f6e90 0000000000000034 T shared_dispatch_stub_1417
00000000005f6ed0 0000000000000028 T shared_dispatch_stub_1418
00000000005f6f00 0000000000000028 T shared_dispatch_stub_1419
00000000005f6f30 0000000000000034 T shared_dispatch_stub_1420
00000000005f6f70 0000000000000034 T shared_dispatch_stub_1421
00000000005f6fb0 0000000000000034 T shared_dispatch_stub_1422
00000000005f6ff0 0000000000000034 T shared_dispatch_stub_1423
00000000005f7030 0000000000000034 T shared_dispatch_stub_1424
00000000005f7070 0000000000000034 T shared_dispatch_stub_1425
00000000005f70b0 0000000000000034 T shared_dispatch_stub_1426
00000000005f70f0 0000000000000034 T shared_dispatch_stub_1427
00000000005f7130 0000000000000034 T shared_dispatch_stub_1428
00000000005f7170 0000000000000034 T shared_dispatch_stub_1429
00000000005f71b0 0000000000000034 T shared_dispatch_stub_1430
00000000005f71f0 0000000000000034 T shared_dispatch_stub_1431
00000000005f7230 0000000000000034 T shared_dispatch_stub_1432
00000000005f7270 0000000000000034 T shared_dispatch_stub_1433
00000000005f72b0 0000000000000034 T shared_dispatch_stub_1434
00000000005f72f0 0000000000000034 T shared_dispatch_stub_1435
00000000005f7330 0000000000000034 T shared_dispatch_stub_1436
00000000005f7370 0000000000000034 T shared_dispatch_stub_1437
00000000005f73b0 0000000000000034 T shared_dispatch_stub_1438
00000000005f73f0 0000000000000034 T shared_dispatch_stub_1439
00000000005f7430 0000000000000034 T shared_dispatch_stub_1440
00000000005f7470 0000000000000034 T shared_dispatch_stub_1441
00000000005f74b0 0000000000000034 T shared_dispatch_stub_1442
00000000005f74f0 0000000000000034 T shared_dispatch_stub_1443
00000000005f7530 0000000000000034 T shared_dispatch_stub_1444
00000000005f7570 0000000000000034 T shared_dispatch_stub_1445
00000000005f75b0 0000000000000034 T shared_dispatch_stub_1446
00000000005f75f0 0000000000000034 T shared_dispatch_stub_1447
00000000005f7630 0000000000000034 T shared_dispatch_stub_1448
00000000005f7670 0000000000000034 T shared_dispatch_stub_1449
00000000005f76b0 0000000000000034 T shared_dispatch_stub_1450
00000000005f76f0 0000000000000034 T shared_dispatch_stub_1451
00000000005f7730 0000000000000034 T shared_dispatch_stub_1452
00000000005f7770 0000000000000034 T shared_dispatch_stub_1453
00000000005f77b0 0000000000000034 T shared_dispatch_stub_1454
00000000005f77f0 0000000000000034 T shared_dispatch_stub_1455
00000000005f7830 0000000000000034 T shared_dispatch_stub_1456
00000000005f7870 0000000000000034 T shared_dispatch_stub_1457
00000000005f78b0 0000000000000034 T shared_dispatch_stub_1458
00000000005f78f0 0000000000000034 T shared_dispatch_stub_1459
00000000005f7930 0000000000000034 T shared_dispatch_stub_1460
00000000005f7970 0000000000000034 T shared_dispatch_stub_1461
00000000005f79b0 0000000000000034 T shared_dispatch_stub_1462
00000000005f79f0 0000000000000034 T shared_dispatch_stub_1463
00000000005f7a30 0000000000000034 T shared_dispatch_stub_1464
00000000005f7a70 0000000000000034 T shared_dispatch_stub_1465
00000000005f7ab0 0000000000000034 T shared_dispatch_stub_1466
00000000005f7af0 0000000000000034 T shared_dispatch_stub_1467
00000000005f7b30 0000000000000034 T shared_dispatch_stub_1468
00000000005f7b70 0000000000000034 T shared_dispatch_stub_1469
00000000005f7bb0 0000000000000034 T shared_dispatch_stub_1470
00000000005f7bf0 0000000000000034 T shared_dispatch_stub_1471
00000000005f7c30 0000000000000034 T shared_dispatch_stub_1472
00000000005f7c70 0000000000000034 T shared_dispatch_stub_1473
00000000005f7cb0 0000000000000034 T shared_dispatch_stub_1474
00000000005f7cf0 0000000000000034 T shared_dispatch_stub_1475
00000000005f7d30 0000000000000034 T shared_dispatch_stub_1476
00000000005f7d70 0000000000000034 T shared_dispatch_stub_1477
00000000005f7db0 0000000000000034 T shared_dispatch_stub_1478
00000000005f7df0 0000000000000034 T shared_dispatch_stub_1479
00000000005f7e30 0000000000000034 T shared_dispatch_stub_1480
00000000005f7e70 0000000000000034 T shared_dispatch_stub_1481
00000000005f7eb0 0000000000000034 T shared_dispatch_stub_1482
00000000005f7ef0 0000000000000034 T shared_dispatch_stub_1483
00000000005f7f30 0000000000000034 T shared_dispatch_stub_1484
00000000005f7f70 0000000000000034 T shared_dispatch_stub_1485
00000000005f7fb0 0000000000000034 T shared_dispatch_stub_1486
00000000005f7ff0 0000000000000034 T shared_dispatch_stub_1487
00000000005f8030 0000000000000034 T shared_dispatch_stub_1488
00000000005f8070 0000000000000034 T shared_dispatch_stub_1489
00000000005f80b0 0000000000000034 T shared_dispatch_stub_1490
00000000005f80f0 0000000000000034 T shared_dispatch_stub_1491
00000000005f8130 0000000000000034 T shared_dispatch_stub_1492
00000000005f8170 0000000000000034 T shared_dispatch_stub_1493
00000000005f81b0 0000000000000034 T shared_dispatch_stub_1494
00000000005f81f0 0000000000000034 T shared_dispatch_stub_1495
00000000005f8230 0000000000000034 T shared_dispatch_stub_1496
00000000005f8270 0000000000000034 T shared_dispatch_stub_1497
00000000005f82b0 0000000000000034 T shared_dispatch_stub_1498
00000000005f82f0 0000000000000034 T shared_dispatch_stub_1499
00000000005f8330 0000000000000034 T shared_dispatch_stub_1500
00000000005f8370 0000000000000034 T shared_dispatch_stub_1501
00000000005f83b0 0000000000000034 T shared_dispatch_stub_1502
00000000005f83f0 0000000000000034 T shared_dispatch_stub_1503
00000000005f8430 0000000000000034 T shared_dispatch_stub_1504
00000000005f8470 0000000000000034 T shared_dispatch_stub_1505
00000000005f84b0 0000000000000034 T shared_dispatch_stub_1506
00000000005f84f0 0000000000000034 T shared_dispatch_stub_1507
00000000005f8530 0000000000000034 T shared_dispatch_stub_1508
00000000005f8570 0000000000000034 T shared_dispatch_stub_1509
00000000005f85b0 0000000000000034 T shared_dispatch_stub_1510
00000000005f85f0 0000000000000034 T shared_dispatch_stub_1511
00000000005f8630 0000000000000034 T shared_dispatch_stub_1512
00000000005f8670 0000000000000034 T shared_dispatch_stub_1513
00000000005f86b0 0000000000000034 T shared_dispatch_stub_1514
00000000005f86f0 0000000000000034 T shared_dispatch_stub_1515
00000000005f8730 0000000000000034 T shared_dispatch_stub_1516
00000000005f8770 0000000000000034 T shared_dispatch_stub_1517
00000000005f87b0 0000000000000034 T shared_dispatch_stub_1518
00000000005f87f0 0000000000000034 T shared_dispatch_stub_1519
00000000005f8830 0000000000000034 T shared_dispatch_stub_1520
00000000005f8870 0000000000000034 T shared_dispatch_stub_1521
00000000005f88b0 0000000000000034 T shared_dispatch_stub_1522
00000000005f88f0 0000000000000034 T shared_dispatch_stub_1523
00000000005f8930 0000000000000034 T shared_dispatch_stub_1524
00000000005f8970 0000000000000034 T shared_dispatch_stub_1525
00000000005f89b0 0000000000000034 T shared_dispatch_stub_1526
00000000005f89f0 0000000000000034 T shared_dispatch_stub_1527
00000000005f8a30 0000000000000034 T shared_dispatch_stub_1528
00000000005f8a70 0000000000000034 T shared_dispatch_stub_1529
00000000005f8ab0 0000000000000034 T shared_dispatch_stub_1530
00000000005f8af0 0000000000000034 T shared_dispatch_stub_1531
00000000005f8b30 0000000000000034 T shared_dispatch_stub_1532
00000000005f8b70 0000000000000034 T shared_dispatch_stub_1533
00000000005f8bb0 0000000000000034 T shared_dispatch_stub_1534
00000000005f8bf0 0000000000000034 T shared_dispatch_stub_1535
00000000005f8c30 0000000000000034 T shared_dispatch_stub_1536
00000000005f8c70 0000000000000034 T shared_dispatch_stub_1537
00000000005f8cb0 0000000000000034 T shared_dispatch_stub_1538
00000000005f8cf0 0000000000000034 T shared_dispatch_stub_1539
00000000005f8d30 0000000000000034 T shared_dispatch_stub_1540
00000000005f8d70 0000000000000034 T shared_dispatch_stub_1541
00000000005f8db0 0000000000000034 T shared_dispatch_stub_1542
00000000005f8df0 0000000000000034 T shared_dispatch_stub_1543
00000000005f8e30 0000000000000034 T shared_dispatch_stub_1544
00000000005f8e70 0000000000000034 T shared_dispatch_stub_1545
00000000005f8eb0 0000000000000034 T shared_dispatch_stub_1546
00000000005f8ef0 0000000000000034 T shared_dispatch_stub_1547
00000000005f8f30 0000000000000034 T shared_dispatch_stub_1548
00000000005f8f70 0000000000000034 T shared_dispatch_stub_1549
00000000005f8fb0 0000000000000034 T shared_dispatch_stub_1550
00000000005f8ff0 0000000000000034 T shared_dispatch_stub_1551
00000000005f9030 0000000000000034 T shared_dispatch_stub_1552
00000000005f9070 0000000000000034 T shared_dispatch_stub_1553
00000000005f90b0 0000000000000034 T shared_dispatch_stub_1554
00000000005f90f0 0000000000000034 T shared_dispatch_stub_1555
00000000005f9130 0000000000000034 T shared_dispatch_stub_1556
00000000005f9170 0000000000000034 T shared_dispatch_stub_1557
00000000005f91b0 0000000000000034 T shared_dispatch_stub_1558
00000000005f91f0 0000000000000034 T shared_dispatch_stub_1559
00000000005f9230 0000000000000034 T shared_dispatch_stub_1560
00000000005f9270 0000000000000034 T shared_dispatch_stub_1561
00000000005f92b0 0000000000000034 T shared_dispatch_stub_1562
00000000005f92f0 0000000000000034 T shared_dispatch_stub_1563
00000000005f9330 0000000000000034 T shared_dispatch_stub_1564
00000000005f9370 0000000000000034 T shared_dispatch_stub_1565
00000000005f93b0 0000000000000034 T shared_dispatch_stub_1566
00000000005f93f0 0000000000000034 T shared_dispatch_stub_1567
00000000005f9430 0000000000000034 T shared_dispatch_stub_1568
00000000005f9470 0000000000000034 T shared_dispatch_stub_1569
00000000005f94b0 0000000000000034 T shared_dispatch_stub_1570
00000000005f94f0 0000000000000034 T shared_dispatch_stub_1571
00000000005f9530 0000000000000034 T shared_dispatch_stub_1572
00000000005f9570 0000000000000034 T shared_dispatch_stub_1573
00000000005f95b0 0000000000000034 T shared_dispatch_stub_1574
00000000005f95f0 0000000000000034 T shared_dispatch_stub_1575
00000000005f9630 0000000000000034 T shared_dispatch_stub_1576
00000000005f9670 0000000000000034 T shared_dispatch_stub_1577
00000000005f96b0 0000000000000034 T shared_dispatch_stub_1578
00000000005f96f0 0000000000000034 T shared_dispatch_stub_1579
00000000005f9730 0000000000000034 T shared_dispatch_stub_1580
00000000005f9770 0000000000000034 T shared_dispatch_stub_1581
00000000005f97b0 0000000000000034 T shared_dispatch_stub_1582
00000000005f97f0 0000000000000034 T shared_dispatch_stub_1583
00000000005f9830 0000000000000034 T shared_dispatch_stub_1584
00000000005f9870 0000000000000034 T shared_dispatch_stub_1585
00000000005f98b0 0000000000000034 T shared_dispatch_stub_1586
00000000005f98f0 0000000000000034 T shared_dispatch_stub_1587
00000000005f9930 0000000000000034 T shared_dispatch_stub_1588
00000000005f9970 0000000000000034 T shared_dispatch_stub_1589
00000000005f99b0 0000000000000034 T shared_dispatch_stub_1590
00000000005f99f0 0000000000000034 T shared_dispatch_stub_1591
00000000005f9a30 0000000000000034 T shared_dispatch_stub_1592
00000000005f9a70 0000000000000034 T shared_dispatch_stub_1593
00000000005f9ab0 0000000000000034 T shared_dispatch_stub_1594
00000000005f9af0 0000000000000034 T shared_dispatch_stub_1595
00000000005f9b30 0000000000000034 T shared_dispatch_stub_1596
00000000005f9b70 0000000000000034 T shared_dispatch_stub_1597
00000000005f9bb0 0000000000000034 T shared_dispatch_stub_1598
00000000005f9bf0 0000000000000034 T shared_dispatch_stub_1599
00000000005f9c30 0000000000000034 T shared_dispatch_stub_1600
00000000005f9c70 0000000000000034 T shared_dispatch_stub_1601
00000000005f9cb0 0000000000000034 T shared_dispatch_stub_1602
00000000005f9cf0 0000000000000034 T shared_dispatch_stub_1603
00000000005f9d30 0000000000000034 T shared_dispatch_stub_1604
00000000005f9d70 0000000000000034 T shared_dispatch_stub_1605
00000000005f9db0 0000000000000034 T shared_dispatch_stub_1606
00000000005f9df0 0000000000000034 T shared_dispatch_stub_1607
00000000005f9e30 0000000000000034 T shared_dispatch_stub_1608
00000000005f9e70 0000000000000034 T shared_dispatch_stub_1609
00000000005f9eb0 0000000000000004 T entry_patch_public
00000000005f9ec0 0000000000000010 t entry_get_public
00000000005f9ed0 0000000000000008 t entry_generate
00000000005f9ee0 0000000000000004 t entry_patch
00000000005f9ef0 0000000000000078 T nouveau_bufctx_new
00000000005f9f70 000000000000005c T nouveau_bufctx_reset
00000000005f9fd0 0000000000000074 T nouveau_bufctx_del
00000000005fa050 0000000000000090 T nouveau_bufctx_refn
00000000005fa0e0 0000000000000008 T nouveau_object_mclass
00000000005fa0f0 0000000000000098 T nouveau_object_new
00000000005fa190 0000000000000044 T nouveau_object_del
00000000005fa1e0 0000000000000028 T nouveau_drm_del
00000000005fa210 0000000000000050 T nouveau_drm_new
00000000005fa260 0000000000000100 T nouveau_device_new
00000000005fa360 0000000000000050 T nouveau_device_del
00000000005fa3b0 0000000000000034 T nouveau_getparam
00000000005fa3f0 000000000000011c T nouveau_client_new
00000000005fa510 0000000000000088 T nouveau_client_del
00000000005fa5a0 0000000000000184 T nouveau_bo_new
00000000005fa730 0000000000000104 T nouveau_bo_name_ref
00000000005fa840 0000000000000010 T nouveau_bo_name_get
00000000005fa850 00000000000000d0 T nouveau_bo_ref
00000000005fa920 0000000000000008 T nouveau_bo_prime_handle_ref
00000000005fa930 0000000000000008 T nouveau_bo_set_prime
00000000005fa940 0000000000000014 T nouveau_bo_get_syncpoint
00000000005fa960 000000000000009c T nouveau_bo_wait
00000000005faa00 000000000000000c T nouveau_bo_map
00000000005faa10 0000000000000008 T nouveau_bo_unmap
00000000005faa20 0000000000000098 t pushbuf_refn_fail
00000000005faac0 0000000000000118 T nouveau_pushbuf_del
00000000005fabe0 0000000000000280 T nouveau_pushbuf_new
00000000005fae60 0000000000000010 T nouveau_pushbuf_bufctx
00000000005fae70 00000000000000c4 T nouveau_pushbuf_data
00000000005fae70 00000000000000c4 t nouveau_pushbuf_data.localalias
00000000005faf40 0000000000000254 t pushbuf_submit.isra.0
00000000005fb1a0 000000000000012c t pushbuf_flush.isra.0
00000000005fb2d0 0000000000000128 t pushbuf_kref
00000000005fb400 00000000000001b0 t pushbuf_validate
00000000005fb5b0 0000000000000238 T nouveau_pushbuf_space
00000000005fb7f0 00000000000000cc T nouveau_pushbuf_refn
00000000005fb8c0 0000000000000008 T nouveau_pushbuf_validate
00000000005fb8d0 0000000000000040 T nouveau_pushbuf_kick
00000000005fb910 000000000000004c T cli_map_free
00000000005fb960 0000000000000058 T cli_kref_get
00000000005fb9c0 0000000000000058 T cli_push_get
00000000005fba20 0000000000000110 T cli_kref_set
00000000005fbb30 0000000000000080 T mutexLock
00000000005fbbb0 0000000000000068 T mutexUnlock
00000000005fbc20 000000000000001c T mutexIsLockedByCurrentThread
00000000005fbc40 000000000000004c T rmutexLock
00000000005fbc90 000000000000001c T rmutexUnlock
00000000005fbcb0 0000000000000068 t _psmCleanup
00000000005fbd20 0000000000000098 T psmInitialize
00000000005fbdc0 0000000000000044 T psmExit
00000000005fbe10 00000000000000d0 t _nvSetClientPID
00000000005fbee0 00000000000000c8 t _nvCleanup
00000000005fbfb0 00000000000000d8 t _nvCmdInitialize.constprop.0
00000000005fc090 000000000000001c W __nx_nv_create_tmem
00000000005fc0b0 0000000000000258 T nvInitialize
00000000005fc310 0000000000000044 T nvExit
00000000005fc360 00000000000000f4 T nvConvertError
00000000005fc460 0000000000000118 T nvOpen
00000000005fc580 00000000000002fc T nvIoctl
00000000005fc880 00000000000003c4 T nvIoctl2
00000000005fcc50 00000000000000d8 T nvClose
00000000005fcd30 0000000000000108 T nvQueryEvent
00000000005fce40 00000000000000d0 t _smCmifCmdInPid
00000000005fcf10 0000000000000068 t _smCleanup
00000000005fcf80 0000000000000048 T smAddOverrideHandle
00000000005fcfd0 0000000000000054 T smGetServiceOverride
00000000005fd030 00000000000001c0 T smInitialize
00000000005fd1f0 0000000000000044 T smExit
00000000005fd240 00000000000000d0 T smGetServiceOriginal
00000000005fd310 0000000000000120 T smGetServiceWrapper
00000000005fd430 00000000000001c0 t _fatalCmd
00000000005fd5f0 000000000000000c T fatalThrowWithPolicy
00000000005fd600 0000000000000014 T fatalThrow
00000000005fd620 0000000000000024 t _appletInfiniteSleepLoop
00000000005fd650 0000000000000108 t _appletCmdGetSession
00000000005fd760 00000000000000cc t _appletCmdInU8NoOut
00000000005fd830 0000000000000104 t _appletGetLaunchReason
00000000005fd940 00000000000000e4 t _appletSetFocusHandlingMode
00000000005fda30 00000000000000d4 t _appletCmdInSession
00000000005fdb10 00000000000000cc t _appletCmdInU32NoOut
00000000005fdbe0 000000000000011c t _appletCreateLibraryApplet
00000000005fdd00 000000000000010c t _appletCmdGetSessionInU64
00000000005fde10 0000000000000138 t _appletGetSessionProxy.constprop.0
00000000005fdf50 0000000000000154 t _appletOpenLibraryAppletProxy.constprop.0
00000000005fe0b0 00000000000000d0 t _appletCmdGetHandle.constprop.0.isra.0
00000000005fe180 00000000000001fc t _appletStorageAccessorRW.isra.0
00000000005fe380 00000000000000f0 t _appletStorageRW.part.0
00000000005fe470 00000000000000d4 t _appletCmdNoInOutU8.isra.0
00000000005fe550 00000000000000d4 t _appletCmdNoInOutU32.isra.0
00000000005fe630 00000000000000d4 t _appletCmdNoInOutU64.isra.0
00000000005fe710 00000000000000c0 t _appletCmdNoIO.isra.0
00000000005fe7d0 0000000000000010 T appletGetAppletType
00000000005fe7e0 000000000000000c T appletGetThemeColorType
00000000005fe7f0 0000000000000114 T appletSetFocusHandlingMode
00000000005fe910 000000000000005c T appletSetCpuBoostMode
00000000005fe970 000000000000002c T appletCreateManagedDisplayLayer
00000000005fe9a0 000000000000000c T appletGetAppletResourceUserId
00000000005fe9b0 00000000000000f4 t _appletGetIndirectLayerConsumerHandle
00000000005feab0 0000000000000088 t _appletHolderCreateState
00000000005feb40 00000000000000c4 T appletCreateLibraryApplet
00000000005fec10 00000000000000ac T appletHolderClose
00000000005fecc0 0000000000000010 T appletHolderActive
00000000005fecd0 00000000000000b8 T appletHolderStart
00000000005fed90 0000000000000178 T appletHolderJump
00000000005fef10 0000000000000084 T appletHolderJoin
00000000005fefa0 0000000000000024 T appletHolderCheckFinished
00000000005fefd0 0000000000000008 T appletHolderGetExitReason
00000000005fefe0 0000000000000060 T appletHolderPresetLibraryAppletGpuTimeSliceZero
00000000005ff040 0000000000000028 T appletHolderPopOutData
00000000005ff070 0000000000000028 T appletHolderPopInteractiveOutData
00000000005ff0a0 0000000000000024 T appletHolderGetLibraryAppletInfo
00000000005ff0d0 000000000000002c T appletCreateStorage
00000000005ff100 0000000000000090 T appletStorageClose
00000000005ff190 000000000000004c T appletHolderPushInteractiveInData
00000000005ff1e0 000000000000004c T appletHolderPushInData
00000000005ff230 0000000000000008 T appletStorageCloseTmem
00000000005ff240 00000000000000d8 T appletStorageGetSize
00000000005ff320 0000000000000018 T appletStorageWrite
00000000005ff340 0000000000000018 T appletStorageRead
00000000005ff360 0000000000000090 T appletNotifyRunning
00000000005ff3f0 000000000000008c T appletSetGamePlayRecordingState
00000000005ff480 0000000000000ad4 t _appletCleanup
00000000005fff60 0000000000000044 T appletExit
00000000005fffb0 0000000000000040 T appletGetLibraryAppletInfo
00000000005ffff0 0000000000000a94 T appletInitialize
0000000000600a90 0000000000000024 t _appletExitProcess
0000000000600ac0 000000000000000c T appletGetOperationMode
0000000000600ad0 0000000000000074 T appletGetMessage
0000000000600b50 000000000000028c T appletProcessMessage
0000000000600de0 0000000000000034 T appletMainLoop
0000000000600e20 00000000000000f0 t _audoutCleanup
0000000000600f10 00000000000000c0 t _audoutCmdNoIO.constprop.0
0000000000600fd0 0000000000000044 T audoutExit
0000000000601020 000000000000000c T audoutGetSampleRate
0000000000601030 000000000000000c T audoutGetChannelCount
0000000000601040 000000000000000c T audoutGetPcmFormat
0000000000601050 00000000000002dc T audoutOpenAudioOut
0000000000601330 0000000000000200 T audoutInitialize
0000000000601530 0000000000000008 T audoutStartAudioOut
0000000000601540 0000000000000008 T audoutStopAudioOut
0000000000601550 0000000000000190 T audoutAppendAudioOutBuffer
00000000006016e0 00000000000001c4 T audoutGetReleasedAudioOutBuffer
00000000006018b0 0000000000000048 T audoutWaitPlayFinish
0000000000601900 0000000000000108 t _hidCleanup
0000000000601a10 00000000000000d8 t _hidCmdInAruidNoOut
0000000000601af0 00000000000000e4 t _hidCmdInU32AruidNoOut
0000000000601be0 00000000000000e4 t _hidCmdInU64AruidNoOut
0000000000601cd0 00000000000001a8 t _hidGetStates
0000000000601e80 00000000000000f0 t _hidCmdInAruidOutU64.constprop.0
0000000000601f70 00000000000000e4 t _hidCmdInAruidOutU32.constprop.0
0000000000602060 00000000000000c0 t _hidCmdInU32NoOut.constprop.0
0000000000602120 0000000000000100 t _hidCmdGetSession.constprop.0
0000000000602220 0000000000000114 t _hidCreateAppletResource.constprop.0
0000000000602340 00000000000000c8 t _hidCmdGetHandle.constprop.0
0000000000602410 00000000000000dc T hidInitialize
00000000006024f0 0000000000000044 T hidExit
0000000000602540 000000000000000c T hidGetSharedmemAddr
0000000000602550 0000000000000094 T hidGetNpadStyleSet
00000000006025f0 00000000000000ac T hidGetNpadDeviceType
00000000006026a0 0000000000000020 T hidInitializeTouchScreen
00000000006026c0 0000000000000088 T hidGetTouchScreenStates
0000000000602750 0000000000000020 T hidInitializeMouse
0000000000602770 0000000000000058 T hidGetMouseStates
00000000006027d0 0000000000000020 T hidInitializeKeyboard
00000000006027f0 0000000000000058 T hidGetKeyboardStates
0000000000602850 000000000000006c T hidInitializeNpad
00000000006028c0 00000000000000ac T hidGetNpadStatesFullKey
0000000000602970 00000000000000ac T hidGetNpadStatesHandheld
0000000000602a20 00000000000000ac T hidGetNpadStatesJoyDual
0000000000602ad0 00000000000000ac T hidGetNpadStatesJoyLeft
0000000000602b80 00000000000000ac T hidGetNpadStatesJoyRight
0000000000602c30 0000000000000164 T hidGetNpadStatesGc
0000000000602da0 00000000000000b0 T hidGetNpadStatesSystemExt
0000000000602e50 0000000000000008 T hidSetSupportedNpadStyleSet
0000000000602e60 000000000000003c T hidGetSupportedNpadStyleSet
0000000000602ea0 0000000000000100 T hidSetSupportedNpadIdType
0000000000602fa0 000000000000000c T hidSetNpadJoyHoldType
0000000000602fb0 0000000000000040 T hidGetNpadJoyHoldType
0000000000602ff0 00000000000001bc T hidInitializeVibrationDevices
00000000006031b0 0000000000000124 T hidSendVibrationValues
00000000006032e0 0000000000000044 T nvAddressSpaceClose
0000000000603330 0000000000000088 T nvAddressSpaceCreate
00000000006033c0 000000000000004c T nvAddressSpaceMap
0000000000603410 0000000000000008 T nvAddressSpaceUnmap
0000000000603420 000000000000007c t _nvFenceCleanup
00000000006034a0 0000000000000098 T nvFenceInit
0000000000603540 0000000000000044 T nvFenceExit
0000000000603590 0000000000000240 T nvFenceWait
00000000006037d0 0000000000000074 T nvMultiFenceWait
0000000000603850 0000000000000064 T nvGpuChannelClose
00000000006038c0 000000000000010c T nvGpuChannelCreate
00000000006039d0 000000000000000c T nvGpuChannelZcullBind
00000000006039e0 00000000000000f8 T nvGpuChannelKickoff
0000000000603ae0 00000000000000b8 T nvGpuChannelAppendEntry
0000000000603ba0 0000000000000044 T nvChannelClose
0000000000603bf0 0000000000000070 T nvChannelCreate
0000000000603c60 0000000000000008 T nvChannelSetPriority
0000000000603c70 0000000000000130 T nvGpuInit
0000000000603da0 000000000000006c T nvGpuExit
0000000000603e10 000000000000000c T nvGpuGetCharacteristics
0000000000603e20 000000000000000c T nvGpuGetZcullCtxSize
0000000000603e30 00000000000000b4 T nvMapInit
0000000000603ef0 000000000000006c T nvMapExit
0000000000603f60 000000000000000c T nvMapGetFd
0000000000603f70 0000000000000080 T nvMapClose
0000000000603ff0 0000000000000154 T nvMapCreate
0000000000604150 000000000000009c T nvMapLoadRemote
00000000006041f0 0000000000000028 T nvioctlNvhostCtrl_EventSignal
0000000000604220 0000000000000044 T nvioctlNvhostCtrl_EventWait
0000000000604270 0000000000000030 T nvioctlNvhostCtrl_EventWaitAsync
00000000006042a0 0000000000000028 T nvioctlNvhostCtrl_EventRegister
00000000006042d0 0000000000000028 T nvioctlNvhostCtrl_EventUnregister
0000000000604300 000000000000003c T nvioctlNvhostCtrlGpu_ZCullGetCtxSize
0000000000604340 0000000000000050 T nvioctlNvhostCtrlGpu_ZCullGetInfo
0000000000604390 000000000000008c T nvioctlNvhostCtrlGpu_GetCharacteristics
0000000000604420 000000000000007c T nvioctlNvhostCtrlGpu_GetTpcMasks
00000000006044a0 0000000000000028 T nvioctlNvhostAsGpu_BindChannel
00000000006044d0 0000000000000054 T nvioctlNvhostAsGpu_MapBufferEx
0000000000604530 0000000000000028 T nvioctlNvhostAsGpu_UnmapBuffer
0000000000604560 0000000000000044 T nvioctlNvhostAsGpu_InitializeEx
00000000006045b0 0000000000000028 T nvioctlChannel_SetNvmapFd
00000000006045e0 00000000000000c8 T nvioctlChannel_SubmitGpfifo
00000000006046b0 000000000000005c T nvioctlChannel_KickoffPb
0000000000604710 0000000000000058 T nvioctlChannel_AllocObjCtx
0000000000604770 0000000000000030 T nvioctlChannel_ZCullBind
00000000006047a0 0000000000000030 T nvioctlChannel_SetErrorNotifier
00000000006047d0 0000000000000028 T nvioctlChannel_SetPriority
0000000000604800 0000000000000058 T nvioctlChannel_AllocGpfifoEx2
0000000000604860 0000000000000040 T nvioctlNvmap_Create
00000000006048a0 0000000000000040 T nvioctlNvmap_FromId
00000000006048e0 0000000000000038 T nvioctlNvmap_Alloc
0000000000604920 0000000000000034 T nvioctlNvmap_Free
0000000000604960 0000000000000048 T nvioctlNvmap_Param
00000000006049b0 0000000000000040 T nvioctlNvmap_GetId
00000000006049f0 000000000000000c T nwindowGetDefault
0000000000604a00 00000000000000b0 T __nx_win_init
0000000000604ab0 0000000000000034 T __nx_win_exit
0000000000604af0 0000000000000024 T nwindowIsValid
0000000000604b20 000000000000007c T nwindowClose
0000000000604ba0 00000000000000f4 T nwindowCreate
0000000000604ca0 0000000000000034 T nwindowCreateFromLayer
0000000000604ce0 0000000000000090 T nwindowGetDimensions
0000000000604d70 0000000000000084 T nwindowSetDimensions
0000000000604e00 0000000000000040 T nwindowSetSwapInterval
0000000000604e40 000000000000018c T nwindowConfigureBuffer
0000000000604fd0 00000000000001e0 T nwindowDequeueBuffer
00000000006051b0 00000000000000c8 T nwindowCancelBuffer
0000000000605280 000000000000013c T nwindowQueueBuffer
00000000006053c0 0000000000000094 T nwindowReleaseBuffers
0000000000605460 0000000000000174 t _hidLaShow.constprop.0
00000000006055e0 0000000000000128 t _hidLaShowControllerSupportCore
0000000000605710 0000000000000034 T hidLaCreateControllerSupportArg
0000000000605750 00000000000000b0 T hidLaShowControllerSupportForSystem
0000000000605800 00000000000000b4 t _swkbdInitVersion
00000000006058c0 00000000000000e0 t _swkbdSendRequest
00000000006059a0 0000000000000104 t _swkbdInlineLaunch
0000000000605ab0 0000000000000408 t _swkbdGetReplies
0000000000605ec0 0000000000000134 T swkbdInlineClose
0000000000606000 0000000000000024 T swkbdInlineLaunchForLibraryApplet
0000000000606030 0000000000000008 T swkbdInlineSetDecidedCancelCallback
0000000000606040 0000000000000008 T swkbdInlineSetDecidedEnterCallback
0000000000606050 0000000000000100 T swkbdInlineAppearEx
0000000000606150 0000000000000008 T swkbdInlineAppear
0000000000606160 0000000000000018 T swkbdInlineDisappear
0000000000606180 000000000000002c T swkbdInlineMakeAppearArg
00000000006061b0 000000000000003c T swkbdInlineAppearArgSetOkButtonText
00000000006061f0 0000000000000060 T swkbdInlineSetInputText
0000000000606250 0000000000000014 T swkbdInlineSetCursorPos
0000000000606270 0000000000000024 T swkbdInlineSetUtf8Mode
00000000006062a0 0000000000000114 T swkbdInlineCreate
00000000006063c0 0000000000000024 T swkbdInlineSetInputModeFadeType
00000000006063f0 0000000000000030 T swkbdInlineSetFooterBgAlpha
0000000000606420 00000000000000d0 T swkbdInlineUpdate
00000000006064f0 0000000000000014 T hosversionGet
0000000000606510 0000000000000010 T hosversionSet
0000000000606520 0000000000000208 T envSetup
0000000000606730 0000000000000020 T envGetMainThreadHandle
0000000000606750 000000000000000c T envIsNso
0000000000606760 0000000000000014 T envHasHeapOverride
0000000000606780 000000000000000c T envGetHeapOverrideAddr
0000000000606790 000000000000000c T envGetHeapOverrideSize
00000000006067a0 0000000000000014 T envHasArgv
00000000006067c0 000000000000000c T envGetArgv
00000000006067d0 000000000000000c T envGetExitFuncPtr
00000000006067e0 000000000000000c T envSetExitFuncPtr
00000000006067f0 000000000000000c T envHasRandomSeed
0000000000606800 0000000000000010 T envGetRandomSeed
0000000000606810 0000000000000004 W __libnx_alloc
0000000000606820 0000000000000014 W __libnx_aligned_alloc
0000000000606840 0000000000000004 W __libnx_free
0000000000606850 000000000000005c t _padUpdateWithCommonState
00000000006068b0 000000000000009c T padConfigureInput
0000000000606950 0000000000000024 T padInitializeWithMask
0000000000606980 0000000000000240 T padUpdate
0000000000606bc0 000000000000001c W diagAbortWithResult
0000000000606be0 000000000000007c t _socketGetFd
0000000000606c60 00000000000000a0 t _socketParseBsdResult.part.0
0000000000606d00 00000000000000cc T fcntl
0000000000606dd0 0000000000000008 t romfs_close
0000000000606de0 0000000000000088 t romfs_seek
0000000000606e70 000000000000001c t romfs_dirreset
0000000000606e90 0000000000000100 t fillDir
0000000000606f90 00000000000002b4 t romfs_dirnext
0000000000607250 0000000000000118 t searchForDir
0000000000607370 0000000000000118 t searchForFile
0000000000607490 0000000000000164 t _romfs_read_safe
0000000000607600 00000000000000d0 t _romfs_read
00000000006076d0 0000000000000084 t romfs_read
0000000000607760 00000000000000b4 t romfs_free
0000000000607820 00000000000001f4 t navigateToDir.constprop.0
0000000000607a20 00000000000000f0 t romfs_open
0000000000607b10 000000000000018c t romfs_stat
0000000000607ca0 0000000000000054 t romfs_chdir
0000000000607d00 0000000000000084 t romfs_diropen
0000000000607d90 0000000000000008 t romfs_dirclose
0000000000607da0 0000000000000188 t romfsFindMount
0000000000607f30 000000000000006c t romfs_fstat
0000000000607fa0 00000000000001b4 t romfsMountCommon
0000000000608160 0000000000000068 T romfsMountFromFile
00000000006081d0 000000000000006c T romfsMountFromStorage
0000000000608240 0000000000000038 T romfsMountFromCurrentProcess
0000000000608280 00000000000001a8 T romfsMountSelf
0000000000608430 0000000000000014 t fsdev_link
0000000000608450 0000000000000014 t fsdev_dirreset
0000000000608470 0000000000000014 t fsdev_chmod
0000000000608490 0000000000000018 t error_cmp
00000000006084b0 0000000000000020 t fsdev_dirclose
00000000006084d0 000000000000001c t fsdev_close
00000000006084f0 0000000000000080 t fsdev_converttimetoutc
0000000000608570 00000000000000e0 t fsdevFindDevice.part.0
0000000000608650 00000000000001c0 t fsdev_fixpath
0000000000608810 00000000000000a0 t _fsdevUnmountDeviceStruct.part.0
00000000006088b0 0000000000000014 t fsdev_fchmod
00000000006088d0 0000000000000108 t fsdev_diropen
00000000006089e0 00000000000000fc t fsdev_statvfs
0000000000608ae0 000000000000007c t fsdev_fsync
0000000000608b60 00000000000000f4 t fsdev_fstat
0000000000608c60 0000000000000094 t fsdev_ftruncate
0000000000608d00 00000000000001fc t fsdev_stat
0000000000608f00 000000000000014c t fsdev_rename
0000000000609050 0000000000000140 t fsdev_chdir
0000000000609190 00000000000000a4 t fsdev_mkdir
0000000000609240 00000000000000a4 t fsdev_unlink
00000000006092f0 00000000000000a4 t fsdev_rmdir
00000000006093a0 0000000000000144 t fsdev_write_safe
00000000006094f0 000000000000013c t fsdev_read_safe
0000000000609630 0000000000000100 t fsdev_read
0000000000609730 00000000000001b8 t fsdev_dirnext
00000000006098f0 0000000000000124 t fsdev_write
0000000000609a20 00000000000000ec t fsdev_seek
0000000000609b10 0000000000000244 t fsdev_open
0000000000609d60 0000000000000224 T fsdevMountDevice
0000000000609f90 0000000000000040 T fsdevMountSdmc
0000000000609fd0 00000000000000c0 T __libnx_init_cwd
000000000060a090 0000000000000064 T fsdevUnmountAll
000000000060a100 0000000000000084 T fsdevTranslatePath
000000000060a190 000000000000002c T _convert_errno
000000000060a1c0 000000000000010c T utf8_to_utf16
000000000060a2d0 000000000000012c T decode_utf8
000000000060a400 0000000000000140 T utf16_to_utf8
000000000060a540 T armDCacheFlush
000000000060a570 t armDCacheFlush_L0
000000000060a58c T svcSetHeapSize
000000000060a5a0 T svcSetMemoryAttribute
000000000060a5a8 T svcMapMemory
000000000060a5b0 T svcUnmapMemory
000000000060a5b8 T svcQueryMemory
000000000060a5cc T svcExitProcess
000000000060a5d4 T svcCreateThread
000000000060a5e8 T svcStartThread
000000000060a5f0 T svcExitThread
000000000060a5f8 T svcSleepThread
000000000060a600 T svcSetThreadPriority
000000000060a608 T svcSetThreadCoreMask
000000000060a610 T svcMapSharedMemory
000000000060a618 T svcUnmapSharedMemory
000000000060a620 T svcCreateTransferMemory
000000000060a634 T svcCloseHandle
000000000060a63c T svcResetSignal
000000000060a644 T svcWaitSynchronization
000000000060a658 T svcArbitrateLock
000000000060a660 T svcArbitrateUnlock
000000000060a668 T svcWaitProcessWideKeyAtomic
000000000060a670 T svcSignalProcessWideKey
000000000060a678 T svcConnectToNamedPort
000000000060a68c T svcSendSyncRequest
000000000060a694 T svcBreak
000000000060a69c T svcOutputDebugString
000000000060a6a4 T svcReturnFromException
000000000060a6ac T svcGetInfo
000000000060a6c0 T svcUnmapTransferMemory
000000000060a6c8 T __aarch64_read_tp
000000000060a6e0 00000000000000a8 T tmemCreate
000000000060a790 0000000000000034 T tmemUnmap
000000000060a7d0 0000000000000038 T tmemCloseHandle
000000000060a810 00000000000000f0 T tmemWaitForPermission
000000000060a900 0000000000000054 T tmemClose
000000000060a960 0000000000000524 T waitObjects
000000000060ae90 0000000000000108 T waitHandles
000000000060afa0 0000000000000014 T shmemLoadRemote
000000000060afc0 0000000000000088 T shmemMap
000000000060b050 0000000000000034 T shmemUnmap
000000000060b090 0000000000000044 T shmemClose
000000000060b0e0 0000000000000064 t _memregionInitWithInfo
000000000060b150 0000000000000004 W __libnx_virtmem_rng
000000000060b160 000000000000016c t _memregionFindRandom
000000000060b2d0 0000000000000120 T virtmemSetup
000000000060b3f0 000000000000000c T virtmemLock
000000000060b400 000000000000000c T virtmemUnlock
000000000060b410 0000000000000050 T virtmemFindAslr
000000000060b460 0000000000000050 T virtmemFindStack
000000000060b4b0 000000000000000c T eventLoadRemote
000000000060b4c0 0000000000000038 T eventWait
000000000060b500 0000000000000050 T eventClose
000000000060b550 00000000000003d4 T randomGet
000000000060b930 0000000000000020 T randomGet64
000000000060b950 00000000000001dc t _viCleanup
000000000060bb30 0000000000000100 t _viCmdGetSessionNoParams.constprop.0
000000000060bc30 00000000000000fc t _viCmdGetSession.constprop.0
000000000060bd30 000000000000028c T viInitialize
000000000060bfc0 0000000000000044 T viExit
000000000060c010 000000000000000c T viGetSession_IHOSBinderDriverRelay
000000000060c020 0000000000000110 T viOpenDisplay
000000000060c130 00000000000000f4 T viCloseDisplay
000000000060c230 00000000000000fc T viCloseLayer
000000000060c330 0000000000000378 T viCreateLayer
000000000060c6b0 00000000000000d8 T viSetLayerScalingMode
000000000060c790 00000000000000c0 t _apmCleanup
000000000060c850 00000000000000fc t _apmCmdGetSession.constprop.0
000000000060c950 00000000000000a0 T apmInitialize
000000000060c9f0 0000000000000044 T apmExit
000000000060ca40 00000000000000c8 T apmSetPerformanceConfiguration
000000000060cb10 00000000000000b4 t _fsCleanup
000000000060cbd0 00000000000001a8 t _fsCmdNoIO
000000000060cd80 00000000000001d8 t _fsFsCmdWithInPath
000000000060cf60 00000000000001f4 t _fsFsCmdWithTwoInPaths
000000000060d160 000000000000025c t _fsFsOpenCommon
000000000060d3c0 00000000000001ec t _fsFsCmdWithInPathAndOutU64
000000000060d5b0 00000000000000f4 t _fsObjectClose
000000000060d6b0 00000000000001f4 t _fsCmdGetSession.constprop.0
000000000060d8b0 00000000000002f8 T fsInitialize
000000000060dbb0 0000000000000044 T fsExit
000000000060dc00 0000000000000008 T fsOpenSdCardFileSystem
000000000060dc10 0000000000000008 T fsOpenDataStorageByCurrentProcess
000000000060dc20 00000000000001f0 T fsFsCreateFile
000000000060de10 0000000000000008 T fsFsDeleteFile
000000000060de20 0000000000000008 T fsFsCreateDirectory
000000000060de30 0000000000000008 T fsFsDeleteDirectory
000000000060de40 0000000000000008 T fsFsRenameFile
000000000060de50 0000000000000008 T fsFsRenameDirectory
000000000060de60 00000000000001f0 T fsFsGetEntryType
000000000060e050 0000000000000008 T fsFsOpenFile
000000000060e060 0000000000000008 T fsFsOpenDirectory
000000000060e070 0000000000000008 T fsFsGetFreeSpace
000000000060e080 0000000000000008 T fsFsGetTotalSpace
000000000060e090 0000000000000230 T fsFsGetFileTimeStampRaw
000000000060e2c0 0000000000000004 T fsFsClose
000000000060e2d0 0000000000000218 T fsFileRead
000000000060e4f0 0000000000000200 T fsFileWrite
000000000060e6f0 0000000000000008 T fsFileFlush
000000000060e700 00000000000001b8 T fsFileSetSize
000000000060e700 00000000000001b8 t fsFileSetSize.localalias
000000000060e8c0 00000000000001c4 T fsFileGetSize
000000000060e8c0 00000000000001c4 t fsFileGetSize.localalias
000000000060ea90 0000000000000004 T fsFileClose
000000000060eaa0 0000000000000004 T fsDirClose
000000000060eab0 00000000000001fc T fsDirRead
000000000060ecb0 00000000000001f8 T fsStorageRead
000000000060eeb0 0000000000000004 T fsStorageClose
000000000060eec0 000000000000017c T bsdFcntl
000000000060f040 0000000000000228 t _timeCleanup
000000000060f270 0000000000000100 t _timeCmdGetSession.constprop.0
000000000060f370 00000000000000cc t _timeGetSharedMemoryNativeHandle.constprop.0
000000000060f440 00000000000000c4 t _timeCmdNoInOutU64.constprop.0.isra.0
000000000060f510 0000000000000110 t _timeReadClockFromSharedMem
000000000060f620 0000000000000238 T timeInitialize
000000000060f860 0000000000000044 T timeExit
000000000060f8b0 0000000000000038 T timeGetServiceSession_SystemClock
000000000060f8f0 0000000000000068 T timeGetCurrentTime
000000000060f960 0000000000000110 T timeToCalendarTimeWithMyRule
000000000060fa70 0000000000000104 T timeToPosixTimeWithMyRule
000000000060fb80 00000000000000d8 T bqRequestBuffer
000000000060fc60 0000000000000160 T bqDequeueBuffer
000000000060fdc0 00000000000000dc T bqQueueBuffer
000000000060fea0 0000000000000094 T bqCancelBuffer
000000000060ff40 00000000000000e4 T bqConnect
0000000000610030 000000000000009c T bqDisconnect
00000000006100d0 000000000000017c T bqSetPreallocatedBuffer
0000000000610250 000000000000001c T binderCreate
0000000000610270 00000000000003d0 T binderTransactParcel
0000000000610640 00000000000000e8 T binderConvertErrorCode
0000000000610730 0000000000000124 T binderAdjustRefcount
0000000000610860 0000000000000098 T binderInitSession
0000000000610900 0000000000000068 T binderClose
0000000000610970 0000000000000158 T binderGetNativeHandle
0000000000610ad0 0000000000000030 T parcelCreate
0000000000610b00 000000000000019c T parcelTransact
0000000000610ca0 0000000000000088 T parcelWriteData
0000000000610d30 0000000000000098 T parcelReadData
0000000000610dd0 0000000000000020 T parcelWriteInt32
0000000000610df0 0000000000000020 T parcelWriteUInt32
0000000000610e10 000000000000007c T parcelWriteString16
0000000000610e90 0000000000000030 T parcelWriteInterfaceToken
0000000000610ec0 0000000000000024 T parcelReadInt32
0000000000610ef0 0000000000000068 T parcelReadFlattenedObject
0000000000610f60 000000000000004c T parcelWriteFlattenedObject
0000000000610fb0 0000000000000040 T libappletArgsCreate
0000000000610ff0 0000000000000008 T libappletArgsSetPlayStartupSound
0000000000611000 0000000000000068 T libappletCreateWriteStorage
0000000000611070 0000000000000080 T libappletReadStorage
00000000006110f0 0000000000000048 T libappletArgsPush
0000000000611140 0000000000000038 T libappletPushInData
0000000000611180 000000000000006c T libappletPopOutData
00000000006111f0 0000000000000064 T libappletStart
0000000000611260 00000000000000a4 T __nx_dynamic
0000000000611310 00000000000000d4 W __libnx_initheap
00000000006113f0 00000000000000ec W __appInit
00000000006114e0 0000000000000044 W __appExit
0000000000611530 000000000000002c W __libnx_init
0000000000611560 0000000000000020 W __libnx_exit
0000000000611580 000000000000001c T __syscall_exit
00000000006115a0 0000000000000034 T __syscall_getreent
00000000006115e0 0000000000000004 T __syscall_lock_acquire
00000000006115f0 0000000000000004 T __syscall_lock_release
0000000000611600 0000000000000004 T __syscall_lock_acquire_recursive
0000000000611610 0000000000000004 T __syscall_lock_release_recursive
0000000000611620 000000000000001c T __syscall_cond_signal
0000000000611640 000000000000001c T __syscall_cond_broadcast
0000000000611660 000000000000003c T __syscall_cond_wait
00000000006116a0 0000000000000068 T __syscall_cond_wait_recursive
0000000000611710 0000000000000014 T __syscall_thread_self
0000000000611730 000000000000002c T __syscall_thread_exit
0000000000611760 0000000000000058 t __thread_entry
00000000006117c0 0000000000000164 T __syscall_thread_create
0000000000611930 0000000000000058 T __syscall_thread_join
0000000000611990 0000000000000044 T __syscall_tls_create
00000000006119e0 0000000000000018 T __syscall_tls_set
0000000000611a00 0000000000000004 T __syscall_tls_get
0000000000611a10 0000000000000018 T __syscall_tls_delete
0000000000611a30 0000000000000238 T __libnx_init_time
0000000000611c70 00000000000000e8 T __syscall_clock_gettime
0000000000611d60 000000000000008c T __syscall_gettod_r
0000000000611df0 0000000000000084 T newlibSetup
0000000000611e80 00000000000002f8 W argvSetup
0000000000612180 0000000000000058 T encode_utf16
00000000006121e0 00000000000000d0 T encode_utf8
00000000006122b0 0000000000000064 T decode_utf16
0000000000612314 W __libnx_exception_entry
00000000006123a0 t __libnx_exception_entry_start
00000000006124c8 t __libnx_exception_entry_abort
00000000006124cc t __libnx_exception_entry_end
00000000006124d4 T __libnx_exception_returnentry
00000000006124f0 0000000000000064 T condvarWaitTimeout
0000000000612560 00000000000000b0 T __libnx_init_thread
0000000000612610 000000000000029c T threadCreate
00000000006128b0 00000000000000a0 T threadExit
0000000000612950 0000000000000090 t _EntryWrap
00000000006129e0 0000000000000008 T threadStart
00000000006129f0 000000000000002c T threadWaitForExit
0000000000612a20 0000000000000098 T threadClose
0000000000612ac0 0000000000000010 T threadTlsGet
0000000000612ad0 0000000000000010 T threadTlsSet
0000000000612ae0 00000000000000d8 T threadTlsAlloc
0000000000612bc0 0000000000000048 T threadTlsFree
0000000000612c10 0000000000000178 T sessionmgrCreate
0000000000612d90 0000000000000084 T sessionmgrClose
0000000000612e20 00000000000000b4 T sessionmgrAttachClient
0000000000612ee0 0000000000000070 T sessionmgrDetachClient
0000000000612f50 00000000000000d4 t _setsysGetFirmwareVersionImpl
0000000000613030 0000000000000068 t _setsysCleanup
00000000006130a0 00000000000000a0 T setsysInitialize
0000000000613140 0000000000000044 T setsysExit
0000000000613190 0000000000000044 T setsysGetFirmwareVersion
00000000006131e0 00000000000000c4 T nxlinkSetup
00000000006132b0 0000000000000004 T operator delete(void*, unsigned long)
00000000006132c0 0000000000000004 T operator delete[](void*)
00000000006132d0 0000000000000004 T operator delete[](void*, unsigned long)
00000000006132e0 000000000000000c W __gnu_cxx::__concurrence_lock_error::what() const
00000000006132f0 000000000000000c W __gnu_cxx::__concurrence_unlock_error::what() const
0000000000613300 000000000000000c W __gnu_cxx::__concurrence_broadcast_error::what() const
0000000000613310 000000000000000c W __gnu_cxx::__concurrence_wait_error::what() const
0000000000613320 0000000000000020 t (anonymous namespace)::init()
0000000000613340 0000000000000020 t (anonymous namespace)::init_static_cond()
0000000000613360 0000000000000014 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
0000000000613360 0000000000000014 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
0000000000613380 0000000000000038 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
00000000006133c0 0000000000000014 W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
00000000006133c0 0000000000000014 W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
00000000006133e0 0000000000000038 W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
0000000000613420 0000000000000014 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
0000000000613420 0000000000000014 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
0000000000613440 0000000000000038 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
0000000000613480 0000000000000014 W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
0000000000613480 0000000000000014 W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
00000000006134a0 0000000000000038 W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
00000000006134e0 000000000000014c T __cxa_guard_acquire
0000000000613630 0000000000000088 T __cxa_guard_release
00000000006136c0 0000000000000068 T operator new(unsigned long)
0000000000613730 0000000000000004 T operator new[](unsigned long)
0000000000613740 0000000000000014 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0000000000613740 0000000000000014 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0000000000613760 0000000000000028 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0000000000613790 000000000000015c T __cxxabiv1::__si_class_type_info::__do_dyncast(long, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
00000000006138f0 000000000000008c T __cxxabiv1::__si_class_type_info::__do_find_public_src(long, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0000000000613980 0000000000000064 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
00000000006139f0 0000000000000004 T std::type_info::~type_info()
00000000006139f0 0000000000000004 T std::type_info::~type_info()
0000000000613a00 0000000000000008 T std::type_info::__is_pointer_p() const
0000000000613a00 0000000000000008 T std::type_info::__is_function_p() const
0000000000613a10 0000000000000580 T std::ios_base::Init::Init()
0000000000613a10 0000000000000580 T std::ios_base::Init::Init()
0000000000613f90 0000000000000088 T std::ios_base::Init::~Init()
0000000000613f90 0000000000000088 T std::ios_base::Init::~Init()
0000000000614020 0000000000000034 T std::__detail::_List_node_base::_M_transfer(std::__detail::_List_node_base*, std::__detail::_List_node_base*)
0000000000614060 0000000000000014 T std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*)
0000000000614080 0000000000000010 T std::__detail::_List_node_base::_M_unhook()
0000000000614090 0000000000000004 T std::locale::facet::~facet()
0000000000614090 0000000000000004 T std::locale::facet::~facet()
00000000006140a0 000000000000003c T std::locale::facet::~facet()
00000000006140a0 000000000000003c t std::locale::facet::~facet() [clone .localalias]
00000000006140e0 0000000000000018 T std::locale::facet::_S_initialize_once()
0000000000614100 0000000000000058 W __gnu_cxx::__scoped_lock::~__scoped_lock()
0000000000614100 0000000000000058 W __gnu_cxx::__scoped_lock::~__scoped_lock()
0000000000614160 0000000000000030 T std::locale::locale(std::locale const&)
0000000000614160 0000000000000030 T std::locale::locale(std::locale const&)
0000000000614190 0000000000000008 T std::locale::locale(std::locale::_Impl*)
0000000000614190 0000000000000008 T std::locale::locale(std::locale::_Impl*)
00000000006141a0 0000000000000030 T std::locale::facet::_S_get_c_locale()
00000000006141d0 000000000000000c T std::locale::facet::_S_get_c_name()
00000000006141e0 00000000000001c0 T std::locale::_Impl::~_Impl()
00000000006141e0 00000000000001c0 T std::locale::_Impl::~_Impl()
00000000006143a0 00000000000000ac T std::locale::operator=(std::locale const&)
0000000000614450 000000000000005c T std::locale::~locale()
0000000000614450 000000000000005c T std::locale::~locale()
00000000006144b0 0000000000000048 T std::locale::id::_M_id() const
0000000000614500 0000000000000498 T std::locale::_Impl::_M_install_facet(std::locale::id const*, std::locale::facet const*)
00000000006149a0 0000000000000258 T std::locale::_Impl::_M_install_cache(std::locale::facet const*, unsigned long)
0000000000614c00 0000000000000af8 T std::locale::_Impl::_Impl(unsigned long)
0000000000614c00 0000000000000af8 T std::locale::_Impl::_Impl(unsigned long)
0000000000615700 0000000000000064 T std::locale::_S_initialize_once()
0000000000615770 000000000000003c T std::locale::_S_initialize()
00000000006157b0 0000000000000100 T std::locale::locale()
00000000006157b0 0000000000000100 T std::locale::locale()
00000000006158b0 00000000000000e8 T std::__cxx11::moneypunct<char, true>::_M_initialize_moneypunct(int*, char const*)
00000000006159a0 00000000000000e8 T std::__cxx11::moneypunct<char, false>::_M_initialize_moneypunct(int*, char const*)
0000000000615a90 000000000000005c T std::__cxx11::moneypunct<char, true>::~moneypunct()
0000000000615a90 000000000000005c T std::__cxx11::moneypunct<char, true>::~moneypunct()
0000000000615af0 000000000000003c T std::__cxx11::moneypunct<char, true>::~moneypunct()
0000000000615b30 000000000000005c T std::__cxx11::moneypunct<char, false>::~moneypunct()
0000000000615b30 000000000000005c T std::__cxx11::moneypunct<char, false>::~moneypunct()
0000000000615b90 000000000000003c T std::__cxx11::moneypunct<char, false>::~moneypunct()
0000000000615bd0 00000000000000ec T std::__cxx11::moneypunct<wchar_t, true>::_M_initialize_moneypunct(int*, char const*)
0000000000615cc0 00000000000000ec T std::__cxx11::moneypunct<wchar_t, false>::_M_initialize_moneypunct(int*, char const*)
0000000000615db0 000000000000005c T std::__cxx11::moneypunct<wchar_t, true>::~moneypunct()
0000000000615db0 000000000000005c T std::__cxx11::moneypunct<wchar_t, true>::~moneypunct()
0000000000615e10 000000000000003c T std::__cxx11::moneypunct<wchar_t, true>::~moneypunct()
0000000000615e50 000000000000005c T std::__cxx11::moneypunct<wchar_t, false>::~moneypunct()
0000000000615e50 000000000000005c T std::__cxx11::moneypunct<wchar_t, false>::~moneypunct()
0000000000615eb0 000000000000003c T std::__cxx11::moneypunct<wchar_t, false>::~moneypunct()
0000000000615ef0 0000000000000068 W std::__moneypunct_cache<char, true>::~__moneypunct_cache()
0000000000615ef0 0000000000000068 W std::__moneypunct_cache<char, true>::~__moneypunct_cache()
0000000000615f60 000000000000003c W std::__moneypunct_cache<char, true>::~__moneypunct_cache()
0000000000615fa0 0000000000000068 W std::__moneypunct_cache<char, false>::~__moneypunct_cache()
0000000000615fa0 0000000000000068 W std::__moneypunct_cache<char, false>::~__moneypunct_cache()
0000000000616010 000000000000003c W std::__moneypunct_cache<char, false>::~__moneypunct_cache()
0000000000616050 0000000000000068 W std::__moneypunct_cache<wchar_t, true>::~__moneypunct_cache()
0000000000616050 0000000000000068 W std::__moneypunct_cache<wchar_t, true>::~__moneypunct_cache()
00000000006160c0 000000000000003c W std::__moneypunct_cache<wchar_t, true>::~__moneypunct_cache()
0000000000616100 0000000000000068 W std::__moneypunct_cache<wchar_t, false>::~__moneypunct_cache()
0000000000616100 0000000000000068 W std::__moneypunct_cache<wchar_t, false>::~__moneypunct_cache()
0000000000616170 000000000000003c W std::__moneypunct_cache<wchar_t, false>::~__moneypunct_cache()
00000000006161b0 00000000000000e8 T std::moneypunct<char, true>::_M_initialize_moneypunct(int*, char const*)
00000000006162a0 00000000000000e8 T std::moneypunct<char, false>::_M_initialize_moneypunct(int*, char const*)
0000000000616390 000000000000009c T std::moneypunct<char, true>::~moneypunct()
0000000000616390 000000000000009c T std::moneypunct<char, true>::~moneypunct()
0000000000616430 000000000000003c T std::moneypunct<char, true>::~moneypunct()
0000000000616470 000000000000009c T std::moneypunct<char, false>::~moneypunct()
0000000000616470 000000000000009c T std::moneypunct<char, false>::~moneypunct()
0000000000616510 000000000000003c T std::moneypunct<char, false>::~moneypunct()
0000000000616550 00000000000000ec T std::moneypunct<wchar_t, true>::_M_initialize_moneypunct(int*, char const*)
0000000000616640 00000000000000ec T std::moneypunct<wchar_t, false>::_M_initialize_moneypunct(int*, char const*)
0000000000616730 000000000000009c T std::moneypunct<wchar_t, true>::~moneypunct()
0000000000616730 000000000000009c T std::moneypunct<wchar_t, true>::~moneypunct()
00000000006167d0 000000000000003c T std::moneypunct<wchar_t, true>::~moneypunct()
0000000000616810 000000000000009c T std::moneypunct<wchar_t, false>::~moneypunct()
0000000000616810 000000000000009c T std::moneypunct<wchar_t, false>::~moneypunct()
00000000006168b0 000000000000003c T std::moneypunct<wchar_t, false>::~moneypunct()
00000000006168f0 0000000000000108 T std::__cxx11::numpunct<char>::_M_initialize_numpunct(int*)
0000000000616a00 000000000000005c T std::__cxx11::numpunct<char>::~numpunct()
0000000000616a00 000000000000005c T std::__cxx11::numpunct<char>::~numpunct()
0000000000616a60 000000000000003c T std::__cxx11::numpunct<char>::~numpunct()
0000000000616aa0 00000000000000f0 T std::__cxx11::numpunct<wchar_t>::_M_initialize_numpunct(int*)
0000000000616b90 000000000000005c T std::__cxx11::numpunct<wchar_t>::~numpunct()
0000000000616b90 000000000000005c T std::__cxx11::numpunct<wchar_t>::~numpunct()
0000000000616bf0 000000000000003c T std::__cxx11::numpunct<wchar_t>::~numpunct()
0000000000616c30 000000000000005c W std::__numpunct_cache<char>::~__numpunct_cache()
0000000000616c30 000000000000005c W std::__numpunct_cache<char>::~__numpunct_cache()
0000000000616c90 000000000000003c W std::__numpunct_cache<char>::~__numpunct_cache()
0000000000616cd0 000000000000005c W std::__numpunct_cache<wchar_t>::~__numpunct_cache()
0000000000616cd0 000000000000005c W std::__numpunct_cache<wchar_t>::~__numpunct_cache()
0000000000616d30 000000000000003c W std::__numpunct_cache<wchar_t>::~__numpunct_cache()
0000000000616d70 0000000000000108 T std::numpunct<char>::_M_initialize_numpunct(int*)
0000000000616e80 000000000000009c T std::numpunct<char>::~numpunct()
0000000000616e80 000000000000009c T std::numpunct<char>::~numpunct()
0000000000616f20 000000000000003c T std::numpunct<char>::~numpunct()
0000000000616f60 00000000000000f0 T std::numpunct<wchar_t>::_M_initialize_numpunct(int*)
0000000000617050 000000000000009c T std::numpunct<wchar_t>::~numpunct()
0000000000617050 000000000000009c T std::numpunct<wchar_t>::~numpunct()
00000000006170f0 000000000000003c T std::numpunct<wchar_t>::~numpunct()
0000000000617130 0000000000000054 T std::_Rb_tree_increment(std::_Rb_tree_node_base*)
0000000000617190 0000000000000054 T std::_Rb_tree_increment(std::_Rb_tree_node_base const*)
00000000006171f0 0000000000000068 T std::_Rb_tree_decrement(std::_Rb_tree_node_base*)
0000000000617260 000000000000029c T std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)
0000000000617500 000000000000000c T std::__codecvt_utf8_base<char32_t>::do_unshift(_mbstate_t&, char*, char*, char*&) const
0000000000617500 000000000000000c T std::__codecvt_utf8_base<char16_t>::do_unshift(_mbstate_t&, char*, char*, char*&) const
0000000000617500 000000000000000c T std::__codecvt_utf8_base<wchar_t>::do_unshift(_mbstate_t&, char*, char*, char*&) const
0000000000617500 000000000000000c T std::__codecvt_utf16_base<char32_t>::do_unshift(_mbstate_t&, char*, char*, char*&) const
0000000000617500 000000000000000c T std::__codecvt_utf16_base<char16_t>::do_unshift(_mbstate_t&, char*, char*, char*&) const
0000000000617500 000000000000000c T std::__codecvt_utf16_base<wchar_t>::do_unshift(_mbstate_t&, char*, char*, char*&) const
0000000000617500 000000000000000c T std::__codecvt_utf8_utf16_base<char32_t>::do_unshift(_mbstate_t&, char*, char*, char*&) const
0000000000617500 000000000000000c T std::__codecvt_utf8_utf16_base<char16_t>::do_unshift(_mbstate_t&, char*, char*, char*&) const
0000000000617500 000000000000000c T std::__codecvt_utf8_utf16_base<wchar_t>::do_unshift(_mbstate_t&, char*, char*, char*&) const
0000000000617500 000000000000000c T std::codecvt<char32_t, char, _mbstate_t>::do_unshift(_mbstate_t&, char*, char*, char*&) const
0000000000617500 000000000000000c T std::codecvt<char16_t, char, _mbstate_t>::do_unshift(_mbstate_t&, char*, char*, char*&) const
0000000000617510 0000000000000008 T std::__codecvt_utf8_base<char32_t>::do_encoding() const
0000000000617510 0000000000000008 T std::__codecvt_utf8_base<char16_t>::do_encoding() const
0000000000617510 0000000000000008 T std::__codecvt_utf8_base<wchar_t>::do_encoding() const
0000000000617510 0000000000000008 T std::__codecvt_utf16_base<char32_t>::do_encoding() const
0000000000617510 0000000000000008 T std::__codecvt_utf16_base<char16_t>::do_encoding() const
0000000000617510 0000000000000008 T std::__codecvt_utf16_base<wchar_t>::do_encoding() const
0000000000617510 0000000000000008 T std::__codecvt_utf8_utf16_base<char32_t>::do_encoding() const
0000000000617510 0000000000000008 T std::__codecvt_utf8_utf16_base<char16_t>::do_encoding() const
0000000000617510 0000000000000008 T std::__codecvt_utf8_utf16_base<wchar_t>::do_encoding() const
0000000000617510 0000000000000008 T std::codecvt<char32_t, char, _mbstate_t>::do_encoding() const
0000000000617510 0000000000000008 T std::codecvt<char32_t, char8_t, _mbstate_t>::do_encoding() const
0000000000617510 0000000000000008 T std::codecvt<char16_t, char, _mbstate_t>::do_encoding() const
0000000000617510 0000000000000008 T std::codecvt<char16_t, char8_t, _mbstate_t>::do_encoding() const
0000000000617520 0000000000000008 T std::__codecvt_utf8_base<char32_t>::do_always_noconv() const
0000000000617520 0000000000000008 T std::__codecvt_utf8_base<char16_t>::do_always_noconv() const
0000000000617520 0000000000000008 T std::__codecvt_utf8_base<wchar_t>::do_always_noconv() const
0000000000617520 0000000000000008 T std::__codecvt_utf16_base<char32_t>::do_always_noconv() const
0000000000617520 0000000000000008 T std::__codecvt_utf16_base<char16_t>::do_always_noconv() const
0000000000617520 0000000000000008 T std::__codecvt_utf16_base<wchar_t>::do_always_noconv() const
0000000000617520 0000000000000008 T std::__codecvt_utf8_utf16_base<char32_t>::do_always_noconv() const
0000000000617520 0000000000000008 T std::__codecvt_utf8_utf16_base<char16_t>::do_always_noconv() const
0000000000617520 0000000000000008 T std::__codecvt_utf8_utf16_base<wchar_t>::do_always_noconv() const
0000000000617520 0000000000000008 T std::codecvt<char32_t, char, _mbstate_t>::do_always_noconv() const
0000000000617520 0000000000000008 T std::codecvt<char32_t, char8_t, _mbstate_t>::do_always_noconv() const
0000000000617520 0000000000000008 T std::codecvt<char16_t, char, _mbstate_t>::do_always_noconv() const
0000000000617520 0000000000000008 T std::codecvt<char16_t, char8_t, _mbstate_t>::do_always_noconv() const
0000000000617530 0000000000000008 T std::codecvt<char32_t, char, _mbstate_t>::do_max_length() const
0000000000617530 0000000000000008 T std::codecvt<char32_t, char8_t, _mbstate_t>::do_max_length() const
0000000000617530 0000000000000008 T std::codecvt<char16_t, char, _mbstate_t>::do_max_length() const
0000000000617530 0000000000000008 T std::codecvt<char16_t, char8_t, _mbstate_t>::do_max_length() const
0000000000617540 000000000000000c T std::codecvt<char32_t, char8_t, _mbstate_t>::do_unshift(_mbstate_t&, char8_t*, char8_t*, char8_t*&) const
0000000000617540 000000000000000c T std::codecvt<char16_t, char8_t, _mbstate_t>::do_unshift(_mbstate_t&, char8_t*, char8_t*, char8_t*&) const
0000000000617550 0000000000000140 t bool std::(anonymous namespace)::write_utf8_code_point<char>(std::(anonymous namespace)::range<char, true>&, char32_t)
0000000000617690 0000000000000198 t char32_t std::(anonymous namespace)::read_utf8_code_point<char>(std::(anonymous namespace)::range<char const, true>&, unsigned long)
0000000000617830 000000000000011c t bool std::(anonymous namespace)::write_utf8_code_point<char8_t>(std::(anonymous namespace)::range<char8_t, true>&, char32_t)
0000000000617950 0000000000000198 t char32_t std::(anonymous namespace)::read_utf8_code_point<char8_t>(std::(anonymous namespace)::range<char8_t const, true>&, unsigned long)
0000000000617af0 0000000000000014 T std::codecvt<char16_t, char, _mbstate_t>::~codecvt()
0000000000617af0 0000000000000014 T std::codecvt<char16_t, char, _mbstate_t>::~codecvt()
0000000000617b10 0000000000000014 T std::codecvt<char32_t, char, _mbstate_t>::~codecvt()
0000000000617b10 0000000000000014 T std::codecvt<char32_t, char, _mbstate_t>::~codecvt()
0000000000617b30 0000000000000014 T std::codecvt<char16_t, char8_t, _mbstate_t>::~codecvt()
0000000000617b30 0000000000000014 T std::codecvt<char16_t, char8_t, _mbstate_t>::~codecvt()
0000000000617b50 0000000000000014 T std::codecvt<char32_t, char8_t, _mbstate_t>::~codecvt()
0000000000617b50 0000000000000014 T std::codecvt<char32_t, char8_t, _mbstate_t>::~codecvt()
0000000000617b70 0000000000000024 T std::codecvt<char16_t, char, _mbstate_t>::~codecvt()
0000000000617ba0 0000000000000024 T std::codecvt<char32_t, char, _mbstate_t>::~codecvt()
0000000000617bd0 0000000000000024 T std::codecvt<char16_t, char8_t, _mbstate_t>::~codecvt()
0000000000617c00 0000000000000024 T std::codecvt<char32_t, char8_t, _mbstate_t>::~codecvt()
0000000000617c30 0000000000000064 T std::codecvt<char32_t, char8_t, _mbstate_t>::do_length(_mbstate_t&, char8_t const*, char8_t const*, unsigned long) const
0000000000617ca0 00000000000000bc T std::codecvt<char32_t, char8_t, _mbstate_t>::do_in(_mbstate_t&, char8_t const*, char8_t const*, char8_t const*&, char32_t*, char32_t*, char32_t*&) const
0000000000617d60 000000000000009c T std::codecvt<char32_t, char8_t, _mbstate_t>::do_out(_mbstate_t&, char32_t const*, char32_t const*, char32_t const*&, char8_t*, char8_t*, char8_t*&) const
0000000000617e00 0000000000000094 T std::codecvt<char16_t, char8_t, _mbstate_t>::do_length(_mbstate_t&, char8_t const*, char8_t const*, unsigned long) const
0000000000617ea0 00000000000000d8 T std::codecvt<char16_t, char8_t, _mbstate_t>::do_out(_mbstate_t&, char16_t const*, char16_t const*, char16_t const*&, char8_t*, char8_t*, char8_t*&) const
0000000000617f80 0000000000000184 t std::codecvt_base::result std::(anonymous namespace)::utf16_out<char16_t, char>(std::(anonymous namespace)::range<char16_t const, true>&, std::(anonymous namespace)::range<char, true>&, unsigned long, std::codecvt_mode, std::(anonymous namespace)::surrogates)
0000000000618110 0000000000000050 T std::codecvt<char16_t, char, _mbstate_t>::do_out(_mbstate_t&, char16_t const*, char16_t const*, char16_t const*&, char*, char*, char*&) const
0000000000618160 00000000000000cc t char const* std::(anonymous namespace)::utf16_span<char>(char const*, char const*, unsigned long, char32_t, std::codecvt_mode)
0000000000618230 0000000000000030 T std::codecvt<char16_t, char, _mbstate_t>::do_length(_mbstate_t&, char const*, char const*, unsigned long) const
0000000000618260 0000000000000064 T std::codecvt<char32_t, char, _mbstate_t>::do_length(_mbstate_t&, char const*, char const*, unsigned long) const
00000000006182d0 000000000000014c t std::codecvt_base::result std::(anonymous namespace)::utf16_in<char, char16_t>(std::(anonymous namespace)::range<char const, true>&, std::(anonymous namespace)::range<char16_t, true>&, unsigned long, std::codecvt_mode)
0000000000618420 0000000000000054 T std::codecvt<char16_t, char, _mbstate_t>::do_in(_mbstate_t&, char const*, char const*, char const*&, char16_t*, char16_t*, char16_t*&) const
0000000000618480 0000000000000110 T std::codecvt<char16_t, char8_t, _mbstate_t>::do_in(_mbstate_t&, char8_t const*, char8_t const*, char8_t const*&, char16_t*, char16_t*, char16_t*&) const
0000000000618590 000000000000009c T std::codecvt<char32_t, char, _mbstate_t>::do_out(_mbstate_t&, char32_t const*, char32_t const*, char32_t const*&, char*, char*, char*&) const
0000000000618630 00000000000000bc T std::codecvt<char32_t, char, _mbstate_t>::do_in(_mbstate_t&, char const*, char const*, char const*&, char32_t*, char32_t*, char32_t*&) const
00000000006186f0 00000000000006cc T std::locale::_Impl::_M_init_extra(std::locale::facet**)
0000000000618dc0 0000000000000024 t std::__facet_shims::(anonymous namespace)::collate_shim<char>::do_compare(char const*, char const*, char const*, char const*) const
0000000000618df0 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::do_get_year(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
0000000000618e50 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::do_get_monthname(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
0000000000618eb0 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::do_get_weekday(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
0000000000618f10 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::do_get_date(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
0000000000618f70 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::do_get_time(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
0000000000618fd0 0000000000000010 t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::do_date_order() const
0000000000618fe0 00000000000000a0 t std::__facet_shims::(anonymous namespace)::money_get_shim<char>::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, std::_Ios_Iostate&, long double&) const
0000000000619080 0000000000000030 t std::__facet_shims::(anonymous namespace)::money_put_shim<char>::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, char, long double) const
00000000006190b0 0000000000000014 t std::__facet_shims::(anonymous namespace)::messages_shim<char>::do_close(int) const
00000000006190d0 000000000000001c t std::__facet_shims::(anonymous namespace)::messages_shim<char>::do_open(std::string const&, std::locale const&) const
00000000006190f0 0000000000000024 t std::__facet_shims::(anonymous namespace)::collate_shim<wchar_t>::do_compare(wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*) const
0000000000619120 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::do_get_year(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
0000000000619180 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::do_get_monthname(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000006191e0 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::do_get_weekday(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
0000000000619240 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::do_get_date(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000006192a0 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::do_get_time(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
0000000000619300 0000000000000010 t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::do_date_order() const
0000000000619310 00000000000000a0 t std::__facet_shims::(anonymous namespace)::money_get_shim<wchar_t>::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, std::_Ios_Iostate&, long double&) const
00000000006193b0 0000000000000028 t std::__facet_shims::(anonymous namespace)::money_put_shim<wchar_t>::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, wchar_t, long double) const
00000000006193e0 0000000000000014 t std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>::do_close(int) const
0000000000619400 000000000000001c t std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>::do_open(std::string const&, std::locale const&) const
0000000000619420 00000000000000ac t char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag) [clone .part.0]
00000000006194d0 00000000000000cc t std::__facet_shims::(anonymous namespace)::collate_shim<char>::do_transform(char const*, char const*) const
00000000006195a0 00000000000000d8 t std::__facet_shims::(anonymous namespace)::messages_shim<char>::do_get(int, int, int, std::string const&) const
0000000000619680 000000000000011c t std::__facet_shims::(anonymous namespace)::money_put_shim<char>::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, char, std::string const&) const
00000000006197a0 000000000000011c t std::__facet_shims::(anonymous namespace)::money_put_shim<wchar_t>::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const
00000000006198c0 000000000000014c t std::__facet_shims::(anonymous namespace)::collate_shim<wchar_t>::do_transform(wchar_t const*, wchar_t const*) const
0000000000619a10 0000000000000158 t std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>::do_get(int, int, int, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const
0000000000619b70 0000000000000050 t void std::__facet_shims::(anonymous namespace)::__destroy_string<wchar_t>(void*)
0000000000619bc0 0000000000000050 t void std::__facet_shims::(anonymous namespace)::__destroy_string<char>(void*)
0000000000619c10 0000000000000054 t std::__facet_shims::(anonymous namespace)::messages_shim<char>::~messages_shim()
0000000000619c10 0000000000000054 t std::__facet_shims::(anonymous namespace)::messages_shim<char>::~messages_shim()
0000000000619c70 0000000000000054 t std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>::~messages_shim()
0000000000619c70 0000000000000054 t std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>::~messages_shim()
0000000000619cd0 0000000000000064 t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::~time_get_shim()
0000000000619cd0 0000000000000064 t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::~time_get_shim()
0000000000619d40 0000000000000064 t std::__facet_shims::(anonymous namespace)::money_put_shim<wchar_t>::~money_put_shim()
0000000000619d40 0000000000000064 t std::__facet_shims::(anonymous namespace)::money_put_shim<wchar_t>::~money_put_shim()
0000000000619db0 0000000000000064 t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::~time_get_shim()
0000000000619db0 0000000000000064 t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::~time_get_shim()
0000000000619e20 0000000000000064 t std::__facet_shims::(anonymous namespace)::money_put_shim<char>::~money_put_shim()
0000000000619e20 0000000000000064 t std::__facet_shims::(anonymous namespace)::money_put_shim<char>::~money_put_shim()
0000000000619e90 0000000000000064 t std::__facet_shims::(anonymous namespace)::money_get_shim<wchar_t>::~money_get_shim()
0000000000619e90 0000000000000064 t std::__facet_shims::(anonymous namespace)::money_get_shim<wchar_t>::~money_get_shim()
0000000000619f00 000000000000005c t std::__facet_shims::(anonymous namespace)::messages_shim<char>::~messages_shim()
0000000000619f60 000000000000005c t std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>::~messages_shim()
0000000000619fc0 0000000000000064 t std::__facet_shims::(anonymous namespace)::money_get_shim<char>::~money_get_shim()
0000000000619fc0 0000000000000064 t std::__facet_shims::(anonymous namespace)::money_get_shim<char>::~money_get_shim()
000000000061a030 000000000000006c t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::~time_get_shim()
000000000061a0a0 000000000000006c t std::__facet_shims::(anonymous namespace)::money_get_shim<char>::~money_get_shim()
000000000061a110 000000000000005c t std::__facet_shims::(anonymous namespace)::numpunct_shim<wchar_t>::~numpunct_shim()
000000000061a110 000000000000005c t std::__facet_shims::(anonymous namespace)::numpunct_shim<wchar_t>::~numpunct_shim()
000000000061a170 000000000000005c t std::__facet_shims::(anonymous namespace)::numpunct_shim<char>::~numpunct_shim()
000000000061a170 000000000000005c t std::__facet_shims::(anonymous namespace)::numpunct_shim<char>::~numpunct_shim()
000000000061a1d0 000000000000006c t std::__facet_shims::(anonymous namespace)::money_put_shim<wchar_t>::~money_put_shim()
000000000061a240 000000000000006c t std::__facet_shims::(anonymous namespace)::money_get_shim<wchar_t>::~money_get_shim()
000000000061a2b0 000000000000006c t std::__facet_shims::(anonymous namespace)::money_put_shim<char>::~money_put_shim()
000000000061a320 000000000000006c t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::~time_get_shim()
000000000061a390 000000000000006c t std::__facet_shims::(anonymous namespace)::collate_shim<wchar_t>::~collate_shim()
000000000061a390 000000000000006c t std::__facet_shims::(anonymous namespace)::collate_shim<wchar_t>::~collate_shim()
000000000061a400 0000000000000064 t std::__facet_shims::(anonymous namespace)::numpunct_shim<wchar_t>::~numpunct_shim()
000000000061a470 0000000000000064 t std::__facet_shims::(anonymous namespace)::numpunct_shim<char>::~numpunct_shim()
000000000061a4e0 000000000000006c t std::__facet_shims::(anonymous namespace)::collate_shim<char>::~collate_shim()
000000000061a4e0 000000000000006c t std::__facet_shims::(anonymous namespace)::collate_shim<char>::~collate_shim()
000000000061a550 0000000000000074 t std::__facet_shims::(anonymous namespace)::collate_shim<char>::~collate_shim()
000000000061a5d0 0000000000000074 t std::__facet_shims::(anonymous namespace)::collate_shim<wchar_t>::~collate_shim()
000000000061a650 0000000000000068 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, true>::~moneypunct_shim()
000000000061a650 0000000000000068 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, true>::~moneypunct_shim()
000000000061a6c0 0000000000000068 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, false>::~moneypunct_shim()
000000000061a6c0 0000000000000068 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, false>::~moneypunct_shim()
000000000061a730 0000000000000068 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, false>::~moneypunct_shim()
000000000061a730 0000000000000068 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, false>::~moneypunct_shim()
000000000061a7a0 0000000000000068 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, true>::~moneypunct_shim()
000000000061a7a0 0000000000000068 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, true>::~moneypunct_shim()
000000000061a810 0000000000000070 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, true>::~moneypunct_shim()
000000000061a880 0000000000000070 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, true>::~moneypunct_shim()
000000000061a8f0 0000000000000070 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, false>::~moneypunct_shim()
000000000061a960 0000000000000070 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, false>::~moneypunct_shim()
000000000061a9d0 00000000000001c8 t std::__facet_shims::(anonymous namespace)::money_get_shim<wchar_t>::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, std::_Ios_Iostate&, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >&) const
000000000061aba0 0000000000000168 t std::__facet_shims::(anonymous namespace)::money_get_shim<char>::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, std::_Ios_Iostate&, std::string&) const
000000000061ad10 000000000000002c W std::locale::facet::_M_remove_reference() const
000000000061ad40 0000000000000208 W void std::__facet_shims::__numpunct_fill_cache<char>(std::integral_constant<bool, false>, std::locale::facet const*, std::__numpunct_cache<char>*)
000000000061af50 0000000000000260 W void std::__facet_shims::__numpunct_fill_cache<wchar_t>(std::integral_constant<bool, false>, std::locale::facet const*, std::__numpunct_cache<wchar_t>*)
000000000061b1b0 0000000000000024 W int std::__facet_shims::__collate_compare<char>(std::integral_constant<bool, false>, std::locale::facet const*, char const*, char const*, char const*, char const*)
000000000061b1e0 0000000000000024 W int std::__facet_shims::__collate_compare<wchar_t>(std::integral_constant<bool, false>, std::locale::facet const*, wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*)
000000000061b210 0000000000000104 W void std::__facet_shims::__collate_transform<char>(std::integral_constant<bool, false>, std::locale::facet const*, std::__facet_shims::__any_string&, char const*, char const*)
000000000061b320 0000000000000104 W void std::__facet_shims::__collate_transform<wchar_t>(std::integral_constant<bool, false>, std::locale::facet const*, std::__facet_shims::__any_string&, wchar_t const*, wchar_t const*)
000000000061b430 00000000000002cc W void std::__facet_shims::__moneypunct_fill_cache<char, true>(std::integral_constant<bool, false>, std::locale::facet const*, std::__moneypunct_cache<char, true>*)
000000000061b700 00000000000002cc W void std::__facet_shims::__moneypunct_fill_cache<char, false>(std::integral_constant<bool, false>, std::locale::facet const*, std::__moneypunct_cache<char, false>*)
000000000061b9d0 0000000000000340 W void std::__facet_shims::__moneypunct_fill_cache<wchar_t, true>(std::integral_constant<bool, false>, std::locale::facet const*, std::__moneypunct_cache<wchar_t, true>*)
000000000061bd10 0000000000000340 W void std::__facet_shims::__moneypunct_fill_cache<wchar_t, false>(std::integral_constant<bool, false>, std::locale::facet const*, std::__moneypunct_cache<wchar_t, false>*)
000000000061c050 00000000000000dc W int std::__facet_shims::__messages_open<char>(std::integral_constant<bool, false>, std::locale::facet const*, char const*, unsigned long, std::locale const&)
000000000061c130 00000000000000dc W int std::__facet_shims::__messages_open<wchar_t>(std::integral_constant<bool, false>, std::locale::facet const*, char const*, unsigned long, std::locale const&)
000000000061c210 00000000000001bc W void std::__facet_shims::__messages_get<char>(std::integral_constant<bool, false>, std::locale::facet const*, std::__facet_shims::__any_string&, int, int, int, char const*, unsigned long)
000000000061c3d0 0000000000000210 W void std::__facet_shims::__messages_get<wchar_t>(std::integral_constant<bool, false>, std::locale::facet const*, std::__facet_shims::__any_string&, int, int, int, wchar_t const*, unsigned long)
000000000061c5e0 0000000000000018 W void std::__facet_shims::__messages_close<char>(std::integral_constant<bool, false>, std::locale::facet const*, int)
000000000061c600 0000000000000018 W void std::__facet_shims::__messages_close<wchar_t>(std::integral_constant<bool, false>, std::locale::facet const*, int)
000000000061c620 0000000000000014 W std::time_base::dateorder std::__facet_shims::__time_get_dateorder<char>(std::integral_constant<bool, false>, std::locale::facet const*)
000000000061c640 0000000000000014 W std::time_base::dateorder std::__facet_shims::__time_get_dateorder<wchar_t>(std::integral_constant<bool, false>, std::locale::facet const*)
000000000061c660 00000000000000a4 W std::istreambuf_iterator<char, std::char_traits<char> > std::__facet_shims::__time_get<char>(std::integral_constant<bool, false>, std::locale::facet const*, std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char)
000000000061c710 00000000000000a4 W std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::__facet_shims::__time_get<wchar_t>(std::integral_constant<bool, false>, std::locale::facet const*, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, char)
000000000061c7c0 0000000000000198 W std::istreambuf_iterator<char, std::char_traits<char> > std::__facet_shims::__money_get<char>(std::integral_constant<bool, false>, std::locale::facet const*, std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, std::_Ios_Iostate&, long double*, std::__facet_shims::__any_string*)
000000000061c960 0000000000000198 W std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::__facet_shims::__money_get<wchar_t>(std::integral_constant<bool, false>, std::locale::facet const*, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, std::_Ios_Iostate&, long double*, std::__facet_shims::__any_string*)
000000000061cb00 0000000000000164 W std::ostreambuf_iterator<char, std::char_traits<char> > std::__facet_shims::__money_put<char>(std::integral_constant<bool, false>, std::locale::facet const*, std::ostreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, char, long double, std::__facet_shims::__any_string const*)
000000000061cc70 00000000000001d0 W std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::__facet_shims::__money_put<wchar_t>(std::integral_constant<bool, false>, std::locale::facet const*, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, wchar_t, long double, std::__facet_shims::__any_string const*)
000000000061ce40 0000000000000988 T std::locale::facet::_M_cow_shim(std::locale::id const*) const
000000000061d7d0 0000000000000090 W std::string::copy(char*, unsigned long, unsigned long) const
000000000061d860 0000000000000034 W std::string::swap(std::string&)
000000000061d8a0 0000000000000040 W std::string::find_first_not_of(char, unsigned long) const
000000000061d8e0 0000000000000080 W std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&)
000000000061d960 000000000000009c W std::string::_S_construct(unsigned long, char, std::allocator<char> const&)
000000000061da00 0000000000000004 W std::string::_Rep::_M_destroy(std::allocator<char> const&)
000000000061da10 00000000000001f8 W std::string::_M_mutate(unsigned long, unsigned long, unsigned long)
000000000061dc10 0000000000000058 W std::string::_M_leak_hard()
000000000061dc70 0000000000000018 W std::string::_M_leak()
000000000061dc90 000000000000009c W std::string::_M_replace_aux(unsigned long, unsigned long, unsigned long, char)
000000000061dd30 0000000000000078 W std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)
000000000061ddb0 0000000000000110 W std::string::assign(char const*, unsigned long)
000000000061dec0 0000000000000050 W std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
000000000061dec0 0000000000000050 W std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
000000000061df10 00000000000000ac W std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long)
000000000061dfc0 00000000000000c0 W std::string::reserve(unsigned long)
000000000061e080 00000000000000d4 W std::string::append(std::string const&)
000000000061e160 000000000000013c W std::string::append(char const*, unsigned long)
000000000061e2a0 00000000000000f4 W std::string::append(unsigned long, char)
000000000061e3a0 0000000000000054 W std::string::resize(unsigned long, char)
000000000061e400 000000000000009c W std::string::push_back(char)
000000000061e4a0 0000000000000090 W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::copy(wchar_t*, unsigned long, unsigned long) const
000000000061e530 0000000000000034 W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::swap(std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >&)
000000000061e570 0000000000000094 W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_S_create(unsigned long, unsigned long, std::allocator<wchar_t> const&)
000000000061e610 00000000000000a4 W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_S_construct(unsigned long, wchar_t, std::allocator<wchar_t> const&)
000000000061e6c0 0000000000000004 W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_M_destroy(std::allocator<wchar_t> const&)
000000000061e6d0 00000000000001f4 W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_mutate(unsigned long, unsigned long, unsigned long)
000000000061e8d0 0000000000000058 W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_leak_hard()
000000000061e930 0000000000000098 W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_replace_aux(unsigned long, unsigned long, unsigned long, wchar_t)
000000000061e9d0 0000000000000078 W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_replace_safe(unsigned long, unsigned long, wchar_t const*, unsigned long)
000000000061ea50 000000000000010c W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::assign(wchar_t const*, unsigned long)
000000000061eb60 0000000000000050 W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::~basic_string()
000000000061eb60 0000000000000050 W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::~basic_string()
000000000061ebb0 00000000000000b0 W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_M_clone(std::allocator<wchar_t> const&, unsigned long)
000000000061ec60 00000000000000c0 W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::reserve(unsigned long)
000000000061ed20 00000000000000d4 W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::append(std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&)
000000000061ee00 0000000000000140 W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::append(wchar_t const*, unsigned long)
000000000061ef40 00000000000000f0 W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::append(unsigned long, wchar_t)
000000000061f030 000000000000004c W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::resize(unsigned long, wchar_t)
000000000061f080 0000000000000098 W std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::push_back(wchar_t)
000000000061f120 0000000000000008 W std::ctype<char>::do_narrow(char, char) const
000000000061f130 0000000000000048 T std::ctype<char>::~ctype()
000000000061f130 0000000000000048 T std::ctype<char>::~ctype()
000000000061f180 0000000000000044 T std::ctype<wchar_t>::~ctype()
000000000061f180 0000000000000044 T std::ctype<wchar_t>::~ctype()
000000000061f1d0 0000000000000024 T std::ctype<char>::~ctype()
000000000061f200 0000000000000024 T std::ctype<wchar_t>::~ctype()
000000000061f230 0000000000000034 W std::ctype<char>::do_narrow(char const*, char const*, char, char*) const
000000000061f270 0000000000000034 W std::ctype<char>::do_widen(char const*, char const*, char*) const
000000000061f2b0 0000000000000158 T std::ctype<char>::_M_widen_init() const
000000000061f410 000000000000006c T std::ctype<wchar_t>::ctype(unsigned long)
000000000061f410 000000000000006c T std::ctype<wchar_t>::ctype(unsigned long)
000000000061f480 0000000000000020 T std::ctype<char>::do_toupper(char) const
000000000061f480 0000000000000020 t std::ctype<char>::do_toupper(char) const [clone .localalias]
000000000061f4a0 0000000000000020 T std::ctype<char>::do_tolower(char) const
000000000061f4a0 0000000000000020 t std::ctype<char>::do_tolower(char) const [clone .localalias]
000000000061f4c0 0000000000000010 T std::ctype<char>::classic_table()
000000000061f4d0 00000000000000b8 T std::ctype<char>::ctype(char const*, bool, unsigned long)
000000000061f4d0 00000000000000b8 T std::ctype<char>::ctype(char const*, bool, unsigned long)
000000000061f590 0000000000000094 T std::ctype<char>::do_toupper(char*, char const*) const
000000000061f630 0000000000000094 T std::ctype<char>::do_tolower(char*, char const*) const
000000000061f6d0 0000000000000084 T std::ctype<wchar_t>::do_is(char, wchar_t) const
000000000061f6d0 0000000000000084 t std::ctype<wchar_t>::do_is(char, wchar_t) const [clone .localalias]
000000000061f760 0000000000000110 T std::ctype<wchar_t>::_M_convert_to_wmask(char) const
000000000061f870 0000000000000008 T std::ctype<wchar_t>::do_toupper(wchar_t) const
000000000061f880 0000000000000060 T std::ctype<wchar_t>::do_toupper(wchar_t*, wchar_t const*) const
000000000061f8e0 0000000000000008 T std::ctype<wchar_t>::do_tolower(wchar_t) const
000000000061f8f0 0000000000000060 T std::ctype<wchar_t>::do_tolower(wchar_t*, wchar_t const*) const
000000000061f950 00000000000000ac T std::ctype<wchar_t>::do_is(wchar_t const*, wchar_t const*, char*) const
000000000061fa00 00000000000000d0 T std::ctype<wchar_t>::do_scan_is(char, wchar_t const*, wchar_t const*) const
000000000061fad0 00000000000000dc T std::ctype<wchar_t>::do_scan_not(char, wchar_t const*, wchar_t const*) const
000000000061fbb0 000000000000000c T std::ctype<wchar_t>::do_widen(char) const
000000000061fbc0 0000000000000034 T std::ctype<wchar_t>::do_widen(char const*, char const*, wchar_t*) const
000000000061fc00 000000000000005c T std::ctype<wchar_t>::do_narrow(wchar_t, char) const
000000000061fc60 00000000000000ec T std::ctype<wchar_t>::do_narrow(wchar_t const*, wchar_t const*, char, char*) const
000000000061fd50 00000000000000c0 T std::ctype<wchar_t>::_M_initialize_ctype()
000000000061fe10 000000000000000c W std::__cxx11::moneypunct<char, false>::do_decimal_point() const
000000000061fe20 000000000000000c W std::__cxx11::moneypunct<char, false>::do_thousands_sep() const
000000000061fe30 000000000000000c W std::__cxx11::moneypunct<char, false>::do_frac_digits() const
000000000061fe40 000000000000000c W std::__cxx11::moneypunct<char, false>::do_pos_format() const
000000000061fe50 000000000000000c W std::__cxx11::moneypunct<char, false>::do_neg_format() const
000000000061fe60 000000000000000c W std::__cxx11::moneypunct<char, true>::do_decimal_point() const
000000000061fe70 000000000000000c W std::__cxx11::moneypunct<char, true>::do_thousands_sep() const
000000000061fe80 000000000000000c W std::__cxx11::moneypunct<char, true>::do_frac_digits() const
000000000061fe90 000000000000000c W std::__cxx11::moneypunct<char, true>::do_pos_format() const
000000000061fea0 000000000000000c W std::__cxx11::moneypunct<char, true>::do_neg_format() const
000000000061feb0 000000000000000c W std::__cxx11::numpunct<char>::do_decimal_point() const
000000000061fec0 000000000000000c W std::__cxx11::numpunct<char>::do_thousands_sep() const
000000000061fed0 0000000000000008 W std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_date_order() const
000000000061fee0 0000000000000008 W std::__cxx11::messages<char>::do_open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::locale const&) const
000000000061fef0 0000000000000004 W std::__cxx11::messages<char>::do_close(int) const
000000000061ff00 0000000000000028 W std::__cxx11::collate<char>::do_hash(char const*, char const*) const
000000000061ff30 0000000000000014 W std::__cxx11::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~money_get()
000000000061ff30 0000000000000014 W std::__cxx11::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~money_get()
000000000061ff50 0000000000000034 W std::__cxx11::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~money_get()
000000000061ff90 0000000000000014 W std::__cxx11::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::~money_put()
000000000061ff90 0000000000000014 W std::__cxx11::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::~money_put()
000000000061ffb0 0000000000000034 W std::__cxx11::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::~money_put()
000000000061fff0 0000000000000014 W std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~time_get()
000000000061fff0 0000000000000014 W std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~time_get()
0000000000620010 0000000000000034 W std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~time_get()
0000000000620050 0000000000000034 W std::__cxx11::messages<char>::~messages()
0000000000620050 0000000000000034 W std::__cxx11::messages<char>::~messages()
0000000000620090 0000000000000024 W std::__cxx11::messages<char>::~messages()
00000000006200c0 0000000000000034 W std::__cxx11::collate<char>::~collate()
00000000006200c0 0000000000000034 W std::__cxx11::collate<char>::~collate()
0000000000620100 00000000000000bc t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
00000000006201c0 000000000000003c W std::__cxx11::collate<char>::~collate()
0000000000620200 0000000000000058 W std::__cxx11::numpunct<char>::do_falsename() const
0000000000620260 0000000000000058 W std::__cxx11::moneypunct<char, true>::do_negative_sign() const
00000000006202c0 0000000000000058 W std::__cxx11::moneypunct<char, true>::do_curr_symbol() const
0000000000620320 0000000000000058 W std::__cxx11::moneypunct<char, true>::do_positive_sign() const
0000000000620380 0000000000000058 W std::__cxx11::moneypunct<char, false>::do_positive_sign() const
00000000006203e0 0000000000000058 W std::__cxx11::moneypunct<char, false>::do_negative_sign() const
0000000000620440 0000000000000058 W std::__cxx11::moneypunct<char, true>::do_grouping() const
00000000006204a0 0000000000000058 W std::__cxx11::numpunct<char>::do_grouping() const
0000000000620500 0000000000000058 W std::__cxx11::numpunct<char>::do_truename() const
0000000000620560 0000000000000058 W std::__cxx11::moneypunct<char, false>::do_grouping() const
00000000006205c0 0000000000000058 W std::__cxx11::moneypunct<char, false>::do_curr_symbol() const
0000000000620620 0000000000000124 W std::__cxx11::collate<char>::do_compare(char const*, char const*, char const*, char const*) const
0000000000620750 00000000000001f0 W std::__cxx11::collate<char>::do_transform(char const*, char const*) const
0000000000620940 0000000000000158 W std::__convert_from_v(int* const&, char*, int, char const*, ...)
0000000000620aa0 0000000000001108 W std::istreambuf_iterator<char, std::char_traits<char> > std::__cxx11::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
0000000000621bb0 0000000000001108 W std::istreambuf_iterator<char, std::char_traits<char> > std::__cxx11::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
0000000000622cc0 00000000000000c4 W std::__cxx11::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, std::_Ios_Iostate&, long double&) const
0000000000622d90 00000000000001cc W std::__cxx11::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, std::_Ios_Iostate&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
0000000000622f60 00000000000006a0 W std::ostreambuf_iterator<char, std::char_traits<char> > std::__cxx11::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<true>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
0000000000623600 00000000000006a0 W std::ostreambuf_iterator<char, std::char_traits<char> > std::__cxx11::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<false>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
0000000000623ca0 0000000000000218 W std::__cxx11::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, char, long double) const
0000000000623ec0 0000000000000020 W std::__cxx11::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, char, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
0000000000623ee0 00000000000002c4 W std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_num(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, int, int, unsigned long, std::ios_base&, std::_Ios_Iostate&) const
00000000006241b0 00000000000005b4 W std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get_year(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
0000000000624770 0000000000000b00 W std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_name(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned long, std::ios_base&, std::_Ios_Iostate&) const
0000000000625270 0000000000000508 W std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_wday_or_month(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned long, std::ios_base&, std::_Ios_Iostate&) const
0000000000625780 0000000000000204 W std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get_weekday(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
0000000000625990 000000000000020c W std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get_monthname(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
0000000000625ba0 0000000000000058 W std::__cxx11::messages<char>::messages(unsigned long)
0000000000625ba0 0000000000000058 W std::__cxx11::messages<char>::messages(unsigned long)
0000000000625c00 000000000000006c W std::istreambuf_iterator<char, std::char_traits<char> >::_M_get() const
0000000000625c70 0000000000001d78 W std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*, std::__time_get_state&) const
0000000000625c70 0000000000001d78 t std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*, std::__time_get_state&) const [clone .localalias]
00000000006279f0 00000000000001a8 W std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get_time(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
0000000000627ba0 00000000000001a8 W std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get_date(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
0000000000627d50 00000000000001f0 W std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char, char) const
0000000000627f40 0000000000000024 t std::__facet_shims::(anonymous namespace)::collate_shim<char>::do_compare(char const*, char const*, char const*, char const*) const
0000000000627f70 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::do_get_year(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
0000000000627fd0 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::do_get_monthname(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
0000000000628030 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::do_get_weekday(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
0000000000628090 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::do_get_date(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000006280f0 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::do_get_time(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
0000000000628150 0000000000000010 t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::do_date_order() const
0000000000628160 00000000000000a0 t std::__facet_shims::(anonymous namespace)::money_get_shim<char>::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, std::_Ios_Iostate&, long double&) const
0000000000628200 0000000000000030 t std::__facet_shims::(anonymous namespace)::money_put_shim<char>::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, char, long double) const
0000000000628230 0000000000000014 t std::__facet_shims::(anonymous namespace)::messages_shim<char>::do_close(int) const
0000000000628250 0000000000000018 t std::__facet_shims::(anonymous namespace)::messages_shim<char>::do_open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::locale const&) const
0000000000628270 0000000000000024 t std::__facet_shims::(anonymous namespace)::collate_shim<wchar_t>::do_compare(wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*) const
00000000006282a0 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::do_get_year(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
0000000000628300 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::do_get_monthname(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
0000000000628360 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::do_get_weekday(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000006283c0 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::do_get_date(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
0000000000628420 0000000000000058 t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::do_get_time(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
0000000000628480 0000000000000010 t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::do_date_order() const
0000000000628490 00000000000000a0 t std::__facet_shims::(anonymous namespace)::money_get_shim<wchar_t>::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, std::_Ios_Iostate&, long double&) const
0000000000628530 0000000000000028 t std::__facet_shims::(anonymous namespace)::money_put_shim<wchar_t>::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, wchar_t, long double) const
0000000000628560 0000000000000014 t std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>::do_close(int) const
0000000000628580 0000000000000018 t std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>::do_open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::locale const&) const
00000000006285a0 0000000000000014 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, unsigned long, std::allocator<char> const&) [clone .part.0]
00000000006285a0 0000000000000014 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .part.0]
00000000006285a0 0000000000000014 t std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::basic_string(wchar_t const*, unsigned long, std::allocator<wchar_t> const&) [clone .part.0]
00000000006285c0 00000000000000ac t void std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_construct<wchar_t*>(wchar_t*, wchar_t*, std::forward_iterator_tag) [clone .isra.0]
0000000000628670 00000000000000bc t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.0]
0000000000628730 00000000000000bc t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
00000000006287f0 00000000000000dc t std::__facet_shims::(anonymous namespace)::money_put_shim<char>::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, char, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
00000000006288d0 00000000000000d8 t std::__facet_shims::(anonymous namespace)::money_put_shim<wchar_t>::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, wchar_t, std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const
00000000006289b0 00000000000000ac t void std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_construct<wchar_t const*>(wchar_t const*, wchar_t const*, std::forward_iterator_tag) [clone .isra.0]
0000000000628a60 00000000000000a8 t std::__facet_shims::(anonymous namespace)::collate_shim<char>::do_transform(char const*, char const*) const
0000000000628b10 00000000000000a8 t std::__facet_shims::(anonymous namespace)::collate_shim<wchar_t>::do_transform(wchar_t const*, wchar_t const*) const
0000000000628bc0 00000000000000b4 t std::__facet_shims::(anonymous namespace)::messages_shim<char>::do_get(int, int, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
0000000000628c80 00000000000000b4 t std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>::do_get(int, int, int, std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const
0000000000628d40 0000000000000018 t void std::__facet_shims::(anonymous namespace)::__destroy_string<wchar_t>(void*)
0000000000628d60 0000000000000018 t void std::__facet_shims::(anonymous namespace)::__destroy_string<char>(void*)
0000000000628d80 0000000000000054 t std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>::~messages_shim()
0000000000628d80 0000000000000054 t std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>::~messages_shim()
0000000000628de0 0000000000000054 t std::__facet_shims::(anonymous namespace)::messages_shim<char>::~messages_shim()
0000000000628de0 0000000000000054 t std::__facet_shims::(anonymous namespace)::messages_shim<char>::~messages_shim()
0000000000628e40 0000000000000064 t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::~time_get_shim()
0000000000628e40 0000000000000064 t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::~time_get_shim()
0000000000628eb0 0000000000000064 t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::~time_get_shim()
0000000000628eb0 0000000000000064 t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::~time_get_shim()
0000000000628f20 0000000000000064 t std::__facet_shims::(anonymous namespace)::money_get_shim<char>::~money_get_shim()
0000000000628f20 0000000000000064 t std::__facet_shims::(anonymous namespace)::money_get_shim<char>::~money_get_shim()
0000000000628f90 000000000000005c t std::__facet_shims::(anonymous namespace)::messages_shim<char>::~messages_shim()
0000000000628ff0 0000000000000064 t std::__facet_shims::(anonymous namespace)::money_put_shim<wchar_t>::~money_put_shim()
0000000000628ff0 0000000000000064 t std::__facet_shims::(anonymous namespace)::money_put_shim<wchar_t>::~money_put_shim()
0000000000629060 0000000000000064 t std::__facet_shims::(anonymous namespace)::money_put_shim<char>::~money_put_shim()
0000000000629060 0000000000000064 t std::__facet_shims::(anonymous namespace)::money_put_shim<char>::~money_put_shim()
00000000006290d0 0000000000000064 t std::__facet_shims::(anonymous namespace)::money_get_shim<wchar_t>::~money_get_shim()
00000000006290d0 0000000000000064 t std::__facet_shims::(anonymous namespace)::money_get_shim<wchar_t>::~money_get_shim()
0000000000629140 000000000000005c t std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>::~messages_shim()
00000000006291a0 000000000000005c t std::__facet_shims::(anonymous namespace)::numpunct_shim<wchar_t>::~numpunct_shim()
00000000006291a0 000000000000005c t std::__facet_shims::(anonymous namespace)::numpunct_shim<wchar_t>::~numpunct_shim()
0000000000629200 000000000000006c t std::__facet_shims::(anonymous namespace)::money_get_shim<char>::~money_get_shim()
0000000000629270 000000000000006c t std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>::~time_get_shim()
00000000006292e0 000000000000006c t std::__facet_shims::(anonymous namespace)::money_get_shim<wchar_t>::~money_get_shim()
0000000000629350 000000000000005c t std::__facet_shims::(anonymous namespace)::numpunct_shim<char>::~numpunct_shim()
0000000000629350 000000000000005c t std::__facet_shims::(anonymous namespace)::numpunct_shim<char>::~numpunct_shim()
00000000006293b0 000000000000006c t std::__facet_shims::(anonymous namespace)::time_get_shim<char>::~time_get_shim()
0000000000629420 000000000000006c t std::__facet_shims::(anonymous namespace)::money_put_shim<wchar_t>::~money_put_shim()
0000000000629490 000000000000006c t std::__facet_shims::(anonymous namespace)::money_put_shim<char>::~money_put_shim()
0000000000629500 0000000000000064 t std::__facet_shims::(anonymous namespace)::numpunct_shim<wchar_t>::~numpunct_shim()
0000000000629570 000000000000006c t std::__facet_shims::(anonymous namespace)::collate_shim<wchar_t>::~collate_shim()
0000000000629570 000000000000006c t std::__facet_shims::(anonymous namespace)::collate_shim<wchar_t>::~collate_shim()
00000000006295e0 000000000000006c t std::__facet_shims::(anonymous namespace)::collate_shim<char>::~collate_shim()
00000000006295e0 000000000000006c t std::__facet_shims::(anonymous namespace)::collate_shim<char>::~collate_shim()
0000000000629650 0000000000000064 t std::__facet_shims::(anonymous namespace)::numpunct_shim<char>::~numpunct_shim()
00000000006296c0 0000000000000074 t std::__facet_shims::(anonymous namespace)::collate_shim<wchar_t>::~collate_shim()
0000000000629740 0000000000000074 t std::__facet_shims::(anonymous namespace)::collate_shim<char>::~collate_shim()
00000000006297c0 0000000000000068 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, true>::~moneypunct_shim()
00000000006297c0 0000000000000068 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, true>::~moneypunct_shim()
0000000000629830 0000000000000068 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, false>::~moneypunct_shim()
0000000000629830 0000000000000068 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, false>::~moneypunct_shim()
00000000006298a0 0000000000000068 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, false>::~moneypunct_shim()
00000000006298a0 0000000000000068 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, false>::~moneypunct_shim()
0000000000629910 0000000000000068 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, true>::~moneypunct_shim()
0000000000629910 0000000000000068 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, true>::~moneypunct_shim()
0000000000629980 0000000000000070 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, false>::~moneypunct_shim()
00000000006299f0 0000000000000070 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, false>::~moneypunct_shim()
0000000000629a60 0000000000000070 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, true>::~moneypunct_shim()
0000000000629ad0 0000000000000070 t std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, true>::~moneypunct_shim()
0000000000629b40 000000000000023c t std::__facet_shims::(anonymous namespace)::money_get_shim<wchar_t>::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, std::_Ios_Iostate&, std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >&) const
0000000000629d80 000000000000022c t std::__facet_shims::(anonymous namespace)::money_get_shim<char>::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, std::_Ios_Iostate&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
0000000000629fb0 0000000000000180 W void std::__facet_shims::__numpunct_fill_cache<char>(std::integral_constant<bool, true>, std::locale::facet const*, std::__numpunct_cache<char>*)
000000000062a130 00000000000001d0 W void std::__facet_shims::__numpunct_fill_cache<wchar_t>(std::integral_constant<bool, true>, std::locale::facet const*, std::__numpunct_cache<wchar_t>*)
000000000062a300 0000000000000024 W int std::__facet_shims::__collate_compare<char>(std::integral_constant<bool, true>, std::locale::facet const*, char const*, char const*, char const*, char const*)
000000000062a330 0000000000000024 W int std::__facet_shims::__collate_compare<wchar_t>(std::integral_constant<bool, true>, std::locale::facet const*, wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*)
000000000062a360 0000000000000098 W void std::__facet_shims::__collate_transform<char>(std::integral_constant<bool, true>, std::locale::facet const*, std::__facet_shims::__any_string&, char const*, char const*)
000000000062a400 0000000000000098 W void std::__facet_shims::__collate_transform<wchar_t>(std::integral_constant<bool, true>, std::locale::facet const*, std::__facet_shims::__any_string&, wchar_t const*, wchar_t const*)
000000000062a4a0 0000000000000218 W void std::__facet_shims::__moneypunct_fill_cache<char, true>(std::integral_constant<bool, true>, std::locale::facet const*, std::__moneypunct_cache<char, true>*)
000000000062a6c0 0000000000000218 W void std::__facet_shims::__moneypunct_fill_cache<char, false>(std::integral_constant<bool, true>, std::locale::facet const*, std::__moneypunct_cache<char, false>*)
000000000062a8e0 0000000000000284 W void std::__facet_shims::__moneypunct_fill_cache<wchar_t, true>(std::integral_constant<bool, true>, std::locale::facet const*, std::__moneypunct_cache<wchar_t, true>*)
000000000062ab70 0000000000000284 W void std::__facet_shims::__moneypunct_fill_cache<wchar_t, false>(std::integral_constant<bool, true>, std::locale::facet const*, std::__moneypunct_cache<wchar_t, false>*)
000000000062ae00 000000000000009c W int std::__facet_shims::__messages_open<char>(std::integral_constant<bool, true>, std::locale::facet const*, char const*, unsigned long, std::locale const&)
000000000062aea0 000000000000009c W int std::__facet_shims::__messages_open<wchar_t>(std::integral_constant<bool, true>, std::locale::facet const*, char const*, unsigned long, std::locale const&)
000000000062af40 0000000000000114 W void std::__facet_shims::__messages_get<char>(std::integral_constant<bool, true>, std::locale::facet const*, std::__facet_shims::__any_string&, int, int, int, char const*, unsigned long)
000000000062b060 0000000000000114 W void std::__facet_shims::__messages_get<wchar_t>(std::integral_constant<bool, true>, std::locale::facet const*, std::__facet_shims::__any_string&, int, int, int, wchar_t const*, unsigned long)
000000000062b180 0000000000000018 W void std::__facet_shims::__messages_close<char>(std::integral_constant<bool, true>, std::locale::facet const*, int)
000000000062b1a0 0000000000000018 W void std::__facet_shims::__messages_close<wchar_t>(std::integral_constant<bool, true>, std::locale::facet const*, int)
000000000062b1c0 0000000000000014 W std::time_base::dateorder std::__facet_shims::__time_get_dateorder<char>(std::integral_constant<bool, true>, std::locale::facet const*)
000000000062b1e0 0000000000000014 W std::time_base::dateorder std::__facet_shims::__time_get_dateorder<wchar_t>(std::integral_constant<bool, true>, std::locale::facet const*)
000000000062b200 00000000000000a4 W std::istreambuf_iterator<char, std::char_traits<char> > std::__facet_shims::__time_get<char>(std::integral_constant<bool, true>, std::locale::facet const*, std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char)
000000000062b2b0 00000000000000a4 W std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::__facet_shims::__time_get<wchar_t>(std::integral_constant<bool, true>, std::locale::facet const*, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, char)
000000000062b360 0000000000000128 W std::istreambuf_iterator<char, std::char_traits<char> > std::__facet_shims::__money_get<char>(std::integral_constant<bool, true>, std::locale::facet const*, std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, std::_Ios_Iostate&, long double*, std::__facet_shims::__any_string*)
000000000062b490 0000000000000128 W std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::__facet_shims::__money_get<wchar_t>(std::integral_constant<bool, true>, std::locale::facet const*, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, std::_Ios_Iostate&, long double*, std::__facet_shims::__any_string*)
000000000062b5c0 0000000000000184 W std::ostreambuf_iterator<char, std::char_traits<char> > std::__facet_shims::__money_put<char>(std::integral_constant<bool, true>, std::locale::facet const*, std::ostreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, char, long double, std::__facet_shims::__any_string const*)
000000000062b750 0000000000000194 W std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::__facet_shims::__money_put<wchar_t>(std::integral_constant<bool, true>, std::locale::facet const*, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, wchar_t, long double, std::__facet_shims::__any_string const*)
000000000062b8f0 0000000000000988 T std::locale::facet::_M_sso_shim(std::locale::id const*) const
000000000062c280 000000000000000c W std::__cxx11::moneypunct<wchar_t, false>::do_decimal_point() const
000000000062c290 000000000000000c W std::__cxx11::moneypunct<wchar_t, false>::do_thousands_sep() const
000000000062c2a0 000000000000000c W std::__cxx11::moneypunct<wchar_t, false>::do_frac_digits() const
000000000062c2b0 000000000000000c W std::__cxx11::moneypunct<wchar_t, false>::do_pos_format() const
000000000062c2c0 000000000000000c W std::__cxx11::moneypunct<wchar_t, false>::do_neg_format() const
000000000062c2d0 000000000000000c W std::__cxx11::moneypunct<wchar_t, true>::do_decimal_point() const
000000000062c2e0 000000000000000c W std::__cxx11::moneypunct<wchar_t, true>::do_thousands_sep() const
000000000062c2f0 000000000000000c W std::__cxx11::moneypunct<wchar_t, true>::do_frac_digits() const
000000000062c300 000000000000000c W std::__cxx11::moneypunct<wchar_t, true>::do_pos_format() const
000000000062c310 000000000000000c W std::__cxx11::moneypunct<wchar_t, true>::do_neg_format() const
000000000062c320 000000000000000c W std::__cxx11::numpunct<wchar_t>::do_decimal_point() const
000000000062c330 000000000000000c W std::__cxx11::numpunct<wchar_t>::do_thousands_sep() const
000000000062c340 0000000000000008 W std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_date_order() const
000000000062c350 0000000000000008 W std::__cxx11::messages<wchar_t>::do_open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::locale const&) const
000000000062c360 0000000000000004 W std::__cxx11::messages<wchar_t>::do_close(int) const
000000000062c370 0000000000000028 W std::__cxx11::collate<wchar_t>::do_hash(wchar_t const*, wchar_t const*) const
000000000062c3a0 0000000000000014 W std::__cxx11::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~money_get()
000000000062c3a0 0000000000000014 W std::__cxx11::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~money_get()
000000000062c3c0 0000000000000034 W std::__cxx11::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~money_get()
000000000062c400 0000000000000014 W std::__cxx11::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~money_put()
000000000062c400 0000000000000014 W std::__cxx11::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~money_put()
000000000062c420 0000000000000034 W std::__cxx11::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~money_put()
000000000062c460 0000000000000014 W std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~time_get()
000000000062c460 0000000000000014 W std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~time_get()
000000000062c480 0000000000000034 W std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~time_get()
000000000062c4c0 0000000000000034 W std::__cxx11::messages<wchar_t>::~messages()
000000000062c4c0 0000000000000034 W std::__cxx11::messages<wchar_t>::~messages()
000000000062c500 0000000000000024 W std::__cxx11::messages<wchar_t>::~messages()
000000000062c530 0000000000000034 W std::__cxx11::collate<wchar_t>::~collate()
000000000062c530 0000000000000034 W std::__cxx11::collate<wchar_t>::~collate()
000000000062c570 00000000000000ac t void std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_construct<wchar_t const*>(wchar_t const*, wchar_t const*, std::forward_iterator_tag) [clone .isra.0]
000000000062c620 00000000000000bc t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
000000000062c6e0 000000000000003c W std::__cxx11::collate<wchar_t>::~collate()
000000000062c720 0000000000000058 W std::__cxx11::numpunct<wchar_t>::do_grouping() const
000000000062c780 0000000000000058 W std::__cxx11::moneypunct<wchar_t, true>::do_grouping() const
000000000062c7e0 0000000000000058 W std::__cxx11::moneypunct<wchar_t, false>::do_grouping() const
000000000062c840 000000000000005c W std::__cxx11::moneypunct<wchar_t, false>::do_positive_sign() const
000000000062c8a0 000000000000005c W std::__cxx11::numpunct<wchar_t>::do_truename() const
000000000062c900 000000000000005c W std::__cxx11::moneypunct<wchar_t, true>::do_curr_symbol() const
000000000062c960 000000000000005c W std::__cxx11::moneypunct<wchar_t, false>::do_curr_symbol() const
000000000062c9c0 000000000000005c W std::__cxx11::numpunct<wchar_t>::do_falsename() const
000000000062ca20 000000000000005c W std::__cxx11::moneypunct<wchar_t, true>::do_positive_sign() const
000000000062ca80 000000000000005c W std::__cxx11::moneypunct<wchar_t, true>::do_negative_sign() const
000000000062cae0 000000000000005c W std::__cxx11::moneypunct<wchar_t, false>::do_negative_sign() const
000000000062cb40 0000000000000124 W std::__cxx11::collate<wchar_t>::do_compare(wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*) const
000000000062cc70 0000000000000210 W std::__cxx11::collate<wchar_t>::do_transform(wchar_t const*, wchar_t const*) const
000000000062ce80 00000000000010f8 W std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::__cxx11::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
000000000062df80 00000000000010f8 W std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::__cxx11::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
000000000062f080 00000000000000c4 W std::__cxx11::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, std::_Ios_Iostate&, long double&) const
000000000062f150 000000000000014c W std::__cxx11::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, std::_Ios_Iostate&, std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >&) const
000000000062f2a0 0000000000000684 W std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::__cxx11::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<true>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const
000000000062f930 0000000000000684 W std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::__cxx11::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<false>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const
000000000062ffc0 00000000000001b0 W std::__cxx11::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, wchar_t, long double) const
0000000000630170 0000000000000020 W std::__cxx11::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, wchar_t, std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const
0000000000630190 0000000000000264 W std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_num(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, int, int, unsigned long, std::ios_base&, std::_Ios_Iostate&) const
0000000000630400 0000000000000538 W std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get_year(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
0000000000630940 0000000000000ad4 W std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_name(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned long, std::ios_base&, std::_Ios_Iostate&) const
0000000000631420 0000000000000500 W std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_wday_or_month(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned long, std::ios_base&, std::_Ios_Iostate&) const
0000000000631920 0000000000000220 W std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get_weekday(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
0000000000631b40 0000000000000228 W std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get_monthname(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
0000000000631d70 00000000000018f8 W std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*, std::__time_get_state&) const
0000000000631d70 00000000000018f8 t std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*, std::__time_get_state&) const [clone .localalias]
0000000000633670 00000000000001b0 W std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get_time(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
0000000000633820 00000000000001b0 W std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get_date(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
00000000006339d0 00000000000001c8 W std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, char, char) const
0000000000633ba0 0000000000000058 W std::__cxx11::messages<wchar_t>::messages(unsigned long)
0000000000633ba0 0000000000000058 W std::__cxx11::messages<wchar_t>::messages(unsigned long)
0000000000633c00 0000000000000014 W __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::~stdio_sync_filebuf()
0000000000633c00 0000000000000014 W __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::~stdio_sync_filebuf()
0000000000633c20 0000000000000034 W __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::~stdio_sync_filebuf()
0000000000633c60 0000000000000014 W __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::~stdio_sync_filebuf()
0000000000633c60 0000000000000014 W __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::~stdio_sync_filebuf()
0000000000633c80 0000000000000034 W __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::~stdio_sync_filebuf()
0000000000633cc0 0000000000000028 W __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::uflow()
0000000000633cf0 0000000000000028 W __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::underflow()
0000000000633d20 0000000000000060 W __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::pbackfail(int)
0000000000633d80 0000000000000008 W __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::sync()
0000000000633d90 0000000000000008 W __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::sync()
0000000000633da0 0000000000000064 W __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::seekoff(long, std::_Ios_Seekdir, std::_Ios_Openmode)
0000000000633e10 0000000000000064 W __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::seekoff(long, std::_Ios_Seekdir, std::_Ios_Openmode)
0000000000633e80 0000000000000028 W __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::uflow()
0000000000633eb0 000000000000008c W __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::xsgetn(wchar_t*, long)
0000000000633f40 0000000000000028 W __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::underflow()
0000000000633f70 0000000000000060 W __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::pbackfail(unsigned int)
0000000000633fd0 0000000000000064 W __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::xsputn(wchar_t const*, long)
0000000000634040 0000000000000014 W __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::xsputn(char const*, long)
0000000000634060 0000000000000048 W __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::xsgetn(char*, long)
00000000006340b0 0000000000000038 W __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::overflow(unsigned int)
00000000006340f0 0000000000000038 W __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::overflow(int)
0000000000634130 0000000000000074 W __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::seekpos(std::fpos<_mbstate_t>, std::_Ios_Openmode)
00000000006341b0 0000000000000074 W __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >::seekpos(std::fpos<_mbstate_t>, std::_Ios_Openmode)
0000000000634230 000000000000000c T std::__throw_out_of_range_fmt(char const*, ...)
0000000000634240 00000000000000c0 T std::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned long) const
0000000000634300 00000000000000ac T std::__detail::_Prime_rehash_policy::_M_need_rehash(unsigned long, unsigned long, unsigned long) const
00000000006343b0 0000000000000014 W std::basic_ios<char, std::char_traits<char> >::~basic_ios()
00000000006343b0 0000000000000014 W std::basic_ios<char, std::char_traits<char> >::~basic_ios()
00000000006343d0 0000000000000014 W std::basic_ios<wchar_t, std::char_traits<wchar_t> >::~basic_ios()
00000000006343d0 0000000000000014 W std::basic_ios<wchar_t, std::char_traits<wchar_t> >::~basic_ios()
00000000006343f0 0000000000000034 W std::basic_ios<char, std::char_traits<char> >::~basic_ios()
0000000000634430 0000000000000034 W std::basic_ios<wchar_t, std::char_traits<wchar_t> >::~basic_ios()
0000000000634470 0000000000000038 W std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)
00000000006344b0 0000000000000024 W std::basic_ios<char, std::char_traits<char> >::_M_setstate(std::_Ios_Iostate)
00000000006344e0 000000000000007c W std::basic_ios<char, std::char_traits<char> >::_M_cache_locale(std::locale const&)
0000000000634560 0000000000000048 W std::basic_ios<char, std::char_traits<char> >::init(std::basic_streambuf<char, std::char_traits<char> >*)
00000000006345b0 0000000000000038 W std::basic_ios<wchar_t, std::char_traits<wchar_t> >::clear(std::_Ios_Iostate)
00000000006345f0 0000000000000024 W std::basic_ios<wchar_t, std::char_traits<wchar_t> >::_M_setstate(std::_Ios_Iostate)
0000000000634620 000000000000007c W std::basic_ios<wchar_t, std::char_traits<wchar_t> >::_M_cache_locale(std::locale const&)
00000000006346a0 000000000000004c W std::basic_ios<wchar_t, std::char_traits<wchar_t> >::init(std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >*)
00000000006346f0 000000000000005c T std::ios_base::ios_base()
00000000006346f0 000000000000005c T std::ios_base::ios_base()
0000000000634750 0000000000000068 T std::ios_base::_M_call_callbacks(std::ios_base::event)
00000000006347c0 0000000000000054 T std::ios_base::_M_dispose_callbacks()
0000000000634820 000000000000005c T std::ios_base::~ios_base()
0000000000634820 000000000000005c T std::ios_base::~ios_base()
0000000000634880 0000000000000024 T std::ios_base::~ios_base()
00000000006348b0 000000000000002c W std::basic_istream<char, std::char_traits<char> >::~basic_istream()
00000000006348e0 0000000000000034 W virtual thunk to std::basic_istream<char, std::char_traits<char> >::~basic_istream()
0000000000634920 0000000000000048 W std::basic_istream<char, std::char_traits<char> >::~basic_istream()
0000000000634970 0000000000000050 W virtual thunk to std::basic_istream<char, std::char_traits<char> >::~basic_istream()
00000000006349c0 000000000000002c W std::basic_istream<wchar_t, std::char_traits<wchar_t> >::~basic_istream()
00000000006349f0 0000000000000034 W virtual thunk to std::basic_istream<wchar_t, std::char_traits<wchar_t> >::~basic_istream()
0000000000634a30 0000000000000048 W std::basic_istream<wchar_t, std::char_traits<wchar_t> >::~basic_istream()
0000000000634a80 0000000000000050 W virtual thunk to std::basic_istream<wchar_t, std::char_traits<wchar_t> >::~basic_istream()
0000000000634ad0 000000000000000c W std::moneypunct<char, false>::do_decimal_point() const
0000000000634ae0 000000000000000c W std::moneypunct<char, false>::do_thousands_sep() const
0000000000634af0 000000000000000c W std::moneypunct<char, false>::do_frac_digits() const
0000000000634b00 000000000000000c W std::moneypunct<char, false>::do_pos_format() const
0000000000634b10 000000000000000c W std::moneypunct<char, false>::do_neg_format() const
0000000000634b20 000000000000000c W std::moneypunct<char, true>::do_decimal_point() const
0000000000634b30 000000000000000c W std::moneypunct<char, true>::do_thousands_sep() const
0000000000634b40 000000000000000c W std::moneypunct<char, true>::do_frac_digits() const
0000000000634b50 000000000000000c W std::moneypunct<char, true>::do_pos_format() const
0000000000634b60 000000000000000c W std::moneypunct<char, true>::do_neg_format() const
0000000000634b70 000000000000000c W std::numpunct<char>::do_decimal_point() const
0000000000634b80 000000000000000c W std::numpunct<char>::do_thousands_sep() const
0000000000634b90 0000000000000008 W std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_date_order() const
0000000000634ba0 0000000000000008 W std::messages<char>::do_open(std::string const&, std::locale const&) const
0000000000634bb0 0000000000000004 W std::messages<char>::do_close(int) const
0000000000634bc0 0000000000000028 W std::collate<char>::do_hash(char const*, char const*) const
0000000000634bf0 0000000000000014 W std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~num_get()
0000000000634bf0 0000000000000014 W std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~num_get()
0000000000634c10 0000000000000014 W std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::~num_put()
0000000000634c10 0000000000000014 W std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::~num_put()
0000000000634c30 0000000000000014 W std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~money_get()
0000000000634c30 0000000000000014 W std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~money_get()
0000000000634c50 0000000000000014 W std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::~money_put()
0000000000634c50 0000000000000014 W std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::~money_put()
0000000000634c70 0000000000000014 W std::__timepunct_cache<char>::~__timepunct_cache()
0000000000634c70 0000000000000014 W std::__timepunct_cache<char>::~__timepunct_cache()
0000000000634c90 0000000000000014 W std::time_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::~time_put()
0000000000634c90 0000000000000014 W std::time_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::~time_put()
0000000000634cb0 0000000000000014 W std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~time_get()
0000000000634cb0 0000000000000014 W std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~time_get()
0000000000634cd0 0000000000000034 W std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~num_get()
0000000000634d10 0000000000000034 W std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::~num_put()
0000000000634d50 0000000000000034 W std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~money_get()
0000000000634d90 0000000000000034 W std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::~money_put()
0000000000634dd0 0000000000000024 W std::__timepunct_cache<char>::~__timepunct_cache()
0000000000634e00 0000000000000034 W std::time_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::~time_put()
0000000000634e40 0000000000000034 W std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::~time_get()
0000000000634e80 0000000000000034 W std::messages<char>::~messages()
0000000000634e80 0000000000000034 W std::messages<char>::~messages()
0000000000634ec0 0000000000000024 W std::messages<char>::~messages()
0000000000634ef0 0000000000000034 W std::collate<char>::~collate()
0000000000634ef0 0000000000000034 W std::collate<char>::~collate()
0000000000634f30 0000000000000068 W std::__timepunct<char>::~__timepunct()
0000000000634f30 0000000000000068 W std::__timepunct<char>::~__timepunct()
0000000000634fa0 0000000000000024 W std::__timepunct<char>::~__timepunct()
0000000000634fd0 000000000000004c t std::ostreambuf_iterator<char, std::char_traits<char> >::_M_put(char const*, long) [clone .isra.0]
0000000000635020 0000000000000028 t std::basic_streambuf<char, std::char_traits<char> >::sbumpc() [clone .isra.0]
0000000000635050 0000000000000058 t std::ctype<char>::widen(char) const [clone .part.0]
00000000006350b0 00000000000000b8 t std::ctype<char>::widen(char const*, char const*, char*) const [clone .isra.0]
0000000000635170 00000000000000b8 t char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag) [clone .isra.0]
0000000000635230 000000000000003c W std::collate<char>::~collate()
0000000000635270 00000000000000d8 W std::numpunct<char>::do_truename() const
0000000000635350 00000000000000d8 W std::numpunct<char>::do_falsename() const
0000000000635430 00000000000000d8 W std::moneypunct<char, true>::do_grouping() const
0000000000635510 00000000000000d8 W std::moneypunct<char, true>::do_curr_symbol() const
00000000006355f0 00000000000000d8 W std::moneypunct<char, true>::do_positive_sign() const
00000000006356d0 00000000000000d8 W std::moneypunct<char, true>::do_negative_sign() const
00000000006357b0 00000000000000d8 W std::moneypunct<char, false>::do_grouping() const
0000000000635890 00000000000000d8 W std::moneypunct<char, false>::do_curr_symbol() const
0000000000635970 00000000000000d8 W std::moneypunct<char, false>::do_positive_sign() const
0000000000635a50 00000000000000d8 W std::moneypunct<char, false>::do_negative_sign() const
0000000000635b30 00000000000000d8 W std::numpunct<char>::do_grouping() const
0000000000635c10 0000000000000168 W std::time_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, tm const*, char, char) const
0000000000635d80 0000000000000190 W std::collate<char>::do_compare(char const*, char const*, char const*, char const*) const
0000000000635f10 0000000000000200 W std::collate<char>::do_transform(char const*, char const*) const
0000000000636110 000000000000007c W std::ctype<char>::narrow(char, char) const
0000000000636190 00000000000005c0 W std::__moneypunct_cache<char, false>::_M_cache(std::locale const&)
0000000000636750 00000000000005c0 W std::__moneypunct_cache<char, true>::_M_cache(std::locale const&)
0000000000636d10 0000000000000480 W std::__numpunct_cache<char>::_M_cache(std::locale const&)
0000000000637190 00000000000000d8 t std::__use_cache<std::__numpunct_cache<char> >::operator()(std::locale const&) const [clone .isra.0]
0000000000637270 0000000000000068 W std::__timepunct<char>::__timepunct(std::__timepunct_cache<char>*, unsigned long)
0000000000637270 0000000000000068 W std::__timepunct<char>::__timepunct(std::__timepunct_cache<char>*, unsigned long)
00000000006372e0 0000000000000068 W std::__timepunct<char>::_M_months(char const**) const
0000000000637350 0000000000000068 W std::__timepunct<char>::_M_months_abbreviated(char const**) const
00000000006373c0 00000000000002c4 W std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_num(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, int, int, unsigned long, std::ios_base&, std::_Ios_Iostate&) const
0000000000637690 0000000000000058 W std::messages<char>::messages(unsigned long)
0000000000637690 0000000000000058 W std::messages<char>::messages(unsigned long)
00000000006376f0 0000000000000140 W char* std::__add_grouping<char>(char*, char, char const*, unsigned long, char const*, char const*)
0000000000637830 00000000000000bc W std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_group_float(char const*, unsigned long, char, char const*, char*, char*, int&) const
00000000006378f0 0000000000000050 W std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_group_int(char const*, unsigned long, char, std::ios_base&, char*, char*, int&) const
0000000000637940 000000000000055c W std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<true>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const
0000000000637ea0 000000000000057c W std::ostreambuf_iterator<char, std::char_traits<char> > std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert<false>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, std::string const&) const
0000000000638420 0000000000000264 W std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, char, long double) const
0000000000638690 0000000000000020 W std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, char, std::string const&) const
00000000006386b0 00000000000002ec W std::__pad<char, std::char_traits<char> >::_S_pad(std::ios_base&, char, char*, char const*, long, long)
00000000006389a0 000000000000003c W std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_pad(char, long, std::ios_base&, char*, char const*, int&) const
00000000006389e0 0000000000000400 W std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_float<double>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, char, double) const
0000000000638de0 0000000000000008 W std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, double) const
0000000000638df0 0000000000000400 W std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_float<long double>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, char, long double) const
00000000006391f0 0000000000000008 W std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long double) const
0000000000639200 00000000000000ac W int std::__int_to_char<char, unsigned long>(char*, unsigned long, char const*, std::_Ios_Fmtflags, bool)
00000000006392b0 0000000000000224 W std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const
00000000006394e0 0000000000000004 W std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const
00000000006394f0 0000000000000190 W std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, bool) const
0000000000639680 00000000000001d8 W std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const
0000000000639860 0000000000000004 W std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const
0000000000639870 0000000000000050 W std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, void const*) const
00000000006398c0 00000000000000ac W int std::__int_to_char<char, unsigned long long>(char*, unsigned long long, char const*, std::_Ios_Fmtflags, bool)
0000000000639970 0000000000000224 W std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long long) const
0000000000639ba0 0000000000000004 W std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long long) const
0000000000639bb0 00000000000001d8 W std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long long) const
0000000000639d90 0000000000000004 W std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long long) const
0000000000639da0 0000000000000100 W std::istreambuf_iterator<char, std::char_traits<char> >::equal(std::istreambuf_iterator<char, std::char_traits<char> > const&) const
0000000000639ea0 0000000000000b3c W std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_float(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const
000000000063a9e0 00000000000001d0 W std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, float&) const
000000000063abb0 00000000000001d0 W std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, double&) const
000000000063ad80 00000000000001d0 W std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long double&) const
000000000063af50 00000000000008c8 W std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const
000000000063b820 000000000000045c W std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, bool&) const
000000000063bc80 0000000000000004 W std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long&) const
000000000063bc90 00000000000008b4 W std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const
000000000063c550 0000000000000004 W std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const
000000000063c560 00000000000008b8 W std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const
000000000063ce20 0000000000000004 W std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const
000000000063ce30 00000000000008a0 W std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const
000000000063d6d0 0000000000000004 W std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const
000000000063d6e0 000000000000005c W std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, void*&) const
000000000063d740 00000000000008c8 W std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const
000000000063e010 0000000000000004 W std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, long long&) const
000000000063e020 00000000000008a0 W std::istreambuf_iterator<char, std::char_traits<char> > std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const
000000000063e8c0 0000000000000004 W std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const
000000000063e8d0 00000000000001dc W std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get_year(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
000000000063eab0 00000000000008b8 W std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_name(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned long, std::ios_base&, std::_Ios_Iostate&) const
000000000063f370 00000000000003f8 W std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_wday_or_month(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, int&, char const**, unsigned long, std::ios_base&, std::_Ios_Iostate&) const
000000000063f770 0000000000000204 W std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get_weekday(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
000000000063f980 0000000000000148 W std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get_monthname(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
000000000063fad0 00000000000010a8 W std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*, std::__time_get_state&) const
000000000063fad0 00000000000010a8 t std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract_via_format(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*, char const*, std::__time_get_state&) const [clone .localalias]
0000000000640b80 00000000000001a8 W std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get_time(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
0000000000640d30 00000000000001a8 W std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get_date(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
0000000000640ee0 0000000000000bd8 W std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<true>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const
0000000000641ac0 0000000000000bf0 W std::istreambuf_iterator<char, std::char_traits<char> > std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::_M_extract<false>(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const
00000000006426b0 00000000000000f4 W std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, std::_Ios_Iostate&, long double&) const
00000000006427b0 00000000000001f0 W std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::do_get(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, bool, std::ios_base&, std::_Ios_Iostate&, std::string&) const
00000000006429a0 0000000000000028 W std::basic_ostream<char, std::char_traits<char> >::~basic_ostream()
00000000006429d0 0000000000000034 W virtual thunk to std::basic_ostream<char, std::char_traits<char> >::~basic_ostream()
0000000000642a10 0000000000000044 W std::basic_ostream<char, std::char_traits<char> >::~basic_ostream()
0000000000642a54 0000000000000050 W virtual thunk to std::basic_ostream<char, std::char_traits<char> >::~basic_ostream()
0000000000642ab0 0000000000000028 W std::basic_ostream<wchar_t, std::char_traits<wchar_t> >::~basic_ostream()
0000000000642ae0 0000000000000034 W virtual thunk to std::basic_ostream<wchar_t, std::char_traits<wchar_t> >::~basic_ostream()
0000000000642b20 0000000000000044 W std::basic_ostream<wchar_t, std::char_traits<wchar_t> >::~basic_ostream()
0000000000642b64 0000000000000050 W virtual thunk to std::basic_ostream<wchar_t, std::char_traits<wchar_t> >::~basic_ostream()
0000000000642bc0 0000000000000078 W std::ostream::sentry::~sentry()
0000000000642bc0 0000000000000078 W std::ostream::sentry::~sentry()
0000000000642c40 0000000000000164 W std::ostream::flush()
0000000000642db0 0000000000000088 W std::ostream::sentry::sentry(std::ostream&)
0000000000642db0 0000000000000088 W std::ostream::sentry::sentry(std::ostream&)
0000000000642e40 0000000000000174 W std::ostream::put(char)
0000000000642fc0 000000000000040c W std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)
00000000006433d0 0000000000000078 W std::basic_ostream<wchar_t, std::char_traits<wchar_t> >::sentry::~sentry()
00000000006433d0 0000000000000078 W std::basic_ostream<wchar_t, std::char_traits<wchar_t> >::sentry::~sentry()
0000000000643450 0000000000000164 W std::basic_ostream<wchar_t, std::char_traits<wchar_t> >::flush()
00000000006435c0 0000000000000088 W std::basic_ostream<wchar_t, std::char_traits<wchar_t> >::sentry::sentry(std::basic_ostream<wchar_t, std::char_traits<wchar_t> >&)
00000000006435c0 0000000000000088 W std::basic_ostream<wchar_t, std::char_traits<wchar_t> >::sentry::sentry(std::basic_ostream<wchar_t, std::char_traits<wchar_t> >&)
0000000000643650 0000000000000004 W std::basic_streambuf<char, std::char_traits<char> >::imbue(std::locale const&)
0000000000643660 0000000000000004 W std::basic_streambuf<char, std::char_traits<char> >::setbuf(char*, long)
0000000000643670 000000000000000c W std::basic_streambuf<char, std::char_traits<char> >::seekoff(long, std::_Ios_Seekdir, std::_Ios_Openmode)
0000000000643680 000000000000000c W std::basic_streambuf<char, std::char_traits<char> >::seekpos(std::fpos<_mbstate_t>, std::_Ios_Openmode)
0000000000643690 0000000000000008 W std::basic_streambuf<char, std::char_traits<char> >::sync()
00000000006436a0 0000000000000008 W std::basic_streambuf<char, std::char_traits<char> >::showmanyc()
00000000006436b0 0000000000000008 W std::basic_streambuf<char, std::char_traits<char> >::underflow()
00000000006436c0 0000000000000008 W std::basic_streambuf<char, std::char_traits<char> >::pbackfail(int)
00000000006436d0 0000000000000008 W std::basic_streambuf<char, std::char_traits<char> >::overflow(int)
00000000006436e0 0000000000000004 W std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::imbue(std::locale const&)
00000000006436f0 0000000000000004 W std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::setbuf(wchar_t*, long)
0000000000643700 000000000000000c W std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::seekoff(long, std::_Ios_Seekdir, std::_Ios_Openmode)
0000000000643710 000000000000000c W std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::seekpos(std::fpos<_mbstate_t>, std::_Ios_Openmode)
0000000000643720 0000000000000008 W std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::sync()
0000000000643730 0000000000000008 W std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::showmanyc()
0000000000643740 0000000000000008 W std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::underflow()
0000000000643750 0000000000000008 W std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::pbackfail(unsigned int)
0000000000643760 0000000000000008 W std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::overflow(unsigned int)
0000000000643770 0000000000000014 W std::basic_streambuf<char, std::char_traits<char> >::~basic_streambuf()
0000000000643770 0000000000000014 W std::basic_streambuf<char, std::char_traits<char> >::~basic_streambuf()
0000000000643790 0000000000000014 W std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::~basic_streambuf()
0000000000643790 0000000000000014 W std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::~basic_streambuf()
00000000006437b0 0000000000000034 W std::basic_streambuf<char, std::char_traits<char> >::~basic_streambuf()
00000000006437f0 0000000000000034 W std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::~basic_streambuf()
0000000000643830 00000000000000dc W std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::xsputn(wchar_t const*, long)
0000000000643910 000000000000010c W std::basic_streambuf<char, std::char_traits<char> >::xsputn(char const*, long)
0000000000643a20 0000000000000064 W std::basic_streambuf<char, std::char_traits<char> >::uflow()
0000000000643a90 0000000000000064 W std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::uflow()
0000000000643b00 0000000000000150 W std::basic_streambuf<char, std::char_traits<char> >::xsgetn(char*, long)
0000000000643c50 000000000000011c W std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::xsgetn(wchar_t*, long)
0000000000643d70 000000000000005c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long)
0000000000643dd0 0000000000000018 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()
0000000000643df0 0000000000000098 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct(unsigned long, char)
0000000000643e90 0000000000000124 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long)
0000000000643fc0 000000000000008c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_erase(unsigned long, unsigned long)
0000000000644050 00000000000000b4 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reserve(unsigned long)
0000000000644110 0000000000000140 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_aux(unsigned long, unsigned long, unsigned long, char)
0000000000644250 0000000000000038 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::resize(unsigned long, char)
0000000000644290 000000000000019c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long)
0000000000644430 00000000000000c0 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned long)
00000000006444f0 0000000000000090 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::copy(char*, unsigned long, unsigned long) const
0000000000644580 000000000000018c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::swap(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0000000000644710 0000000000000044 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find_first_not_of(char, unsigned long) const
0000000000644760 000000000000000c W std::moneypunct<wchar_t, false>::do_decimal_point() const
0000000000644770 000000000000000c W std::moneypunct<wchar_t, false>::do_thousands_sep() const
0000000000644780 000000000000000c W std::moneypunct<wchar_t, false>::do_frac_digits() const
0000000000644790 000000000000000c W std::moneypunct<wchar_t, false>::do_pos_format() const
00000000006447a0 000000000000000c W std::moneypunct<wchar_t, false>::do_neg_format() const
00000000006447b0 000000000000000c W std::moneypunct<wchar_t, true>::do_decimal_point() const
00000000006447c0 000000000000000c W std::moneypunct<wchar_t, true>::do_thousands_sep() const
00000000006447d0 000000000000000c W std::moneypunct<wchar_t, true>::do_frac_digits() const
00000000006447e0 000000000000000c W std::moneypunct<wchar_t, true>::do_pos_format() const
00000000006447f0 000000000000000c W std::moneypunct<wchar_t, true>::do_neg_format() const
0000000000644800 000000000000000c W std::numpunct<wchar_t>::do_decimal_point() const
0000000000644810 000000000000000c W std::numpunct<wchar_t>::do_thousands_sep() const
0000000000644820 0000000000000008 W std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_date_order() const
0000000000644830 0000000000000008 W std::messages<wchar_t>::do_open(std::string const&, std::locale const&) const
0000000000644840 0000000000000004 W std::messages<wchar_t>::do_close(int) const
0000000000644850 0000000000000028 W std::collate<wchar_t>::do_hash(wchar_t const*, wchar_t const*) const
0000000000644880 0000000000000014 W std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~num_get()
0000000000644880 0000000000000014 W std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~num_get()
00000000006448a0 0000000000000014 W std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~num_put()
00000000006448a0 0000000000000014 W std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~num_put()
00000000006448c0 0000000000000014 W std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~money_get()
00000000006448c0 0000000000000014 W std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~money_get()
00000000006448e0 0000000000000014 W std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~money_put()
00000000006448e0 0000000000000014 W std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~money_put()
0000000000644900 0000000000000014 W std::__timepunct_cache<wchar_t>::~__timepunct_cache()
0000000000644900 0000000000000014 W std::__timepunct_cache<wchar_t>::~__timepunct_cache()
0000000000644920 0000000000000014 W std::time_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~time_put()
0000000000644920 0000000000000014 W std::time_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~time_put()
0000000000644940 0000000000000014 W std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~time_get()
0000000000644940 0000000000000014 W std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~time_get()
0000000000644960 0000000000000034 W std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~num_get()
00000000006449a0 0000000000000034 W std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~num_put()
00000000006449e0 0000000000000034 W std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~money_get()
0000000000644a20 0000000000000034 W std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~money_put()
0000000000644a60 0000000000000024 W std::__timepunct_cache<wchar_t>::~__timepunct_cache()
0000000000644a90 0000000000000034 W std::time_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~time_put()
0000000000644ad0 0000000000000034 W std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::~time_get()
0000000000644b10 0000000000000034 W std::messages<wchar_t>::~messages()
0000000000644b10 0000000000000034 W std::messages<wchar_t>::~messages()
0000000000644b50 0000000000000024 W std::messages<wchar_t>::~messages()
0000000000644b80 0000000000000034 W std::collate<wchar_t>::~collate()
0000000000644b80 0000000000000034 W std::collate<wchar_t>::~collate()
0000000000644bc0 0000000000000068 W std::__timepunct<wchar_t>::~__timepunct()
0000000000644bc0 0000000000000068 W std::__timepunct<wchar_t>::~__timepunct()
0000000000644c30 0000000000000024 W std::__timepunct<wchar_t>::~__timepunct()
0000000000644c60 0000000000000028 t std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >::sbumpc() [clone .isra.0]
0000000000644c90 00000000000000b8 t char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag) [clone .isra.0]
0000000000644d50 00000000000000d4 t wchar_t* std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_S_construct<wchar_t const*>(wchar_t const*, wchar_t const*, std::allocator<wchar_t> const&, std::forward_iterator_tag) [clone .isra.0]
0000000000644e30 000000000000003c W std::collate<wchar_t>::~collate()
0000000000644e70 00000000000000d8 W std::moneypunct<wchar_t, true>::do_grouping() const
0000000000644f50 00000000000000d8 W std::numpunct<wchar_t>::do_grouping() const
0000000000645030 00000000000000d8 W std::moneypunct<wchar_t, false>::do_grouping() const
0000000000645110 00000000000000ec W std::moneypunct<wchar_t, true>::do_negative_sign() const
0000000000645200 00000000000000ec W std::numpunct<wchar_t>::do_truename() const
00000000006452f0 00000000000000ec W std::moneypunct<wchar_t, false>::do_curr_symbol() const
00000000006453e0 00000000000000ec W std::moneypunct<wchar_t, false>::do_positive_sign() const
00000000006454d0 00000000000000ec W std::moneypunct<wchar_t, false>::do_negative_sign() const
00000000006455c0 00000000000000ec W std::moneypunct<wchar_t, true>::do_curr_symbol() const
00000000006456b0 00000000000000ec W std::moneypunct<wchar_t, true>::do_positive_sign() const
00000000006457a0 00000000000000ec W std::numpunct<wchar_t>::do_falsename() const
0000000000645890 0000000000000190 W std::collate<wchar_t>::do_compare(wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*) const
0000000000645a20 0000000000000144 W std::time_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, tm const*, char, char) const
0000000000645b70 0000000000000218 W std::collate<wchar_t>::do_transform(wchar_t const*, wchar_t const*) const
0000000000645d90 00000000000005f0 W std::__moneypunct_cache<wchar_t, false>::_M_cache(std::locale const&)
0000000000646380 00000000000005f0 W std::__moneypunct_cache<wchar_t, true>::_M_cache(std::locale const&)
0000000000646970 00000000000004c0 W std::__numpunct_cache<wchar_t>::_M_cache(std::locale const&)
0000000000646e30 00000000000000d8 t std::__use_cache<std::__numpunct_cache<wchar_t> >::operator()(std::locale const&) const [clone .isra.0]
0000000000646f10 0000000000000068 W std::__timepunct<wchar_t>::__timepunct(std::__timepunct_cache<wchar_t>*, unsigned long)
0000000000646f10 0000000000000068 W std::__timepunct<wchar_t>::__timepunct(std::__timepunct_cache<wchar_t>*, unsigned long)
0000000000646f80 0000000000000264 W std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_num(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, int, int, unsigned long, std::ios_base&, std::_Ios_Iostate&) const
00000000006471f0 0000000000000058 W std::messages<wchar_t>::messages(unsigned long)
00000000006471f0 0000000000000058 W std::messages<wchar_t>::messages(unsigned long)
0000000000647250 0000000000000150 W wchar_t* std::__add_grouping<wchar_t>(wchar_t*, wchar_t, char const*, unsigned long, wchar_t const*, wchar_t const*)
00000000006473a0 00000000000000c8 W std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_group_float(char const*, unsigned long, wchar_t, wchar_t const*, wchar_t*, wchar_t*, int&) const
0000000000647470 0000000000000054 W std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_group_int(char const*, unsigned long, wchar_t, std::ios_base&, wchar_t*, wchar_t*, int&) const
00000000006474d0 00000000000005c8 W std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<true>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const
0000000000647aa0 00000000000005c8 W std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert<false>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const
0000000000648070 0000000000000200 W std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, wchar_t, long double) const
0000000000648270 0000000000000020 W std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, wchar_t, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const
0000000000648290 00000000000001ec W std::__pad<wchar_t, std::char_traits<wchar_t> >::_S_pad(std::ios_base&, wchar_t, wchar_t*, wchar_t const*, long, long)
0000000000648480 000000000000003c W std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_pad(wchar_t, long, std::ios_base&, wchar_t*, wchar_t const*, int&) const
00000000006484c0 0000000000000368 W std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_float<double>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, char, double) const
0000000000648830 0000000000000008 W std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, double) const
0000000000648840 0000000000000360 W std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_float<long double>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, char, long double) const
0000000000648ba0 0000000000000008 W std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long double) const
0000000000648bb0 00000000000000ac W int std::__int_to_char<wchar_t, unsigned long>(wchar_t*, unsigned long, wchar_t const*, std::_Ios_Fmtflags, bool)
0000000000648c60 0000000000000224 W std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long) const
0000000000648e90 0000000000000004 W std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long) const
0000000000648ea0 00000000000001a0 W std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, bool) const
0000000000649040 00000000000001d8 W std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, unsigned long) const
0000000000649220 0000000000000004 W std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, unsigned long) const
0000000000649230 0000000000000050 W std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, void const*) const
0000000000649280 00000000000000ac W int std::__int_to_char<wchar_t, unsigned long long>(wchar_t*, unsigned long long, wchar_t const*, std::_Ios_Fmtflags, bool)
0000000000649330 0000000000000224 W std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<long long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long long) const
0000000000649560 0000000000000004 W std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, long long) const
0000000000649570 00000000000001d8 W std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_insert_int<unsigned long long>(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, unsigned long long) const
0000000000649750 0000000000000004 W std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_put(std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, wchar_t, unsigned long long) const
0000000000649760 00000000000000f4 W std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::equal(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > const&) const
0000000000649860 0000000000000064 W std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >::_M_get() const
00000000006498d0 0000000000000b70 W std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_float(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const
000000000064a440 00000000000001f0 W std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, float&) const
000000000064a630 00000000000001f0 W std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, double&) const
000000000064a820 00000000000001f0 W std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long double&) const
000000000064aa10 000000000000090c W std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const
000000000064b320 0000000000000440 W std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, bool&) const
000000000064b760 0000000000000004 W std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long&) const
000000000064b770 0000000000000910 W std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned short>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const
000000000064c080 0000000000000004 W std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned short&) const
000000000064c090 00000000000008e8 W std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned int>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const
000000000064c980 0000000000000004 W std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned int&) const
000000000064c990 0000000000000900 W std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const
000000000064d290 0000000000000004 W std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long&) const
000000000064d2a0 000000000000005c W std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, void*&) const
000000000064d300 000000000000090c W std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const
000000000064dc10 0000000000000004 W std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, long long&) const
000000000064dc20 0000000000000900 W std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_int<unsigned long long>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const
000000000064e520 0000000000000004 W std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, unsigned long long&) const
000000000064e530 00000000000001ec W std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get_year(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
000000000064e720 000000000000089c W std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_name(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned long, std::ios_base&, std::_Ios_Iostate&) const
000000000064efc0 00000000000003f4 W std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_wday_or_month(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, int&, wchar_t const**, unsigned long, std::ios_base&, std::_Ios_Iostate&) const
000000000064f3c0 0000000000000220 W std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get_weekday(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
000000000064f5e0 0000000000000228 W std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get_monthname(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
000000000064f810 00000000000010ac W std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*, std::__time_get_state&) const
000000000064f810 00000000000010ac t std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract_via_format(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*, wchar_t const*, std::__time_get_state&) const [clone .localalias]
00000000006508c0 00000000000001b0 W std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get_time(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
0000000000650a70 00000000000001b0 W std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get_date(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, tm*) const
0000000000650c20 0000000000000c14 W std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<true>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const
0000000000651840 0000000000000c14 W std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::_M_extract<false>(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::ios_base&, std::_Ios_Iostate&, std::string&) const
0000000000652460 00000000000000f4 W std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, std::_Ios_Iostate&, long double&) const
0000000000652560 00000000000001a0 W std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::do_get(std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >, bool, std::ios_base&, std::_Ios_Iostate&, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >&) const
0000000000652700 0000000000000068 W std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_create(unsigned long&, unsigned long)
0000000000652770 0000000000000018 W std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_dispose()
0000000000652790 0000000000000090 W std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_construct(unsigned long, wchar_t)
0000000000652820 0000000000000128 W std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_mutate(unsigned long, unsigned long, wchar_t const*, unsigned long)
0000000000652950 00000000000000b0 W std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::reserve(unsigned long)
0000000000652a00 0000000000000138 W std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_replace_aux(unsigned long, unsigned long, unsigned long, wchar_t)
0000000000652b40 0000000000000038 W std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::resize(unsigned long, wchar_t)
0000000000652b80 000000000000019c W std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_replace(unsigned long, unsigned long, wchar_t const*, unsigned long)
0000000000652d20 00000000000000bc W std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_append(wchar_t const*, unsigned long)
0000000000652de0 0000000000000090 W std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::copy(wchar_t*, unsigned long, unsigned long) const
0000000000652e70 000000000000000c T std::bad_alloc::what() const
0000000000652e80 0000000000000014 T std::bad_alloc::~bad_alloc()
0000000000652e80 0000000000000014 T std::bad_alloc::~bad_alloc()
0000000000652ea0 0000000000000028 T std::bad_alloc::~bad_alloc()
0000000000652ed0 000000000000000c T std::bad_array_new_length::what() const
0000000000652ee0 0000000000000014 T std::bad_array_new_length::~bad_array_new_length()
0000000000652ee0 0000000000000014 T std::bad_array_new_length::~bad_array_new_length()
0000000000652f00 0000000000000028 T std::bad_array_new_length::~bad_array_new_length()
0000000000652f30 000000000000000c T std::bad_cast::what() const
0000000000652f40 0000000000000014 T std::bad_cast::~bad_cast()
0000000000652f40 0000000000000014 T std::bad_cast::~bad_cast()
0000000000652f60 0000000000000028 T std::bad_cast::~bad_cast()
0000000000652f90 000000000000006c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
0000000000653000 0000000000000010 T __cxxabiv1::__class_type_info::__do_find_public_src(long, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0000000000653010 0000000000000014 T __cxxabiv1::__class_type_info::~__class_type_info()
0000000000653010 0000000000000014 T __cxxabiv1::__class_type_info::~__class_type_info()
0000000000653030 0000000000000028 T __cxxabiv1::__class_type_info::~__class_type_info()
0000000000653060 0000000000000078 T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
00000000006530e0 00000000000000b8 T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
00000000006531a0 00000000000000f4 T __cxxabiv1::__class_type_info::__do_dyncast(long, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
00000000006532a0 0000000000000004 T operator delete(void*)
00000000006532b0 00000000000001a8 T __dynamic_cast
0000000000653460 0000000000000118 t (anonymous namespace)::pool::free(void*) [clone .constprop.0]
0000000000653580 00000000000000c8 t (anonymous namespace)::pool::allocate(unsigned long) [clone .constprop.0]
0000000000653650 0000000000000058 T __cxa_allocate_exception
00000000006536b0 000000000000002c T __cxa_free_exception
00000000006536e0 000000000000009c T __cxa_begin_catch
0000000000653780 0000000000000098 T __cxa_end_catch
0000000000653820 0000000000000020 T std::uncaught_exception()
0000000000653840 0000000000000004 T std::exception::~exception()
0000000000653840 0000000000000004 T std::exception::~exception()
0000000000653850 0000000000000014 T std::bad_exception::~bad_exception()
0000000000653850 0000000000000014 T std::bad_exception::~bad_exception()
0000000000653870 000000000000000c T std::bad_exception::what() const
0000000000653880 0000000000000028 T std::bad_exception::~bad_exception()
00000000006538b0 0000000000000044 t eh_globals_dtor(void*)
0000000000653900 0000000000000038 T __cxa_get_globals_fast
0000000000653940 0000000000000078 T __cxa_get_globals
00000000006539c0 000000000000007c t get_adjusted_ptr(std::type_info const*, std::type_info const*, void**)
0000000000653a40 0000000000000140 t read_encoded_value_with_base(unsigned char, unsigned long, unsigned char const*, unsigned long*)
0000000000653b80 000000000000005c t base_of_encoded_value(unsigned char, _Unwind_Context*)
0000000000653be0 0000000000000108 t check_exception_spec(lsda_header_info*, std::type_info const*, void*, long)
0000000000653cf0 00000000000000e8 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
0000000000653de0 000000000000059c T __gxx_personality_v0
0000000000654380 00000000000000f0 T __cxa_call_unexpected
0000000000654470 0000000000000018 T __cxxabiv1::__terminate(void (*)())
0000000000654490 0000000000000010 T std::get_terminate()
00000000006544a0 0000000000000010 T std::terminate()
00000000006544b0 0000000000000010 T __cxxabiv1::__unexpected(void (*)())
00000000006544c0 0000000000000010 T std::get_unexpected()
00000000006544d0 0000000000000010 T std::unexpected()
00000000006544e0 0000000000000064 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Exception*)
0000000000654550 0000000000000058 T __cxa_init_primary_exception
00000000006545b0 0000000000000060 T __cxa_throw
0000000000654610 0000000000000070 T __cxa_rethrow
0000000000654680 0000000000000010 T std::get_new_handler()
0000000000654690 0000000000000024 T operator new[](unsigned long, std::nothrow_t const&)
00000000006546c0 0000000000000014 T __cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()
00000000006546c0 0000000000000014 T __cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()
00000000006546e0 0000000000000028 T __cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()
0000000000654710 0000000000000124 T __cxxabiv1::__vmi_class_type_info::__do_find_public_src(long, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0000000000654840 000000000000060c T __cxxabiv1::__vmi_class_type_info::__do_dyncast(long, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0000000000654e50 0000000000000230 T __cxxabiv1::__vmi_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0000000000655080 0000000000000070 t std::(anonymous namespace)::__set_C_locale()
00000000006550f0 00000000000000d0 T void std::__convert_to_v<float>(char const*, float&, std::_Ios_Iostate&, int* const&)
00000000006551c0 00000000000000d8 T void std::__convert_to_v<double>(char const*, double&, std::_Ios_Iostate&, int* const&)
00000000006552a0 0000000000000108 T void std::__convert_to_v<long double>(char const*, long double&, std::_Ios_Iostate&, int* const&)
00000000006553b0 0000000000000030 T std::locale::facet::_S_create_c_locale(int*&, char const*, int*)
00000000006553e0 0000000000000008 T std::locale::facet::_S_destroy_c_locale(int*&)
00000000006553f0 0000000000000010 T std::codecvt<char, char, _mbstate_t>::do_in(_mbstate_t&, char const*, char const*, char const*&, char*, char*, char*&) const
00000000006553f0 0000000000000010 T std::codecvt<char, char, _mbstate_t>::do_out(_mbstate_t&, char const*, char const*, char const*&, char*, char*, char*&) const
0000000000655400 000000000000000c T std::codecvt<char, char, _mbstate_t>::do_unshift(_mbstate_t&, char*, char*, char*&) const
0000000000655400 000000000000000c T std::codecvt<wchar_t, char, _mbstate_t>::do_unshift(_mbstate_t&, char*, char*, char*&) const
0000000000655410 0000000000000008 T std::codecvt<char, char, _mbstate_t>::do_encoding() const
0000000000655410 0000000000000008 T std::codecvt<char, char, _mbstate_t>::do_max_length() const
0000000000655420 0000000000000008 T std::codecvt<char, char, _mbstate_t>::do_always_noconv() const
0000000000655430 0000000000000010 T std::codecvt<char, char, _mbstate_t>::do_length(_mbstate_t&, char const*, char const*, unsigned long) const
0000000000655440 0000000000000008 T std::codecvt<wchar_t, char, _mbstate_t>::do_always_noconv() const
0000000000655450 0000000000000068 T std::codecvt<char, char, _mbstate_t>::~codecvt()
0000000000655450 0000000000000068 T std::codecvt<char, char, _mbstate_t>::~codecvt()
00000000006554c0 000000000000003c T std::codecvt<char, char, _mbstate_t>::~codecvt()
0000000000655500 0000000000000068 T std::codecvt<wchar_t, char, _mbstate_t>::~codecvt()
0000000000655500 0000000000000068 T std::codecvt<wchar_t, char, _mbstate_t>::~codecvt()
0000000000655570 000000000000003c T std::codecvt<wchar_t, char, _mbstate_t>::~codecvt()
00000000006555b0 0000000000000064 T std::codecvt<char, char, _mbstate_t>::codecvt(unsigned long)
00000000006555b0 0000000000000064 T std::codecvt<char, char, _mbstate_t>::codecvt(unsigned long)
0000000000655620 0000000000000064 T std::codecvt<wchar_t, char, _mbstate_t>::codecvt(unsigned long)
0000000000655620 0000000000000064 T std::codecvt<wchar_t, char, _mbstate_t>::codecvt(unsigned long)
0000000000655690 00000000000001c0 T std::codecvt<wchar_t, char, _mbstate_t>::do_out(_mbstate_t&, wchar_t const*, wchar_t const*, wchar_t const*&, char*, char*, char*&) const
0000000000655850 00000000000000f4 T std::codecvt<wchar_t, char, _mbstate_t>::do_in(_mbstate_t&, char const*, char const*, char const*&, wchar_t*, wchar_t*, wchar_t*&) const
0000000000655950 000000000000002c T std::codecvt<wchar_t, char, _mbstate_t>::do_encoding() const
0000000000655980 0000000000000024 T std::codecvt<wchar_t, char, _mbstate_t>::do_max_length() const
00000000006559b0 00000000000000b0 T std::codecvt<wchar_t, char, _mbstate_t>::do_length(_mbstate_t&, char const*, char const*, unsigned long) const
0000000000655a60 0000000000000028 T std::__cxx11::collate<char>::_M_compare(char const*, char const*) const
0000000000655a90 0000000000000010 T std::__cxx11::collate<char>::_M_transform(char*, char const*, unsigned long) const
0000000000655aa0 0000000000000028 T std::__cxx11::collate<wchar_t>::_M_compare(wchar_t const*, wchar_t const*) const
0000000000655ad0 0000000000000010 T std::__cxx11::collate<wchar_t>::_M_transform(wchar_t*, wchar_t const*, unsigned long) const
0000000000655ae0 0000000000000028 T std::collate<char>::_M_compare(char const*, char const*) const
0000000000655b10 0000000000000010 T std::collate<char>::_M_transform(char*, char const*, unsigned long) const
0000000000655b20 0000000000000028 T std::collate<wchar_t>::_M_compare(wchar_t const*, wchar_t const*) const
0000000000655b50 0000000000000010 T std::collate<wchar_t>::_M_transform(wchar_t*, wchar_t const*, unsigned long) const
0000000000655b60 0000000000000050 T std::ios_base::_M_init()
0000000000655bb0 00000000000000d4 t std::(anonymous namespace)::day_of_the_week(int, int, int)
0000000000655c90 00000000000000e8 T std::__num_base::_S_format_float(std::ios_base const&, char*, char)
0000000000655d80 0000000000000098 T std::__verify_grouping_impl(char const*, unsigned long, char const*, unsigned long)
0000000000655e20 000000000000002c T std::__verify_grouping(char const*, unsigned long, std::string const&)
0000000000655e50 0000000000000428 T std::__time_get_state::_M_finalize_state(tm*)
0000000000656280 00000000000000d0 T std::__cxx11::messages<char>::do_get(int, int, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
0000000000656350 00000000000000c8 T std::__cxx11::messages<wchar_t>::do_get(int, int, int, std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const
0000000000656420 0000000000000080 T std::messages<char>::do_get(int, int, int, std::string const&) const
00000000006564a0 0000000000000080 T std::messages<wchar_t>::do_get(int, int, int, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const
0000000000656520 0000000000000028 T std::__verify_grouping(char const*, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0000000000656550 0000000000000008 T std::logic_error::what() const
0000000000656550 0000000000000008 T std::runtime_error::what() const
0000000000656560 0000000000000070 T std::runtime_error::~runtime_error()
0000000000656560 0000000000000070 T std::runtime_error::~runtime_error()
00000000006565d0 0000000000000024 T std::runtime_error::~runtime_error()
0000000000656600 0000000000000070 T std::logic_error::~logic_error()
0000000000656600 0000000000000070 T std::logic_error::~logic_error()
0000000000656670 0000000000000024 T std::logic_error::~logic_error()
00000000006566a0 0000000000000014 T std::length_error::~length_error()
00000000006566a0 0000000000000014 T std::length_error::~length_error()
00000000006566c0 0000000000000024 T std::length_error::~length_error()
00000000006566f0 0000000000000014 T std::out_of_range::~out_of_range()
00000000006566f0 0000000000000014 T std::out_of_range::~out_of_range()
0000000000656710 0000000000000024 T std::out_of_range::~out_of_range()
0000000000656740 00000000000000c4 T std::__timepunct<char>::_M_put(char*, unsigned long, char const*, tm const*) const
0000000000656810 0000000000000248 T std::__timepunct<char>::_M_initialize_timepunct(int*)
0000000000656a60 00000000000000c4 T std::__timepunct<wchar_t>::_M_put(wchar_t*, unsigned long, wchar_t const*, tm const*) const
0000000000656b30 0000000000000248 T std::__timepunct<wchar_t>::_M_initialize_timepunct(int*)
0000000000656d80 00000000000000f0 T std::logic_error::logic_error(char const*)
0000000000656d80 00000000000000f0 T std::logic_error::logic_error(char const*)
0000000000656e70 0000000000000030 T std::length_error::length_error(char const*)
0000000000656e70 0000000000000030 T std::length_error::length_error(char const*)
0000000000656ea0 0000000000000030 T std::out_of_range::out_of_range(char const*)
0000000000656ea0 0000000000000030 T std::out_of_range::out_of_range(char const*)
0000000000656ed0 00000000000000f0 T std::runtime_error::runtime_error(char const*)
0000000000656ed0 00000000000000f0 T std::runtime_error::runtime_error(char const*)
0000000000656fc0 00000000000000c8 T std::__cow_string::__cow_string(char const*, unsigned long)
0000000000656fc0 00000000000000c8 T std::__cow_string::__cow_string(char const*, unsigned long)
0000000000657090 0000000000000014 T std::ios_base::failure[abi:cxx11]::~failure()
0000000000657090 0000000000000014 T std::ios_base::failure[abi:cxx11]::~failure()
00000000006570b0 0000000000000024 T std::ios_base::failure[abi:cxx11]::~failure()
00000000006570e0 0000000000000004 T std::ios_base::failure[abi:cxx11]::what() const
00000000006570f0 0000000000000014 T std::__iosfail_type_info::~__iosfail_type_info()
00000000006570f0 0000000000000014 T std::__iosfail_type_info::~__iosfail_type_info()
0000000000657110 0000000000000024 T std::__iosfail_type_info::~__iosfail_type_info()
0000000000657140 0000000000000060 T std::__iosfail_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
00000000006571a0 0000000000000034 W std::__ios_failure::~__ios_failure()
00000000006571a0 0000000000000034 W std::__ios_failure::~__ios_failure()
00000000006571e0 000000000000003c W std::__ios_failure::~__ios_failure()
0000000000657220 00000000000001d4 T std::ios_base::failure[abi:cxx11]::failure(char const*, std::error_code const&)
0000000000657220 00000000000001d4 T std::ios_base::failure[abi:cxx11]::failure(char const*, std::error_code const&)
0000000000657400 0000000000000008 T std::__cow_string::__cow_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0000000000657400 0000000000000008 T std::__cow_string::__cow_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0000000000657410 0000000000000048 T std::runtime_error::runtime_error(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0000000000657410 0000000000000048 T std::runtime_error::runtime_error(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0000000000657460 000000000000000c t (anonymous namespace)::io_error_category::name() const
0000000000657470 0000000000000010 t (anonymous namespace)::io_error_category::~io_error_category()
0000000000657470 0000000000000010 t (anonymous namespace)::io_error_category::~io_error_category()
0000000000657480 0000000000000030 t (anonymous namespace)::io_error_category::~io_error_category()
00000000006574b0 0000000000000094 t (anonymous namespace)::io_error_category::message[abi:cxx11](int) const
0000000000657550 000000000000000c T std::iostream_category()
0000000000657560 0000000000000010 T std::_V2::error_category::default_error_condition(int) const
0000000000657570 0000000000000050 T std::_V2::error_category::equivalent(int, std::error_condition const&) const
00000000006575c0 0000000000000024 T std::_V2::error_category::equivalent(std::error_code const&, int) const
00000000006575f0 0000000000000014 T std::system_error::~system_error()
00000000006575f0 0000000000000014 T std::system_error::~system_error()
0000000000657610 0000000000000024 T std::system_error::~system_error()
0000000000657640 0000000000000068 T std::_V2::error_category::_M_message[abi:cxx11](int) const
00000000006576b0 0000000000000004 T std::_V2::error_category::~error_category()
00000000006576b0 0000000000000004 T std::_V2::error_category::~error_category()
00000000006576c0 0000000000000044 T __cxa_call_terminate
0000000000657710 0000000000000008 T std::ios_base::failure::what() const
0000000000657720 0000000000000070 T std::ios_base::failure::~failure()
0000000000657720 0000000000000070 T std::ios_base::failure::~failure()
0000000000657720 0000000000000070 t std::ios_base::failure::~failure() [clone .localalias]
0000000000657790 0000000000000024 T std::ios_base::failure::~failure()
00000000006577c0 00000000000000b0 T std::ios_base::failure::failure(std::string const&)
00000000006577c0 00000000000000b0 T std::ios_base::failure::failure(std::string const&)
0000000000657870 0000000000000100 T std::__construct_ios_failure(void*, char const*)
0000000000657970 0000000000000090 T std::__destroy_ios_failure(void*)
0000000000657a00 0000000000000050 T std::__is_ios_failure_handler(__cxxabiv1::__class_type_info const*)
0000000000657a50 0000000000000050 T fmodf
0000000000657aa0 0000000000000240 T atanf
0000000000657ce0 0000000000000050 T sqrtf
0000000000657d30 0000000000000064 T tanf
0000000000657da0 000000000000007c T ldexpf
0000000000657e20 00000000000000e0 T expf
0000000000657f00 0000000000000338 T powf
0000000000658240 00000000000000c8 T exp2f
0000000000658310 00000000000001e0 T sinf
00000000006584f0 00000000000001e0 T cosf
00000000006586d0 00000000000000e0 T logf
00000000006587b0 000000000000010c T scalbn
00000000006588c0 00000000000000e0 T log2f
00000000006589a0 0000000000000034 t with_errnof
00000000006589e0 0000000000000018 t xflowf
0000000000658a00 0000000000000008 t __math_uflowf
0000000000658a10 000000000000000c t __math_may_uflowf
0000000000658a20 0000000000000008 t __math_oflowf
0000000000658a30 0000000000000020 t __math_divzerof
0000000000658a50 000000000000001c t __math_invalidf
0000000000658a70 0000000000000004 T atan2
0000000000658a80 0000000000000170 T exp
0000000000658bf0 0000000000000018 T finitef
0000000000658c10 0000000000000050 T sqrt
0000000000658c60 0000000000000034 t with_errno
0000000000658ca0 0000000000000018 t xflow
0000000000658cc0 000000000000000c t __math_uflow
0000000000658cd0 000000000000000c t __math_oflow
0000000000658ce0 0000000000000020 t __math_divzero
0000000000658d00 000000000000001c t __math_invalid
0000000000658d20 0000000000000014 t __math_check_uflow
0000000000658d40 0000000000000020 t __math_check_oflow
0000000000658d60 00000000000001b8 T log
0000000000658f20 0000000000000078 T frexp
0000000000658fa0 00000000000000f8 T scalbnf
00000000006590a0 00000000000001c0 T log2
0000000000659260 000000000000007c T ldexp
00000000006592e0 0000000000000218 T atan
0000000000659500 00000000000004a4 T pow
00000000006599b0 00000000000000a8 T sin
0000000000659a60 00000000000000a0 T cos
0000000000659b00 0000000000000210 T __kernel_tanf
0000000000659d10 000000000000000c T nanf
0000000000659d20 0000000000000008 T __ieee754_sqrt
0000000000659d30 0000000000000008 T __ieee754_sqrtf
0000000000659d40 0000000000000008 T fabs
0000000000659d50 000000000000017c T __ieee754_fmodf
0000000000659ed0 0000000000000068 T acosf
0000000000659f40 0000000000000304 T __ieee754_rem_pio2f
000000000065a250 0000000000000004 T atan2f
000000000065a260 000000000000000c T lrintf
000000000065a270 0000000000000008 T fabsf
000000000065a280 0000000000000130 T __kernel_cos
000000000065a3b0 000000000000009c T __kernel_sin
000000000065a450 00000000000001dc T __ieee754_atan2
000000000065a630 000000000000000c T nan
000000000065a640 0000000000000018 T finite
000000000065a660 00000000000002f4 T __ieee754_rem_pio2
000000000065a960 0000000000000324 T __ieee754_acosf
000000000065ac90 00000000000001d0 T __ieee754_atan2f
000000000065ae60 0000000000000840 T __kernel_rem_pio2f
000000000065b6a0 0000000000000008 T floorf
000000000065b6b0 000000000000083c T __kernel_rem_pio2
000000000065bef0 0000000000000008 T floor
000000000065bf00 0000000000000100 t __eqtf2
000000000065bf00 0000000000000100 T __netf2
000000000065c000 0000000000000788 t __multf3
000000000065c790 0000000000000064 t __floatunsitf
000000000065c800 0000000000000158 t __extenddftf2
000000000065c960 0000000000000374 t __trunctfsf2
000000000065cce0 00000000000002ac t init_dwarf_reg_size_table
000000000065cf90 0000000000000160 t uw_install_context_1
000000000065d0f0 0000000000000190 t read_encoded_value
000000000065d280 00000000000007a0 t execute_stack_op
000000000065da20 000000000000030c t uw_update_context_1
000000000065dd30 0000000000000148 t uw_update_context
000000000065de80 000000000000078c t execute_cfa_program_specialized
000000000065e610 00000000000007c4 t execute_cfa_program_generic
000000000065ede0 0000000000000458 t uw_frame_state_for
000000000065f240 0000000000000370 t uw_init_context_1
000000000065f5b0 000000000000010c t _Unwind_RaiseException_Phase2
000000000065f6c0 0000000000000140 t _Unwind_ForcedUnwind_Phase2
000000000065f800 0000000000000054 t _Unwind_SetGR
000000000065f860 0000000000000014 t _Unwind_GetIPInfo
000000000065f880 0000000000000008 t _Unwind_SetIP
000000000065f890 0000000000000008 t _Unwind_GetLanguageSpecificData
000000000065f8a0 0000000000000008 t _Unwind_GetRegionStart
000000000065f8b0 0000000000000008 t _Unwind_GetDataRelBase
000000000065f8c0 0000000000000008 t _Unwind_GetTextRelBase
000000000065f8d0 0000000000000004 t _Unwind_DebugHook
000000000065f8e0 0000000000000174 t _Unwind_RaiseException
000000000065fa60 00000000000000fc t _Unwind_Resume
000000000065fb60 00000000000000f4 t _Unwind_Resume_or_Rethrow
000000000065fc60 000000000000001c t _Unwind_DeleteException
000000000065fc80 0000000000000018 t fde_unencoded_compare
000000000065fca0 000000000000002c t fde_unencoded_extract
000000000065fcd0 00000000000000dc t frame_downheap
000000000065fdb0 0000000000000140 t read_encoded_value_with_base
000000000065fef0 000000000000022c t fde_radixsort
0000000000660120 0000000000000104 t __deregister_frame_info_bases.part.0
0000000000660230 0000000000000120 t get_cie_encoding
0000000000660350 00000000000000d0 t fde_mixed_encoding_extract
0000000000660420 0000000000000204 t classify_object_over_fdes.constprop.0
0000000000660630 00000000000000bc t fde_single_encoding_extract
00000000006606f0 00000000000000ac t fde_single_encoding_compare
00000000006607a0 0000000000000104 t fde_mixed_encoding_compare
00000000006608b0 0000000000000218 t add_fdes.isra.0
0000000000660ad0 0000000000000274 t linear_search_fdes
0000000000660d50 0000000000000534 t search_object
0000000000661290 0000000000000074 t __register_frame_info
0000000000661310 0000000000000018 t __deregister_frame_info
0000000000661330 00000000000001dc t _Unwind_Find_FDE
0000000000661510 0000000000000070 t __sfp_handle_exceptions
0000000000661580 0000000000000040 T __memcpy_chk
00000000006615c0 000000000000018c t _strtoll_l.isra.0
0000000000661750 0000000000000044 T _strtoll_r
00000000006617a0 0000000000000048 T strtoll
00000000006617f0 00000000000001a8 t _strtoull_l.isra.0
00000000006619a0 0000000000000044 T _strtoull_r
00000000006619f0 0000000000000048 T strtoull
0000000000661a40 0000000000000094 T btowc
0000000000661ae0 0000000000000008 T towlower
0000000000661af0 00000000000000f0 T _mbrtowc_r
0000000000661be0 0000000000000100 T mbrtowc
0000000000661ce0 00000000000000d8 T _wcrtomb_r
0000000000661dc0 00000000000000e4 T wcrtomb
0000000000661eb0 0000000000000008 T towupper
0000000000661ec0 0000000000000084 T printf
0000000000661f50 000000000000097c T qsort
0000000000661f50 000000000000097c t qsort.localalias
00000000006628d0 000000000000002c T memalign
0000000000662900 00000000000000e0 T _putc_r
00000000006629e0 00000000000000e4 T putc
0000000000662ad0 0000000000000010 T __set_ctype
0000000000662ae0 0000000000000094 T wctob
0000000000662b80 0000000000000180 T _memalign_r
0000000000662d00 0000000000000028 T putchar
0000000000662d30 0000000000000014 T atexit
0000000000662d50 0000000000000020 T _towctrans_r
0000000000662d70 000000000000002c T towctrans
0000000000662da0 00000000000001d8 T _wctype_r
0000000000662f80 0000000000000024 T wctype
0000000000662fb0 0000000000000018 T isalpha
0000000000662fd0 0000000000000008 T atof
0000000000662fe0 000000000000015c T snprintf
0000000000663140 000000000000003c T setenv
0000000000663180 00000000000000a8 T sprintf
0000000000663230 00000000000000d0 T _puts_r
0000000000663300 0000000000000024 T puts
0000000000663330 00000000000000b8 T bsearch
00000000006633f0 000000000000001c T atoi
0000000000663410 0000000000000254 T _setenv_r
0000000000663670 0000000000000018 T abort
0000000000663690 00000000000000bc T sscanf
0000000000663750 0000000000000024 T toupper
0000000000663780 0000000000000020 T islower
00000000006637a0 00000000000000b8 T __submore
0000000000663860 00000000000001dc T _ungetc_r
0000000000663a40 000000000000002c T ungetc
0000000000663a70 0000000000000050 T __sread
0000000000663ac0 0000000000000008 T __seofread
0000000000663ad0 000000000000006c T __swrite
0000000000663b40 0000000000000050 T __sseek
0000000000663b90 0000000000000008 T __sclose
0000000000663ba0 000000000000000c T __env_lock
0000000000663bb0 000000000000000c T __env_unlock
0000000000663bc0 0000000000000020 T isupper
0000000000663be0 000000000000002c T calloc
0000000000663c10 000000000000002c T aligned_alloc
0000000000663c40 00000000000000c0 T _calloc_r
0000000000663d00 0000000000000064 T __assert_func
0000000000663d70 0000000000000084 T fiprintf
0000000000663e00 0000000000000118 T __swbuf_r
0000000000663f20 0000000000000060 T __itoa
0000000000663f80 0000000000000004 T itoa
0000000000663f90 0000000000000124 T _malloc_trim_r
00000000006640c0 00000000000002d8 T _free_r
00000000006643a0 0000000000000018 T isspace
00000000006643c0 0000000000000074 T strcat
0000000000664440 000000000000012c T __swsetup_r
0000000000664570 00000000000000b4 T asprintf
0000000000664630 0000000000000138 T _fclose_r
0000000000664770 0000000000000024 T fclose
0000000000664794 0000000000000804 t get_arg
0000000000664f98 0000000000003bac T _svfprintf_r
0000000000668b50 0000000000000024 T malloc
0000000000668b80 0000000000000024 T free
0000000000668bb0 0000000000000020 T isblank
0000000000668bd0 0000000000000150 T _fdopen_r
0000000000668d20 000000000000002c T fdopen
0000000000668d4c 0000000000000074 t get_arg
0000000000668dc0 0000000000002fdc T __ssvfscanf_r
000000000066bda0 000000000000080c T _malloc_r
000000000066c5b0 000000000000002c T getenv
000000000066c5e0 00000000000000a8 T strlcat
000000000066c690 0000000000000004 T strcoll
000000000066c6a0 00000000000004c4 T _fseeko_r
000000000066cb70 000000000000003c T fseeko
000000000066cbb0 00000000000000cc T _vsnprintf_r
000000000066cc80 0000000000000050 T vsnprintf
000000000066ccd0 0000000000000094 T feof
000000000066cd70 00000000000000fc T _findenv_r
000000000066ce70 0000000000000018 T _getenv_r
000000000066ce90 000000000000003c T strlcpy
000000000066ced0 0000000000000164 T _ftello_r
000000000066d040 0000000000000024 T ftello
000000000066d070 00000000000000bc T __sflags
000000000066d130 0000000000000094 T ferror
000000000066d1d0 000000000000000c T __malloc_lock
000000000066d1e0 000000000000000c T __malloc_unlock
000000000066d1ec 0000000000000804 t get_arg
000000000066d9f0 0000000000003c28 T _vfprintf_r
0000000000671618 0000000000000048 T vfprintf
0000000000671660 00000000000000d0 t __sbprintf
0000000000671730 000000000000005c T _init_signal_r
0000000000671790 0000000000000060 T _signal_r
00000000006717f0 00000000000000a4 T _raise_r
00000000006718a0 0000000000000024 T raise
00000000006718d0 000000000000002c T signal
0000000000671900 0000000000000118 T _fopen_r
0000000000671a20 000000000000002c T fopen
0000000000671a50 0000000000000088 T _vsscanf_r
0000000000671ae0 0000000000000048 T vsscanf
0000000000671b30 0000000000000200 T __sflush_r
0000000000671d30 00000000000000b8 T _fflush_r
0000000000671df0 0000000000000044 T fflush
0000000000671e40 000000000000005c T iswctype
0000000000671ea0 0000000000000008 T iswalpha
0000000000671eb0 0000000000000024 T strdup
0000000000671ee0 0000000000000074 T strcasecmp
0000000000671f60 0000000000000084 T fprintf
0000000000671ff0 0000000000000080 T strncasecmp
0000000000672070 000000000000005c T _strdup_r
00000000006720d0 0000000000000004 T _ftell_r
00000000006720e0 0000000000000024 T ftell
0000000000672110 00000000000000a4 T fputc
00000000006721c0 0000000000000080 T clearerr
0000000000672240 000000000000002c T gmtime
0000000000672270 0000000000000010 T iswdigit
0000000000672280 0000000000000078 T strncat
0000000000672300 0000000000000418 T _strerror_r
0000000000672720 000000000000002c T strerror
0000000000672750 00000000000004cc T __sfvwrite_r
0000000000672c20 0000000000000060 T _vasprintf_r
0000000000672c80 0000000000000048 T vasprintf
0000000000672cd0 00000000000000b4 T _fputs_r
0000000000672d90 000000000000002c T fputs
0000000000672dc0 000000000000019c T _fgets_r
0000000000672f60 000000000000003c T fgets
0000000000672fa0 00000000000002a0 T gmtime_r
0000000000673240 00000000000000a0 T _fwalk_sglue
00000000006732e0 0000000000000310 T _fread_r
00000000006735f0 0000000000000044 T fread
0000000000673640 00000000000000b8 T fileno
0000000000673700 0000000000000524 T _realloc_r
0000000000673c30 0000000000000008 T iswgraph
0000000000673c40 0000000000000090 T strncpy
0000000000673cd0 00000000000000ec T _fwrite_r
0000000000673dc0 0000000000000044 T fwrite
0000000000673e10 00000000000000ac T __utoa
0000000000673ec0 000000000000001c t stdio_exit_handler
0000000000673ee0 000000000000006c t cleanup_stdio
0000000000673f50 0000000000000140 t global_stdio_init.part.0
0000000000674090 000000000000000c T __sfp_lock_acquire
00000000006740a0 000000000000000c T __sfp_lock_release
00000000006740b0 0000000000000130 T __sfp
00000000006741e0 0000000000000054 T __sinit
0000000000674240 0000000000000024 T srand
0000000000674270 0000000000000038 T rand
00000000006742b0 0000000000000034 T strtok
00000000006742f0 00000000000000b4 T getc
00000000006743b0 0000000000000054 t sulp
0000000000674410 0000000000001184 T _strtod_l
00000000006755a0 0000000000000050 T _strtod_r
00000000006755f0 000000000000003c T strtod_l
0000000000675630 0000000000000054 T strtod
0000000000675690 00000000000000d0 T strtof_l
0000000000675760 00000000000000f4 T strtof
0000000000675860 00000000000000a0 T __strtok_r
0000000000675900 0000000000000008 T strtok_r
0000000000675910 0000000000000004 T getwc
0000000000675920 0000000000000004 T _fseek_r
0000000000675930 000000000000003c T fseek
0000000000675970 0000000000000024 T srandom
00000000006759a0 0000000000000038 T random
00000000006759e0 0000000000000008 T _user_strerror
00000000006759f0 000000000000018c t _strtol_l.part.0
0000000000675b80 0000000000000070 T _strtol_r
0000000000675bf0 0000000000000074 T strtol
0000000000675c70 000000000000002c T realloc
0000000000675ca0 00000000000000ec t iso_year_adjust.isra.0
0000000000675d90 000000000000109c t __strftime.isra.0
0000000000676e30 0000000000000044 T strftime
0000000000676e80 0000000000000040 T wcslcpy
0000000000676ec0 000000000000000c T __gettzinfo
0000000000676ecc 00000000000000d8 T memchr
0000000000676fb0 00000000000001a8 t _strtoul_l.isra.0
0000000000677160 0000000000000044 T _strtoul_r
00000000006771b0 0000000000000048 T strtoul
0000000000677200 00000000000000ec t iso_year_adjust.isra.0
00000000006772f0 0000000000000040 T __ctloc
0000000000677330 00000000000010b8 t __strftime.isra.0
00000000006783f0 0000000000000044 T wcsftime
0000000000678440 000000000000002c T wcslen
0000000000678470 0000000000000060 T strxfrm
0000000000678500 00000000000001dc T memset
00000000006786e0 00000000000000bc t currentlocale
00000000006787a0 000000000000075c T __loadlocale
0000000000678f00 0000000000000094 T __get_locale_env
0000000000678fa0 00000000000003b0 T _setlocale_r
0000000000679350 000000000000002c T __locale_mb_cur_max
0000000000679380 000000000000002c T setlocale
00000000006793b0 0000000000000048 T time
0000000000679400 0000000000000030 T wcscmp
0000000000679430 0000000000000138 T swprintf
0000000000679570 0000000000000134 t critical_factorization
00000000006796b0 000000000000031c t two_way_long_needle
00000000006799d0 0000000000000250 T strstr
0000000000679c40 0000000000000110 T memcmp
0000000000679d50 0000000000000350 T _newlocale_r
000000000067a0a0 000000000000003c T newlocale
000000000067a0e0 0000000000000004 T call_once
000000000067a0f0 0000000000000004 T mtx_destroy
000000000067a100 000000000000002c T mtx_init
000000000067a130 000000000000005c T mtx_lock
000000000067a190 000000000000005c T mtx_unlock
000000000067a1f0 0000000000000008 T __localeconv_l
000000000067a200 0000000000000028 T _localeconv_r
000000000067a230 0000000000000004 T wcscoll
000000000067a240 0000000000000024 T wcscpy
000000000067a270 00000000000000fc T _ungetwc_r
000000000067a370 0000000000000068 T ungetwc
000000000067a3e0 0000000000000004 T putwc
000000000067a3e4 0000000000000038 T setjmp
000000000067a41c 000000000000003c T longjmp
000000000067a480 000000000000016c T memcpy
000000000067a5f0 0000000000000020 T _freelocale_r
000000000067a610 0000000000000024 T freelocale
000000000067a640 0000000000000004 T wcsxfrm
000000000067a680 00000000000000e4 T strcmp
000000000067a770 0000000000000034 T __ascii_wctomb
000000000067a7b0 00000000000000e4 T __utf8_wctomb
000000000067a8a0 0000000000000084 T __sjis_wctomb
000000000067a930 00000000000000a8 T __eucjp_wctomb
000000000067a9e0 00000000000000bc T __jis_wctomb
000000000067aac0 00000000000001bc T stpcpy
000000000067ac80 00000000000000ac T memmove
000000000067ad30 0000000000000034 T wmemchr
000000000067ada4 00000000000000e0 T strnlen
000000000067ae80 00000000000001b8 T strcpy
000000000067b038 00000000000000dc T strchr
000000000067b120 0000000000000008 T wmemcpy
000000000067b128 0000000000000100 T strrchr
000000000067b240 0000000000000140 T strlen
000000000067b380 00000000000000a4 T stpncpy
000000000067b430 0000000000000008 T wmemmove
000000000067b440 000000000000002c T strndup
000000000067b470 000000000000001c T wmemset
000000000067b4dc 00000000000001b8 T strncmp
000000000067b6a0 0000000000000094 T __libc_init_array
000000000067b740 0000000000000024 T isatty
000000000067b770 0000000000000044 T __libc_fini_array
000000000067b7c0 0000000000000024 T close
000000000067b7f0 0000000000000084 T _strndup_r
000000000067b880 0000000000000014 T __errno
000000000067b8a0 0000000000000040 T write
000000000067b8e0 000000000000003c T lseek
000000000067b920 0000000000000088 T open
000000000067b9b0 0000000000000040 T read
000000000067b9f0 000000000000002c T gettimeofday
000000000067ba20 0000000000000050 T __chk_fail
000000000067ba70 000000000000002c T stat
000000000067baa0 0000000000000028 T iswgraph_l
000000000067bad0 0000000000000008 T iswlower
000000000067bae0 0000000000000064 T iswlower_l
000000000067bb50 0000000000000008 T iswprint
000000000067bb60 0000000000000020 T iswxdigit
000000000067bb80 0000000000000020 T iswprint_l
000000000067bba0 0000000000000008 T iswpunct
000000000067bbb0 00000000000001ec T towctrans_l
000000000067bda0 0000000000000020 T iswpunct_l
000000000067bdc0 0000000000000008 T iswspace
000000000067bdd0 0000000000000094 T __swhatbuf_r
000000000067be70 0000000000000104 T __smakebuf_r
000000000067bf80 0000000000000048 T iswspace_l
000000000067bfd0 0000000000000008 T iswupper
000000000067bfe0 0000000000000010 T _wcsrtombs_r
000000000067bff0 00000000000000e0 T __register_exitproc
000000000067c0d0 0000000000000144 T __call_exitprocs
000000000067c220 0000000000000068 T __srget_r
000000000067c290 00000000000000d4 T __sccl
000000000067c370 0000000000000048 t lflush
000000000067c3c0 00000000000001b0 T __srefill_r
000000000067c570 000000000000000c T abs
000000000067c580 0000000000000084 T category
000000000067c610 000000000000015c T sniprintf
000000000067c76c 0000000000000804 t get_arg
000000000067cf70 0000000000000038 T __sprint_r
000000000067cfa8 0000000000002984 T _vfiprintf_r
000000000067f92c 00000000000000d0 t __sbprintf
000000000067f9fc 0000000000000804 t get_arg
0000000000680200 00000000000001bc T __ssprint_r
00000000006803bc 00000000000028d4 T _svfiprintf_r
0000000000682c90 0000000000000284 t wcvt
0000000000682f14 00000000000007a8 t get_arg.isra.0
00000000006836bc 0000000000003714 T _svfwprintf_r
0000000000686dd0 0000000000000074 t get_arg
0000000000686e44 00000000000000f0 T _sungetc_r
0000000000686f34 0000000000000070 T __ssrefill_r
0000000000686fa4 00000000000000e0 T _sfread_r
0000000000687084 00000000000027e8 T __ssvfiscanf_r
0000000000689870 0000000000000034 T iswalpha_l
00000000006898b0 0000000000000008 T iswblank
00000000006898c0 000000000000000c T labs
00000000006898d0 0000000000000118 t rshift
00000000006899f0 0000000000000814 T __gethex
000000000068a210 00000000000001a4 t quorem
000000000068a3c0 0000000000001198 T _dtoa_r
000000000068b560 0000000000000048 T __match
000000000068b5b0 0000000000000258 T __hexnan
000000000068b810 000000000000002c T iswblank_l
000000000068b840 0000000000000008 T iswcntrl
000000000068b850 0000000000000008 T iswalnum
000000000068b860 0000000000000024 T iswcntrl_l
000000000068b890 0000000000000038 T iswalnum_l
000000000068b8d0 0000000000000124 T __fgetwc
000000000068ba00 0000000000000078 T _fgetwc_r
000000000068ba80 0000000000000050 T fgetwc
000000000068bad0 000000000000008c T _Balloc
000000000068bb60 000000000000001c T _Bfree
000000000068bb80 0000000000000108 T __multadd
000000000068bc90 0000000000000130 T __s2b
000000000068bdc0 0000000000000080 T __hi0bits
000000000068be40 000000000000009c T __lo0bits
000000000068bee0 000000000000004c T __i2b
000000000068bf30 00000000000001e4 T __multiply
000000000068c120 0000000000000100 T __pow5mult
000000000068c220 0000000000000170 T __lshift
000000000068c390 0000000000000050 T __mcmp
000000000068c3e0 00000000000001cc T __mdiff
000000000068c5b0 0000000000000084 T __ulp
000000000068c640 0000000000000168 T __b2d
000000000068c7b0 000000000000015c T __d2b
000000000068c910 00000000000000ac T __ratio
000000000068c9c0 0000000000000068 T __copybits
000000000068ca30 000000000000006c T __any_on
000000000068caa0 0000000000000048 T mbstowcs
000000000068caf0 0000000000000110 T __fputwc
000000000068cc00 0000000000000080 T _fputwc_r
000000000068cc80 0000000000000068 T fputwc
000000000068ccf0 00000000000000e8 T _mbstowcs_r
000000000068cde0 000000000000000c T __tz_lock
000000000068cdf0 000000000000000c T __tz_unlock
000000000068ce00 0000000000000048 T __ascii_mbtowc
000000000068ce50 00000000000002b8 T __utf8_mbtowc
000000000068d110 00000000000000cc T __sjis_mbtowc
000000000068d1e0 0000000000000124 T __eucjp_mbtowc
000000000068d310 00000000000001c0 T __jis_mbtowc
000000000068d4d0 0000000000000014 T _tzset_unlocked
000000000068d4f0 0000000000000708 T _tzset_unlocked_r
000000000068dc00 00000000000001cc T _wcstoul_l
000000000068ddd0 000000000000005c T wcstoul
000000000068de30 0000000000000274 T __tzcalc_limits
000000000068e0b0 0000000000000064 T iswupper_l
000000000068e120 0000000000000054 T mbrlen
000000000068e180 00000000000001ac T _wcsnrtombs_l
000000000068e330 0000000000000074 T _wcsnrtombs_r
000000000068e3b0 000000000000011c T _mbsnrtowcs_r
000000000068e4d0 00000000000000bc T siscanf
000000000068e590 0000000000000020 T _exit
000000000068e5b0 0000000000000170 T chdir
000000000068e720 0000000000000034 T clock_gettime
000000000068e760 000000000000021c T _concatenate_path
000000000068e980 0000000000000084 T _fstat_r
000000000068ea10 0000000000000014 T _getpid_r
000000000068ea30 0000000000000020 T __getreent
000000000068ea50 0000000000000024 T _gettimeofday_r
000000000068ea80 000000000000009c T __release_handle
000000000068eb20 00000000000000c8 T __alloc_handle
000000000068ebf0 0000000000000050 T __get_handle
000000000068ec40 00000000000000f0 T _close_r
000000000068ed30 0000000000000008 t null_write
000000000068ed40 0000000000000018 T setDefaultDevice
000000000068ed60 0000000000000114 T FindDevice
000000000068ee80 0000000000000034 T RemoveDevice
000000000068eec0 00000000000000c8 T AddDevice
000000000068ef90 0000000000000034 T GetDeviceOpTab
000000000068efd0 0000000000000008 T _isatty_r
000000000068efe0 0000000000000014 T _kill_r
000000000068f000 0000000000000098 T _lseek_r
000000000068f0a0 000000000000001c T pthread_mutexattr_init
000000000068f0c0 000000000000001c T pthread_mutexattr_settype
000000000068f0e0 0000000000000080 T pthread_mutex_init
000000000068f160 0000000000000010 T pthread_mutex_destroy
000000000068f170 000000000000006c T pthread_mutex_lock
000000000068f1e0 000000000000006c T pthread_mutex_unlock
000000000068f250 0000000000000020 T pthread_condattr_init
000000000068f270 0000000000000058 T pthread_cond_init
000000000068f2d0 0000000000000010 T pthread_cond_destroy
000000000068f2e0 0000000000000014 T pthread_cond_signal
000000000068f300 0000000000000014 T pthread_cond_broadcast
000000000068f320 0000000000000054 T pthread_cond_wait
000000000068f380 0000000000000020 T pthread_attr_init
000000000068f3a0 0000000000000020 T pthread_attr_setstacksize
000000000068f3c0 000000000000001c T pthread_attr_setdetachstate
000000000068f3e0 0000000000000090 T pthread_create
000000000068f470 0000000000000040 T pthread_join
000000000068f4b0 0000000000000018 T pthread_self
000000000068f4d0 00000000000000dc T pthread_once
000000000068f5b0 0000000000000024 T pthread_key_create
000000000068f5e0 0000000000000018 T pthread_setspecific
000000000068f600 0000000000000018 T pthread_getspecific
000000000068f620 0000000000000018 T pthread_key_delete
000000000068f640 0000000000000008 T pthread_setcanceltype
000000000068f650 0000000000000030 T sem_destroy
000000000068f680 0000000000000058 T sem_init
000000000068f6e0 0000000000000064 T sem_post
000000000068f750 00000000000000b0 T sem_timedwait
000000000068f800 000000000000007c T sem_trywait
000000000068f880 0000000000000098 T sem_wait
000000000068f920 00000000000000ec T _open_r
000000000068fa10 00000000000000a4 T _read_r
000000000068fac0 0000000000000078 W _sbrk_r
000000000068fb40 0000000000000090 T _stat_r
000000000068fbd0 0000000000000014 T timespec2nsec
000000000068fbf0 00000000000000c8 T abstimespec2nsec
000000000068fcc0 0000000000000014 T __libc_lock_acquire
000000000068fce0 0000000000000014 T __libc_lock_release
000000000068fd00 0000000000000014 T __libc_lock_acquire_recursive
000000000068fd20 0000000000000014 T __libc_lock_release_recursive
000000000068fd40 0000000000000018 T __libc_cond_signal
000000000068fd60 0000000000000018 T __libc_cond_broadcast
000000000068fd80 0000000000000018 T __libc_cond_wait
000000000068fda0 0000000000000018 T __libc_cond_wait_recursive
000000000068fdc0 00000000000000a4 T _write_r
000000000068fe70 00000000000003c4 t __trunctfdf2
0000000000690238 T _init
0000000000690270 T _fini
0000000000691000 R __rodata_start
00000000006df6b0 0000000000000036 r CSWTCH.143
00000000006e0010 0000000000000400 R bend_coarse
00000000006e0410 0000000000000800 R bend_fine
00000000006e0c10 0000000000000200 R freq_table
00000000006e0e10 0000000000000400 R vol_table
00000000006e1240 0000000000000200 r mix8
00000000006e16a0 0000000000000044 r CSWTCH.8
00000000006e16f0 0000000000000800 r SDL_default_keymap
00000000006e1f10 0000000000000054 r SUPPORTED_VENDORS.6
00000000006e1f88 000000000000000c r CSWTCH.247
00000000006e1f88 000000000000000c r CSWTCH.249
00000000006e1f88 000000000000000c r CSWTCH.251
00000000006e1f88 000000000000000c r CSWTCH.253
00000000006e1f88 000000000000000c r CSWTCH.255
00000000006e1f88 000000000000000c r CSWTCH.257
00000000006e1f98 000000000000000c r CSWTCH.147
00000000006e1fa8 0000000000000028 r CSWTCH.145
00000000006e1fd0 0000000000000016 r __func__.0
00000000006e1fe8 0000000000000014 r __func__.1
00000000006e2000 0000000000000014 r __func__.2
00000000006e2018 0000000000000017 r __func__.3
00000000006e2030 0000000000000016 r __func__.4
00000000006e2048 0000000000000017 r __func__.5
00000000006e2060 0000000000000015 r __func__.6
00000000006e2090 000000000000012d r GLES2_FragmentSrc_TextureExternalOESSrc_
00000000006e21c0 0000000000000309 r GLES2_FragmentSrc_TextureNV21BT709Src_
00000000006e24d0 0000000000000309 r GLES2_FragmentSrc_TextureNV21BT601Src_
00000000006e27e0 00000000000002f7 r GLES2_FragmentSrc_TextureNV21JPEGSrc_
00000000006e2ae0 0000000000000309 r GLES2_FragmentSrc_TextureNV12BT709Src_
00000000006e2df0 0000000000000309 r GLES2_FragmentSrc_TextureNV12BT601Src_
00000000006e3100 00000000000002f7 r GLES2_FragmentSrc_TextureNV12JPEGSrc_
00000000006e3400 0000000000000339 r GLES2_FragmentSrc_TextureYUVBT709Src_
00000000006e3740 0000000000000339 r GLES2_FragmentSrc_TextureYUVBT601Src_
00000000006e3a80 0000000000000327 r GLES2_FragmentSrc_TextureYUVJPEGSrc_
00000000006e3db0 0000000000000129 r GLES2_FragmentSrc_TextureBGRSrc_
00000000006e3ee0 000000000000016b r GLES2_FragmentSrc_TextureRGBSrc_
00000000006e4050 000000000000014d r GLES2_FragmentSrc_TextureARGBSrc_
00000000006e41a0 00000000000000f1 r GLES2_FragmentSrc_TextureABGRSrc_
00000000006e42a0 0000000000000079 r GLES2_FragmentSrc_SolidSrc_
00000000006e4320 0000000000000210 r GLES2_VertexSrc_Default_
00000000006e4530 0000000000000020 r CSWTCH.28
00000000006e4550 0000000000000020 r CSWTCH.27
00000000006e4570 0000000000000020 r CSWTCH.26
00000000006e4590 0000000000000020 r CSWTCH.25
00000000006e4608 0000000000000078 r RGB2YUVFactorTables.0
00000000006e4680 0000000000000200 r lut.0
00000000006e4880 0000000000000024 r YUV2RGB
00000000006e48b0 00000000000000e0 r pad_mapping_right_joy
00000000006e4990 00000000000000e0 r pad_mapping_left_joy
00000000006e4a70 00000000000000e0 r pad_mapping_default
00000000006e4b50 0000000000000800 r RGB565_BGRA8888_LUT
00000000006e5350 0000000000000800 r RGB565_RGBA8888_LUT
00000000006e5b50 0000000000000800 r RGB565_ABGR8888_LUT
00000000006e6350 0000000000000800 r RGB565_ARGB8888_LUT
00000000006e6b60 0000000000000014 r CSWTCH.52
00000000006e6b78 0000000000000024 r gains.6636
00000000006e6ba0 0000000000000020 R tf_select_table
00000000006e6bc0 0000000000000004 r spread_icdf
00000000006e6bc8 0000000000000003 r tapset_icdf
00000000006e6bd0 000000000000000b r trim_icdf
00000000006e6be0 0000000000000020 r correction.4177
00000000006e6c00 00000000000000e7 r band_allocation
00000000006e6ce8 0000000000000188 r cache_bits50
00000000006e6e70 00000000000000a8 r cache_caps50
00000000006e6f18 00000000000000d2 r cache_index50
00000000006e6ff0 000000000000002c r eband5ms
00000000006e7020 00000000000000f0 r fft_bitrev120
00000000006e7110 00000000000001e0 r fft_bitrev240
00000000006e72f0 00000000000003c0 r fft_bitrev480
00000000006e76b0 0000000000000078 r fft_bitrev60
00000000006e7728 0000000000000f00 r fft_twiddles48000_960
00000000006e8628 000000000000002a r logN400
00000000006e8658 0000000000001c20 r mdct_twiddles960
00000000006ea278 00000000000001e0 r window120
00000000006ea458 0000000000000010 r beta_coef
00000000006ea468 0000000000000064 R eMeans
00000000006ea4d0 0000000000000150 r e_prob_model
00000000006ea620 0000000000000010 r pred_coef
00000000006ea630 0000000000000003 r small_energy_icdf
00000000006ea638 0000000000000018 r LOG2_FRAC_TABLE
00000000006ea650 000000000000000c r SPREAD_FACTOR.6494
00000000006ea660 0000000000000003 r silk_LBRR_flags_2_iCDF
00000000006ea668 0000000000000007 r silk_LBRR_flags_3_iCDF
00000000006ea670 0000000000000006 R silk_LTPScales_table_Q14
00000000006ea678 0000000000000003 R silk_LTPscale_iCDF
00000000006ea680 0000000000000007 R silk_NLSF_EXT_iCDF
00000000006ea688 0000000000000005 R silk_NLSF_interpolation_factor_iCDF
00000000006ea690 0000000000000008 R silk_Quantization_Offsets_Q10
00000000006ea698 0000000000000002 R silk_lsb_iCDF
00000000006ea6a0 0000000000000002 R silk_stereo_only_code_mid_iCDF
00000000006ea6a8 0000000000000019 R silk_stereo_pred_joint_iCDF
00000000006ea6c8 0000000000000020 R silk_stereo_pred_quant_Q13
00000000006ea6e8 0000000000000004 R silk_type_offset_VAD_iCDF
00000000006ea6f0 0000000000000002 R silk_type_offset_no_VAD_iCDF
00000000006ea6f8 0000000000000003 R silk_uniform3_iCDF
00000000006ea700 0000000000000004 R silk_uniform4_iCDF
00000000006ea708 0000000000000005 R silk_uniform5_iCDF
00000000006ea710 0000000000000006 R silk_uniform6_iCDF
00000000006ea718 0000000000000008 R silk_uniform8_iCDF
00000000006ea720 000000000000000f r delay_matrix_dec
00000000006ea730 000000000000000f r delay_matrix_enc
00000000006ea740 000000000000001c R silk_Resampler_1_2_COEFS
00000000006ea760 0000000000000028 R silk_Resampler_1_3_COEFS
00000000006ea788 0000000000000028 R silk_Resampler_1_4_COEFS
00000000006ea7b0 0000000000000028 R silk_Resampler_1_6_COEFS
00000000006ea7d8 0000000000000028 R silk_Resampler_2_3_COEFS
00000000006ea800 000000000000003a R silk_Resampler_3_4_COEFS
00000000006ea840 0000000000000060 R silk_resampler_frac_FIR_12
00000000006ea8a0 0000000000000010 r bit_deinterleave_table.7015
00000000006ea8b0 0000000000000010 r bit_interleave_table.7005
00000000006ea8c0 0000000000000010 r exp2_table8.6846
00000000006ea8d0 0000000000000078 r ordery_table
00000000006ea948 00000000000013e0 r CELT_PVQ_U_DATA
00000000006ebd28 0000000000000004 r HARM_ATT_Q15
00000000006ebd30 0000000000000004 r PLC_RAND_ATTENUATE_UV_Q15
00000000006ebd38 0000000000000004 r PLC_RAND_ATTENUATE_V_Q15
00000000006ebd40 0000000000000029 R silk_delta_gain_iCDF
00000000006ebd70 0000000000000018 R silk_gain_iCDF
00000000006ebd88 0000000000000008 r silk_LTP_gain_iCDF_0
00000000006ebd90 0000000000000010 r silk_LTP_gain_iCDF_1
00000000006ebda0 0000000000000020 r silk_LTP_gain_iCDF_2
00000000006ebdc0 0000000000000028 r silk_LTP_gain_vq_0
00000000006ebde8 0000000000000050 r silk_LTP_gain_vq_1
00000000006ebe38 00000000000000a0 r silk_LTP_gain_vq_2
00000000006ebed8 0000000000000003 R silk_LTP_per_index_iCDF
00000000006ebee0 0000000000000140 r silk_NLSF_CB1_NB_MB_Q8
00000000006ec020 0000000000000280 r silk_NLSF_CB1_Wght_Q9
00000000006ec2a0 0000000000000040 r silk_NLSF_CB1_iCDF_NB_MB
00000000006ec2e0 0000000000000048 r silk_NLSF_CB2_BITS_NB_MB_Q5
00000000006ec328 00000000000000a0 r silk_NLSF_CB2_SELECT_NB_MB
00000000006ec3c8 0000000000000048 r silk_NLSF_CB2_iCDF_NB_MB
00000000006ec410 0000000000000016 r silk_NLSF_DELTA_MIN_NB_MB_Q15
00000000006ec428 0000000000000012 r silk_NLSF_PRED_NB_MB_Q8
00000000006ec440 0000000000000200 r silk_NLSF_CB1_WB_Q8
00000000006ec640 0000000000000400 r silk_NLSF_CB1_WB_Wght_Q9
00000000006eca40 0000000000000040 r silk_NLSF_CB1_iCDF_WB
00000000006eca80 0000000000000048 r silk_NLSF_CB2_BITS_WB_Q5
00000000006ecac8 0000000000000100 r silk_NLSF_CB2_SELECT_WB
00000000006ecbc8 0000000000000048 r silk_NLSF_CB2_iCDF_WB
00000000006ecc10 0000000000000022 r silk_NLSF_DELTA_MIN_WB_Q15
00000000006ecc38 000000000000001e r silk_NLSF_PRED_WB_Q8
00000000006ecc58 0000000000000003 R silk_pitch_contour_10_ms_NB_iCDF
00000000006ecc60 000000000000000c R silk_pitch_contour_10_ms_iCDF
00000000006ecc70 000000000000000b R silk_pitch_contour_NB_iCDF
00000000006ecc80 0000000000000022 R silk_pitch_contour_iCDF
00000000006ecca8 0000000000000015 R silk_pitch_delta_iCDF
00000000006eccc0 0000000000000020 R silk_pitch_lag_iCDF
00000000006ecce0 00000000000000b4 R silk_pulses_per_block_iCDF
00000000006ecd98 0000000000000012 R silk_rate_levels_iCDF
00000000006ecdb0 0000000000000098 R silk_shell_code_table0
00000000006ece48 0000000000000098 R silk_shell_code_table1
00000000006ecee0 0000000000000098 R silk_shell_code_table2
00000000006ecf78 0000000000000098 R silk_shell_code_table3
00000000006ed010 0000000000000011 R silk_shell_code_table_offsets
00000000006ed028 000000000000002a R silk_sign_iCDF
00000000006ed058 000000000000000a r ordering10.23678
00000000006ed068 0000000000000010 r ordering16.23677
00000000006ed078 000000000000002c R silk_CB_lags_stage2
00000000006ed0a8 0000000000000006 R silk_CB_lags_stage2_10_ms
00000000006ed0b0 0000000000000088 R silk_CB_lags_stage3
00000000006ed138 0000000000000018 R silk_CB_lags_stage3_10_ms
00000000006ed150 0000000000000102 R silk_LSFCosTab_FIX_Q12
00000000006ed260 0000000000000011 r bits_ac_chrominance.1
00000000006ed280 0000000000000011 r bits_ac_luminance.5
00000000006ed2a0 0000000000000011 r bits_dc_chrominance.3
00000000006ed2c0 0000000000000011 r bits_dc_luminance.7
00000000006ed2e0 0000000000000100 r std_chrominance_quant_tbl
00000000006ed3e0 0000000000000100 r std_luminance_quant_tbl
00000000006ed4e0 00000000000000a2 r val_ac_chrominance.0
00000000006ed590 00000000000000a2 r val_ac_luminance.4
00000000006ed638 000000000000000c r val_dc_chrominance.2
00000000006ed648 000000000000000c r val_dc_luminance.6
00000000006ed6e0 0000000000000044 r rgb_pixelsize
00000000006ed730 0000000000000020 r dither_matrix
00000000006ed750 0000000000000100 r base_dither_matrix
00000000006ed850 0000000000000044 r rgb_blue
00000000006ed8a0 0000000000000044 r rgb_green
00000000006ed8f0 0000000000000044 r rgb_red
00000000006ed938 000000000000000c r c_scales
00000000006ed950 0000000000000044 r rgb_blue
00000000006ed9a0 0000000000000044 r rgb_green
00000000006ed9f0 0000000000000044 r rgb_red
00000000006eda38 0000000000000140 R jpeg_natural_order
00000000006edb80 0000000000000010 r extra_pool_slop
00000000006edb90 0000000000000010 r first_pool_slop
00000000006edba0 0000000000000044 r rgb_blue
00000000006edbf0 0000000000000044 r rgb_green
00000000006edc40 0000000000000044 r rgb_pixelsize
00000000006edc90 0000000000000044 r rgb_red
00000000006edce0 0000000000000040 r aanscalefactor.0
00000000006edd20 0000000000000080 r aanscales.1
00000000006edda0 0000000000000020 r dither_matrix
00000000006eddc0 0000000000000044 r rgb_blue
00000000006ede10 0000000000000044 r rgb_green
00000000006ede60 0000000000000044 r rgb_pixelsize
00000000006edeb0 0000000000000044 r rgb_red
00000000006edf00 0000000000000040 r aanscalefactor.0
00000000006edf40 0000000000000011 r bits_ac_chrominance.1
00000000006edf60 0000000000000011 r bits_ac_luminance.5
00000000006edf80 0000000000000011 r bits_dc_chrominance.3
00000000006edfa0 0000000000000011 r bits_dc_luminance.7
00000000006edfc0 00000000000000a2 r val_ac_chrominance.0
00000000006ee070 00000000000000a2 r val_ac_luminance.4
00000000006ee118 000000000000000c r val_dc_chrominance.2
00000000006ee128 000000000000000c r val_dc_luminance.6
00000000006ee138 0000000000000390 R jpeg_aritab
00000000006ee4d0 0000000000000100 r jsimd_h2_downsample_consts
00000000006ee5d0 0000000000000008 r jsimd_ycc_rgb_convert_neon_consts
00000000006ee5e0 0000000000000008 r jsimd_fdct_ifast_neon_consts
00000000006ee5f0 0000000000000008 r jsimd_idct_2x2_neon_consts
00000000006ee600 0000000000000018 r jsimd_idct_4x4_neon_consts
00000000006ee620 0000000000000008 r jsimd_idct_ifast_neon_consts
00000000006ee630 r Ljsimd_idct_islow_neon_consts
00000000006ee650 r Ljsimd_ycc_rgb_neon_consts
00000000006ee670 r Ljsimd_rgb_ycc_neon_consts
00000000006ee690 r Ljsimd_fdct_islow_neon_consts
00000000006ee6b0 r Ljsimd_huff_encode_one_block_neon_consts
00000000006ee780 0000000000000024 r sRGB_XYZ.0
00000000006ee7a8 00000000000000e0 r png_sRGB_checks
00000000006ee888 0000000000000020 r sRGB_xy
00000000006ee8a8 000000000000000a r valid_parameters.0
00000000006ee8c0 0000000000000011 r digits.1
00000000006ee8e0 0000000000000010 r png_digit
00000000006ee8f0 0000000000000007 r png_pass_ystart.4
00000000006ee8f8 0000000000000007 r png_pass_yinc.5
00000000006ee900 0000000000000007 r png_pass_start.0
00000000006ee900 0000000000000007 r png_pass_start.6
00000000006ee908 0000000000000007 r png_pass_inc.1
00000000006ee908 0000000000000007 r png_pass_inc.7
00000000006ee910 000000000000001c r png_pass_inc.8
00000000006ee930 0000000000000090 r row_mask.9
00000000006ee9c0 0000000000000048 r display_mask.10
00000000006eea10 0000000000000100 r fourbppswaptable
00000000006eeb10 0000000000000100 r twobppswaptable
00000000006eec10 0000000000000100 r onebppswaptable
00000000006eed10 0000000000000007 r png_pass_ystart.2
00000000006eed18 0000000000000007 r png_pass_yinc.3
00000000006eed20 0000000000000007 r png_pass_start.1
00000000006eed20 0000000000000007 r png_pass_start.4
00000000006eed28 0000000000000007 r png_pass_inc.0
00000000006eed28 0000000000000007 r png_pass_inc.5
00000000006eed30 00000000000000b0 r ft_trig_arctan_table
00000000006eef10 0000000000000024 r gvar_fields.0
00000000006eef40 0000000000000020 r fvaraxis_fields.1
00000000006eef60 0000000000000024 r fvar_fields.2
00000000006eef88 00000000000005d0 r sfnt_id.3
00000000006ef560 0000000000000190 r trick_names.4
00000000006ef6f0 0000000000000100 r opcode_length
00000000006ef7f0 0000000000000100 r Pop_Push_Count
00000000006ef8f0 0000000000000060 R tt_default_graphics_state
00000000006ef950 0000000000000004 r tt_service_truetype_engine
00000000006ef9b0 0000000000000014 r cff_header_fields.0
00000000006ef9d0 0000000000000200 r cff_expert_encoding
00000000006efbd0 0000000000000200 r cff_standard_encoding
00000000006efdd0 00000000000000ae r cff_expertsubset_charset
00000000006efe80 000000000000014c r cff_expert_charset
00000000006effd0 00000000000001ca r cff_isoadobe_charset
00000000006f01a0 0000000000000050 r power_tens
00000000006f01f0 0000000000000074 r pfr_header_fields
00000000006f0270 0000000000000098 r winfnt_header_fields
00000000006f0310 0000000000000018 r winpe_rsrc_data_entry_fields
00000000006f0330 0000000000000010 r winpe_rsrc_dir_entry_fields
00000000006f0340 0000000000000020 r winpe_rsrc_dir_fields
00000000006f0360 0000000000000020 r winpe32_section_fields
00000000006f0380 0000000000000034 r winpe32_header_fields
00000000006f03c0 0000000000000018 r winne_header_fields
00000000006f03e0 0000000000000014 r winmz_header_fields
00000000006f0400 0000000000000034 r pcf_accel_msb_header
00000000006f0440 0000000000000034 r pcf_accel_header
00000000006f0480 000000000000001c r pcf_enc_msb_header
00000000006f04a0 000000000000001c r pcf_enc_header
00000000006f04c0 0000000000000014 r pcf_property_msb_header
00000000006f04e0 0000000000000014 r pcf_property_header
00000000006f0500 000000000000001c r pcf_compressed_metric_header
00000000006f0520 0000000000000020 r pcf_metric_msb_header
00000000006f0540 0000000000000020 r pcf_metric_header
00000000006f0560 0000000000000018 r pcf_table_header
00000000006f0580 0000000000000010 r pcf_toc_header
00000000006f0590 0000000000000008 r nibble_mask
00000000006f05a0 0000000000000020 r hdigits
00000000006f05c0 0000000000000020 r ddigits
00000000006f05e0 0000000000000080 r a2i
00000000006f0660 0000000000000001 r empty
00000000006f0690 000000000000003c r woff_header_fields.0
00000000006f06d0 0000000000000010 r ttc_header_fields.1
00000000006f06e0 0000000000000084 r tt_encodings.2
00000000006f0770 000000000000004c r metrics_header_fields.3
00000000006f07c0 000000000000003c r maxp_fields_extra.4
00000000006f0800 0000000000000010 r maxp_fields.5
00000000006f0810 0000000000000010 r os2_fields_extra5.6
00000000006f0820 000000000000001c r os2_fields_extra2.7
00000000006f0840 0000000000000010 r os2_fields_extra1.8
00000000006f0850 00000000000000b0 r os2_fields.9
00000000006f0900 000000000000002c r post_fields.10
00000000006f0930 000000000000001c r name_record_fields.11
00000000006f0950 000000000000000c r langTag_record_fields.12
00000000006f0960 0000000000000014 r name_table_fields.13
00000000006f0980 0000000000000044 r pclt_fields.14
00000000006f09d0 0000000000000054 r header_fields.15
00000000006f0a30 0000000000000018 r table_dir_entry_fields.16
00000000006f0a50 0000000000000018 r offset_table_fields.17
00000000006f0a70 0000000000000010 r hexdigits
00000000006f0a80 0000000000000010 r sfnt_ps_map
00000000006f0a90 0000000000000018 R af_hani_nonbase_uniranges
00000000006f0ab0 0000000000000110 R af_hani_uniranges
00000000006f0bc0 0000000000000050 R af_tibt_nonbase_uniranges
00000000006f0c10 0000000000000010 R af_tibt_uniranges
00000000006f0c20 0000000000000028 R af_sylo_nonbase_uniranges
00000000006f0c50 0000000000000010 R af_sylo_uniranges
00000000006f0c60 0000000000000038 R af_orya_nonbase_uniranges
00000000006f0ca0 0000000000000010 R af_orya_uniranges
00000000006f0cb0 0000000000000020 R af_limb_nonbase_uniranges
00000000006f0cd0 0000000000000010 R af_limb_uniranges
00000000006f0ce0 0000000000000008 R af_vaii_nonbase_uniranges
00000000006f0cf0 0000000000000010 R af_vaii_uniranges
00000000006f0d00 0000000000000008 R af_tfng_nonbase_uniranges
00000000006f0d10 0000000000000010 R af_tfng_uniranges
00000000006f0d20 0000000000000020 R af_thai_nonbase_uniranges
00000000006f0d40 0000000000000010 R af_thai_uniranges
00000000006f0d50 0000000000000030 R af_telu_nonbase_uniranges
00000000006f0d80 0000000000000010 R af_telu_uniranges
00000000006f0d90 0000000000000030 R af_tavt_nonbase_uniranges
00000000006f0dc0 0000000000000010 R af_tavt_uniranges
00000000006f0dd0 0000000000000020 R af_taml_nonbase_uniranges
00000000006f0df0 0000000000000010 R af_taml_uniranges
00000000006f0e00 0000000000000018 R af_sund_nonbase_uniranges
00000000006f0e20 0000000000000018 R af_sund_uniranges
00000000006f0e40 0000000000000018 R af_sinh_nonbase_uniranges
00000000006f0e60 0000000000000010 R af_sinh_uniranges
00000000006f0e70 0000000000000008 R af_shaw_nonbase_uniranges
00000000006f0e80 0000000000000010 R af_shaw_uniranges
00000000006f0e90 0000000000000018 R af_saur_nonbase_uniranges
00000000006f0eb0 0000000000000010 R af_saur_uniranges
00000000006f0ec0 0000000000000008 R af_rohg_nonbase_uniranges
00000000006f0ed0 0000000000000010 R af_rohg_uniranges
00000000006f0ee0 0000000000000008 R af_osma_nonbase_uniranges
00000000006f0ef0 0000000000000010 R af_osma_uniranges
00000000006f0f00 0000000000000008 R af_osge_nonbase_uniranges
00000000006f0f10 0000000000000010 R af_osge_uniranges
00000000006f0f20 0000000000000008 R af_orkh_nonbase_uniranges
00000000006f0f30 0000000000000010 R af_orkh_uniranges
00000000006f0f40 0000000000000008 R af_olck_nonbase_uniranges
00000000006f0f50 0000000000000010 R af_olck_uniranges
00000000006f0f60 0000000000000008 R af_none_nonbase_uniranges
00000000006f0f68 0000000000000008 R af_none_uniranges
00000000006f0f70 0000000000000018 R af_nkoo_nonbase_uniranges
00000000006f0f90 0000000000000010 R af_nkoo_uniranges
00000000006f0fa0 0000000000000068 R af_mymr_nonbase_uniranges
00000000006f1010 0000000000000020 R af_mymr_uniranges
00000000006f1030 0000000000000018 R af_mong_nonbase_uniranges
00000000006f1050 0000000000000018 R af_mong_uniranges
00000000006f1068 0000000000000008 R af_medf_nonbase_uniranges
00000000006f1070 0000000000000010 R af_medf_uniranges
00000000006f1080 0000000000000028 R af_mlym_nonbase_uniranges
00000000006f10b0 0000000000000010 R af_mlym_uniranges
00000000006f10c0 0000000000000008 R af_lisu_nonbase_uniranges
00000000006f10d0 0000000000000010 R af_lisu_uniranges
00000000006f10e0 0000000000000008 R af_latp_nonbase_uniranges
00000000006f10f0 0000000000000070 R af_latp_uniranges
00000000006f1160 0000000000000008 R af_latb_nonbase_uniranges
00000000006f1170 0000000000000020 R af_latb_uniranges
00000000006f1190 0000000000000088 R af_latn_nonbase_uniranges
00000000006f1220 0000000000000108 R af_latn_uniranges
00000000006f1330 0000000000000020 R af_lao_nonbase_uniranges
00000000006f1350 0000000000000010 R af_lao_uniranges
00000000006f1360 0000000000000008 R af_khms_nonbase_uniranges
00000000006f1370 0000000000000010 R af_khms_uniranges
00000000006f1380 0000000000000028 R af_khmr_nonbase_uniranges
00000000006f13b0 0000000000000010 R af_khmr_uniranges
00000000006f13c0 0000000000000038 R af_knda_nonbase_uniranges
00000000006f1400 0000000000000010 R af_knda_uniranges
00000000006f1410 0000000000000010 R af_kali_nonbase_uniranges
00000000006f1420 0000000000000010 R af_kali_uniranges
00000000006f1430 0000000000000030 R af_hebr_nonbase_uniranges
00000000006f1460 0000000000000018 R af_hebr_uniranges
00000000006f1480 0000000000000030 R af_guru_nonbase_uniranges
00000000006f14b0 0000000000000010 R af_guru_uniranges
00000000006f14c0 0000000000000038 R af_gujr_nonbase_uniranges
00000000006f1500 0000000000000010 R af_gujr_uniranges
00000000006f1510 0000000000000040 R af_grek_nonbase_uniranges
00000000006f1550 0000000000000018 R af_grek_uniranges
00000000006f1568 0000000000000008 R af_goth_nonbase_uniranges
00000000006f1570 0000000000000010 R af_goth_uniranges
00000000006f1580 0000000000000010 R af_glag_nonbase_uniranges
00000000006f1590 0000000000000018 R af_glag_uniranges
00000000006f15a8 0000000000000008 R af_geok_nonbase_uniranges
00000000006f15b0 0000000000000018 R af_geok_uniranges
00000000006f15c8 0000000000000008 R af_geor_nonbase_uniranges
00000000006f15d0 0000000000000018 R af_geor_uniranges
00000000006f15f0 0000000000000010 R af_ethi_nonbase_uniranges
00000000006f1600 0000000000000028 R af_ethi_uniranges
00000000006f1628 0000000000000008 R af_dsrt_nonbase_uniranges
00000000006f1630 0000000000000010 R af_dsrt_uniranges
00000000006f1640 0000000000000048 R af_deva_nonbase_uniranges
00000000006f1690 0000000000000038 R af_deva_uniranges
00000000006f16d0 0000000000000028 R af_cyrl_nonbase_uniranges
00000000006f1700 0000000000000030 R af_cyrl_uniranges
00000000006f1730 0000000000000008 R af_cprt_nonbase_uniranges
00000000006f1740 0000000000000010 R af_cprt_uniranges
00000000006f1750 0000000000000010 R af_copt_nonbase_uniranges
00000000006f1760 0000000000000010 R af_copt_uniranges
00000000006f1770 0000000000000008 R af_cher_nonbase_uniranges
00000000006f1780 0000000000000018 R af_cher_uniranges
00000000006f1798 0000000000000008 R af_cari_nonbase_uniranges
00000000006f17a0 0000000000000010 R af_cari_uniranges
00000000006f17b0 0000000000000008 R af_cans_nonbase_uniranges
00000000006f17c0 0000000000000018 R af_cans_uniranges
00000000006f17e0 0000000000000020 R af_cakm_nonbase_uniranges
00000000006f1800 0000000000000010 R af_cakm_uniranges
00000000006f1810 0000000000000010 R af_buhd_nonbase_uniranges
00000000006f1820 0000000000000010 R af_buhd_uniranges
00000000006f1830 0000000000000038 R af_beng_nonbase_uniranges
00000000006f1870 0000000000000010 R af_beng_uniranges
00000000006f1880 0000000000000010 R af_bamu_nonbase_uniranges
00000000006f1890 0000000000000010 R af_bamu_uniranges
00000000006f18a0 0000000000000010 R af_avst_nonbase_uniranges
00000000006f18b0 0000000000000010 R af_avst_uniranges
00000000006f18c0 0000000000000010 R af_armn_nonbase_uniranges
00000000006f18d0 0000000000000018 R af_armn_uniranges
00000000006f18f0 00000000000000a0 R af_arab_nonbase_uniranges
00000000006f1990 0000000000000038 R af_arab_uniranges
00000000006f19d0 0000000000000010 R af_adlm_nonbase_uniranges
00000000006f19e0 0000000000000010 R af_adlm_uniranges
00000000006f19f0 0000000000000014 R af_hani_dflt_style_class
00000000006f1a08 0000000000000014 R af_tibt_dflt_style_class
00000000006f1a20 0000000000000014 R af_sylo_dflt_style_class
00000000006f1a38 0000000000000014 R af_orya_dflt_style_class
00000000006f1a50 0000000000000014 R af_limb_dflt_style_class
00000000006f1a68 0000000000000014 R af_vaii_dflt_style_class
00000000006f1a80 0000000000000014 R af_thai_dflt_style_class
00000000006f1a98 0000000000000014 R af_tfng_dflt_style_class
00000000006f1ab0 0000000000000014 R af_telu_dflt_style_class
00000000006f1ac8 0000000000000014 R af_tavt_dflt_style_class
00000000006f1ae0 0000000000000014 R af_taml_dflt_style_class
00000000006f1af8 0000000000000014 R af_sund_dflt_style_class
00000000006f1b10 0000000000000014 R af_sinh_dflt_style_class
00000000006f1b28 0000000000000014 R af_shaw_dflt_style_class
00000000006f1b40 0000000000000014 R af_saur_dflt_style_class
00000000006f1b58 0000000000000014 R af_rohg_dflt_style_class
00000000006f1b70 0000000000000014 R af_osma_dflt_style_class
00000000006f1b88 0000000000000014 R af_osge_dflt_style_class
00000000006f1ba0 0000000000000014 R af_orkh_dflt_style_class
00000000006f1bb8 0000000000000014 R af_olck_dflt_style_class
00000000006f1bd0 0000000000000014 R af_none_dflt_style_class
00000000006f1be8 0000000000000014 R af_nkoo_dflt_style_class
00000000006f1c00 0000000000000014 R af_mymr_dflt_style_class
00000000006f1c18 0000000000000014 R af_mong_dflt_style_class
00000000006f1c30 0000000000000014 R af_medf_dflt_style_class
00000000006f1c48 0000000000000014 R af_mlym_dflt_style_class
00000000006f1c60 0000000000000014 R af_lisu_dflt_style_class
00000000006f1c78 0000000000000014 R af_latp_dflt_style_class
00000000006f1c90 0000000000000014 R af_latb_dflt_style_class
00000000006f1ca8 0000000000000014 R af_latn_dflt_style_class
00000000006f1cc0 0000000000000014 R af_latn_titl_style_class
00000000006f1cd8 0000000000000014 R af_latn_sups_style_class
00000000006f1cf0 0000000000000014 R af_latn_subs_style_class
00000000006f1d08 0000000000000014 R af_latn_smcp_style_class
00000000006f1d20 0000000000000014 R af_latn_sinf_style_class
00000000006f1d38 0000000000000014 R af_latn_pcap_style_class
00000000006f1d50 0000000000000014 R af_latn_ordn_style_class
00000000006f1d68 0000000000000014 R af_latn_c2sc_style_class
00000000006f1d80 0000000000000014 R af_latn_c2cp_style_class
00000000006f1d98 0000000000000014 R af_lao_dflt_style_class
00000000006f1db0 0000000000000014 R af_knda_dflt_style_class
00000000006f1dc8 0000000000000014 R af_khms_dflt_style_class
00000000006f1de0 0000000000000014 R af_khmr_dflt_style_class
00000000006f1df8 0000000000000014 R af_kali_dflt_style_class
00000000006f1e10 0000000000000014 R af_hebr_dflt_style_class
00000000006f1e28 0000000000000014 R af_guru_dflt_style_class
00000000006f1e40 0000000000000014 R af_gujr_dflt_style_class
00000000006f1e58 0000000000000014 R af_grek_dflt_style_class
00000000006f1e70 0000000000000014 R af_grek_titl_style_class
00000000006f1e88 0000000000000014 R af_grek_sups_style_class
00000000006f1ea0 0000000000000014 R af_grek_subs_style_class
00000000006f1eb8 0000000000000014 R af_grek_smcp_style_class
00000000006f1ed0 0000000000000014 R af_grek_sinf_style_class
00000000006f1ee8 0000000000000014 R af_grek_pcap_style_class
00000000006f1f00 0000000000000014 R af_grek_ordn_style_class
00000000006f1f18 0000000000000014 R af_grek_c2sc_style_class
00000000006f1f30 0000000000000014 R af_grek_c2cp_style_class
00000000006f1f48 0000000000000014 R af_goth_dflt_style_class
00000000006f1f60 0000000000000014 R af_glag_dflt_style_class
00000000006f1f78 0000000000000014 R af_geok_dflt_style_class
00000000006f1f90 0000000000000014 R af_geor_dflt_style_class
00000000006f1fa8 0000000000000014 R af_ethi_dflt_style_class
00000000006f1fc0 0000000000000014 R af_dsrt_dflt_style_class
00000000006f1fd8 0000000000000014 R af_deva_dflt_style_class
00000000006f1ff0 0000000000000014 R af_cyrl_dflt_style_class
00000000006f2008 0000000000000014 R af_cyrl_titl_style_class
00000000006f2020 0000000000000014 R af_cyrl_sups_style_class
00000000006f2038 0000000000000014 R af_cyrl_subs_style_class
00000000006f2050 0000000000000014 R af_cyrl_smcp_style_class
00000000006f2068 0000000000000014 R af_cyrl_sinf_style_class
00000000006f2080 0000000000000014 R af_cyrl_pcap_style_class
00000000006f2098 0000000000000014 R af_cyrl_ordn_style_class
00000000006f20b0 0000000000000014 R af_cyrl_c2sc_style_class
00000000006f20c8 0000000000000014 R af_cyrl_c2cp_style_class
00000000006f20e0 0000000000000014 R af_cprt_dflt_style_class
00000000006f20f8 0000000000000014 R af_copt_dflt_style_class
00000000006f2110 0000000000000014 R af_cher_dflt_style_class
00000000006f2128 0000000000000014 R af_cari_dflt_style_class
00000000006f2140 0000000000000014 R af_cans_dflt_style_class
00000000006f2158 0000000000000014 R af_cakm_dflt_style_class
00000000006f2170 0000000000000014 R af_buhd_dflt_style_class
00000000006f2188 0000000000000014 R af_beng_dflt_style_class
00000000006f21a0 0000000000000014 R af_bamu_dflt_style_class
00000000006f21b8 0000000000000014 R af_avst_dflt_style_class
00000000006f21d0 0000000000000014 R af_armn_dflt_style_class
00000000006f21e8 0000000000000014 R af_arab_dflt_style_class
00000000006f2200 0000000000000014 R af_adlm_dflt_style_class
00000000006f2220 0000000000000848 R af_blue_stringsets
00000000006f2a70 000000000000159b R af_blue_strings
00000000006f4130 000000000000000c r readFromStack.0
00000000006f4140 000000000000000c r readFromStack.1
00000000006f4150 000000000000000c r readFromStack.2
00000000006f4160 000000000000000c r readFromStack.3
00000000006f4170 0000000000000080 r ft_char_table
00000000006f41f0 0000000000000028 r ft_extra_glyph_name_offsets
00000000006f4220 0000000000000055 r ft_extra_glyph_names
00000000006f4280 0000000000000028 r ft_extra_glyph_unicodes
00000000006f42b0 000000000000dabd R ft_adobe_glyph_list
0000000000701d70 0000000000000200 R t1_expert_encoding
0000000000701f70 0000000000000200 R t1_standard_encoding
0000000000702170 000000000000030e R ft_sid_names
0000000000702480 0000000000000204 R ft_mac_names
0000000000702690 0000000000000e70 R ft_standard_glyph_names
0000000000703550 0000000000000400 r crc_table
0000000000703950 0000000000000080 r x2n_table
00000000007039d0 0000000000002000 r crc_braid_table
0000000000705a10 0000000000000800 r lenfix.1
0000000000706210 0000000000000080 r distfix.0
0000000000706290 0000000000000026 r order.2
00000000007062c0 0000000000000040 r dbase.1
0000000000706300 0000000000000040 r dext.0
0000000000706340 000000000000003e r lext.2
0000000000706380 000000000000003e r lbase.3
00000000007063c0 000000000000002d R inflate_copyright
00000000007063f0 0000000000000100 R _length_code
00000000007064f0 0000000000000074 r extra_lbits
0000000000706570 0000000000000074 r base_length
00000000007065f0 0000000000000200 R _dist_code
00000000007067f0 0000000000000078 r extra_dbits
0000000000706870 0000000000000078 r base_dist
00000000007068f0 0000000000000013 r bl_order
0000000000706910 0000000000000078 r static_dtree
0000000000706990 0000000000000480 r static_ltree
0000000000706e10 000000000000004c r extra_blbits
0000000000706e60 0000000000000800 r vwin1024
0000000000707660 0000000000000100 r vwin128
0000000000707760 0000000000001000 r vwin2048
0000000000708760 0000000000000200 r vwin256
0000000000708960 0000000000002000 r vwin4096
000000000070a960 0000000000000400 r vwin512
000000000070ad60 0000000000000080 r vwin64
000000000070ade0 0000000000004000 r vwin8192
000000000070ede0 0000000000000400 r FLOOR_fromdB_LOOKUP
000000000070f1e0 0000000000000010 r ADJUST_SQRT2
000000000070f1f0 0000000000000204 r COS_LOOKUP_I
000000000070f3f8 0000000000000080 r FROMdB2_LOOKUP
000000000070f478 000000000000008c r FROMdB_LOOKUP
000000000070f508 0000000000000208 r INVSQ_LOOKUP_I
000000000070f710 0000000000000200 r INVSQ_LOOKUP_IDel
000000000070f910 0000000000000040 r MLOOP_1
000000000070f950 0000000000000040 r MLOOP_2
000000000070f990 0000000000000008 r MLOOP_3
000000000070f998 0000000000000070 r barklook
000000000070fa08 0000000000000010 r bitrev
000000000070fa18 0000000000001008 r sincos_lookup0
0000000000710a20 0000000000001000 r sincos_lookup1
0000000000711a20 0000000000002000 r crc_lookup
0000000000713a20 0000000000000108 r mask
0000000000713b28 0000000000000010 r __func__.0
0000000000713b38 0000000000000010 r __func__.1
0000000000713b48 000000000000001b r __func__.2
0000000000713b70 0000000000000030 r my_encodings
0000000000713ba0 0000000000000048 r my_rates
0000000000713be8 0000000000000015 r __func__.0
0000000000713c00 000000000000001b r __func__.0
0000000000713c20 0000000000000008 r __func__.1
0000000000713c28 000000000000000d r __func__.2
0000000000713c38 000000000000000e r __func__.3
0000000000713c48 0000000000000008 r __func__.4
0000000000713c50 000000000000001b r __func__.5
0000000000713c70 000000000000000e r __func__.6
0000000000713c80 000000000000000a r __func__.7
0000000000713c90 0000000000000048 r freqs
0000000000713ce0 0000000000000180 r tabsel_123
0000000000713e60 000000000000000e r __func__.0
0000000000713e70 000000000000001c r __func__.1
0000000000713e90 0000000000000014 r __func__.2
0000000000713ea8 000000000000001f r __func__.3
0000000000713ec8 0000000000000012 r __func__.4
0000000000713ee0 0000000000000016 r __func__.5
0000000000713ef8 0000000000000019 r __func__.6
0000000000713f18 0000000000000017 r __func__.7
0000000000713f30 0000000000000010 r __func__.0
0000000000713f40 000000000000000d r __func__.1
0000000000713f50 000000000000000e r __func__.2
0000000000713f60 000000000000000f r __func__.3
0000000000713f70 0000000000000010 r __func__.4
0000000000713f80 0000000000000015 r __func__.5
0000000000713f98 000000000000000c r __func__.6
0000000000713fa8 0000000000000011 r __func__.7
0000000000713fc0 0000000000000013 r __func__.8
0000000000713fe0 0000000000000010 r encoding_widths
0000000000713ff0 0000000000000019 r frame_type
0000000000714010 0000000000000015 r __func__.0
0000000000714028 000000000000000d r __func__.1
0000000000714038 000000000000001b r __func__.2
0000000000714058 0000000000000006 r dn_nodec
0000000000714060 000000000000000c r dn_sse_vintage
0000000000714070 0000000000000011 r dn_dreidnowext_vintage
0000000000714088 000000000000000e r dn_dreidnow_vintage
0000000000714098 0000000000000004 r dn_avx
00000000007140a0 0000000000000007 r dn_neon64
00000000007140a8 0000000000000005 r dn_neon
00000000007140b0 0000000000000004 r dn_arm
00000000007140b8 0000000000000007 r dn_x86_64
00000000007140c0 0000000000000004 r dn_sse
00000000007140c8 0000000000000008 r dn_altivec
00000000007140d0 0000000000000009 r dn_dreidnowext
00000000007140e0 0000000000000006 r dn_dreidnow
00000000007140e8 0000000000000004 r dn_mmx
00000000007140f0 000000000000000c r dn_ifuenf_dither
0000000000714100 0000000000000005 r dn_ifuenf
0000000000714108 0000000000000005 r dn_ivier
0000000000714110 0000000000000005 r dn_idrei
0000000000714118 000000000000000f r dn_generic_dither
0000000000714128 0000000000000008 r dn_generic
0000000000714130 0000000000000005 r dn_autodec
0000000000714138 000000000000000d r __func__.1
0000000000714148 000000000000000d r __func__.2
0000000000714158 0000000000000012 r __func__.3
0000000000714170 0000000000000011 r __func__.5
0000000000714188 000000000000001c r __func__.0
00000000007141b0 0000000000000808 r intwinbase
00000000007149b8 0000000000000004 r cos4
00000000007149c0 0000000000000008 r cos8
00000000007149d0 0000000000000010 r cos16
00000000007149e0 0000000000000020 r cos32
0000000000714a00 0000000000000040 r cos64
0000000000714a40 0000000000000008 r __func__.0
0000000000714a48 000000000000000b r __func__.1
0000000000714a58 000000000000000d r __func__.2
0000000000714a68 000000000000000b r __func__.3
0000000000714a78 0000000000000011 r __func__.4
0000000000714a90 0000000000000008 r __func__.0
0000000000714a98 000000000000000c r __func__.1
0000000000714aa8 0000000000000011 r __func__.2
0000000000714ac0 0000000000000c00 r grp_9tab
00000000007156c0 0000000000000180 r grp_5tab
0000000000715840 0000000000000060 r grp_3tab
00000000007158a0 0000000000001b00 r layer12_table
00000000007173a0 0000000000000310 r alloc_4
00000000007176b0 00000000000001c0 r alloc_3
0000000000717870 0000000000000140 r alloc_2
00000000007179b0 00000000000004b0 r alloc_1
0000000000717e60 0000000000000480 r alloc_0
0000000000718478 0000000000000016 r __func__.0
0000000000718490 0000000000000008 r __func__.1
0000000000718498 0000000000000012 r __func__.2
00000000007184b0 0000000000000011 r __func__.3
00000000007184c8 00000000000003de r bandInfo
00000000007188b0 0000000000000200 r i_slen2
0000000000718ab0 0000000000000400 r n_slen2
0000000000718eb0 0000000000000318 r mapbuf2
00000000007191d0 0000000000000af8 r mapbuf1
0000000000719cd0 0000000000000ab0 r mapbuf0
000000000071a780 0000000000000100 r pow2_2
000000000071a880 0000000000000100 r pow1_2
000000000071a980 0000000000000100 r pow2_1
000000000071aa80 0000000000000100 r pow1_1
000000000071ab80 0000000000000040 r tan2_2
000000000071abc0 0000000000000040 r tan1_2
000000000071ac00 0000000000000040 r tan2_1
000000000071ac40 0000000000000040 r tan1_1
000000000071ac80 0000000000000240 r win1
000000000071aec0 0000000000000240 r win
000000000071b100 000000000000803c r ispow
0000000000723140 000000000000003e r tab_c1
0000000000723180 000000000000003e r tab_c0
00000000007231c0 0000000000000800 r tab24_
00000000007239c0 0000000000000820 r tab16_
00000000007241e0 00000000000007e0 r tab15_
00000000007249c0 00000000000007e0 r tab13_
00000000007251a0 00000000000001e0 r tab12_
0000000000725380 00000000000001e0 r tab11_
0000000000725560 0000000000000220 r tab10_
0000000000725780 0000000000000100 r tab9_
0000000000725880 0000000000000100 r tab8_
0000000000725980 0000000000000120 r tab7_
0000000000725aa0 0000000000000080 r tab6_
0000000000725b20 0000000000000060 r tab5_
0000000000725b80 0000000000000060 r tab3_
0000000000725be0 0000000000000060 r tab2_
0000000000725c40 0000000000000020 r tab1_
0000000000725c60 0000000000000020 r tab0_
0000000000725d10 0000000000000040 r PreAmpTable
0000000000725d50 0000000000000080 r ModSinusTable
0000000000725dd0 0000000000000080 r ModRandomTable
0000000000725e50 0000000000000080 r ModSquareTable
0000000000725ed0 0000000000000040 r PreAmpAGCTable
0000000000725f10 0000000000000100 r ft2VibratoTable
0000000000726010 0000000000000080 r ModRampDownTable
0000000000726090 0000000000000400 r LinearSlideUpTable
0000000000726490 0000000000000400 r LinearSlideDownTable
0000000000726890 0000000000000040 r FineLinearSlideUpTable
00000000007268d0 0000000000000040 r FineLinearSlideDownTable
0000000000726950 0000000000000020 r FreqS3MTable
0000000000726970 0000000000000010 r retrigTable1
0000000000726980 0000000000000010 r retrigTable2
0000000000726990 0000000000000c00 r XMLinearTable
0000000000727590 00000000000000d0 r XMPeriodTable
0000000000727660 0000000000000020 r S3MFineTuneTable
0000000000727680 0000000000000400 r LinearSlideUpTable
0000000000727a80 0000000000000400 r LinearSlideDownTable
0000000000727e80 0000000000000090 r ProTrackerPeriodTable
0000000000727f10 0000000000000040 r FineLinearSlideUpTable
0000000000727f50 0000000000000180 r ProTrackerTunedPeriods
00000000007280d0 0000000000000040 r FineLinearSlideDownTable
0000000000728110 0000000000000010 r ImpulseTrackerPortaVolCmd
0000000000728128 0000000000000020 r MMCMP8BitFetch
0000000000728148 0000000000000040 r MMCMP16BitFetch
0000000000728188 0000000000000020 r MMCMP8BitCommands
00000000007281a8 0000000000000040 r MMCMP16BitCommands
0000000000728258 000000000000003c r CSWTCH.23
0000000000728298 000000000000003c r CSWTCH.24
00000000007282d8 000000000000000a r bpmvals
0000000000728350 0000000000000010 r abc_setup_chordnames()::list_7sus4
0000000000728360 0000000000000010 r abc_setup_chordnames()::list_7sus9
0000000000728370 0000000000000014 r abc_setup_chordnames()::list_9sus4
0000000000728388 0000000000000008 r abc_setup_chordnames()::list_5
0000000000728390 0000000000000010 r abc_setup_chordnames()::list_6
00000000007283a0 0000000000000010 r abc_setup_chordnames()::list_7
00000000007283b0 0000000000000014 r abc_setup_chordnames()::list_9
00000000007283c8 000000000000000c r abc_setup_chordnames()::list_m
00000000007283d8 0000000000000018 r abc_setup_chordnames()::list_11
00000000007283f0 0000000000000018 r abc_setup_chordnames()::list_13
0000000000728408 0000000000000010 r abc_setup_chordnames()::list_M7
0000000000728418 0000000000000014 r abc_setup_chordnames()::list_M9
0000000000728430 0000000000000010 r abc_setup_chordnames()::list_m6
0000000000728440 0000000000000010 r abc_setup_chordnames()::list_m7
0000000000728450 0000000000000014 r abc_setup_chordnames()::list_m9
0000000000728468 000000000000000c r abc_setup_chordnames()::list_Maj
0000000000728478 000000000000000c r abc_setup_chordnames()::list_aug
0000000000728488 000000000000000c r abc_setup_chordnames()::list_dim
0000000000728498 000000000000000c r abc_setup_chordnames()::list_sus
00000000007284a8 0000000000000010 r abc_setup_chordnames()::list_7sus
00000000007284b8 0000000000000010 r abc_setup_chordnames()::list_aug7
00000000007284c8 0000000000000010 r abc_setup_chordnames()::list_dim7
00000000007284d8 0000000000000014 r abc_setup_chordnames()::list_dim9
00000000007284f0 0000000000000010 r abc_setup_chordnames()::list_maj7
0000000000728500 0000000000000014 r abc_setup_chordnames()::list_maj9
0000000000728518 000000000000000c r abc_setup_chordnames()::list_plus
0000000000728528 000000000000000c r abc_setup_chordnames()::list_sus9
0000000000729938 0000000000000027 r CSWTCH.60
0000000000729960 0000000000000041 r tune
00000000007299a8 000000000000000d r kModeBpp
00000000007299b8 0000000000000003 r kFilterExtraRows
00000000007299c0 000000000000000c r kQuantToDitherAmp
00000000007299d0 0000000000000020 r kScan
00000000007299f0 0000000000000030 r CSWTCH.31
0000000000729a20 0000000000000004 r kCat3
0000000000729a28 0000000000000005 r kCat4
0000000000729a30 0000000000000006 r kCat5
0000000000729a38 000000000000000c r kCat6
0000000000729a48 0000000000000010 r kZigzag
0000000000729a58 000000000000000a r kAlphabetSize
0000000000729a68 0000000000000013 r kCodeLengthCodeOrder
0000000000729a80 0000000000000003 r kCodeLengthExtraBits
0000000000729a88 0000000000000003 r kCodeLengthRepeatOffsets
0000000000729a90 0000000000000078 r kCodeToPlane
0000000000729b08 0000000000000005 r kLiteralMap
0000000000729b10 0000000000000018 r kTableSize
0000000000729ba0 0000000000000008 r k0g0g.0
0000000000729ba8 0000000000000008 r kGreenShuffle
0000000000729bb0 0000000000000008 r kCoeffs1
0000000000729bb8 0000000000000064 r kBitMask
0000000000729c20 0000000000000080 R kVP8Log2Range
0000000000729ca0 0000000000000080 R kVP8NewRange
0000000000729d20 00000000000000dc r kRandomTable
0000000000729e00 0000000000000100 r kAcTable
0000000000729f00 0000000000000080 r kDcTable
0000000000729f80 0000000000000420 r CoeffsProba0
000000000072a3a0 0000000000000420 r CoeffsUpdateProba
000000000072a7c0 0000000000000384 r kBModesProba
000000000072ab48 0000000000000011 r kBands
000000000072ab60 0000000000000018 r __func__.0
000000000072ab78 0000000000000015 r __func__.1
000000000072ab90 0000000000000013 r __func__.10
000000000072aba8 0000000000000012 r __func__.11
000000000072abc0 000000000000001b r __func__.12
000000000072abe0 0000000000000019 r __func__.13
000000000072ac00 000000000000001e r __func__.14
000000000072ac20 0000000000000016 r __func__.15
000000000072ac38 000000000000001a r __func__.16
000000000072ac58 0000000000000018 r __func__.17
000000000072ac70 0000000000000019 r __func__.18
000000000072ac90 0000000000000014 r __func__.19
000000000072aca8 0000000000000016 r __func__.2
000000000072acc0 0000000000000019 r __func__.20
000000000072ace0 0000000000000012 r __func__.21
000000000072acf8 0000000000000013 r __func__.22
000000000072ad10 0000000000000011 r __func__.23
000000000072ad28 0000000000000018 r __func__.24
000000000072ad40 0000000000000018 r __func__.25
000000000072ad58 0000000000000013 r __func__.26
000000000072ad70 0000000000000019 r __func__.27
000000000072ad90 0000000000000019 r __func__.28
000000000072adb0 000000000000001b r __func__.29
000000000072add0 0000000000000012 r __func__.3
000000000072ade8 0000000000000018 r __func__.30
000000000072ae00 000000000000001c r __func__.31
000000000072ae20 0000000000000016 r __func__.32
000000000072ae38 0000000000000011 r __func__.33
000000000072ae50 0000000000000018 r __func__.34
000000000072ae68 000000000000001c r __func__.35
000000000072ae88 0000000000000020 r __func__.36
000000000072aea8 000000000000001c r __func__.37
000000000072aec8 000000000000001a r __func__.38
000000000072aee8 000000000000000f r __func__.39
000000000072aef8 0000000000000022 r __func__.4
000000000072af20 0000000000000012 r __func__.41
000000000072af38 0000000000000018 r __func__.42
000000000072af50 0000000000000011 r __func__.43
000000000072af68 0000000000000013 r __func__.44
000000000072af80 000000000000000c r __func__.45
000000000072af90 0000000000000019 r __func__.46
000000000072afb0 0000000000000012 r __func__.47
000000000072afc8 0000000000000010 r __func__.48
000000000072afd8 000000000000000f r __func__.49
000000000072afe8 0000000000000022 r __func__.5
000000000072b010 000000000000000f r __func__.50
000000000072b020 000000000000000e r __func__.51
000000000072b030 0000000000000017 r __func__.52
000000000072b048 0000000000000010 r __func__.53
000000000072b058 0000000000000016 r __func__.54
000000000072b070 000000000000000f r __func__.55
000000000072b080 0000000000000011 r __func__.56
000000000072b098 0000000000000021 r __func__.57
000000000072b0c0 000000000000000c r __func__.58
000000000072b0d0 000000000000000b r __func__.59
000000000072b0e0 0000000000000013 r __func__.6
000000000072b0f8 0000000000000015 r __func__.60
000000000072b110 0000000000000015 r __func__.61
000000000072b128 0000000000000015 r __func__.62
000000000072b140 000000000000000e r __func__.63
000000000072b150 000000000000000a r __func__.64
000000000072b160 0000000000000015 r __func__.65
000000000072b178 000000000000000e r __func__.66
000000000072b188 000000000000000f r __func__.67
000000000072b198 000000000000000f r __func__.68
000000000072b1a8 0000000000000010 r __func__.69
000000000072b1b8 0000000000000011 r __func__.7
000000000072b1d0 0000000000000013 r __func__.70
000000000072b1e8 0000000000000010 r __func__.71
000000000072b1f8 0000000000000011 r __func__.72
000000000072b210 0000000000000010 r __func__.73
000000000072b220 0000000000000012 r __func__.74
000000000072b238 0000000000000018 r __func__.75
000000000072b250 000000000000001f r __func__.76
000000000072b270 000000000000001e r __func__.77
000000000072b290 0000000000000017 r __func__.78
000000000072b2a8 000000000000001f r __func__.79
000000000072b2c8 0000000000000022 r __func__.8
000000000072b2f0 000000000000001e r __func__.80
000000000072b310 0000000000000017 r __func__.81
000000000072b328 0000000000000010 r __func__.82
000000000072b338 000000000000000f r __func__.83
000000000072b348 0000000000000012 r __func__.84
000000000072b360 0000000000000011 r __func__.85
000000000072b378 0000000000000013 r __func__.86
000000000072b390 0000000000000010 r __func__.87
000000000072b3a0 000000000000000e r __func__.88
000000000072b3b0 000000000000000f r __func__.89
000000000072b3c0 000000000000001a r __func__.9
000000000072b3e0 000000000000000d r __func__.90
000000000072b3f0 000000000000000e r __func__.91
000000000072b400 000000000000001d r __func__.92
000000000072b420 0000000000000016 r __func__.93
000000000072b438 000000000000000e r __func__.94
000000000072b520 0000000000000250 r _eglValidationTable
000000000072b770 000000000000000c r CSWTCH.4
000000000072b7e8 000000000000001c r depthfmts.0
000000000072b808 0000000000000018 r CSWTCH.53
000000000072b820 000000000000001c r CSWTCH.55
000000000072b840 00000000000002b2 r CSWTCH.63
000000000072baf8 0000000000000010 r CSWTCH.86
000000000072bb08 0000000000000010 r CSWTCH.91
000000000072be28 0000000000000010 r CSWTCH.133
000000000072be38 000000000000001c r CSWTCH.91
000000000072be58 0000000000000030 r code_gk110.5
000000000072be88 0000000000000078 r code_gm107.6
000000000072bf00 0000000000000028 r code_nvc0.3
000000000072bf28 0000000000000030 r code_nve4.4
000000000072bf58 00000000000002f0 r nve4_su_format_aux_map
000000000072c248 0000000000000178 r nve4_su_format_map
000000000072c3c0 0000000000000088 r cpbs.0
000000000072c448 0000000000000004 r deleted_key_value
000000000072c450 00000000000003e0 r hash_sizes
000000000072c830 0000000000000017 r __func__.4
000000000072cb38 0000000000000010 r debug_severity_enums
000000000072cb48 0000000000000018 r debug_source_enums
000000000072cb60 0000000000000024 r debug_type_enums
000000000072d010 0000000000000028 r CSWTCH.3422
000000000072d038 0000000000000028 r CSWTCH.3875
000000000072d060 0000000000000017 r __func__.0
000000000072d078 0000000000000018 r __func__.1
000000000072d090 0000000000000015 r __func__.10
000000000072d0a8 0000000000000015 r __func__.11
000000000072d0c0 0000000000000016 r __func__.12
000000000072d0d8 0000000000000016 r __func__.13
000000000072d0f0 0000000000000016 r __func__.14
000000000072d108 0000000000000016 r __func__.15
000000000072d120 0000000000000016 r __func__.16
000000000072d138 0000000000000016 r __func__.17
000000000072d150 0000000000000016 r __func__.18
000000000072d168 0000000000000017 r __func__.19
000000000072d180 0000000000000017 r __func__.2
000000000072d198 0000000000000017 r __func__.20
000000000072d1b0 0000000000000017 r __func__.21
000000000072d1c8 0000000000000018 r __func__.3
000000000072d1e0 0000000000000017 r __func__.4
000000000072d1f8 0000000000000018 r __func__.5
000000000072d210 0000000000000016 r __func__.52
000000000072d228 0000000000000017 r __func__.53
000000000072d240 0000000000000016 r __func__.54
000000000072d258 0000000000000017 r __func__.55
000000000072d270 0000000000000016 r __func__.56
000000000072d288 0000000000000017 r __func__.57
000000000072d2a0 0000000000000016 r __func__.58
000000000072d2b8 0000000000000017 r __func__.59
000000000072d2d0 0000000000000017 r __func__.6
000000000072d2e8 0000000000000015 r __func__.60
000000000072d300 0000000000000015 r __func__.61
000000000072d318 0000000000000015 r __func__.62
000000000072d330 0000000000000015 r __func__.63
000000000072d348 0000000000000016 r __func__.64
000000000072d360 0000000000000016 r __func__.65
000000000072d378 0000000000000016 r __func__.66
000000000072d390 0000000000000016 r __func__.67
000000000072d3a8 000000000000001b r __func__.68
000000000072d3c8 000000000000001c r __func__.69
000000000072d3e8 0000000000000018 r __func__.7
000000000072d400 0000000000000015 r __func__.8
000000000072d418 0000000000000015 r __func__.9
000000000072d430 0000000000000029 r CSWTCH.23
000000000072dbb0 000000000000001f r __func__.0
000000000072dd98 0000000000000020 r CSWTCH.175
000000000072ddb8 0000000000000018 r CSWTCH.179
000000000072ddd0 0000000000000018 r CSWTCH.180
000000000072ddd0 0000000000000018 r CSWTCH.181
000000000072dde8 0000000000000030 r CSWTCH.182
000000000072de18 000000000000001e r __func__.0
000000000072de38 00000000000000a9 r mappings
000000000072dee8 0000000000000013 r __func__.0
000000000072df00 000000000000001b r __func__.0
000000000072df20 0000000000002598 r MESA_remap_table_functions
00000000007304b8 000000000000f43d r _mesa_function_pool
000000000073f920 0000000000000114 r CSWTCH.18
000000000073fa38 000000000000002c r CSWTCH.20
000000000073fb30 0000000000000030 r targets.0
0000000000740060 00000000000000c0 r anchor_indices
0000000000740120 0000000000000a68 r bptc_float_modes
0000000000740b88 0000000000000100 r bptc_unorm_modes
0000000000740c88 0000000000000100 r partition_table1
0000000000740d88 0000000000000100 r partition_table2
0000000000740e88 0000000000000004 r weights2.0
0000000000740e90 0000000000000008 r weights3.1
0000000000740e98 0000000000000010 r weights4.2
0000000000740ea8 0000000000000080 r etc1_modifier_tables
0000000000740f28 0000000000000020 r etc2_distance_table
0000000000740f48 0000000000000200 r etc2_modifier_tables
0000000000741148 0000000000000080 r etc2_modifier_tables_non_opaque
00000000007411c8 0000000000000020 r lookup.0
00000000007411c8 0000000000000020 r lookup.1
00000000007411e8 0000000000000020 r _rgb_scale_5
0000000000741208 0000000000000040 r _rgb_scale_6
0000000000741280 0000000000000014 r CSWTCH.326
0000000000741298 0000000000000014 r CSWTCH.327
00000000007412b0 0000000000000028 r targets.2
00000000007412d8 0000000000000010 r zeroData.0
00000000007412e8 0000000000000030 r CSWTCH.135
0000000000741318 0000000000000030 r CSWTCH.136
0000000000741348 0000000000000030 r CSWTCH.137
0000000000741378 0000000000000030 r CSWTCH.138
00000000007413a8 0000000000000028 r default_combine_state
00000000007413d0 0000000000000030 r targets.0
0000000000741400 00000000000001f8 r compatible_internal_formats
00000000007415f8 00000000000000a0 r gles_astc_3d_compatible_internal_formats
0000000000741698 00000000000000e0 r gles_astc_compatible_internal_formats
0000000000741778 0000000000000050 r gles_etc2_compatible_internal_formats
00000000007417c8 0000000000000040 r s3tc_compatible_internal_formats
0000000000741808 0000000000000050 r CSWTCH.125
0000000000741878 000000000000000e r CSWTCH.253
0000000000741888 000000000000000e r CSWTCH.254
0000000000741898 000000000000000e r CSWTCH.255
00000000007418a8 0000000000000038 r CSWTCH.256
00000000007418e0 0000000000000038 r CSWTCH.257
0000000000741918 0000000000000038 r CSWTCH.258
0000000000741950 0000000000000038 r CSWTCH.259
0000000000741988 0000000000000038 r CSWTCH.260
00000000007419c0 0000000000000038 r CSWTCH.261
00000000007419f8 0000000000000038 r CSWTCH.262
0000000000741a30 0000000000000038 r CSWTCH.263
0000000000741a68 00000000000001a0 r vertex_formats
0000000000741c08 0000000000000040 r Identity
0000000000741c48 0000000000000015 r __func__.0
0000000000741c60 000000000000001b r __func__.1
0000000000741c80 0000000000000019 r __func__.10
0000000000741ca0 0000000000000019 r __func__.11
0000000000741cc0 0000000000000019 r __func__.12
0000000000741ce0 000000000000001a r __func__.13
0000000000741d00 000000000000001a r __func__.14
0000000000741d20 000000000000001a r __func__.15
0000000000741d40 000000000000001a r __func__.16
0000000000741d60 000000000000001a r __func__.17
0000000000741d80 000000000000001a r __func__.18
0000000000741da0 000000000000001a r __func__.19
0000000000741dc0 000000000000001c r __func__.2
0000000000741de0 000000000000001b r __func__.20
0000000000741e00 000000000000001b r __func__.21
0000000000741e20 000000000000001b r __func__.22
0000000000741e40 000000000000001b r __func__.3
0000000000741e60 000000000000001c r __func__.4
0000000000741e80 000000000000001b r __func__.5
0000000000741ea0 000000000000001a r __func__.53
0000000000741ec0 000000000000001b r __func__.54
0000000000741ee0 000000000000001a r __func__.55
0000000000741f00 000000000000001b r __func__.56
0000000000741f20 000000000000001a r __func__.57
0000000000741f40 000000000000001b r __func__.58
0000000000741f60 000000000000001a r __func__.59
0000000000741f80 000000000000001c r __func__.6
0000000000741fa0 000000000000001b r __func__.60
0000000000741fc0 0000000000000019 r __func__.61
0000000000741fe0 0000000000000019 r __func__.62
0000000000742000 0000000000000019 r __func__.63
0000000000742020 0000000000000019 r __func__.64
0000000000742040 000000000000001a r __func__.65
0000000000742060 000000000000001a r __func__.66
0000000000742080 000000000000001a r __func__.67
00000000007420a0 000000000000001a r __func__.68
00000000007420c0 000000000000001f r __func__.69
00000000007420e0 000000000000001b r __func__.7
0000000000742100 0000000000000020 r __func__.74
0000000000742120 000000000000001c r __func__.8
0000000000742140 0000000000000019 r __func__.9
0000000000742160 0000000000000020 r default_double.71
0000000000742180 0000000000000010 r default_float.73
0000000000742190 0000000000000010 r default_int.72
00000000007421a0 0000000000000020 r default_uint64.70
00000000007421c0 0000000000000040 R _vbo_attribute_alias_map
0000000000742200 000000000000001d r __func__.0
0000000000742220 000000000000001e r __func__.1
0000000000742240 000000000000001b r __func__.10
0000000000742260 000000000000001b r __func__.11
0000000000742280 000000000000001c r __func__.12
00000000007422a0 000000000000001c r __func__.13
00000000007422c0 000000000000001c r __func__.14
00000000007422e0 000000000000001c r __func__.15
0000000000742300 000000000000001c r __func__.16
0000000000742320 000000000000001c r __func__.17
0000000000742340 000000000000001c r __func__.18
0000000000742360 000000000000001d r __func__.19
0000000000742380 000000000000001d r __func__.2
00000000007423a0 000000000000001d r __func__.20
00000000007423c0 000000000000001d r __func__.21
00000000007423e0 000000000000001e r __func__.3
0000000000742400 000000000000001d r __func__.4
0000000000742420 000000000000001e r __func__.5
0000000000742440 000000000000001c r __func__.52
0000000000742460 000000000000001d r __func__.53
0000000000742480 000000000000001c r __func__.54
00000000007424a0 000000000000001d r __func__.55
00000000007424c0 000000000000001c r __func__.56
00000000007424e0 000000000000001d r __func__.57
0000000000742500 000000000000001c r __func__.58
0000000000742520 000000000000001d r __func__.59
0000000000742540 000000000000001d r __func__.6
0000000000742560 000000000000001b r __func__.60
0000000000742580 000000000000001b r __func__.61
00000000007425a0 000000000000001b r __func__.62
00000000007425c0 000000000000001b r __func__.63
00000000007425e0 000000000000001c r __func__.64
0000000000742600 000000000000001c r __func__.65
0000000000742620 000000000000001c r __func__.66
0000000000742640 000000000000001c r __func__.67
0000000000742660 0000000000000021 r __func__.68
0000000000742688 0000000000000022 r __func__.69
00000000007426b0 000000000000001e r __func__.7
00000000007426d0 000000000000001b r __func__.8
00000000007426f0 000000000000001b r __func__.9
0000000000742710 0000000000000018 r __func__.0
0000000000742728 0000000000000019 r __func__.1
0000000000742748 0000000000000016 r __func__.10
0000000000742760 0000000000000016 r __func__.11
0000000000742778 0000000000000017 r __func__.12
0000000000742790 0000000000000017 r __func__.13
00000000007427a8 0000000000000017 r __func__.14
00000000007427c0 0000000000000017 r __func__.15
00000000007427d8 0000000000000017 r __func__.16
00000000007427f0 0000000000000017 r __func__.17
0000000000742808 0000000000000017 r __func__.18
0000000000742820 0000000000000018 r __func__.19
0000000000742838 0000000000000018 r __func__.2
0000000000742850 0000000000000018 r __func__.20
0000000000742868 0000000000000018 r __func__.21
0000000000742880 0000000000000019 r __func__.3
00000000007428a0 0000000000000018 r __func__.4
00000000007428b8 0000000000000019 r __func__.5
00000000007428d8 0000000000000017 r __func__.52
00000000007428f0 0000000000000018 r __func__.53
0000000000742908 0000000000000017 r __func__.54
0000000000742920 0000000000000018 r __func__.55
0000000000742938 0000000000000017 r __func__.56
0000000000742950 0000000000000018 r __func__.57
0000000000742968 0000000000000017 r __func__.58
0000000000742980 0000000000000018 r __func__.59
0000000000742998 0000000000000018 r __func__.6
00000000007429b0 0000000000000016 r __func__.60
00000000007429c8 0000000000000016 r __func__.61
00000000007429e0 0000000000000016 r __func__.62
00000000007429f8 0000000000000016 r __func__.63
0000000000742a10 0000000000000017 r __func__.64
0000000000742a28 0000000000000017 r __func__.65
0000000000742a40 0000000000000017 r __func__.66
0000000000742a58 0000000000000017 r __func__.67
0000000000742a70 000000000000001c r __func__.68
0000000000742a90 0000000000000019 r __func__.7
0000000000742ab0 000000000000001d r __func__.73
0000000000742ad0 0000000000000016 r __func__.8
0000000000742ae8 0000000000000016 r __func__.9
0000000000742b00 0000000000000020 r default_double.70
0000000000742b20 0000000000000010 r default_float.72
0000000000742b30 0000000000000010 r default_int.71
0000000000742b40 0000000000000020 r default_uint64.69
00000000007431e0 000000000001671d r enum_string_table
0000000000759900 0000000000007660 r enum_string_table_offsets
0000000000761060 0000000000000018 r CSWTCH.218
0000000000761388 00000000000002b2 r CSWTCH.47
0000000000761e50 0000000000000010 r table_1010102_snorm
0000000000761e60 0000000000000010 r table_1010102_uint
0000000000761e70 0000000000000010 r table_1010102_unorm
0000000000761e80 0000000000000020 r table_8888_unorm
0000000000761ea0 0000000000000010 r zeros.3
0000000000761eb0 000000000000001c r CSWTCH.3
0000000000761ed0 000000000000001c r CSWTCH.4
0000000000761ef0 000000000000001c r CSWTCH.5
0000000000761f10 0000000000000018 r CSWTCH.43
0000000000761f28 0000000000000320 r cap_mapping.10
0000000000762248 0000000000000010 r color_formats.4
0000000000762258 0000000000000014 r depth_formats.3
0000000000762270 000000000000008c r depthstencil_mapping.7
0000000000762300 00000000000004ec r rendertarget_mapping.9
00000000007627f0 000000000000008c r rt_blendable.8
0000000000762880 000000000000008c r tbo_rgb32.0
0000000000762910 00000000000009d8 r texture_mapping.6
00000000007632e8 00000000000001a4 r vertex_mapping.5
0000000000763490 0000000000005d00 r format_map
0000000000769390 0000000000000004 r zero.0
0000000000769398 000000000000001c r CSWTCH.47
00000000007693b8 000000000000000a r bias_state.1
00000000007693c8 000000000000000a r depth_range_state
00000000007693d8 000000000000000a r scale_state.2
00000000007693e8 000000000000000a r texcoord_state.0
00000000007693f8 000000000000001c r CSWTCH.24
0000000000769418 0000000000000034 r known_desktop_gl_versions
0000000000769450 0000000000000034 r known_desktop_glsl_versions
0000000000769488 0000000000000028 r _mesa_glsl_process_extension(char const*, YYLTYPE*, char const*, YYLTYPE*, _mesa_glsl_parse_state*)::fmt
00000000007696a0 0000000000000034 r CSWTCH.324
00000000007696d8 000000000000000e R ir_variable::tmp_name
00000000007696e8 000000000000001a r ir_swizzle::create(ir_rvalue*, char const*, unsigned int)::idx_map
0000000000769708 000000000000001a r ir_swizzle::create(ir_rvalue*, char const*, unsigned int)::base_idx
0000000000769728 0000000000000050 r CSWTCH.302
0000000000769778 0000000000000050 r CSWTCH.30
00000000007697f0 0000000000000050 r CSWTCH.228
0000000000769840 000000000000000e r CSWTCH.231
0000000000769850 000000000000000c r CSWTCH.255
00000000007699b0 0000000000000050 r CSWTCH.67
0000000000769a00 0000000000000010 r CSWTCH.61
0000000000769b40 0000000000000018 r CSWTCH.162
0000000000769b58 000000000000000d r CSWTCH.41
0000000000769dd8 000000000000018a r yytranslate
0000000000769f68 0000000000000272 r yyr1
000000000076a1e0 0000000000000139 r yyr2
000000000076a320 00000000000003b6 r yypact
000000000076a6d8 00000000000013a6 r yycheck
000000000076ba80 00000000000000de r yypgoto
000000000076bb60 00000000000013a6 r yytable
000000000076cf08 00000000000003b6 r yydefact
000000000076d2c0 00000000000000de r yydefgoto
000000000076d3a0 0000000000000020 r _mesa_glsl_parse(_mesa_glsl_parse_state*)::yyloc_default
000000000076d600 0000000000000100 r yy_ec
000000000076d700 0000000000000d28 r yy_chk
000000000076e428 00000000000008ce r yy_def
000000000076ecf8 0000000000000d28 r yy_nxt
000000000076fa20 00000000000008ce r yy_base
00000000007702f0 000000000000004a r yy_meta
0000000000770340 00000000000008b0 r yy_accept
0000000000770c70 000000000000017a r yy_accept
0000000000770df0 00000000000001a0 r yy_base
0000000000770f90 0000000000000498 r yy_chk
0000000000771428 00000000000001a0 r yy_def
00000000007715c8 0000000000000100 r yy_ec
00000000007716c8 0000000000000031 r yy_meta
0000000000771700 0000000000000498 r yy_nxt
0000000000771ca0 00000000000005b8 r yycheck
0000000000772258 00000000000000b9 r yydefact
0000000000772318 0000000000000028 r yydefgoto
0000000000772340 0000000000000014 r yyloc_default.0
0000000000772358 0000000000000172 r yypact
00000000007724d0 0000000000000028 r yypgoto
00000000007724f8 0000000000000075 r yyr1
0000000000772570 0000000000000075 r yyr2
00000000007725e8 00000000000000ea r yyrline
00000000007726d8 00000000000000b9 r yystos
0000000000772798 00000000000002dc r yytable
0000000000772a78 000000000000012b r yytranslate
0000000000772ba8 0000000000000050 r CSWTCH.378
0000000000772bf8 000000000000000e r CSWTCH.381
0000000000772c08 0000000000000020 r prime_deltas
0000000000772c78 00000000000003f0 r opcode_info
0000000000773068 0000000000000038 r CSWTCH.35
00000000007730a0 0000000000000028 r CSWTCH.39
0000000000773200 0000000000000048 r CSWTCH.21
0000000000773248 0000000000000024 r CSWTCH.4
00000000007732f0 0000000000000048 r shader_templ.3
0000000000773338 000000000000023b r text.4
0000000000773578 00000000000000b4 r text.5
0000000000773630 00000000000001e0 r vbuf_format_fallbacks
0000000000773810 000000000000000f r slab_order.0
0000000000773820 0000000000000060 r CSWTCH.24
0000000000773880 0000000000000030 r CSWTCH.45
00000000007738b0 0000000000000060 r nouveau_decoder_msvld
0000000000773910 000000000000001c r CSWTCH.104
0000000000773930 0000000000000002 r ms1.3
0000000000773938 0000000000000004 r ms2.2
0000000000773940 0000000000000008 r ms4.1
0000000000773948 0000000000000010 r ms8.0
0000000000773958 00000000000011a0 R nvc0_format_table
0000000000774af8 0000000000000bc0 R nvc0_vertex_format
00000000007756b8 0000000000000010 r CSWTCH.33
00000000007756c8 000000000000000c r CSWTCH.34
00000000007756f8 0000000000000028 r CSWTCH.44
0000000000775720 0000000000000028 r CSWTCH.45
0000000000775748 0000000000000028 r sm20_achieved_occupancy
0000000000775770 0000000000000028 r sm20_branch_efficiency
0000000000775798 0000000000000028 r sm20_inst_per_wrap
00000000007757c0 0000000000000028 r sm20_inst_replay_overhead
00000000007757e8 0000000000000028 r sm20_ipc
0000000000775810 0000000000000028 r sm20_issue_slot_utilization
0000000000775838 0000000000000028 r sm20_issued_ipc
0000000000775860 0000000000000028 r sm21_inst_issued
0000000000775888 0000000000000028 r sm21_inst_replay_overhead
00000000007758b0 0000000000000028 r sm21_issue_slot_utilization
00000000007758d8 0000000000000028 r sm21_issue_slots
0000000000775900 0000000000000028 r sm21_issued_ipc
0000000000775928 0000000000000028 r sm30_inst_issued
0000000000775950 0000000000000028 r sm30_inst_replay_overhead
0000000000775978 0000000000000028 r sm30_issue_slot_utilization
00000000007759a0 0000000000000028 r sm30_issue_slots
00000000007759c8 0000000000000028 r sm30_issued_ipc
00000000007759f0 0000000000000028 r sm30_shared_replay_overhead
0000000000775a18 0000000000000028 r sm30_warp_execution_efficiency
0000000000775a40 0000000000000028 r sm35_warp_nonpred_execution_efficiency
0000000000775a68 0000000000000160 r gm107_read_hw_sm_counters_code
0000000000775bc8 00000000000000b8 r nvc0_read_hw_sm_counters_code
0000000000775c80 0000000000000130 r nve4_read_hw_sm_counters_code
0000000000775db0 0000000000000130 r nvf0_read_hw_sm_counters_code
0000000000775ee0 0000000000000068 r sm20_active_cycles
0000000000775f48 0000000000000068 r sm20_active_warps
0000000000775fb0 0000000000000068 r sm20_atom_count
0000000000776018 0000000000000068 r sm20_branch
0000000000776080 0000000000000068 r sm20_divergent_branch
00000000007760e8 0000000000000068 r sm20_gld_request
0000000000776150 0000000000000068 r sm20_gred_count
00000000007761b8 0000000000000068 r sm20_gst_request
0000000000776220 0000000000000068 r sm20_inst_executed
0000000000776288 0000000000000068 r sm20_inst_issued
00000000007762f0 0000000000000068 r sm20_local_ld
0000000000776358 0000000000000068 r sm20_local_st
00000000007763c0 0000000000000068 r sm20_prof_trigger_0
0000000000776428 0000000000000068 r sm20_prof_trigger_1
0000000000776490 0000000000000068 r sm20_prof_trigger_2
00000000007764f8 0000000000000068 r sm20_prof_trigger_3
0000000000776560 0000000000000068 r sm20_prof_trigger_4
00000000007765c8 0000000000000068 r sm20_prof_trigger_5
0000000000776630 0000000000000068 r sm20_prof_trigger_6
0000000000776698 0000000000000068 r sm20_prof_trigger_7
0000000000776700 0000000000000068 r sm20_shared_ld
0000000000776768 0000000000000068 r sm20_shared_st
00000000007767d0 0000000000000068 r sm20_th_inst_executed_0
0000000000776838 0000000000000068 r sm20_th_inst_executed_1
00000000007768a0 0000000000000068 r sm20_threads_launched
0000000000776908 0000000000000068 r sm20_warps_launched
0000000000776970 0000000000000068 r sm21_inst_executed
00000000007769d8 0000000000000068 r sm21_inst_issued1_0
0000000000776a40 0000000000000068 r sm21_inst_issued1_1
0000000000776aa8 0000000000000068 r sm21_inst_issued2_0
0000000000776b10 0000000000000068 r sm21_inst_issued2_1
0000000000776b78 0000000000000068 r sm21_th_inst_executed_0
0000000000776be0 0000000000000068 r sm21_th_inst_executed_1
0000000000776c48 0000000000000068 r sm21_th_inst_executed_2
0000000000776cb0 0000000000000068 r sm21_th_inst_executed_3
0000000000776d18 0000000000000068 r sm30_active_cycles
0000000000776d80 0000000000000068 r sm30_active_warps
0000000000776de8 0000000000000068 r sm30_atom_cas_count
0000000000776e50 0000000000000068 r sm30_atom_count
0000000000776eb8 0000000000000068 r sm30_branch
0000000000776f20 0000000000000068 r sm30_divergent_branch
0000000000776f88 0000000000000068 r sm30_gld_mem_div_replay
0000000000776ff0 0000000000000068 r sm30_gld_request
0000000000777058 0000000000000068 r sm30_gred_count
00000000007770c0 0000000000000068 r sm30_gst_mem_div_replay
0000000000777128 0000000000000068 r sm30_gst_request
0000000000777190 0000000000000068 r sm30_gst_transactions
00000000007771f8 0000000000000068 r sm30_inst_executed
0000000000777260 0000000000000068 r sm30_inst_issued1
00000000007772c8 0000000000000068 r sm30_inst_issued2
0000000000777330 0000000000000068 r sm30_l1_gld_hit
0000000000777398 0000000000000068 r sm30_l1_gld_miss
0000000000777400 0000000000000068 r sm30_l1_gld_transactions
0000000000777468 0000000000000068 r sm30_l1_gst_transactions
00000000007774d0 0000000000000068 r sm30_l1_local_ld_hit
0000000000777538 0000000000000068 r sm30_l1_local_ld_miss
00000000007775a0 0000000000000068 r sm30_l1_local_st_hit
0000000000777608 0000000000000068 r sm30_l1_local_st_miss
0000000000777670 0000000000000068 r sm30_l1_shared_ld_transactions
00000000007776d8 0000000000000068 r sm30_l1_shared_st_transactions
0000000000777740 0000000000000068 r sm30_local_ld
00000000007777a8 0000000000000068 r sm30_local_ld_transactions
0000000000777810 0000000000000068 r sm30_local_st
0000000000777878 0000000000000068 r sm30_local_st_transactions
00000000007778e0 0000000000000068 r sm30_prof_trigger_0
0000000000777948 0000000000000068 r sm30_prof_trigger_1
00000000007779b0 0000000000000068 r sm30_prof_trigger_2
0000000000777a18 0000000000000068 r sm30_prof_trigger_3
0000000000777a80 0000000000000068 r sm30_prof_trigger_4
0000000000777ae8 0000000000000068 r sm30_prof_trigger_5
0000000000777b50 0000000000000068 r sm30_prof_trigger_6
0000000000777bb8 0000000000000068 r sm30_prof_trigger_7
0000000000777c20 0000000000000068 r sm30_shared_ld
0000000000777c88 0000000000000068 r sm30_shared_ld_replay
0000000000777cf0 0000000000000068 r sm30_shared_st
0000000000777d58 0000000000000068 r sm30_shared_st_replay
0000000000777dc0 0000000000000068 r sm30_sm_cta_launched
0000000000777e28 0000000000000068 r sm30_threads_launched
0000000000777e90 0000000000000068 r sm30_uncached_gld_transactions
0000000000777ef8 0000000000000068 r sm30_warps_launched
0000000000777f60 0000000000000068 r sm35_atom_cas_count
0000000000777fc8 0000000000000068 r sm35_atom_count
0000000000778030 0000000000000068 r sm35_gred_count
0000000000778098 0000000000000068 r sm35_not_pred_off_inst_executed
0000000000778100 0000000000000068 r sm35_shared_ld_replay
0000000000778168 0000000000000068 r sm35_shared_st_replay
00000000007781d0 0000000000000068 r sm35_th_inst_executed
0000000000778238 0000000000000068 r sm50_active_ctas
00000000007782a0 0000000000000068 r sm50_active_cycles
0000000000778308 0000000000000068 r sm50_active_warps
0000000000778370 0000000000000068 r sm50_atom_count
00000000007783d8 0000000000000068 r sm50_branch
0000000000778440 0000000000000068 r sm50_divergent_branch
00000000007784a8 0000000000000068 r sm50_global_atom_cas
0000000000778510 0000000000000068 r sm50_global_ld
0000000000778578 0000000000000068 r sm50_global_st
00000000007785e0 0000000000000068 r sm50_gred_count
0000000000778648 0000000000000068 r sm50_inst_executed
00000000007786b0 0000000000000068 r sm50_inst_issued0
0000000000778718 0000000000000068 r sm50_inst_issued1
0000000000778780 0000000000000068 r sm50_inst_issued2
00000000007787e8 0000000000000068 r sm50_local_ld
0000000000778850 0000000000000068 r sm50_local_st
00000000007788b8 0000000000000068 r sm50_not_pred_off_inst_executed
0000000000778920 0000000000000068 r sm50_prof_trigger_0
0000000000778988 0000000000000068 r sm50_prof_trigger_1
00000000007789f0 0000000000000068 r sm50_prof_trigger_2
0000000000778a58 0000000000000068 r sm50_prof_trigger_3
0000000000778ac0 0000000000000068 r sm50_prof_trigger_4
0000000000778b28 0000000000000068 r sm50_prof_trigger_5
0000000000778b90 0000000000000068 r sm50_prof_trigger_6
0000000000778bf8 0000000000000068 r sm50_prof_trigger_7
0000000000778c60 0000000000000068 r sm50_shared_atom
0000000000778cc8 0000000000000068 r sm50_shared_atom_cas
0000000000778d30 0000000000000068 r sm50_shared_ld
0000000000778d98 0000000000000068 r sm50_shared_ld_bank_conflict
0000000000778e00 0000000000000068 r sm50_shared_ld_transactions
0000000000778e68 0000000000000068 r sm50_shared_st
0000000000778ed0 0000000000000068 r sm50_shared_st_bank_conflict
0000000000778f38 0000000000000068 r sm50_shared_st_transactions
0000000000778fa0 0000000000000068 r sm50_sm_cta_launched
0000000000779008 0000000000000068 r sm50_th_inst_executed
0000000000779070 0000000000000068 r sm50_warps_launched
00000000007790d8 0000000000000068 r sm52_atom_count
0000000000779140 0000000000000068 r sm52_global_atom_cas
00000000007791a8 0000000000000068 r sm52_global_ld
0000000000779210 0000000000000068 r sm52_global_st
0000000000779278 0000000000000068 r sm52_gred_count
00000000007792e0 0000000000000068 r sm52_inst_executed
0000000000779348 0000000000000068 r sm52_inst_issued0
00000000007793b0 0000000000000068 r sm52_inst_issued1
0000000000779418 0000000000000068 r sm52_inst_issued2
0000000000779480 0000000000000068 r sm52_local_ld
00000000007794e8 0000000000000068 r sm52_local_st
0000000000779550 0000000000000068 r sm52_shared_atom
00000000007795b8 0000000000000068 r sm52_shared_atom_cas
0000000000779620 0000000000000068 r sm52_shared_ld
0000000000779688 0000000000000068 r sm52_shared_st
00000000007796f0 0000000000000068 r sm52_warps_launched
0000000000779758 0000000000000038 r supported_modifiers.0
0000000000779790 0000000000000014 r CSWTCH.55
00000000007797a8 0000000000000010 r CSWTCH.57
00000000007797b8 0000000000000040 r CSWTCH.59
00000000007797f8 0000000000000020 r CSWTCH.63
0000000000779818 0000000000000068 r CSWTCH.66
0000000000779880 0000000000000010 r lut.0
0000000000779890 0000000000000060 r CSWTCH.8
00000000007798f0 0000000000000060 r CSWTCH.9
0000000000779950 0000000000000060 r CSWTCH.11
00000000007799b0 0000000000000011 r hex_digits.0
00000000007799cc 0000000000000004 r deleted_key_value
00000000007799d0 00000000000003e0 r hash_sizes
0000000000779db0 0000000000000100 R util_format_linear_to_srgb_8unorm_table
0000000000779eb0 00000000000001a0 R util_format_linear_to_srgb_helper_table
000000000077a050 0000000000000400 R util_format_srgb_8unorm_to_linear_float_table
000000000077a450 0000000000000100 R util_format_srgb_to_linear_8unorm_table
000000000077a550 00000000000000c0 r anchor_indices
000000000077a610 0000000000000a68 r bptc_float_modes
000000000077b078 0000000000000100 r bptc_unorm_modes
000000000077b178 0000000000000100 r partition_table1
000000000077b278 0000000000000100 r partition_table2
000000000077b378 0000000000000004 r weights2.0
000000000077b380 0000000000000008 r weights3.1
000000000077b388 0000000000000010 r weights4.2
000000000077b398 0000000000000080 r etc1_modifier_tables
000000000077b418 0000000000000020 r lookup.0
000000000077b438 0000000000000029 r __func__.0
000000000077b468 000000000000002b r __func__.1
000000000077b498 000000000000002a r __func__.2
000000000077b4c8 0000000000000029 r __func__.3
000000000077b4f8 000000000000002b r __func__.4
000000000077b528 000000000000002a r __func__.5
000000000077b558 0000000000000029 r __func__.0
000000000077b588 000000000000002b r __func__.1
000000000077b5b8 000000000000002a r __func__.2
000000000077b5e8 0000000000000029 r __func__.3
000000000077b618 000000000000002b r __func__.4
000000000077b648 000000000000002a r __func__.5
000000000077b678 0000000000000050 r CSWTCH.136
000000000077b740 0000000000000009 r swz.5
000000000077b750 0000000000000014 r CSWTCH.9
000000000077b768 000000000000000a r fogColorState.0
000000000077b778 000000000000000a r fogPStateOpt.1
000000000077b788 0000000000000028 r mvpState.2
000000000077b7b0 0000000000000028 r mvpState.3
000000000077b910 0000000000000048 r CSWTCH.38
000000000077b958 000000000000001e r __func__.1
000000000077b978 000000000000001e r __func__.2
000000000077ba20 0000000000000060 R _mesa_vao_attribute_map
000000000077ba80 0000000000000074 r CSWTCH.71
000000000077baf8 0000000000000010 r color_logicop_mapping
000000000077bc90 0000000000000004 r undef
000000000077bed4 0000000000000004 R RGBA32_FLOAT
000000000077bed8 0000000000000004 R RGBA32_INT
000000000077bedc 0000000000000004 R RGBA32_UINT
000000000077c260 0000000000000018 r error_value
000000000077c278 0000000000000008 r extra_AMD_depth_clamp_separate
000000000077c280 0000000000000008 r extra_AMD_framebuffer_multisample_advanced
000000000077c288 000000000000000c r extra_ARB_ES2_compatibility_api_es2
000000000077c298 000000000000000c r extra_ARB_ES3_compatibility_api_es3
000000000077c2a8 0000000000000008 r extra_ARB_blend_func_extended
000000000077c2b0 0000000000000008 r extra_ARB_clip_control
000000000077c2b8 0000000000000008 r extra_ARB_color_buffer_float
000000000077c2c0 000000000000000c r extra_ARB_color_buffer_float_or_glcore
000000000077c2d0 000000000000000c r extra_ARB_compute_shader_es31
000000000077c2e0 0000000000000008 r extra_ARB_compute_variable_group_size
000000000077c2e8 0000000000000008 r extra_ARB_cull_distance
000000000077c2f0 0000000000000008 r extra_ARB_depth_clamp
000000000077c2f8 0000000000000008 r extra_ARB_draw_indirect
000000000077c300 0000000000000008 r extra_ARB_explicit_uniform_location
000000000077c308 0000000000000008 r extra_ARB_fragment_program
000000000077c310 0000000000000008 r extra_ARB_fragment_shader
000000000077c318 0000000000000008 r extra_ARB_framebuffer_no_attachments
000000000077c320 0000000000000008 r extra_ARB_framebuffer_no_attachments_and_geometry_shader
000000000077c328 000000000000000c r extra_ARB_framebuffer_object_EXT_framebuffer_multisample
000000000077c338 000000000000000c r extra_ARB_gpu_shader5_or_OES_sample_variables
000000000077c348 000000000000000c r extra_ARB_gpu_shader5_or_oes_geometry_shader
000000000077c358 0000000000000008 r extra_ARB_indirect_parameters
000000000077c360 0000000000000008 r extra_ARB_polygon_offset_clamp
000000000077c368 0000000000000008 r extra_ARB_query_buffer_object
000000000077c370 0000000000000008 r extra_ARB_sample_locations
000000000077c378 0000000000000008 r extra_ARB_seamless_cube_map
000000000077c380 0000000000000008 r extra_ARB_shader_atomic_counters
000000000077c388 0000000000000008 r extra_ARB_shader_atomic_counters_and_geometry_shader
000000000077c390 0000000000000008 r extra_ARB_shader_atomic_counters_and_tessellation
000000000077c398 0000000000000008 r extra_ARB_shader_image_load_store
000000000077c3a0 0000000000000008 r extra_ARB_shader_image_load_store_and_geometry_shader
000000000077c3a8 0000000000000008 r extra_ARB_shader_image_load_store_and_tessellation
000000000077c3b0 0000000000000010 r extra_ARB_shader_image_load_store_shader_storage_buffer_object_es31
000000000077c3c0 0000000000000008 r extra_ARB_shader_storage_buffer_object
000000000077c3c8 0000000000000008 r extra_ARB_shader_storage_buffer_object_and_geometry_shader
000000000077c3d0 000000000000000c r extra_ARB_shader_storage_buffer_object_es31
000000000077c3e0 0000000000000008 r extra_ARB_sparse_buffer
000000000077c3e8 0000000000000008 r extra_ARB_spirv_extensions
000000000077c3f0 0000000000000008 r extra_ARB_sync
000000000077c3f8 0000000000000008 r extra_ARB_tessellation_shader
000000000077c400 0000000000000008 r extra_ARB_texture_buffer_range
000000000077c408 0000000000000008 r extra_ARB_texture_cube_map
000000000077c410 000000000000000c r extra_ARB_texture_cube_map_array_OES_texture_cube_map_array
000000000077c420 0000000000000008 r extra_ARB_texture_gather
000000000077c428 0000000000000008 r extra_ARB_texture_multisample
000000000077c430 0000000000000008 r extra_ARB_timer_query
000000000077c438 000000000000000c r extra_ARB_transform_feedback2_api_es3
000000000077c448 0000000000000008 r extra_ARB_transform_feedback3
000000000077c450 000000000000000c r extra_ARB_transform_feedback3_ARB_gpu_shader5
000000000077c460 0000000000000008 r extra_ARB_uniform_buffer_object
000000000077c468 0000000000000008 r extra_ARB_uniform_buffer_object_and_geometry_shader
000000000077c470 0000000000000008 r extra_ARB_vertex_program
000000000077c478 000000000000000c r extra_ARB_vertex_program_ARB_fragment_program
000000000077c488 000000000000000c r extra_ARB_vertex_program_api_es2
000000000077c498 0000000000000008 r extra_ARB_vertex_shader
000000000077c4a0 000000000000000c r extra_ARB_viewport_array_or_oes_geometry_shader
000000000077c4b0 000000000000000c r extra_ARB_viewport_array_or_oes_viewport_array
000000000077c4c0 0000000000000008 r extra_ATI_fragment_shader
000000000077c4c8 0000000000000008 r extra_ATI_meminfo
000000000077c4d0 000000000000000c r extra_ES32
000000000077c4e0 0000000000000008 r extra_EXT_depth_bounds_test
000000000077c4e8 0000000000000010 r extra_EXT_disjoint_timer_query
000000000077c4f8 0000000000000008 r extra_EXT_framebuffer_sRGB
000000000077c500 000000000000000c r extra_EXT_framebuffer_sRGB_and_new_buffers
000000000077c510 000000000000000c r extra_EXT_packed_float
000000000077c520 0000000000000008 r extra_EXT_pixel_buffer_object
000000000077c528 0000000000000008 r extra_EXT_provoking_vertex
000000000077c530 0000000000000008 r extra_EXT_provoking_vertex_32
000000000077c538 0000000000000010 r extra_EXT_shader_framebuffer_fetch
000000000077c548 0000000000000008 r extra_EXT_stencil_two_side
000000000077c550 0000000000000008 r extra_EXT_texture_array
000000000077c558 000000000000000c r extra_EXT_texture_array_es3
000000000077c568 0000000000000008 r extra_EXT_texture_filter_anisotropic
000000000077c570 000000000000000c r extra_EXT_texture_integer_and_new_buffers
000000000077c580 0000000000000008 r extra_EXT_transform_feedback
000000000077c588 0000000000000008 r extra_EXT_window_rectangles
000000000077c590 0000000000000010 r extra_GLSL_130_es3_gpushader4
000000000077c5a0 0000000000000008 r extra_INTEL_conservative_rasterization
000000000077c5a8 0000000000000008 r extra_INTEL_performance_query
000000000077c5b0 0000000000000008 r extra_KHR_blend_equation_advanced_coherent
000000000077c5b8 0000000000000008 r extra_KHR_robustness
000000000077c5c0 0000000000000010 r extra_KHR_robustness_or_GL
000000000077c5d0 0000000000000008 r extra_NVX_gpu_memory_info
000000000077c5d8 0000000000000008 r extra_NV_conservative_raster
000000000077c5e0 0000000000000008 r extra_NV_conservative_raster_dilate
000000000077c5e8 0000000000000008 r extra_NV_conservative_raster_pre_snap_triangles
000000000077c5f0 0000000000000008 r extra_NV_fog_distance
000000000077c5f8 0000000000000008 r extra_NV_point_sprite
000000000077c600 000000000000000c r extra_NV_point_sprite_ARB_point_sprite
000000000077c610 0000000000000008 r extra_NV_primitive_restart
000000000077c618 000000000000000c r extra_NV_read_buffer_api_gl
000000000077c628 0000000000000008 r extra_NV_texture_rectangle
000000000077c630 0000000000000008 r extra_NV_viewport_swizzle
000000000077c638 0000000000000008 r extra_OES_EGL_image_external
000000000077c640 0000000000000008 r extra_OES_primitive_bounding_box
000000000077c648 0000000000000010 r extra_core_ARB_color_buffer_float_and_new_buffers
000000000077c658 0000000000000008 r extra_flush_current
000000000077c660 000000000000000c r extra_flush_current_valid_texture_unit
000000000077c670 000000000000000c r extra_gl30_es3
000000000077c680 000000000000000c r extra_gl32_es3
000000000077c690 000000000000000c r extra_gl40_ARB_sample_shading
000000000077c6a0 0000000000000008 r extra_new_buffers
000000000077c6a8 0000000000000008 r extra_new_frag_clamp
000000000077c6b0 0000000000000008 r extra_texture_buffer_object
000000000077c6b8 0000000000000008 r extra_valid_clip_distance
000000000077c6c0 0000000000000008 r extra_valid_draw_buffer
000000000077c6c8 0000000000000008 r extra_valid_texture_unit
000000000077c6d0 0000000000000008 r extra_version_30
000000000077c6d8 0000000000000008 r extra_version_31
000000000077c6e0 0000000000000008 r extra_version_32
000000000077c6e8 000000000000000c r extra_version_32_OES_geometry_shader
000000000077c6f8 0000000000000008 r extra_version_43
000000000077c700 0000000000000800 r table_API_OPENGL
000000000077cf00 0000000000000800 r table_API_OPENGLES
000000000077d700 0000000000000800 r table_API_OPENGLES2
000000000077df00 0000000000000800 r table_API_OPENGLES3
000000000077e700 0000000000000800 r table_API_OPENGLES31
000000000077ef00 0000000000000800 r table_API_OPENGLES32
000000000077f700 0000000000000040 r transpose
000000000077f740 0000000000000020 r stage_pairs.0
000000000077f760 0000000000000044 r cem_ranges
000000000077f7a8 00000000000000c8 r formats
000000000077f870 0000000000000028 r CSWTCH.17
000000000077f870 0000000000000028 r CSWTCH.27
000000000077ff18 0000000000000080 r CSWTCH.53
000000000077ff98 000000000000000a r fog_color.0
000000000077ffa8 000000000000000a r fog_params_state.1
000000000077ffb8 000000000000001c r CSWTCH.10
000000000077ffd8 0000000000000080 r table.0
0000000000780058 0000000000000030 r CSWTCH.32
0000000000780288 0000000000000010 r zeros.0
0000000000780298 000000000000001c r CSWTCH.4
00000000007802b8 0000000000000007 r CSWTCH.5
00000000007802c0 0000000000000014 r CSWTCH.15
00000000007802d8 000000000000001c r CSWTCH.6
00000000007806b8 000000000000001c r CSWTCH.14
0000000000780e10 000000000000002c r CSWTCH.1206
0000000000780e40 000000000000002c r CSWTCH.1207
0000000000780e70 000000000000002c r CSWTCH.1208
0000000000780ea0 000000000000002c r CSWTCH.1209
0000000000780ed0 000000000000002c r CSWTCH.1210
0000000000780f00 000000000000002c r CSWTCH.1211
0000000000780f30 000000000000002c r CSWTCH.1212
0000000000780f60 000000000000002c r CSWTCH.1213
0000000000780f90 000000000000002c r CSWTCH.1214
0000000000780fc0 000000000000002c r CSWTCH.1215
0000000000780ff0 000000000000002c r CSWTCH.1216
0000000000781020 000000000000002c r CSWTCH.1217
0000000000781050 000000000000002c r CSWTCH.1218
0000000000781080 000000000000002c r CSWTCH.1219
00000000007810b0 000000000000002c r CSWTCH.1220
00000000007810e0 000000000000002c r CSWTCH.1221
0000000000781110 000000000000002c r CSWTCH.1222
0000000000781140 000000000000002c r CSWTCH.1223
0000000000781170 000000000000002c r CSWTCH.1224
00000000007811a0 000000000000002c r CSWTCH.1225
00000000007811d0 0000000000000050 r CSWTCH.470
0000000000781220 0000000000000014 r CSWTCH.625
0000000000781238 000000000000001c r CSWTCH.648
0000000000781258 0000000000000010 r swizzle_for_size(int)::size_swizzles
0000000000781268 000000000000000a r get_mesa_program_tgsi(gl_context*, gl_shader_program*, gl_linked_shader*)::wposTransformState
0000000000781278 000000000000000a r glsl_to_tgsi_visitor::visit_expression(ir_expression*, st_src_reg*)::transform_y_state
0000000000781288 000000000000000a r glsl_to_tgsi_visitor::visit_expression(ir_expression*, st_src_reg*)::transform_y_state
0000000000781298 000000000000000c r glsl_to_tgsi_visitor::emit_dp(ir_instruction*, st_dst_reg, st_src_reg, st_src_reg, unsigned int)::dot_opcodes
00000000007812a8 0000000000000030 r CSWTCH.223
00000000007812d8 000000000000000c r CSWTCH.251
00000000007812e8 0000000000000038 r CSWTCH.98
0000000000781320 000000000000000a r wposTransformState.0
0000000000781330 0000000000000040 r emit_inline_matrix_constructor(glsl_type const*, exec_list*, exec_list*, void*)::rhs_swiz
00000000007813d8 000000000000002c r CSWTCH.1085
0000000000781408 000000000000002c r CSWTCH.1086
0000000000781438 0000000000000050 r CSWTCH.922
0000000000781488 00000000000000d4 r ast_expression::do_hir(exec_list*, _mesa_glsl_parse_state*, bool)::operations
0000000000781560 0000000000000018 r gl_ClipPlane_elements
0000000000781578 0000000000000018 r gl_EyePlaneQ_elements
0000000000781590 0000000000000018 r gl_EyePlaneR_elements
00000000007815a8 0000000000000018 r gl_EyePlaneS_elements
00000000007815c0 0000000000000018 r gl_EyePlaneT_elements
00000000007815d8 0000000000000018 r gl_NumSamples_elements
00000000007815f0 0000000000000018 r gl_NormalScale_elements
0000000000781608 0000000000000048 r gl_NormalMatrix_elements
0000000000781650 0000000000000018 r gl_ObjectPlaneQ_elements
0000000000781668 0000000000000018 r gl_ObjectPlaneR_elements
0000000000781680 0000000000000018 r gl_ObjectPlaneS_elements
0000000000781698 0000000000000018 r gl_ObjectPlaneT_elements
00000000007816b0 0000000000000060 r gl_TextureMatrix_elements
0000000000781710 0000000000000060 r gl_ModelViewMatrix_elements
0000000000781770 0000000000000018 r gl_TextureEnvColor_elements
0000000000781788 0000000000000060 r gl_ProjectionMatrix_elements
00000000007817e8 0000000000000060 r gl_TextureMatrixInverse_elements
0000000000781848 0000000000000018 r gl_CurrentAttribFragMESA_elements
0000000000781860 0000000000000018 r gl_CurrentAttribVertMESA_elements
0000000000781878 0000000000000018 r gl_FogParamsOptimizedMESA_elements
0000000000781890 0000000000000060 r gl_ModelViewMatrixInverse_elements
00000000007818f0 0000000000000060 r gl_TextureMatrixTranspose_elements
0000000000781950 0000000000000060 r gl_ProjectionMatrixInverse_elements
00000000007819b0 0000000000000060 r gl_ModelViewMatrixTranspose_elements
0000000000781a10 0000000000000060 r gl_ModelViewProjectionMatrix_elements
0000000000781a70 0000000000000060 r gl_ProjectionMatrixTranspose_elements
0000000000781ad0 0000000000000060 r gl_TextureMatrixInverseTranspose_elements
0000000000781b30 0000000000000060 r gl_ModelViewMatrixInverseTranspose_elements
0000000000781b90 0000000000000060 r gl_ModelViewProjectionMatrixInverse_elements
0000000000781bf0 0000000000000060 r gl_ProjectionMatrixInverseTranspose_elements
0000000000781c50 0000000000000060 r gl_ModelViewProjectionMatrixTranspose_elements
0000000000781cb0 0000000000000060 r gl_ModelViewProjectionMatrixInverseTranspose_elements
0000000000781d10 0000000000000050 r CSWTCH.31
0000000000781d60 0000000000000050 r CSWTCH.26
0000000000781db0 0000000000000038 r CSWTCH.160
0000000000781f90 000000000000001c r CSWTCH.72
00000000007821e8 0000000000000018 r CSWTCH.981
0000000000782200 0000000000000520 R nv50_ir::TexInstruction::formatTable
0000000000782720 00000000000001b0 R nv50_ir::TexInstruction::Target::descTable
0000000000782c50 0000000000000030 r CSWTCH.652
0000000000782c80 0000000000000029 r CSWTCH.654
0000000000782cb0 0000000000000048 r CSWTCH.656
0000000000782cf8 00000000000000fc r CSWTCH.659
0000000000782df8 0000000000000054 r CSWTCH.661
0000000000782e50 00000000000000dc r CSWTCH.880
00000000007830d0 0000000000000034 r CSWTCH.708
0000000000783108 0000000000000024 r CSWTCH.828
0000000000783130 0000000000000008 r nv50_ir::reverseCondCode(nv50_ir::CondCode)::ccRev
0000000000783138 0000000000000034 r CSWTCH.574
0000000000783170 0000000000000034 r CSWTCH.45
00000000007831a8 00000000000001f8 R nv50_ir::Target::operationClass
00000000007833a0 000000000000007e R nv50_ir::Target::operationSrcNr
0000000000783448 0000000000000034 r CSWTCH.60
0000000000783480 0000000000000160 r nv50_ir::_initProps
00000000007835e0 0000000000000030 r nv50_ir::_initPropsNVE4
0000000000783610 0000000000000038 r nv50_ir::_initPropsGM107
0000000000783648 000000000000003c r nv50_ir::TargetNVC0::initOpInfo()::commutative
0000000000783688 000000000000006c r nv50_ir::TargetNVC0::initOpInfo()::noDest
00000000007836f8 0000000000000060 r CSWTCH.39
0000000000783758 0000000000000400 r util_crc32_table
0000000000783b58 0000000000000010 r fog_modes.0
0000000000783d78 00000000000002c4 r yycheck
0000000000784040 0000000000000384 r yydefact
00000000007843c8 0000000000000110 r yydefgoto
00000000007844d8 0000000000000014 r yyloc_default.0
00000000007844f0 0000000000000384 r yypact
0000000000784878 0000000000000110 r yypgoto
0000000000784988 000000000000010c r yyr1
0000000000784a98 000000000000010c r yyr2
0000000000784ba8 00000000000002c4 r yytable
0000000000784e70 000000000000016a r yytranslate
0000000000784fe0 000000000000001c r CSWTCH.4
0000000000785000 0000000000000038 r CSWTCH.5
0000000000785038 0000000000000060 r CSWTCH.2
0000000000785098 0000000000000060 r CSWTCH.8
00000000007850f8 0000000000000034 r CSWTCH.129
0000000000785130 0000000000000020 r nv50_ir::BuildUtil::mkClobber(nv50_ir::DataFile, unsigned int, int)::baseSize2
0000000000785248 0000000000000034 r CSWTCH.357
0000000000785280 000000000000000e r CSWTCH.363
0000000000785290 0000000000000038 r CSWTCH.475
00000000007852c8 0000000000000038 r CSWTCH.477
0000000000785300 000000000000001c r CSWTCH.488
0000000000785320 000000000000001c r CSWTCH.489
0000000000785340 0000000000000038 r CSWTCH.501
0000000000785378 0000000000000004 r CSWTCH.661
0000000000785380 0000000000000020 r CSWTCH.680
0000000000785380 0000000000000020 r CSWTCH.739
00000000007853a0 000000000000000c r CSWTCH.694
00000000007853b0 000000000000000c r CSWTCH.696
00000000007853b0 000000000000000c r CSWTCH.698
00000000007853c0 000000000000001c r CSWTCH.748
00000000007853e0 0000000000000030 r CSWTCH.751
0000000000785410 0000000000000005 r CSWTCH.753
0000000000785418 0000000000000008 r nv50_ir::reverseCondCode(nv50_ir::CondCode)::ccRev
0000000000785420 0000000000000034 r CSWTCH.79
0000000000785560 0000000000000034 r CSWTCH.451
0000000000785598 0000000000000014 r CSWTCH.459
00000000007856e0 0000000000000068 r CSWTCH.15
0000000000785748 000000000000053a r yy_accept
0000000000785c88 0000000000000540 r yy_base
00000000007861c8 00000000000007f0 r yy_chk
00000000007869b8 0000000000000540 r yy_def
0000000000786ef8 0000000000000100 r yy_ec
0000000000786ff8 0000000000000044 r yy_meta
0000000000787040 00000000000007f0 r yy_nxt
0000000000787830 000000000000a555 r public_string_pool
0000000000791d88 000000000000d7a0 r public_stubs
000000000079f538 0000000000000014 r CSWTCH.529
000000000079f550 0000000000000024 r s_emptyFence.0
000000000079f5a0 0000000000000020 r error_table
000000000079f5c0 0000000000000086 r _error_code_map
000000000079f650 0000000000000023 r g_bq_InterfaceDescriptor
000000000079f6c0 0000000000000027 V typeinfo name for __gnu_cxx::__concurrence_lock_error
000000000079f6e8 0000000000000029 V typeinfo name for __gnu_cxx::__concurrence_unlock_error
000000000079f718 000000000000002c V typeinfo name for __gnu_cxx::__concurrence_broadcast_error
000000000079f748 0000000000000027 V typeinfo name for __gnu_cxx::__concurrence_wait_error
000000000079f770 0000000000000025 V typeinfo name for __cxxabiv1::__si_class_type_info
000000000079f798 000000000000000d V typeinfo name for std::type_info
000000000079f7a8 0000000000000012 V typeinfo name for std::locale::facet
000000000079f7c0 0000000000000002 R std::locale::facet::_S_c_name
000000000079fed0 000000000000001e V typeinfo name for std::__moneypunct_cache<char, true>
000000000079fef0 000000000000001e V typeinfo name for std::__moneypunct_cache<char, false>
000000000079ff10 000000000000001e V typeinfo name for std::__moneypunct_cache<wchar_t, true>
000000000079ff30 000000000000001e V typeinfo name for std::__moneypunct_cache<wchar_t, false>
000000000079ff50 0000000000000018 V typeinfo name for std::__numpunct_cache<char>
000000000079ff68 0000000000000018 V typeinfo name for std::__numpunct_cache<wchar_t>
000000000079ff80 0000000000000011 V typeinfo name for std::codecvt_base
000000000079ff98 000000000000002d V typeinfo name for std::__codecvt_abstract_base<char16_t, char, _mbstate_t>
000000000079ffc8 000000000000001c V typeinfo name for std::codecvt<char16_t, char, _mbstate_t>
000000000079ffe8 000000000000002d V typeinfo name for std::__codecvt_abstract_base<char32_t, char, _mbstate_t>
00000000007a0018 000000000000001c V typeinfo name for std::codecvt<char32_t, char, _mbstate_t>
00000000007a0038 000000000000002e V typeinfo name for std::__codecvt_abstract_base<char16_t, char8_t, _mbstate_t>
00000000007a0068 000000000000001d V typeinfo name for std::codecvt<char16_t, char8_t, _mbstate_t>
00000000007a0088 000000000000002e V typeinfo name for std::__codecvt_abstract_base<char32_t, char8_t, _mbstate_t>
00000000007a00b8 000000000000001d V typeinfo name for std::codecvt<char32_t, char8_t, _mbstate_t>
00000000007a00d8 0000000000000035 r typeinfo name for std::__facet_shims::(anonymous namespace)::numpunct_shim<char>
00000000007a0110 0000000000000034 r typeinfo name for std::__facet_shims::(anonymous namespace)::collate_shim<char>
00000000007a0148 000000000000003b r typeinfo name for std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, true>
00000000007a0188 000000000000003b r typeinfo name for std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, false>
00000000007a01c8 0000000000000036 r typeinfo name for std::__facet_shims::(anonymous namespace)::money_get_shim<char>
00000000007a0200 0000000000000036 r typeinfo name for std::__facet_shims::(anonymous namespace)::money_put_shim<char>
00000000007a0238 0000000000000035 r typeinfo name for std::__facet_shims::(anonymous namespace)::messages_shim<char>
00000000007a0270 0000000000000035 r typeinfo name for std::__facet_shims::(anonymous namespace)::numpunct_shim<wchar_t>
00000000007a02a8 0000000000000034 r typeinfo name for std::__facet_shims::(anonymous namespace)::collate_shim<wchar_t>
00000000007a02e0 000000000000003b r typeinfo name for std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, true>
00000000007a0320 000000000000003b r typeinfo name for std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, false>
00000000007a0360 0000000000000036 r typeinfo name for std::__facet_shims::(anonymous namespace)::money_get_shim<wchar_t>
00000000007a0398 0000000000000036 r typeinfo name for std::__facet_shims::(anonymous namespace)::money_put_shim<wchar_t>
00000000007a03d0 0000000000000035 r typeinfo name for std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>
00000000007a0408 0000000000000019 V typeinfo name for std::locale::facet::__shim
00000000007a0428 0000000000000035 r typeinfo name for std::__facet_shims::(anonymous namespace)::time_get_shim<char>
00000000007a0460 0000000000000035 r typeinfo name for std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>
00000000007a0498 000000000000000f V typeinfo name for std::ctype_base
00000000007a04a8 000000000000000c V typeinfo name for std::ctype<char>
00000000007a04b8 000000000000000c V typeinfo name for std::ctype<wchar_t>
00000000007a0570 000000000000000f V typeinfo name for std::money_base
00000000007a0580 0000000000000012 V typeinfo name for std::messages_base
00000000007a0598 000000000000000d V typeinfo name for std::time_base
00000000007a05a8 0000000000000018 V typeinfo name for std::__cxx11::collate<char>
00000000007a05c0 0000000000000019 V typeinfo name for std::__cxx11::numpunct<char>
00000000007a05e0 0000000000000020 V typeinfo name for std::__cxx11::moneypunct<char, true>
00000000007a0600 0000000000000020 V typeinfo name for std::__cxx11::moneypunct<char, false>
00000000007a0620 0000000000000019 V typeinfo name for std::__cxx11::messages<char>
00000000007a0640 0000000000000046 V typeinfo name for std::__cxx11::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
00000000007a0688 0000000000000046 V typeinfo name for std::__cxx11::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
00000000007a06d0 0000000000000045 V typeinfo name for std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
00000000007a0718 0000000000000035 r typeinfo name for std::__facet_shims::(anonymous namespace)::numpunct_shim<char>
00000000007a0750 0000000000000034 r typeinfo name for std::__facet_shims::(anonymous namespace)::collate_shim<char>
00000000007a0788 000000000000003b r typeinfo name for std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, true>
00000000007a07c8 000000000000003b r typeinfo name for std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, false>
00000000007a0808 0000000000000036 r typeinfo name for std::__facet_shims::(anonymous namespace)::money_get_shim<char>
00000000007a0840 0000000000000036 r typeinfo name for std::__facet_shims::(anonymous namespace)::money_put_shim<char>
00000000007a0878 0000000000000035 r typeinfo name for std::__facet_shims::(anonymous namespace)::messages_shim<char>
00000000007a08b0 0000000000000035 r typeinfo name for std::__facet_shims::(anonymous namespace)::numpunct_shim<wchar_t>
00000000007a08e8 0000000000000034 r typeinfo name for std::__facet_shims::(anonymous namespace)::collate_shim<wchar_t>
00000000007a0920 000000000000003b r typeinfo name for std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, true>
00000000007a0960 000000000000003b r typeinfo name for std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, false>
00000000007a09a0 0000000000000036 r typeinfo name for std::__facet_shims::(anonymous namespace)::money_get_shim<wchar_t>
00000000007a09d8 0000000000000036 r typeinfo name for std::__facet_shims::(anonymous namespace)::money_put_shim<wchar_t>
00000000007a0a10 0000000000000035 r typeinfo name for std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>
00000000007a0a48 0000000000000035 r typeinfo name for std::__facet_shims::(anonymous namespace)::time_get_shim<char>
00000000007a0a80 0000000000000035 r typeinfo name for std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>
00000000007a0b68 0000000000000018 V typeinfo name for std::__cxx11::collate<wchar_t>
00000000007a0b80 0000000000000019 V typeinfo name for std::__cxx11::numpunct<wchar_t>
00000000007a0ba0 0000000000000020 V typeinfo name for std::__cxx11::moneypunct<wchar_t, true>
00000000007a0bc0 0000000000000020 V typeinfo name for std::__cxx11::moneypunct<wchar_t, false>
00000000007a0be0 0000000000000019 V typeinfo name for std::__cxx11::messages<wchar_t>
00000000007a0c00 0000000000000046 V typeinfo name for std::__cxx11::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
00000000007a0c48 0000000000000046 V typeinfo name for std::__cxx11::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
00000000007a0c90 0000000000000045 V typeinfo name for std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
00000000007a0cd8 0000000000000036 V typeinfo name for __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >
00000000007a0d10 0000000000000036 V typeinfo name for __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >
00000000007a0d48 000000000000000e r std::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned long) const::__fast_bkt
00000000007a0d58 0000000000000988 R std::__detail::__prime_list
00000000007a16e0 0000000000000022 V typeinfo name for std::basic_ios<char, std::char_traits<char> >
00000000007a1708 0000000000000022 V typeinfo name for std::basic_ios<wchar_t, std::char_traits<wchar_t> >
00000000007a1730 000000000000000c V typeinfo name for std::ios_base
00000000007a1740 0000000000000003 V typeinfo name for std::istream
00000000007a1748 0000000000000027 V typeinfo name for std::basic_istream<wchar_t, std::char_traits<wchar_t> >
00000000007a1820 000000000000000e V typeinfo name for std::collate<char>
00000000007a1830 000000000000000f V typeinfo name for std::numpunct<char>
00000000007a1840 000000000000003a V typeinfo name for std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
00000000007a1880 000000000000003a V typeinfo name for std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
00000000007a18c0 0000000000000019 V typeinfo name for std::__timepunct_cache<char>
00000000007a18e0 0000000000000013 V typeinfo name for std::__timepunct<char>
00000000007a18f8 0000000000000016 V typeinfo name for std::moneypunct<char, true>
00000000007a1910 0000000000000016 V typeinfo name for std::moneypunct<char, false>
00000000007a1928 000000000000000f V typeinfo name for std::messages<char>
00000000007a1938 000000000000002c V typeinfo name for std::__codecvt_abstract_base<char, char, _mbstate_t>
00000000007a1968 000000000000003c V typeinfo name for std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
00000000007a19a8 000000000000003c V typeinfo name for std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
00000000007a19e8 000000000000003b V typeinfo name for std::time_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
00000000007a1a28 000000000000003b V typeinfo name for std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
00000000007a1a68 0000000000000003 V typeinfo name for std::ostream
00000000007a1a70 0000000000000027 V typeinfo name for std::basic_ostream<wchar_t, std::char_traits<wchar_t> >
00000000007a1a98 0000000000000029 V typeinfo name for std::basic_streambuf<char, std::char_traits<char> >
00000000007a1ac8 0000000000000029 V typeinfo name for std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >
00000000007a1ba0 000000000000000e V typeinfo name for std::collate<wchar_t>
00000000007a1bb0 000000000000001d V typeinfo name for std::__ctype_abstract_base<wchar_t>
00000000007a1bd0 000000000000000f V typeinfo name for std::numpunct<wchar_t>
00000000007a1be0 000000000000003a V typeinfo name for std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
00000000007a1c20 000000000000003a V typeinfo name for std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
00000000007a1c60 0000000000000019 V typeinfo name for std::__timepunct_cache<wchar_t>
00000000007a1c80 0000000000000013 V typeinfo name for std::__timepunct<wchar_t>
00000000007a1c98 0000000000000016 V typeinfo name for std::moneypunct<wchar_t, true>
00000000007a1cb0 0000000000000016 V typeinfo name for std::moneypunct<wchar_t, false>
00000000007a1cc8 000000000000000f V typeinfo name for std::messages<wchar_t>
00000000007a1cd8 000000000000002c V typeinfo name for std::__codecvt_abstract_base<wchar_t, char, _mbstate_t>
00000000007a1d08 000000000000003c V typeinfo name for std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
00000000007a1d48 000000000000003c V typeinfo name for std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
00000000007a1d88 000000000000003b V typeinfo name for std::time_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
00000000007a1dc8 000000000000003b V typeinfo name for std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
00000000007a1e08 000000000000000d V typeinfo name for std::bad_alloc
00000000007a1e18 0000000000000019 V typeinfo name for std::bad_array_new_length
00000000007a1e38 000000000000000c V typeinfo name for std::bad_cast
00000000007a1e48 0000000000000022 V typeinfo name for __cxxabiv1::__class_type_info
00000000007a1e70 000000000000000d V typeinfo name for std::exception
00000000007a1e80 0000000000000012 V typeinfo name for std::bad_exception
00000000007a1e98 0000000000000020 V typeinfo name for __cxxabiv1::__forced_unwind
00000000007a1eb8 0000000000000024 V typeinfo name for __cxxabiv1::__foreign_exception
00000000007a1ee0 0000000000000001 R std::nothrow
00000000007a1ee8 0000000000000026 V typeinfo name for __cxxabiv1::__vmi_class_type_info
00000000007a1f10 000000000000001b V typeinfo name for std::codecvt<char, char, _mbstate_t>
00000000007a1f30 000000000000001b V typeinfo name for std::codecvt<wchar_t, char, _mbstate_t>
00000000007a1f50 0000000000000034 r std::(anonymous namespace)::mon_yday
00000000007a1f88 0000000000000004 R std::money_base::_S_default_pattern
00000000007a1f90 0000000000000010 V typeinfo name for std::logic_error
00000000007a1fa0 0000000000000011 V typeinfo name for std::length_error
00000000007a1fb8 0000000000000011 V typeinfo name for std::out_of_range
00000000007a1fd0 0000000000000012 V typeinfo name for std::runtime_error
00000000007a1fe8 000000000000001d V typeinfo name for std::ios_base::failure[abi:cxx11]
00000000007a2008 0000000000000012 V typeinfo name for std::__ios_failure
00000000007a2020 0000000000000018 V typeinfo name for std::__iosfail_type_info
00000000007a2038 0000000000000025 r typeinfo name for (anonymous namespace)::io_error_category
00000000007a2060 0000000000000019 V typeinfo name for std::_V2::error_category
00000000007a2080 0000000000000011 V typeinfo name for std::system_error
00000000007a2098 0000000000000016 V typeinfo name for std::ios_base::failure
00000000007a20b0 0000000000000010 r atanlo
00000000007a20c0 0000000000000010 r atanhi
00000000007a20d0 0000000000000148 R __exp2f_data
00000000007a2218 0000000000000120 R __logf_data
00000000007a2340 0000000000000060 R __inv_pio4
00000000007a23a0 00000000000000e0 R __sincosf_table
00000000007a2480 0000000000000870 R __exp_data
00000000007a2cf0 0000000000000890 R __log_data
00000000007a3580 0000000000000020 r atanlo
00000000007a35a0 0000000000000020 r atanhi
00000000007a35c0 0000000000000490 R __log2_data
00000000007a3a50 0000000000000008 r Zero
00000000007a3a60 0000000000000080 r npio2_hw
00000000007a3ae0 0000000000000318 r two_over_pi
00000000007a3df8 0000000000000018 r CSWTCH.9
00000000007a3e10 0000000000000018 r CSWTCH.8
00000000007a3e30 0000000000000120 R __log2f_data
00000000007a3f50 0000000000000128 R __powf_log2_data
00000000007a4080 0000000000000080 r npio2_hw
00000000007a4100 0000000000000108 r two_over_pi
00000000007a4210 0000000000001048 R __pow_log_data
00000000007a5258 000000000000000c r CSWTCH.9
00000000007a5268 000000000000000c r CSWTCH.8
00000000007a5280 000000000000002c r PIo2
00000000007a52b0 000000000000000c r init_jk
00000000007a52c0 0000000000000040 r PIo2
00000000007a5300 0000000000000010 r init_jk
00000000007a5428 0000000000000008 r terminator.0
00000000007a5430 0000000000000101 R _ctype_
00000000007a5670 0000000000000010 r zeroes.0
00000000007a5680 0000000000000010 r blanks.1
00000000007a5790 0000000000000022 r basefix.0
00000000007a58b0 0000000000000010 r zeroes.0
00000000007a58c0 0000000000000010 r blanks.1
00000000007a5a00 0000000000000014 r fpinan.0
00000000007a5a18 0000000000000014 r fpi.1
00000000007a5a30 0000000000000028 r tinytens
00000000007a5c20 0000000000003528 r categories
00000000007a9240 0000000000000010 r zeroes.0
00000000007a9250 0000000000000010 r blanks.1
00000000007a9360 0000000000000010 r zeroes.0
00000000007a9370 0000000000000010 r blanks.1
00000000007a9380 000000000000006c R __action_table
00000000007a93f0 000000000000006c R __state_table
00000000007a9460 0000000000000100 R __chclass
00000000007a9700 0000000000000040 r zeroes.0
00000000007a9740 0000000000000040 r blanks.1
00000000007a97f0 0000000000000022 r basefix.0
00000000007a9818 0000000000000100 R __hexdig
00000000007a9918 000000000000000c r p05.0
00000000007a9928 0000000000000028 R __mprec_bigtens
00000000007a9950 00000000000000c8 R __mprec_tens
00000000007a9a20 0000000000000048 r JIS_action_table
00000000007a9a70 0000000000000048 r JIS_state_table
00000000007a9ab8 0000000000000060 R __month_lengths
00000000007a9b18 r __EH_FRAME_BEGIN__
00000000007a9b18 R __eh_frame_hdr_end
00000000007a9b18 R __eh_frame_hdr_start
0000000000884e50 r __FRAME_END__
0000000000886b38 a _DYNAMIC
0000000000906000 R __data_start
0000000000906000 D __tdata_lma
0000000000906008 D __init_array_start
0000000000906008 B __preinit_array_end
0000000000906008 B __preinit_array_start
0000000000906008 D __tdata_lma_end
0000000000906010 d __frame_dummy_init_array_entry
0000000000906080 D __fini_array_start
0000000000906080 D __init_array_end
0000000000906088 d __do_global_dtors_aux_fini_array_entry
00000000009060b0 D __fini_array_end
00000000009060b0 a _GLOBAL_OFFSET_TABLE_
00000000009060b0 D __got_start__
000000000090b920 D __got_end__
000000000090b920 0000000000000010 d CApp::DrawAndAnimate()::rGameArea
000000000090b930 0000000000000180 d supported
000000000090bab0 00000000000000a0 D nsvg__colors
000000000090bb50 0000000000000070 d known.9876
000000000090bbc0 0000000000000008 d mix_music
000000000090bbc8 0000000000000004 d music_active
000000000090bbcc 0000000000000004 d music_volume
000000000090bbd0 0000000000000030 d s_music_interfaces
000000000090bc00 0000000000000090 D Mix_MusicInterface_MODPLUG
000000000090bc90 0000000000000090 D Mix_MusicInterface_MPG123
000000000090bd20 0000000000000090 D Mix_MusicInterface_OGG
000000000090bdb0 0000000000000090 D Mix_MusicInterface_Opus
000000000090be40 0000000000000090 D Mix_MusicInterface_TIMIDITY
000000000090bed0 0000000000000090 D Mix_MusicInterface_WAV
000000000090bf60 0000000000000004 d SDL_MainIsReady
000000000090bfb8 0000000000000008 d assertion_handler
000000000090bfc0 0000000000000038 d SDL_priority_prefixes
000000000090bff8 0000000000000008 d SDL_log_function
000000000090c000 0000000000000004 d SDL_test_priority
000000000090c004 0000000000000004 d SDL_application_priority
000000000090c008 0000000000000004 d SDL_assert_priority
000000000090c00c 0000000000000004 d SDL_default_priority
000000000090c010 0000000000000010 d bootstrap
000000000090c020 000000000000006c d extensible_guids
000000000090c08c 0000000000000004 d SDL_SIMDAlignment
000000000090c090 0000000000000004 d SDL_CPUFeatures
000000000090c094 0000000000000004 d SDL_update_sensors
000000000090c098 0000000000000004 d SDL_update_joysticks
000000000090c0a0 0000000000000040 d SDL_EventQ
000000000090c0e0 00000000000000b0 d map_StringForControllerButton
000000000090c190 0000000000000038 d map_StringForControllerAxis
000000000090c1d0 0000000000000020 d s_ControllerMappings
000000000090c1f0 0000000000001c90 d arrControllers
000000000090de80 0000000000000010 d render_drivers
000000000090de90 0000000000000060 D GLES2_RenderDriver
000000000090def0 0000000000000028 d GLES2_FragmentShader_TextureExternalOESSrc
000000000090df18 0000000000000028 d GLES2_FragmentShader_TextureNV21BT709Src
000000000090df40 0000000000000028 d GLES2_FragmentShader_TextureNV21BT601Src
000000000090df68 0000000000000028 d GLES2_FragmentShader_TextureNV21JPEGSrc
000000000090df90 0000000000000028 d GLES2_FragmentShader_TextureNV12BT709Src
000000000090dfb8 0000000000000028 d GLES2_FragmentShader_TextureNV12BT601Src
000000000090dfe0 0000000000000028 d GLES2_FragmentShader_TextureNV12JPEGSrc
000000000090e008 0000000000000028 d GLES2_FragmentShader_TextureYUVBT709Src
000000000090e030 0000000000000028 d GLES2_FragmentShader_TextureYUVBT601Src
000000000090e058 0000000000000028 d GLES2_FragmentShader_TextureYUVJPEGSrc
000000000090e080 0000000000000028 d GLES2_FragmentShader_TextureBGRSrc
000000000090e0a8 0000000000000028 d GLES2_FragmentShader_TextureRGBSrc
000000000090e0d0 0000000000000028 d GLES2_FragmentShader_TextureARGBSrc
000000000090e0f8 0000000000000028 d GLES2_FragmentShader_TextureABGRSrc
000000000090e120 0000000000000028 d GLES2_FragmentShader_SolidSrc
000000000090e148 0000000000000028 d GLES2_VertexShader_Default
000000000090e170 0000000000000018 d GLES2_FragmentSrc_TextureExternalOESSrc
000000000090e188 0000000000000018 d GLES2_FragmentSrc_TextureNV12BT709Src
000000000090e1a0 0000000000000018 d GLES2_FragmentSrc_TextureNV21BT601Src
000000000090e1b8 0000000000000018 d GLES2_FragmentSrc_TextureNV21JPEGSrc
000000000090e1d0 0000000000000018 d GLES2_FragmentSrc_TextureNV21BT709Src
000000000090e1e8 0000000000000018 d GLES2_FragmentSrc_TextureNV12BT601Src
000000000090e200 0000000000000018 d GLES2_FragmentSrc_TextureNV12JPEGSrc
000000000090e218 0000000000000018 d GLES2_FragmentSrc_TextureYUVBT709Src
000000000090e230 0000000000000018 d GLES2_FragmentSrc_TextureYUVBT601Src
000000000090e248 0000000000000018 d GLES2_FragmentSrc_TextureYUVJPEGSrc
000000000090e260 0000000000000018 d GLES2_FragmentSrc_TextureBGRSrc
000000000090e278 0000000000000018 d GLES2_FragmentSrc_TextureRGBSrc
000000000090e290 0000000000000018 d GLES2_FragmentSrc_TextureARGBSrc
000000000090e2a8 0000000000000018 d GLES2_FragmentSrc_TextureABGRSrc
000000000090e2c0 0000000000000018 d GLES2_FragmentSrc_SolidSrc
000000000090e2d8 0000000000000018 d GLES2_VertexSrc_Default
000000000090e2f0 0000000000000060 D SW_RenderDriver
000000000090e350 0000000000000028 d s_mem
000000000090e378 0000000000000048 D SDL_expand_byte
000000000090e3c0 0000000000000001 d lookup_8
000000000090e3c8 0000000000000002 d lookup_7
000000000090e3d0 0000000000000004 d lookup_6
000000000090e3d8 0000000000000008 d lookup_5
000000000090e3e0 0000000000000010 d lookup_4
000000000090e3f0 0000000000000020 d lookup_3
000000000090e410 0000000000000040 d lookup_2
000000000090e450 0000000000000080 d lookup_1
000000000090e4d0 0000000000000100 d lookup_0
000000000090e5d0 0000000000000004 d SDL_YUV_ConversionMode
000000000090e5d4 0000000000000004 d thread_local_storage
000000000090e5d8 0000000000000018 D SWITCH_bootstrap
000000000090e5f0 0000000000000020 D SWITCHAUDIOOUT_bootstrap
000000000090e610 0000000000000090 D SDL_SWITCH_JoystickDriver
000000000090e6a0 0000000000000090 D SDL_VIRTUAL_JoystickDriver
000000000090e730 0000000000000058 D SDL_DUMMY_SensorDriver
000000000090e790 0000000000000020 d getpixes
000000000090e7b0 0000000000000004 d features.0
000000000090e7c0 0000000000000028 d colorkey_blit
000000000090e7f0 0000000000000028 d bitmap_blit
000000000090e820 0000000000000028 d one_blitkey
000000000090e850 0000000000000028 d one_blit
000000000090e880 0000000000000020 d normal_blit
000000000090e8a0 00000000000001b0 d normal_blit_4
000000000090ea50 0000000000000150 d normal_blit_3
000000000090eba0 00000000000000f0 d normal_blit_2
000000000090ec90 0000000000000030 d normal_blit_1
000000000090ecc0 0000000000000be8 D SDL_GeneratedBlitFuncTable
000000000090f8a8 0000000000000048 d fft_state48000_960_0
000000000090f8f0 0000000000000048 d fft_state48000_960_1
000000000090f938 0000000000000048 d fft_state48000_960_2
000000000090f980 0000000000000048 d fft_state48000_960_3
000000000090f9c8 00000000000000a0 d mode48000_960_120
000000000090fa68 0000000000000010 D silk_LBRR_flags_iCDF_ptr
000000000090fa78 0000000000000078 d CELT_PVQ_U_ROW
000000000090faf0 0000000000000018 D silk_LTP_gain_iCDF_ptrs
000000000090fb08 0000000000000018 D silk_LTP_vq_ptrs_Q7
000000000090fb20 0000000000000048 D silk_NLSF_CB_NB_MB
000000000090fb68 0000000000000048 D silk_NLSF_CB_WB
000000000090fbb0 0000000000000410 D jpeg_std_message_table
000000000090ffc0 0000000000000004 d simd_features
000000000090ffc4 0000000000000004 d simd_huffman
000000000090ffc8 0000000000000004 d simd_support
000000000090ffd0 00000000000000a0 d ft_default_modules
0000000000910070 0000000000000090 d ft_raccess_guess_table
0000000000910100 0000000000000040 D ft_svg_glyph_class
0000000000910140 0000000000000040 D ft_outline_glyph_class
0000000000910180 0000000000000040 D ft_bitmap_glyph_class
00000000009101c0 00000000000000c0 D tt_driver_class
0000000000910280 0000000000000070 d tt_services
00000000009102f0 0000000000000008 d tt_service_truetype_glyf
00000000009102f8 0000000000000040 d tt_service_metrics_variations
0000000000910338 0000000000000088 d tt_service_gx_multi_masters
00000000009103c0 0000000000000010 d tt_service_properties
00000000009103d0 00000000000008d0 d t1_keywords
0000000000910ca0 00000000000000c0 D t1_driver_class
0000000000910d60 0000000000000080 d t1_services
0000000000910de0 0000000000000010 d t1_service_properties
0000000000910df0 0000000000000008 d t1_service_kerning
0000000000910df8 0000000000000028 d t1_service_ps_info
0000000000910e20 0000000000000088 d t1_service_multi_masters
0000000000910ea8 0000000000000008 d t1_service_ps_name
0000000000910eb0 0000000000000010 d t1_service_glyph_dict
0000000000910ec0 00000000000009a0 d cff_field_handlers
0000000000911860 00000000000000c0 D cff_driver_class
0000000000911920 00000000000000b0 d cff_services
00000000009119d0 0000000000000028 d cff_service_cff_load
00000000009119f8 0000000000000040 d cff_service_metrics_variations
0000000000911a38 0000000000000088 d cff_service_multi_masters
0000000000911ac0 0000000000000010 d cff_service_properties
0000000000911ad0 0000000000000018 d cff_service_cid_info
0000000000911ae8 0000000000000008 d cff_service_get_cmap_info
0000000000911af0 0000000000000008 d cff_service_ps_name
0000000000911af8 0000000000000028 d cff_service_ps_info
0000000000911b20 0000000000000010 d cff_service_glyph_dict
0000000000911b30 0000000000000050 D cff_cmap_unicode_class_rec
0000000000911b80 0000000000000050 D cff_cmap_encoding_class_rec
0000000000911bd0 00000000000000c0 D t1cid_driver_class
0000000000911c90 0000000000000060 d cid_services
0000000000911cf0 0000000000000010 d cid_service_properties
0000000000911d00 0000000000000018 d cid_service_cid_info
0000000000911d18 0000000000000028 d cid_service_ps_info
0000000000911d40 0000000000000008 d cid_service_ps_name
0000000000911d48 00000000000009f0 d cid_field_records
0000000000912738 0000000000000050 d pfr_phy_font_extra_items
0000000000912788 00000000000000c0 D pfr_driver_class
0000000000912848 0000000000000030 d pfr_services
0000000000912878 0000000000000018 d pfr_metrics_service_rec
0000000000912890 0000000000000050 D pfr_cmap_class_rec
00000000009128e0 00000000000003c0 d t42_keywords
0000000000912ca0 00000000000000c0 D t42_driver_class
0000000000912d60 0000000000000050 d t42_services
0000000000912db0 0000000000000028 d t42_service_ps_info
0000000000912dd8 0000000000000008 d t42_service_ps_font_name
0000000000912de0 0000000000000010 d t42_service_glyph_dict
0000000000912df0 00000000000000c0 D winfnt_driver_class
0000000000912eb0 0000000000000030 d winfnt_services
0000000000912ee0 0000000000000008 d winfnt_service_rec
0000000000912ee8 0000000000000050 d fnt_cmap_class_rec
0000000000912f38 00000000000000c0 D pcf_driver_class
0000000000912ff8 0000000000000040 d pcf_services
0000000000913038 0000000000000010 d pcf_service_properties
0000000000913048 0000000000000010 d pcf_service_bdf
0000000000913058 0000000000000050 d pcf_cmap_class
00000000009130a8 00000000000000c0 D bdf_driver_class
0000000000913168 0000000000000030 d bdf_services
0000000000913198 0000000000000010 d bdf_service_bdf
00000000009131a8 0000000000000050 d bdf_cmap_class
00000000009131f8 00000000000007c8 d bdf_properties_
00000000009139c0 0000000000000050 d tt_cmap_classes
0000000000913a10 0000000000000068 D tt_cmap_unicode_class_rec
0000000000913a78 0000000000000068 D tt_cmap14_class_rec
0000000000913ae0 0000000000000068 D tt_cmap13_class_rec
0000000000913b48 0000000000000068 D tt_cmap12_class_rec
0000000000913bb0 0000000000000068 D tt_cmap10_class_rec
0000000000913c18 0000000000000068 D tt_cmap8_class_rec
0000000000913c80 0000000000000068 D tt_cmap6_class_rec
0000000000913ce8 0000000000000068 D tt_cmap4_class_rec
0000000000913d50 0000000000000068 D tt_cmap2_class_rec
0000000000913db8 0000000000000068 D tt_cmap0_class_rec
0000000000913e20 0000000000000048 D sfnt_module_class
0000000000913e68 0000000000000170 d sfnt_interface
0000000000913fd8 0000000000000060 d sfnt_services
0000000000914038 0000000000000010 d sfnt_service_bdf
0000000000914048 0000000000000008 d tt_service_get_cmap_info
0000000000914050 0000000000000008 d sfnt_service_ps_name
0000000000914058 0000000000000010 d sfnt_service_glyph_dict
0000000000914068 0000000000000018 d sfnt_service_sfnt_table
0000000000914080 0000000000000048 D autofit_module_class
00000000009140c8 0000000000000020 D af_autofitter_interface
00000000009140e8 0000000000000020 d af_services
0000000000914108 0000000000000010 d af_service_properties
0000000000914118 0000000000000040 D af_latin_writing_system_class
0000000000914158 0000000000000040 D af_indic_writing_system_class
00000000009141a0 00000000000002c0 D af_style_classes
0000000000914460 00000000000001e8 D af_script_classes
0000000000914650 0000000000000028 D af_writing_system_classes
0000000000914678 0000000000000028 D af_hani_script_class
00000000009146a0 0000000000000028 D af_tibt_script_class
00000000009146c8 0000000000000028 D af_sylo_script_class
00000000009146f0 0000000000000028 D af_orya_script_class
0000000000914718 0000000000000028 D af_limb_script_class
0000000000914740 0000000000000028 D af_vaii_script_class
0000000000914768 0000000000000028 D af_thai_script_class
0000000000914790 0000000000000028 D af_tfng_script_class
00000000009147b8 0000000000000028 D af_telu_script_class
00000000009147e0 0000000000000028 D af_tavt_script_class
0000000000914808 0000000000000028 D af_taml_script_class
0000000000914830 0000000000000028 D af_sund_script_class
0000000000914858 0000000000000028 D af_sinh_script_class
0000000000914880 0000000000000028 D af_shaw_script_class
00000000009148a8 0000000000000028 D af_saur_script_class
00000000009148d0 0000000000000028 D af_rohg_script_class
00000000009148f8 0000000000000028 D af_osma_script_class
0000000000914920 0000000000000028 D af_osge_script_class
0000000000914948 0000000000000028 D af_orkh_script_class
0000000000914970 0000000000000028 D af_olck_script_class
0000000000914998 0000000000000028 D af_none_script_class
00000000009149c0 0000000000000028 D af_nkoo_script_class
00000000009149e8 0000000000000028 D af_mymr_script_class
0000000000914a10 0000000000000028 D af_mong_script_class
0000000000914a38 0000000000000028 D af_medf_script_class
0000000000914a60 0000000000000028 D af_mlym_script_class
0000000000914a88 0000000000000028 D af_lisu_script_class
0000000000914ab0 0000000000000028 D af_latp_script_class
0000000000914ad8 0000000000000028 D af_latb_script_class
0000000000914b00 0000000000000028 D af_latn_script_class
0000000000914b28 0000000000000028 D af_lao_script_class
0000000000914b50 0000000000000028 D af_knda_script_class
0000000000914b78 0000000000000028 D af_khms_script_class
0000000000914ba0 0000000000000028 D af_khmr_script_class
0000000000914bc8 0000000000000028 D af_kali_script_class
0000000000914bf0 0000000000000028 D af_hebr_script_class
0000000000914c18 0000000000000028 D af_guru_script_class
0000000000914c40 0000000000000028 D af_gujr_script_class
0000000000914c68 0000000000000028 D af_grek_script_class
0000000000914c90 0000000000000028 D af_goth_script_class
0000000000914cb8 0000000000000028 D af_glag_script_class
0000000000914ce0 0000000000000028 D af_geok_script_class
0000000000914d08 0000000000000028 D af_geor_script_class
0000000000914d30 0000000000000028 D af_ethi_script_class
0000000000914d58 0000000000000028 D af_dsrt_script_class
0000000000914d80 0000000000000028 D af_deva_script_class
0000000000914da8 0000000000000028 D af_cyrl_script_class
0000000000914dd0 0000000000000028 D af_cprt_script_class
0000000000914df8 0000000000000028 D af_copt_script_class
0000000000914e20 0000000000000028 D af_cher_script_class
0000000000914e48 0000000000000028 D af_cari_script_class
0000000000914e70 0000000000000028 D af_cans_script_class
0000000000914e98 0000000000000028 D af_cakm_script_class
0000000000914ec0 0000000000000028 D af_buhd_script_class
0000000000914ee8 0000000000000028 D af_beng_script_class
0000000000914f10 0000000000000028 D af_bamu_script_class
0000000000914f38 0000000000000028 D af_avst_script_class
0000000000914f60 0000000000000028 D af_armn_script_class
0000000000914f88 0000000000000028 D af_arab_script_class
0000000000914fb0 0000000000000028 D af_adlm_script_class
0000000000914fd8 0000000000000040 D af_dummy_writing_system_class
0000000000915018 0000000000000040 D af_cjk_writing_system_class
0000000000915058 0000000000000048 D pshinter_module_class
00000000009150a0 0000000000000018 d pshinter_interface
00000000009150b8 0000000000000078 D ft_smooth_renderer_class
0000000000915130 0000000000000030 D ft_grays_raster
0000000000915160 0000000000000030 d func_interface
0000000000915190 0000000000000078 D ft_raster1_renderer_class
0000000000915208 0000000000000030 D ft_standard_raster
0000000000915238 0000000000000078 D ft_svg_renderer_class
00000000009152b0 0000000000000020 d ft_svg_services
00000000009152d0 0000000000000010 d ft_svg_service_properties
00000000009152e0 0000000000000008 d svg_interface
00000000009152e8 0000000000000030 D ft_sdf_raster
0000000000915318 0000000000000030 d sdf_decompose_funcs
0000000000915348 0000000000000030 D ft_bitmap_sdf_raster
0000000000915378 0000000000000078 D ft_bitmap_sdf_renderer_class
00000000009153f0 0000000000000078 D ft_sdf_renderer_class
0000000000915468 0000000000000020 d sdf_services
0000000000915488 0000000000000010 d sdf_service_properties
0000000000915498 0000000000000050 D t1_cmap_unicode_class_rec
00000000009154e8 0000000000000050 D t1_cmap_custom_class_rec
0000000000915538 0000000000000050 D t1_cmap_expert_class_rec
0000000000915588 0000000000000050 D t1_cmap_standard_class_rec
00000000009155d8 0000000000000048 D psaux_module_class
0000000000915620 0000000000000058 d psaux_interface
0000000000915678 0000000000000018 D cff_decoder_funcs
0000000000915690 0000000000000040 D cff_builder_funcs
00000000009156d0 0000000000000020 D t1_cmap_classes
00000000009156f0 0000000000000018 D afm_parser_funcs
0000000000915708 0000000000000020 D t1_decoder_funcs
0000000000915728 0000000000000040 D t1_builder_funcs
0000000000915768 0000000000000068 D ps_parser_funcs
00000000009157d0 0000000000000020 D ps_table_funcs
00000000009157f0 0000000000000250 d afm_key_table
0000000000915a40 0000000000000048 D psnames_module_class
0000000000915a88 0000000000000020 d pscmaps_services
0000000000915aa8 0000000000000040 d pscmaps_interface
0000000000915ae8 0000000000000400 D BZ2_crc32Table
0000000000915ee8 0000000000000800 D BZ2_rNums
00000000009166e8 00000000000000a0 d configuration_table
0000000000916788 0000000000000020 d static_l_desc
00000000009167a8 0000000000000020 d static_d_desc
00000000009167c8 0000000000000020 d static_bl_desc
00000000009167e8 0000000000000050 D z_errmsg
0000000000916838 0000000000000010 D _floor_P
0000000000916848 0000000000000008 D _mapping_P
0000000000916850 0000000000000018 D _residue_P
0000000000916868 0000000000000030 D floor1_exportbundle
0000000000916898 0000000000000030 D floor0_exportbundle
00000000009168c8 0000000000000028 D residue0_exportbundle
00000000009168f0 0000000000000028 D residue1_exportbundle
0000000000916918 0000000000000028 D residue2_exportbundle
0000000000916940 0000000000000028 D mapping0_exportbundle
0000000000916970 0000000000000168 d mpg123_error
0000000000916d30 0000000000000020 d text_converters
0000000000916d50 0000000000000200 d synth_base
0000000000916f50 00000000000000a8 d decname
0000000000916ff8 0000000000000060 d bad_reader
0000000000917058 00000000000001e0 d readers
0000000000917238 0000000000000028 D INT123_pnts
0000000000917340 000000000000002c d pretab_choice
0000000000917370 00000000000000d8 d mapend
0000000000917450 00000000000000d8 d map
0000000000917528 0000000000000020 d htc
0000000000917548 0000000000000200 d ht
0000000000917748 0000000000000038 D ModPlug::gSettings
0000000000917780 0000000000000004 D CSoundFile::gnChannels
0000000000917784 0000000000000004 D CSoundFile::gdwMixingFreq
0000000000917788 0000000000000004 D CSoundFile::gnBitsPerSample
000000000091778c 0000000000000004 D CSoundFile::m_nMaxMixChannels
0000000000917790 0000000000000004 D CSoundFile::gnVolumeRampSamples
0000000000917794 0000000000000004 D CSoundFile::m_nStereoSeparation
0000000000917798 0000000000000004 D CSoundFile::gnAGC
000000000091779c 0000000000000004 D CSoundFile::m_nXBassDepth
00000000009177a0 0000000000000004 D CSoundFile::m_nXBassRange
00000000009177a4 0000000000000004 D CSoundFile::m_nReverbDelay
00000000009177a8 0000000000000004 D CSoundFile::m_nReverbDepth
00000000009177ac 0000000000000004 D CSoundFile::m_nProLogicDelay
00000000009177b0 0000000000000004 D CSoundFile::m_nProLogicDepth
00000000009177b8 0000000000000200 d gpMixFunctionTable
00000000009179b8 0000000000000200 d gpFastMixFunctionTable
0000000000917bb8 0000000000000028 d mustype
0000000000917be0 0000000000000008 D autovibit2xm
0000000000917be8 0000000000000078 d sig
0000000000917c60 0000000000000080 d keySigs
0000000000917ce0 0000000000000018 d pat_fun
0000000000917cf8 0000000000000020 d kCat3456
0000000000917d18 0000000000000008 d WebPInitAlphaProcessing_body_last_cpuinfo_used.0
0000000000917d20 0000000000000008 D VP8GetCPUInfo
0000000000917d28 0000000000000008 d VP8DspInit_body_last_cpuinfo_used.0
0000000000917d30 0000000000000008 d VP8FiltersInit_body_last_cpuinfo_used.0
0000000000917d38 0000000000000008 d VP8LDspInit_body_last_cpuinfo_used.0
0000000000917d40 0000000000000008 d WebPRescalerDspInit_body_last_cpuinfo_used.0
0000000000917d48 0000000000000008 d WebPInitUpsamplers_body_last_cpuinfo_used.0
0000000000917d50 0000000000000008 d WebPInitYUV444Converters_body_last_cpuinfo_used.2
0000000000917d58 0000000000000008 d WebPInitConvertARGBToYUV_body_last_cpuinfo_used.0
0000000000917d60 0000000000000008 d WebPInitSamplers_body_last_cpuinfo_used.2
0000000000917d68 0000000000000030 d g_worker_interface
0000000000917d98 0000000000000530 d egl_functions.40
00000000009182c8 0000000000000018 D _eglSoftwareDevice
00000000009182e0 0000000000000080 d egl_platforms
0000000000918360 0000000000000088 D _eglGlobal
00000000009183e8 0000000000000018 d logging
0000000000918400 0000000000000020 d level_strings
0000000000918420 0000000000000048 d st_gl_api
0000000000918468 0000000000000024 D mme9097_blend_enables
0000000000918490 0000000000000060 D mme9097_compute_counter
00000000009184f0 000000000000004c D mme9097_compute_counter_to_query
0000000000918540 0000000000000044 D mme9097_conservative_raster_state
0000000000918588 0000000000000078 D mme9097_draw_arrays_indirect
0000000000918600 00000000000000b8 D mme9097_draw_arrays_indirect_count
00000000009186b8 00000000000000a8 D mme9097_draw_elts_indirect
0000000000918760 00000000000000f4 D mme9097_draw_elts_indirect_count
0000000000918858 0000000000000044 D mme9097_gp_select
00000000009188a0 000000000000001c D mme9097_per_instance_bf
00000000009188c0 0000000000000044 D mme9097_poly_mode_back
0000000000918908 0000000000000044 D mme9097_poly_mode_front
0000000000918950 0000000000000088 D mme9097_query_buffer_write
00000000009189d8 0000000000000044 D mme9097_tep_select
0000000000918a20 0000000000000030 D mme9097_vertex_array_select
0000000000918a50 0000000000000040 D mme90c0_launch_grid_indirect
0000000000918a90 0000000000000080 d validate_list_cp
0000000000918b10 0000000000000001 d first.8
0000000000918b18 00000000000000d8 D util_format_a16_float_description
0000000000918bf0 00000000000000d8 D util_format_a16_sint_description
0000000000918cc8 00000000000000d8 D util_format_a16_snorm_description
0000000000918da0 00000000000000d8 D util_format_a16_uint_description
0000000000918e78 00000000000000d8 D util_format_a16_unorm_description
0000000000918f50 00000000000000d8 D util_format_a1b5g5r5_uint_description
0000000000919028 00000000000000d8 D util_format_a1b5g5r5_unorm_description
0000000000919100 00000000000000d8 D util_format_a1r5g5b5_uint_description
00000000009191d8 00000000000000d8 D util_format_a1r5g5b5_unorm_description
00000000009192b0 00000000000000d8 D util_format_a2b10g10r10_uint_description
0000000000919388 00000000000000d8 D util_format_a2b10g10r10_unorm_description
0000000000919460 00000000000000d8 D util_format_a2r10g10b10_uint_description
0000000000919538 00000000000000d8 D util_format_a2r10g10b10_unorm_description
0000000000919610 00000000000000d8 D util_format_a32_float_description
00000000009196e8 00000000000000d8 D util_format_a32_sint_description
00000000009197c0 00000000000000d8 D util_format_a32_uint_description
0000000000919898 00000000000000d8 D util_format_a4b4g4r4_uint_description
0000000000919970 00000000000000d8 D util_format_a4b4g4r4_unorm_description
0000000000919a48 00000000000000d8 D util_format_a4r4_unorm_description
0000000000919b20 00000000000000d8 D util_format_a4r4g4b4_uint_description
0000000000919bf8 00000000000000d8 D util_format_a4r4g4b4_unorm_description
0000000000919cd0 00000000000000d8 D util_format_a8_sint_description
0000000000919da8 00000000000000d8 D util_format_a8_snorm_description
0000000000919e80 00000000000000d8 D util_format_a8_uint_description
0000000000919f58 00000000000000d8 D util_format_a8_unorm_description
000000000091a030 00000000000000d8 D util_format_a8b8g8r8_sint_description
000000000091a108 00000000000000d8 D util_format_a8b8g8r8_snorm_description
000000000091a1e0 00000000000000d8 D util_format_a8b8g8r8_srgb_description
000000000091a2b8 00000000000000d8 D util_format_a8b8g8r8_sscaled_description
000000000091a390 00000000000000d8 D util_format_a8b8g8r8_uint_description
000000000091a468 00000000000000d8 D util_format_a8b8g8r8_unorm_description
000000000091a540 00000000000000d8 D util_format_a8b8g8r8_uscaled_description
000000000091a618 00000000000000d8 D util_format_a8r8_unorm_description
000000000091a6f0 00000000000000d8 D util_format_a8r8g8b8_srgb_description
000000000091a7c8 00000000000000d8 D util_format_a8r8g8b8_uint_description
000000000091a8a0 00000000000000d8 D util_format_a8r8g8b8_unorm_description
000000000091a978 00000000000000d8 D util_format_astc_10x10_description
000000000091aa50 00000000000000d8 D util_format_astc_10x10_srgb_description
000000000091ab28 00000000000000d8 D util_format_astc_10x5_description
000000000091ac00 00000000000000d8 D util_format_astc_10x5_srgb_description
000000000091acd8 00000000000000d8 D util_format_astc_10x6_description
000000000091adb0 00000000000000d8 D util_format_astc_10x6_srgb_description
000000000091ae88 00000000000000d8 D util_format_astc_10x8_description
000000000091af60 00000000000000d8 D util_format_astc_10x8_srgb_description
000000000091b038 00000000000000d8 D util_format_astc_12x10_description
000000000091b110 00000000000000d8 D util_format_astc_12x10_srgb_description
000000000091b1e8 00000000000000d8 D util_format_astc_12x12_description
000000000091b2c0 00000000000000d8 D util_format_astc_12x12_srgb_description
000000000091b398 00000000000000d8 D util_format_astc_3x3x3_description
000000000091b470 00000000000000d8 D util_format_astc_3x3x3_srgb_description
000000000091b548 00000000000000d8 D util_format_astc_4x3x3_description
000000000091b620 00000000000000d8 D util_format_astc_4x3x3_srgb_description
000000000091b6f8 00000000000000d8 D util_format_astc_4x4_description
000000000091b7d0 00000000000000d8 D util_format_astc_4x4_srgb_description
000000000091b8a8 00000000000000d8 D util_format_astc_4x4x3_description
000000000091b980 00000000000000d8 D util_format_astc_4x4x3_srgb_description
000000000091ba58 00000000000000d8 D util_format_astc_4x4x4_description
000000000091bb30 00000000000000d8 D util_format_astc_4x4x4_srgb_description
000000000091bc08 00000000000000d8 D util_format_astc_5x4_description
000000000091bce0 00000000000000d8 D util_format_astc_5x4_srgb_description
000000000091bdb8 00000000000000d8 D util_format_astc_5x4x4_description
000000000091be90 00000000000000d8 D util_format_astc_5x4x4_srgb_description
000000000091bf68 00000000000000d8 D util_format_astc_5x5_description
000000000091c040 00000000000000d8 D util_format_astc_5x5_srgb_description
000000000091c118 00000000000000d8 D util_format_astc_5x5x4_description
000000000091c1f0 00000000000000d8 D util_format_astc_5x5x4_srgb_description
000000000091c2c8 00000000000000d8 D util_format_astc_5x5x5_description
000000000091c3a0 00000000000000d8 D util_format_astc_5x5x5_srgb_description
000000000091c478 00000000000000d8 D util_format_astc_6x5_description
000000000091c550 00000000000000d8 D util_format_astc_6x5_srgb_description
000000000091c628 00000000000000d8 D util_format_astc_6x5x5_description
000000000091c700 00000000000000d8 D util_format_astc_6x5x5_srgb_description
000000000091c7d8 00000000000000d8 D util_format_astc_6x6_description
000000000091c8b0 00000000000000d8 D util_format_astc_6x6_srgb_description
000000000091c988 00000000000000d8 D util_format_astc_6x6x5_description
000000000091ca60 00000000000000d8 D util_format_astc_6x6x5_srgb_description
000000000091cb38 00000000000000d8 D util_format_astc_6x6x6_description
000000000091cc10 00000000000000d8 D util_format_astc_6x6x6_srgb_description
000000000091cce8 00000000000000d8 D util_format_astc_8x5_description
000000000091cdc0 00000000000000d8 D util_format_astc_8x5_srgb_description
000000000091ce98 00000000000000d8 D util_format_astc_8x6_description
000000000091cf70 00000000000000d8 D util_format_astc_8x6_srgb_description
000000000091d048 00000000000000d8 D util_format_astc_8x8_description
000000000091d120 00000000000000d8 D util_format_astc_8x8_srgb_description
000000000091d1f8 00000000000000d8 D util_format_atc_rgb_description
000000000091d2d0 00000000000000d8 D util_format_atc_rgba_explicit_description
000000000091d3a8 00000000000000d8 D util_format_atc_rgba_interpolated_description
000000000091d480 00000000000000d8 D util_format_b10g10r10a2_sint_description
000000000091d558 00000000000000d8 D util_format_b10g10r10a2_snorm_description
000000000091d630 00000000000000d8 D util_format_b10g10r10a2_sscaled_description
000000000091d708 00000000000000d8 D util_format_b10g10r10a2_uint_description
000000000091d7e0 00000000000000d8 D util_format_b10g10r10a2_unorm_description
000000000091d8b8 00000000000000d8 D util_format_b10g10r10a2_uscaled_description
000000000091d990 00000000000000d8 D util_format_b10g10r10x2_unorm_description
000000000091da68 00000000000000d8 D util_format_b2g3r3_uint_description
000000000091db40 00000000000000d8 D util_format_b2g3r3_unorm_description
000000000091dc18 00000000000000d8 D util_format_b4g4r4a4_uint_description
000000000091dcf0 00000000000000d8 D util_format_b4g4r4a4_unorm_description
000000000091ddc8 00000000000000d8 D util_format_b4g4r4x4_unorm_description
000000000091dea0 00000000000000d8 D util_format_b5g5r5a1_uint_description
000000000091df78 00000000000000d8 D util_format_b5g5r5a1_unorm_description
000000000091e050 00000000000000d8 D util_format_b5g5r5x1_unorm_description
000000000091e128 00000000000000d8 D util_format_b5g6r5_srgb_description
000000000091e200 00000000000000d8 D util_format_b5g6r5_uint_description
000000000091e2d8 00000000000000d8 D util_format_b5g6r5_unorm_description
000000000091e3b0 00000000000000d8 D util_format_b8g8r8_sint_description
000000000091e488 00000000000000d8 D util_format_b8g8r8_snorm_description
000000000091e560 00000000000000d8 D util_format_b8g8r8_srgb_description
000000000091e638 00000000000000d8 D util_format_b8g8r8_sscaled_description
000000000091e710 00000000000000d8 D util_format_b8g8r8_uint_description
000000000091e7e8 00000000000000d8 D util_format_b8g8r8_unorm_description
000000000091e8c0 00000000000000d8 D util_format_b8g8r8_uscaled_description
000000000091e998 00000000000000d8 D util_format_b8g8r8a8_sint_description
000000000091ea70 00000000000000d8 D util_format_b8g8r8a8_snorm_description
000000000091eb48 00000000000000d8 D util_format_b8g8r8a8_srgb_description
000000000091ec20 00000000000000d8 D util_format_b8g8r8a8_sscaled_description
000000000091ecf8 00000000000000d8 D util_format_b8g8r8a8_uint_description
000000000091edd0 00000000000000d8 D util_format_b8g8r8a8_unorm_description
000000000091eea8 00000000000000d8 D util_format_b8g8r8a8_uscaled_description
000000000091ef80 00000000000000d8 D util_format_b8g8r8x8_srgb_description
000000000091f058 00000000000000d8 D util_format_b8g8r8x8_unorm_description
000000000091f130 00000000000000d8 D util_format_etc2_r11_snorm_description
000000000091f208 00000000000000d8 D util_format_etc2_r11_unorm_description
000000000091f2e0 00000000000000d8 D util_format_etc2_rg11_snorm_description
000000000091f3b8 00000000000000d8 D util_format_etc2_rg11_unorm_description
000000000091f490 00000000000000d8 D util_format_etc2_rgb8_description
000000000091f568 00000000000000d8 D util_format_etc2_rgb8a1_description
000000000091f640 00000000000000d8 D util_format_etc2_rgba8_description
000000000091f718 00000000000000d8 D util_format_etc2_srgb8_description
000000000091f7f0 00000000000000d8 D util_format_etc2_srgb8a1_description
000000000091f8c8 00000000000000d8 D util_format_etc2_srgba8_description
000000000091f9a0 00000000000000d8 D util_format_fxt1_rgb_description
000000000091fa78 00000000000000d8 D util_format_fxt1_rgba_description
000000000091fb50 00000000000000d8 D util_format_g16r16_snorm_description
000000000091fc28 00000000000000d8 D util_format_g16r16_unorm_description
000000000091fd00 00000000000000d8 D util_format_g8r8_sint_description
000000000091fdd8 00000000000000d8 D util_format_g8r8_snorm_description
000000000091feb0 00000000000000d8 D util_format_g8r8_unorm_description
000000000091ff88 00000000000000d8 D util_format_i16_float_description
0000000000920060 00000000000000d8 D util_format_i16_sint_description
0000000000920138 00000000000000d8 D util_format_i16_snorm_description
0000000000920210 00000000000000d8 D util_format_i16_uint_description
00000000009202e8 00000000000000d8 D util_format_i16_unorm_description
00000000009203c0 00000000000000d8 D util_format_i32_float_description
0000000000920498 00000000000000d8 D util_format_i32_sint_description
0000000000920570 00000000000000d8 D util_format_i32_uint_description
0000000000920648 00000000000000d8 D util_format_i8_sint_description
0000000000920720 00000000000000d8 D util_format_i8_snorm_description
00000000009207f8 00000000000000d8 D util_format_i8_uint_description
00000000009208d0 00000000000000d8 D util_format_i8_unorm_description
00000000009209a8 00000000000000d8 D util_format_l16_float_description
0000000000920a80 00000000000000d8 D util_format_l16_sint_description
0000000000920b58 00000000000000d8 D util_format_l16_snorm_description
0000000000920c30 00000000000000d8 D util_format_l16_uint_description
0000000000920d08 00000000000000d8 D util_format_l16_unorm_description
0000000000920de0 00000000000000d8 D util_format_l16a16_float_description
0000000000920eb8 00000000000000d8 D util_format_l16a16_sint_description
0000000000920f90 00000000000000d8 D util_format_l16a16_snorm_description
0000000000921068 00000000000000d8 D util_format_l16a16_uint_description
0000000000921140 00000000000000d8 D util_format_l16a16_unorm_description
0000000000921218 00000000000000d8 D util_format_l32_float_description
00000000009212f0 00000000000000d8 D util_format_l32_sint_description
00000000009213c8 00000000000000d8 D util_format_l32_uint_description
00000000009214a0 00000000000000d8 D util_format_l32a32_float_description
0000000000921578 00000000000000d8 D util_format_l32a32_sint_description
0000000000921650 00000000000000d8 D util_format_l32a32_uint_description
0000000000921728 00000000000000d8 D util_format_l4a4_unorm_description
0000000000921800 00000000000000d8 D util_format_l8_sint_description
00000000009218d8 00000000000000d8 D util_format_l8_snorm_description
00000000009219b0 00000000000000d8 D util_format_l8_srgb_description
0000000000921a88 00000000000000d8 D util_format_l8_uint_description
0000000000921b60 00000000000000d8 D util_format_l8_unorm_description
0000000000921c38 00000000000000d8 D util_format_l8a8_sint_description
0000000000921d10 00000000000000d8 D util_format_l8a8_snorm_description
0000000000921de8 00000000000000d8 D util_format_l8a8_srgb_description
0000000000921ec0 00000000000000d8 D util_format_l8a8_uint_description
0000000000921f98 00000000000000d8 D util_format_l8a8_unorm_description
0000000000922070 00000000000000d8 D util_format_none_description
0000000000922148 00000000000000d8 D util_format_r10g10b10a2_sint_description
0000000000922220 00000000000000d8 D util_format_r10g10b10a2_snorm_description
00000000009222f8 00000000000000d8 D util_format_r10g10b10a2_sscaled_description
00000000009223d0 00000000000000d8 D util_format_r10g10b10a2_uint_description
00000000009224a8 00000000000000d8 D util_format_r10g10b10a2_unorm_description
0000000000922580 00000000000000d8 D util_format_r10g10b10a2_uscaled_description
0000000000922658 00000000000000d8 D util_format_r10g10b10x2_snorm_description
0000000000922730 00000000000000d8 D util_format_r10g10b10x2_unorm_description
0000000000922808 00000000000000d8 D util_format_r10g10b10x2_uscaled_description
00000000009228e0 00000000000000d8 D util_format_r10sg10sb10sa2u_norm_description
00000000009229b8 00000000000000d8 D util_format_r16_float_description
0000000000922a90 00000000000000d8 D util_format_r16_sint_description
0000000000922b68 00000000000000d8 D util_format_r16_snorm_description
0000000000922c40 00000000000000d8 D util_format_r16_sscaled_description
0000000000922d18 00000000000000d8 D util_format_r16_uint_description
0000000000922df0 00000000000000d8 D util_format_r16_unorm_description
0000000000922ec8 00000000000000d8 D util_format_r16_uscaled_description
0000000000922fa0 00000000000000d8 D util_format_r16a16_float_description
0000000000923078 00000000000000d8 D util_format_r16a16_sint_description
0000000000923150 00000000000000d8 D util_format_r16a16_snorm_description
0000000000923228 00000000000000d8 D util_format_r16a16_uint_description
0000000000923300 00000000000000d8 D util_format_r16a16_unorm_description
00000000009233d8 00000000000000d8 D util_format_r16g16_float_description
00000000009234b0 00000000000000d8 D util_format_r16g16_sint_description
0000000000923588 00000000000000d8 D util_format_r16g16_snorm_description
0000000000923660 00000000000000d8 D util_format_r16g16_sscaled_description
0000000000923738 00000000000000d8 D util_format_r16g16_uint_description
0000000000923810 00000000000000d8 D util_format_r16g16_unorm_description
00000000009238e8 00000000000000d8 D util_format_r16g16_uscaled_description
00000000009239c0 00000000000000d8 D util_format_r16g16b16_float_description
0000000000923a98 00000000000000d8 D util_format_r16g16b16_sint_description
0000000000923b70 00000000000000d8 D util_format_r16g16b16_snorm_description
0000000000923c48 00000000000000d8 D util_format_r16g16b16_sscaled_description
0000000000923d20 00000000000000d8 D util_format_r16g16b16_uint_description
0000000000923df8 00000000000000d8 D util_format_r16g16b16_unorm_description
0000000000923ed0 00000000000000d8 D util_format_r16g16b16_uscaled_description
0000000000923fa8 00000000000000d8 D util_format_r16g16b16a16_float_description
0000000000924080 00000000000000d8 D util_format_r16g16b16a16_sint_description
0000000000924158 00000000000000d8 D util_format_r16g16b16a16_snorm_description
0000000000924230 00000000000000d8 D util_format_r16g16b16a16_sscaled_description
0000000000924308 00000000000000d8 D util_format_r16g16b16a16_uint_description
00000000009243e0 00000000000000d8 D util_format_r16g16b16a16_unorm_description
00000000009244b8 00000000000000d8 D util_format_r16g16b16a16_uscaled_description
0000000000924590 00000000000000d8 D util_format_r16g16b16x16_float_description
0000000000924668 00000000000000d8 D util_format_r16g16b16x16_sint_description
0000000000924740 00000000000000d8 D util_format_r16g16b16x16_snorm_description
0000000000924818 00000000000000d8 D util_format_r16g16b16x16_uint_description
00000000009248f0 00000000000000d8 D util_format_r16g16b16x16_unorm_description
00000000009249c8 00000000000000d8 D util_format_r32_fixed_description
0000000000924aa0 00000000000000d8 D util_format_r32_float_description
0000000000924b78 00000000000000d8 D util_format_r32_sint_description
0000000000924c50 00000000000000d8 D util_format_r32_snorm_description
0000000000924d28 00000000000000d8 D util_format_r32_sscaled_description
0000000000924e00 00000000000000d8 D util_format_r32_uint_description
0000000000924ed8 00000000000000d8 D util_format_r32_unorm_description
0000000000924fb0 00000000000000d8 D util_format_r32_uscaled_description
0000000000925088 00000000000000d8 D util_format_r32a32_float_description
0000000000925160 00000000000000d8 D util_format_r32a32_sint_description
0000000000925238 00000000000000d8 D util_format_r32a32_uint_description
0000000000925310 00000000000000d8 D util_format_r32g32_fixed_description
00000000009253e8 00000000000000d8 D util_format_r32g32_float_description
00000000009254c0 00000000000000d8 D util_format_r32g32_sint_description
0000000000925598 00000000000000d8 D util_format_r32g32_snorm_description
0000000000925670 00000000000000d8 D util_format_r32g32_sscaled_description
0000000000925748 00000000000000d8 D util_format_r32g32_uint_description
0000000000925820 00000000000000d8 D util_format_r32g32_unorm_description
00000000009258f8 00000000000000d8 D util_format_r32g32_uscaled_description
00000000009259d0 00000000000000d8 D util_format_r32g32b32_fixed_description
0000000000925aa8 00000000000000d8 D util_format_r32g32b32_float_description
0000000000925b80 00000000000000d8 D util_format_r32g32b32_sint_description
0000000000925c58 00000000000000d8 D util_format_r32g32b32_snorm_description
0000000000925d30 00000000000000d8 D util_format_r32g32b32_sscaled_description
0000000000925e08 00000000000000d8 D util_format_r32g32b32_uint_description
0000000000925ee0 00000000000000d8 D util_format_r32g32b32_unorm_description
0000000000925fb8 00000000000000d8 D util_format_r32g32b32_uscaled_description
0000000000926090 00000000000000d8 D util_format_r32g32b32a32_fixed_description
0000000000926168 00000000000000d8 D util_format_r32g32b32a32_float_description
0000000000926240 00000000000000d8 D util_format_r32g32b32a32_sint_description
0000000000926318 00000000000000d8 D util_format_r32g32b32a32_snorm_description
00000000009263f0 00000000000000d8 D util_format_r32g32b32a32_sscaled_description
00000000009264c8 00000000000000d8 D util_format_r32g32b32a32_uint_description
00000000009265a0 00000000000000d8 D util_format_r32g32b32a32_unorm_description
0000000000926678 00000000000000d8 D util_format_r32g32b32a32_uscaled_description
0000000000926750 00000000000000d8 D util_format_r32g32b32x32_float_description
0000000000926828 00000000000000d8 D util_format_r32g32b32x32_sint_description
0000000000926900 00000000000000d8 D util_format_r32g32b32x32_uint_description
00000000009269d8 00000000000000d8 D util_format_r3g3b2_uint_description
0000000000926ab0 00000000000000d8 D util_format_r3g3b2_unorm_description
0000000000926b88 00000000000000d8 D util_format_r4a4_unorm_description
0000000000926c60 00000000000000d8 D util_format_r4g4b4a4_uint_description
0000000000926d38 00000000000000d8 D util_format_r4g4b4a4_unorm_description
0000000000926e10 00000000000000d8 D util_format_r5g5b5a1_uint_description
0000000000926ee8 00000000000000d8 D util_format_r5g5b5a1_unorm_description
0000000000926fc0 00000000000000d8 D util_format_r5g6b5_uint_description
0000000000927098 00000000000000d8 D util_format_r5g6b5_unorm_description
0000000000927170 00000000000000d8 D util_format_r5sg5sb6u_norm_description
0000000000927248 00000000000000d8 D util_format_r64_float_description
0000000000927320 00000000000000d8 D util_format_r64g64_float_description
00000000009273f8 00000000000000d8 D util_format_r64g64b64_float_description
00000000009274d0 00000000000000d8 D util_format_r64g64b64a64_float_description
00000000009275a8 00000000000000d8 D util_format_r8_sint_description
0000000000927680 00000000000000d8 D util_format_r8_snorm_description
0000000000927758 00000000000000d8 D util_format_r8_srgb_description
0000000000927830 00000000000000d8 D util_format_r8_sscaled_description
0000000000927908 00000000000000d8 D util_format_r8_uint_description
00000000009279e0 00000000000000d8 D util_format_r8_unorm_description
0000000000927ab8 00000000000000d8 D util_format_r8_uscaled_description
0000000000927b90 00000000000000d8 D util_format_r8a8_sint_description
0000000000927c68 00000000000000d8 D util_format_r8a8_snorm_description
0000000000927d40 00000000000000d8 D util_format_r8a8_uint_description
0000000000927e18 00000000000000d8 D util_format_r8a8_unorm_description
0000000000927ef0 00000000000000d8 D util_format_r8g8_sint_description
0000000000927fc8 00000000000000d8 D util_format_r8g8_snorm_description
00000000009280a0 00000000000000d8 D util_format_r8g8_srgb_description
0000000000928178 00000000000000d8 D util_format_r8g8_sscaled_description
0000000000928250 00000000000000d8 D util_format_r8g8_uint_description
0000000000928328 00000000000000d8 D util_format_r8g8_unorm_description
0000000000928400 00000000000000d8 D util_format_r8g8_uscaled_description
00000000009284d8 00000000000000d8 D util_format_r8g8b8_sint_description
00000000009285b0 00000000000000d8 D util_format_r8g8b8_snorm_description
0000000000928688 00000000000000d8 D util_format_r8g8b8_srgb_description
0000000000928760 00000000000000d8 D util_format_r8g8b8_sscaled_description
0000000000928838 00000000000000d8 D util_format_r8g8b8_uint_description
0000000000928910 00000000000000d8 D util_format_r8g8b8_unorm_description
00000000009289e8 00000000000000d8 D util_format_r8g8b8_uscaled_description
0000000000928ac0 00000000000000d8 D util_format_r8g8b8a8_sint_description
0000000000928b98 00000000000000d8 D util_format_r8g8b8a8_snorm_description
0000000000928c70 00000000000000d8 D util_format_r8g8b8a8_srgb_description
0000000000928d48 00000000000000d8 D util_format_r8g8b8a8_sscaled_description
0000000000928e20 00000000000000d8 D util_format_r8g8b8a8_uint_description
0000000000928ef8 00000000000000d8 D util_format_r8g8b8a8_unorm_description
0000000000928fd0 00000000000000d8 D util_format_r8g8b8a8_uscaled_description
00000000009290a8 00000000000000d8 D util_format_r8g8b8x8_sint_description
0000000000929180 00000000000000d8 D util_format_r8g8b8x8_snorm_description
0000000000929258 00000000000000d8 D util_format_r8g8b8x8_srgb_description
0000000000929330 00000000000000d8 D util_format_r8g8b8x8_uint_description
0000000000929408 00000000000000d8 D util_format_r8g8b8x8_unorm_description
00000000009294e0 00000000000000d8 D util_format_r8sg8sb8ux8u_norm_description
00000000009295b8 00000000000000d8 D util_format_x1b5g5r5_unorm_description
0000000000929690 00000000000000d8 D util_format_x8b8g8r8_sint_description
0000000000929768 00000000000000d8 D util_format_x8b8g8r8_snorm_description
0000000000929840 00000000000000d8 D util_format_x8b8g8r8_srgb_description
0000000000929918 00000000000000d8 D util_format_x8b8g8r8_unorm_description
00000000009299f0 00000000000000d8 D util_format_x8r8g8b8_srgb_description
0000000000929ac8 00000000000000d8 D util_format_x8r8g8b8_unorm_description
0000000000929ba0 00000000000000d8 D util_format_z24_unorm_s8_uint_as_r8g8b8a8_description
0000000000929c78 00000000000000d8 D util_format_ayuv_description
0000000000929d50 00000000000000d8 D util_format_bptc_rgb_float_description
0000000000929e28 00000000000000d8 D util_format_bptc_rgb_ufloat_description
0000000000929f00 00000000000000d8 D util_format_bptc_rgba_unorm_description
0000000000929fd8 00000000000000d8 D util_format_bptc_srgba_description
000000000092a0b0 00000000000000d8 D util_format_dxt1_rgb_description
000000000092a188 00000000000000d8 D util_format_dxt1_rgba_description
000000000092a260 00000000000000d8 D util_format_dxt1_srgb_description
000000000092a338 00000000000000d8 D util_format_dxt1_srgba_description
000000000092a410 00000000000000d8 D util_format_dxt3_rgba_description
000000000092a4e8 00000000000000d8 D util_format_dxt3_srgba_description
000000000092a5c0 00000000000000d8 D util_format_dxt5_rgba_description
000000000092a698 00000000000000d8 D util_format_dxt5_srgba_description
000000000092a770 00000000000000d8 D util_format_etc1_rgb8_description
000000000092a848 00000000000000d8 D util_format_g8r8_b8r8_unorm_description
000000000092a920 00000000000000d8 D util_format_g8r8_g8b8_unorm_description
000000000092a9f8 00000000000000d8 D util_format_iyuv_description
000000000092aad0 00000000000000d8 D util_format_latc1_snorm_description
000000000092aba8 00000000000000d8 D util_format_latc1_unorm_description
000000000092ac80 00000000000000d8 D util_format_latc2_snorm_description
000000000092ad58 00000000000000d8 D util_format_latc2_unorm_description
000000000092ae30 00000000000000d8 D util_format_nv12_description
000000000092af08 00000000000000d8 D util_format_nv21_description
000000000092afe0 00000000000000d8 D util_format_p010_description
000000000092b0b8 00000000000000d8 D util_format_p016_description
000000000092b190 00000000000000d8 D util_format_r11g11b10_float_description
000000000092b268 00000000000000d8 D util_format_r1_unorm_description
000000000092b340 00000000000000d8 D util_format_r8g8_b8g8_unorm_description
000000000092b418 00000000000000d8 D util_format_r8g8_r8b8_unorm_description
000000000092b4f0 00000000000000d8 D util_format_r8g8bx_snorm_description
000000000092b5c8 00000000000000d8 D util_format_r9g9b9e5_float_description
000000000092b6a0 00000000000000d8 D util_format_rgtc1_snorm_description
000000000092b778 00000000000000d8 D util_format_rgtc1_unorm_description
000000000092b850 00000000000000d8 D util_format_rgtc2_snorm_description
000000000092b928 00000000000000d8 D util_format_rgtc2_unorm_description
000000000092ba00 00000000000000d8 D util_format_s8_uint_description
000000000092bad8 00000000000000d8 D util_format_s8_uint_z24_unorm_description
000000000092bbb0 00000000000000d8 D util_format_s8x24_uint_description
000000000092bc88 00000000000000d8 D util_format_uyvy_description
000000000092bd60 00000000000000d8 D util_format_x24s8_uint_description
000000000092be38 00000000000000d8 D util_format_x32_s8x24_uint_description
000000000092bf10 00000000000000d8 D util_format_x8z24_unorm_description
000000000092bfe8 00000000000000d8 D util_format_xyuv_description
000000000092c0c0 00000000000000d8 D util_format_yuyv_description
000000000092c198 00000000000000d8 D util_format_yv12_description
000000000092c270 00000000000000d8 D util_format_yv16_description
000000000092c348 00000000000000d8 D util_format_z16_unorm_description
000000000092c420 00000000000000d8 D util_format_z24_unorm_s8_uint_description
000000000092c4f8 00000000000000d8 D util_format_z24x8_unorm_description
000000000092c5d0 00000000000000d8 D util_format_z32_float_description
000000000092c6a8 00000000000000d8 D util_format_z32_float_s8x24_uint_description
000000000092c780 00000000000000d8 D util_format_z32_unorm_description
000000000092c858 0000000000000004 d NextDynamicID
000000000092c860 000000000000001f d out_of_memory
000000000092c880 0000000000000004 d debug.0
000000000092c884 0000000000000004 d debug.3
000000000092c888 0000000000000010 d color.2
000000000092c898 0000000000000004 d index.3
000000000092c8a0 000000000000000c d normal.1
000000000092c8b0 0000000000000010 d texcoord.0
000000000092c8c0 0000000000000010 d vertex.4
000000000092c8d0 0000000000002ac0 D _mesa_extension_table
000000000092f390 0000000000005240 d format_info
00000000009345d0 0000000000000028 d weights.3
00000000009345f8 0000000000000040 d decode_1.0
0000000000934638 0000000000000020 d override.0
0000000000934658 0000000000000038 d inv_mat_tab
0000000000934690 0000000000000020 d vert_attrfunc
00000000009346b0 0000000000000088 d prim_names
0000000000934738 0000000000000001 d first.1
0000000000934739 0000000000000001 d first.1
0000000000934740 0000000000000180 d st_debug_flags
00000000009348c0 0000000000000030 V vtable for ast_node
00000000009348f0 0000000000000030 V vtable for ast_compound_statement
0000000000934920 0000000000000030 V vtable for ast_expression_statement
0000000000934950 0000000000000030 V vtable for ast_function
0000000000934980 0000000000000030 V vtable for ast_fully_specified_type
00000000009349b0 0000000000000030 V vtable for ast_parameter_declarator
00000000009349e0 0000000000000030 V vtable for ast_function_definition
0000000000934a10 0000000000000030 V vtable for ast_declaration
0000000000934a40 0000000000000030 V vtable for ast_declarator_list
0000000000934a70 0000000000000030 V vtable for ast_jump_statement
0000000000934aa0 0000000000000030 V vtable for ast_demote_statement
0000000000934ad0 0000000000000030 V vtable for ast_selection_statement
0000000000934b00 0000000000000030 V vtable for ast_switch_statement
0000000000934b30 0000000000000030 V vtable for ast_switch_body
0000000000934b60 0000000000000030 V vtable for ast_case_label
0000000000934b90 0000000000000030 V vtable for ast_case_label_list
0000000000934bc0 0000000000000030 V vtable for ast_case_statement
0000000000934bf0 0000000000000030 V vtable for ast_case_statement_list
0000000000934c20 0000000000000030 V vtable for ast_iteration_statement
0000000000934c50 0000000000000030 V vtable for ast_struct_specifier
0000000000934c80 0000000000000030 V vtable for ast_subroutine_list
0000000000934cb0 0000000000001220 d _mesa_glsl_supported_extensions
0000000000935ed0 0000000000000080 V vtable for ir_rvalue
0000000000935f50 0000000000000040 V vtable for ir_variable
0000000000935f90 0000000000000080 V vtable for ir_swizzle
0000000000936010 0000000000000040 V vtable for ir_return
0000000000936050 0000000000000040 V vtable for ir_discard
0000000000936090 0000000000000040 V vtable for ir_demote
00000000009360d0 0000000000000040 V vtable for ir_loop_jump
0000000000936110 0000000000000040 V vtable for ir_if
0000000000936150 0000000000000040 V vtable for ir_loop
0000000000936190 0000000000000048 V vtable for ir_call
00000000009361d8 0000000000000088 V vtable for ir_dereference_variable
0000000000936260 0000000000000088 V vtable for ir_dereference_array
00000000009362e8 0000000000000088 V vtable for ir_dereference_record
0000000000936370 0000000000000080 V vtable for ir_texture
00000000009363f0 0000000000000048 V vtable for ir_assignment
0000000000936438 0000000000000040 V vtable for ir_function
0000000000936478 0000000000000040 V vtable for ir_function_signature
00000000009364b8 0000000000000088 V vtable for ir_constant
0000000000936540 0000000000000140 V vtable for fixup_ir_call_visitor
0000000000936680 0000000000000060 d tex_opcode_strs
00000000009366e0 00000000000004c8 D ir_expression_operation_strings
0000000000936ba8 0000000000000080 V vtable for ir_expression
0000000000936c28 0000000000000140 V vtable for ir_hierarchical_visitor
0000000000936d68 0000000000000040 V vtable for ir_emit_vertex
0000000000936da8 0000000000000040 V vtable for ir_end_primitive
0000000000936de8 0000000000000040 V vtable for ir_barrier
0000000000936eb0 00000000000000d0 V vtable for ir_print_visitor
0000000000936f80 0000000000000004 d ir_print_visitor::unique_name(ir_variable*)::i
0000000000936f84 0000000000000004 d ir_print_visitor::unique_name(ir_variable*)::arg
0000000000936f88 0000000000000140 V vtable for array_sizing_visitor
00000000009370c8 0000000000000140 d vtable for (anonymous namespace)::deref_type_updater
0000000000937208 0000000000000140 d vtable for (anonymous namespace)::find_deref_visitor
0000000000937348 0000000000000150 d vtable for (anonymous namespace)::array_resize_visitor
0000000000937498 0000000000000140 d vtable for (anonymous namespace)::find_assignment_visitor
00000000009375d8 0000000000000140 d vtable for (anonymous namespace)::find_emit_vertex_visitor
0000000000937718 0000000000000140 d vtable for (anonymous namespace)::dynamic_sampler_array_indexing_visitor
0000000000937858 0000000000000140 d vtable for remap_variables(ir_instruction*, gl_linked_shader*, hash_table*)::remap_visitor
0000000000937998 0000000000000140 d vtable for (anonymous namespace)::call_link_visitor
0000000000937ad8 0000000000000048 V vtable for parcel_out_uniform_storage
0000000000937b20 0000000000000038 d vtable for (anonymous namespace)::count_uniform_size
0000000000937b58 0000000000000038 d vtable for (anonymous namespace)::ubo_visitor
0000000000937b90 0000000000000038 d vtable for (anonymous namespace)::count_block_size
0000000000937bc8 0000000000000038 V vtable for tfeedback_candidate_generator
0000000000937c00 0000000000000140 V vtable for examine_rhs
0000000000937d40 0000000000000140 d vtable for (anonymous namespace)::loop_analysis
0000000000937e80 0000000000000140 V vtable for loop_unroll_count
0000000000937fc0 0000000000000140 d vtable for (anonymous namespace)::loop_unroll_visitor
0000000000938100 0000000000000140 d vtable for (anonymous namespace)::lower_builtins_visitor
0000000000938240 0000000000000148 d vtable for (anonymous namespace)::lower_const_array_visitor
0000000000938388 0000000000000140 d vtable for (anonymous namespace)::lower_cs_derived_visitor
00000000009384c8 0000000000000140 d vtable for (anonymous namespace)::lower_discard_flow_visitor
0000000000938608 0000000000000148 d vtable for (anonymous namespace)::lower_distance_visitor
0000000000938750 0000000000000148 d vtable for (anonymous namespace)::lower_distance_visitor_counter
0000000000938898 0000000000000140 d vtable for (anonymous namespace)::lower_instructions_visitor
00000000009389d8 00000000000000d0 d vtable for (anonymous namespace)::ir_lower_jumps_visitor
0000000000938aa8 0000000000000140 V vtable for lower_packed_varyings_gs_splicer
0000000000938be8 0000000000000140 V vtable for lower_packed_varyings_return_splicer
0000000000938d28 0000000000000148 d vtable for (anonymous namespace)::flatten_named_interface_blocks_declarations
0000000000938e70 0000000000000148 d vtable for (anonymous namespace)::find_precision_visitor
0000000000938fb8 0000000000000148 d vtable for (anonymous namespace)::lower_precision_visitor
0000000000939100 0000000000000140 d vtable for (anonymous namespace)::find_lowerable_rvalues_visitor
0000000000939240 0000000000000140 d vtable for (anonymous namespace)::lower_subroutine_visitor
0000000000939380 0000000000000148 d vtable for (anonymous namespace)::lower_tess_level_visitor
00000000009394c8 0000000000000148 d vtable for (anonymous namespace)::ir_vec_index_to_swizzle_visitor
0000000000939610 0000000000000158 d vtable for (anonymous namespace)::vector_deref_visitor
0000000000939768 0000000000000158 d vtable for (anonymous namespace)::vector_insert_visitor
00000000009398c0 0000000000000140 d vtable for (anonymous namespace)::lower_vertex_id_visitor
0000000000939a00 0000000000000150 d vtable for (anonymous namespace)::lower_shared_reference_visitor
0000000000939b50 0000000000000150 d vtable for (anonymous namespace)::lower_ubo_reference_visitor
0000000000939ca0 0000000000000140 d vtable for (anonymous namespace)::lower_xfb_var_splicer
0000000000939de0 0000000000000158 d vtable for (anonymous namespace)::ir_algebraic_visitor
0000000000939f38 0000000000000158 V vtable for ir_array_splitting_visitor
000000000093a090 0000000000000140 d vtable for (anonymous namespace)::ir_array_reference_visitor
000000000093a1d0 0000000000000140 d vtable for (anonymous namespace)::opt_conditional_discard_visitor
000000000093a310 0000000000000158 d vtable for (anonymous namespace)::ir_constant_folding_visitor
000000000093a468 0000000000000148 d vtable for (anonymous namespace)::ir_constant_propagation_visitor
000000000093a5b0 0000000000000148 d vtable for (anonymous namespace)::ir_constant_variable_visitor
000000000093a6f8 0000000000000148 d vtable for (anonymous namespace)::ir_copy_propagation_elements_visitor
000000000093a840 0000000000000140 d vtable for (anonymous namespace)::varying_info_visitor
000000000093a980 0000000000000148 d vtable for (anonymous namespace)::replace_varyings_visitor
000000000093aac8 0000000000000140 d vtable for (anonymous namespace)::array_index_visit
000000000093ac08 0000000000000148 d vtable for (anonymous namespace)::kill_for_derefs_visitor
000000000093ad50 0000000000000140 d vtable for (anonymous namespace)::ir_dead_functions_visitor
000000000093ae90 0000000000000140 d vtable for (anonymous namespace)::nested_if_flattener
000000000093afd0 0000000000000140 d vtable for (anonymous namespace)::matrix_flipper
000000000093b110 0000000000000150 V vtable for ir_variable_replacement_visitor
000000000093b260 0000000000000140 d vtable for (anonymous namespace)::ir_save_lvalue_visitor
000000000093b3a0 0000000000000150 d vtable for (anonymous namespace)::ir_function_inlining_visitor
000000000093b4f0 0000000000000140 d vtable for (anonymous namespace)::ir_if_simplification_visitor
000000000093b630 0000000000000148 d vtable for (anonymous namespace)::ir_minmax_visitor
000000000093b778 0000000000000148 d vtable for (anonymous namespace)::ir_rebalance_visitor
000000000093b8c0 0000000000000140 d vtable for (anonymous namespace)::redundant_jumps_visitor
000000000093ba00 0000000000000140 d vtable for (anonymous namespace)::ir_structure_reference_visitor
000000000093bb40 0000000000000158 d vtable for (anonymous namespace)::ir_structure_splitting_visitor
000000000093bc98 0000000000000148 d vtable for (anonymous namespace)::ir_opt_swizzle_visitor
000000000093bde0 0000000000000140 d vtable for (anonymous namespace)::ir_tree_grafting_visitor
000000000093bf20 0000000000000140 d vtable for (anonymous namespace)::ir_vectorize_visitor
000000000093c060 0000000000000150 d vtable for (anonymous namespace)::ir_invariance_propagation_visitor
000000000093c1b0 0000000000000030 V vtable for ast_layout_expression
000000000093c1e0 0000000000000890 d yytname
000000000093ca70 0000000000000018 d _mesa_glsl_parse(_mesa_glsl_parse_state*)::local_size_qualifiers
000000000093ca88 0000000000000070 d _mesa_glsl_parse(_mesa_glsl_parse_state*)::map
000000000093caf8 0000000000000580 d _mesa_glsl_parse(_mesa_glsl_parse_state*)::map
000000000093d078 0000000000000030 d _mesa_glsl_parse(_mesa_glsl_parse_state*)::map
000000000093d0a8 0000000000000100 d _mesa_glsl_parse(_mesa_glsl_parse_state*)::map
000000000093d1a8 00000000000002b8 d yytname
000000000093d460 0000000000000008 D glsl_type::bvec2_type
000000000093d468 0000000000000008 D glsl_type::bvec3_type
000000000093d470 0000000000000008 D glsl_type::bvec4_type
000000000093d478 0000000000000008 D glsl_type::dmat2_type
000000000093d480 0000000000000008 D glsl_type::dmat3_type
000000000093d488 0000000000000008 D glsl_type::dmat4_type
000000000093d490 0000000000000008 D glsl_type::dvec2_type
000000000093d498 0000000000000008 D glsl_type::dvec3_type
000000000093d4a0 0000000000000008 D glsl_type::dvec4_type
000000000093d4a8 0000000000000008 D glsl_type::error_type
000000000093d4b0 0000000000000008 D glsl_type::float_type
000000000093d4b8 0000000000000008 D glsl_type::ivec2_type
000000000093d4c0 0000000000000008 D glsl_type::ivec3_type
000000000093d4c8 0000000000000008 D glsl_type::ivec4_type
000000000093d4d0 0000000000000008 D glsl_type::uvec2_type
000000000093d4d8 0000000000000008 D glsl_type::uvec3_type
000000000093d4e0 0000000000000008 D glsl_type::uvec4_type
000000000093d4e8 0000000000000008 D glsl_type::double_type
000000000093d4f0 0000000000000008 D glsl_type::mat2x3_type
000000000093d4f8 0000000000000008 D glsl_type::mat2x4_type
000000000093d500 0000000000000008 D glsl_type::mat3x2_type
000000000093d508 0000000000000008 D glsl_type::mat3x4_type
000000000093d510 0000000000000008 D glsl_type::mat4x2_type
000000000093d518 0000000000000008 D glsl_type::mat4x3_type
000000000093d520 0000000000000008 D glsl_type::dmat2x3_type
000000000093d528 0000000000000008 D glsl_type::dmat2x4_type
000000000093d530 0000000000000008 D glsl_type::dmat3x2_type
000000000093d538 0000000000000008 D glsl_type::dmat3x4_type
000000000093d540 0000000000000008 D glsl_type::dmat4x2_type
000000000093d548 0000000000000008 D glsl_type::dmat4x3_type
000000000093d550 0000000000000008 D glsl_type::i64vec2_type
000000000093d558 0000000000000008 D glsl_type::i64vec3_type
000000000093d560 0000000000000008 D glsl_type::i64vec4_type
000000000093d568 0000000000000008 D glsl_type::image1D_type
000000000093d570 0000000000000008 D glsl_type::image2D_type
000000000093d578 0000000000000008 D glsl_type::image3D_type
000000000093d580 0000000000000008 D glsl_type::int64_t_type
000000000093d588 0000000000000008 D glsl_type::u64vec2_type
000000000093d590 0000000000000008 D glsl_type::u64vec3_type
000000000093d598 0000000000000008 D glsl_type::u64vec4_type
000000000093d5a0 0000000000000008 D glsl_type::iimage1D_type
000000000093d5a8 0000000000000008 D glsl_type::iimage2D_type
000000000093d5b0 0000000000000008 D glsl_type::iimage3D_type
000000000093d5b8 0000000000000008 D glsl_type::uimage1D_type
000000000093d5c0 0000000000000008 D glsl_type::uimage2D_type
000000000093d5c8 0000000000000008 D glsl_type::uimage3D_type
000000000093d5d0 0000000000000008 D glsl_type::uint64_t_type
000000000093d5d8 0000000000000008 D glsl_type::image2DMS_type
000000000093d5e0 0000000000000008 D glsl_type::imageCube_type
000000000093d5e8 0000000000000008 D glsl_type::sampler1D_type
000000000093d5f0 0000000000000008 D glsl_type::sampler2D_type
000000000093d5f8 0000000000000008 D glsl_type::sampler3D_type
000000000093d600 0000000000000008 D glsl_type::iimage2DMS_type
000000000093d608 0000000000000008 D glsl_type::iimageCube_type
000000000093d610 0000000000000008 D glsl_type::isampler1D_type
000000000093d618 0000000000000008 D glsl_type::isampler2D_type
000000000093d620 0000000000000008 D glsl_type::isampler3D_type
000000000093d628 0000000000000008 D glsl_type::uimage2DMS_type
000000000093d630 0000000000000008 D glsl_type::uimageCube_type
000000000093d638 0000000000000008 D glsl_type::usampler1D_type
000000000093d640 0000000000000008 D glsl_type::usampler2D_type
000000000093d648 0000000000000008 D glsl_type::usampler3D_type
000000000093d650 0000000000000008 D glsl_type::atomic_uint_type
000000000093d658 0000000000000008 D glsl_type::image2DRect_type
000000000093d660 0000000000000008 D glsl_type::imageBuffer_type
000000000093d668 0000000000000008 D glsl_type::sampler2DMS_type
000000000093d670 0000000000000008 D glsl_type::samplerCube_type
000000000093d678 0000000000000008 D glsl_type::iimage2DRect_type
000000000093d680 0000000000000008 D glsl_type::iimageBuffer_type
000000000093d688 0000000000000008 D glsl_type::image1DArray_type
000000000093d690 0000000000000008 D glsl_type::image2DArray_type
000000000093d698 0000000000000008 D glsl_type::isampler2DMS_type
000000000093d6a0 0000000000000008 D glsl_type::isamplerCube_type
000000000093d6a8 0000000000000008 D glsl_type::uimage2DRect_type
000000000093d6b0 0000000000000008 D glsl_type::uimageBuffer_type
000000000093d6b8 0000000000000008 D glsl_type::usampler2DMS_type
000000000093d6c0 0000000000000008 D glsl_type::usamplerCube_type
000000000093d6c8 0000000000000008 D glsl_type::iimage1DArray_type
000000000093d6d0 0000000000000008 D glsl_type::iimage2DArray_type
000000000093d6d8 0000000000000008 D glsl_type::sampler2DRect_type
000000000093d6e0 0000000000000008 D glsl_type::samplerBuffer_type
000000000093d6e8 0000000000000008 D glsl_type::uimage1DArray_type
000000000093d6f0 0000000000000008 D glsl_type::uimage2DArray_type
000000000093d6f8 0000000000000008 D glsl_type::image2DMSArray_type
000000000093d700 0000000000000008 D glsl_type::imageCubeArray_type
000000000093d708 0000000000000008 D glsl_type::isampler2DRect_type
000000000093d710 0000000000000008 D glsl_type::isamplerBuffer_type
000000000093d718 0000000000000008 D glsl_type::sampler1DArray_type
000000000093d720 0000000000000008 D glsl_type::sampler2DArray_type
000000000093d728 0000000000000008 D glsl_type::usampler2DRect_type
000000000093d730 0000000000000008 D glsl_type::usamplerBuffer_type
000000000093d738 0000000000000008 D glsl_type::iimage2DMSArray_type
000000000093d740 0000000000000008 D glsl_type::iimageCubeArray_type
000000000093d748 0000000000000008 D glsl_type::isampler1DArray_type
000000000093d750 0000000000000008 D glsl_type::isampler2DArray_type
000000000093d758 0000000000000008 D glsl_type::sampler1DShadow_type
000000000093d760 0000000000000008 D glsl_type::sampler2DShadow_type
000000000093d768 0000000000000008 D glsl_type::uimage2DMSArray_type
000000000093d770 0000000000000008 D glsl_type::uimageCubeArray_type
000000000093d778 0000000000000008 D glsl_type::usampler1DArray_type
000000000093d780 0000000000000008 D glsl_type::usampler2DArray_type
000000000093d788 0000000000000008 D glsl_type::sampler2DMSArray_type
000000000093d790 0000000000000008 D glsl_type::samplerCubeArray_type
000000000093d798 0000000000000008 D glsl_type::isampler2DMSArray_type
000000000093d7a0 0000000000000008 D glsl_type::isamplerCubeArray_type
000000000093d7a8 0000000000000008 D glsl_type::samplerCubeShadow_type
000000000093d7b0 0000000000000008 D glsl_type::usampler2DMSArray_type
000000000093d7b8 0000000000000008 D glsl_type::usamplerCubeArray_type
000000000093d7c0 0000000000000008 D glsl_type::samplerExternalOES_type
000000000093d7c8 0000000000000008 D glsl_type::sampler2DRectShadow_type
000000000093d7d0 0000000000000008 D glsl_type::sampler1DArrayShadow_type
000000000093d7d8 0000000000000008 D glsl_type::sampler2DArrayShadow_type
000000000093d7e0 0000000000000008 D glsl_type::samplerCubeArrayShadow_type
000000000093d7e8 0000000000000008 D glsl_type::int_type
000000000093d7f0 0000000000000008 D glsl_type::bool_type
000000000093d7f8 0000000000000008 D glsl_type::mat2_type
000000000093d800 0000000000000008 D glsl_type::mat3_type
000000000093d808 0000000000000008 D glsl_type::mat4_type
000000000093d810 0000000000000008 D glsl_type::uint_type
000000000093d818 0000000000000008 D glsl_type::vec2_type
000000000093d820 0000000000000008 D glsl_type::vec3_type
000000000093d828 0000000000000008 D glsl_type::vec4_type
000000000093d830 0000000000000008 D glsl_type::void_type
000000000093d838 0000000000000020 D tgsi_swizzle_names
000000000093d858 0000000000000001 d firsttime.0
000000000093d860 00000000000007e0 d opcode_names
000000000093e040 0000000000000010 D tgsi_fs_coord_origin_names
000000000093e050 0000000000000010 D tgsi_fs_coord_pixel_center_names
000000000093e060 0000000000000030 D tgsi_immediate_type_names
000000000093e090 0000000000000018 D tgsi_interpolate_locations
000000000093e0a8 0000000000000020 D tgsi_interpolate_names
000000000093e0c8 0000000000000008 D tgsi_invariant_name
000000000093e0d0 0000000000000020 D tgsi_memory_names
000000000093e0f0 0000000000000078 D tgsi_primitive_names
000000000093e168 0000000000000030 D tgsi_processor_type_names
000000000093e198 00000000000000d8 D tgsi_property_names
000000000093e270 0000000000000030 D tgsi_return_type_names
000000000093e2a0 0000000000000188 D tgsi_semantic_names
000000000093e428 0000000000000098 D tgsi_texture_names
000000000093e4c0 0000000000000078 d tgsi_file_names
000000000093e538 0000000000000168 d names.0
000000000093e6a0 0000000000000028 D nouveau_buffer_vtbl
000000000093e6c8 0000000000000080 d validate_list_cp
000000000093e748 0000000000000028 D nvc0_miptree_vtbl
000000000093e770 0000000000000028 d hw_query_funcs
000000000093e798 0000000000000038 d sm20_hw_metric_queries
000000000093e7d0 0000000000000048 d sm21_hw_metric_queries
000000000093e818 0000000000000058 d sm30_hw_metric_queries
000000000093e870 0000000000000058 d sm35_hw_metric_queries
000000000093e8c8 0000000000000058 d sm50_hw_metric_queries
000000000093e920 0000000000000020 d hw_metric_query_funcs
000000000093e940 0000000000000180 d nvc0_hw_metric_queries
000000000093eac0 00000000000000d0 d sm20_hw_sm_queries
000000000093eb90 00000000000000f8 d sm21_hw_sm_queries
000000000093ec88 0000000000000168 d sm30_hw_sm_queries
000000000093edf0 0000000000000168 d sm35_hw_sm_queries
000000000093ef58 0000000000000120 d sm50_hw_sm_queries
000000000093f078 0000000000000120 d sm52_hw_sm_queries
000000000093f198 0000000000000020 d hw_sm_query_funcs
000000000093f1b8 0000000000000648 d nvc0_hw_sm_queries
000000000093f800 0000000000000220 d validate_list_3d
000000000093fa20 0000000000000028 d weights.3
000000000093fa48 0000000000000008 D util_format_dxt1_rgb_fetch
000000000093fa50 0000000000000008 D util_format_dxt1_rgba_fetch
000000000093fa58 0000000000000008 D util_format_dxt3_rgba_fetch
000000000093fa60 0000000000000008 D util_format_dxt5_rgba_fetch
000000000093fa68 0000000000000008 D util_format_dxtn_pack
000000000093fa70 0000000000000038 d vtable for (anonymous namespace)::add_uniform_to_shader
000000000093faa8 0000000000000200 d fragAttribs.7
000000000093fca8 0000000000000060 d fragResults.1
000000000093fd08 0000000000000100 d vertAttribs.8
000000000093fe08 0000000000000200 d vertResults.2
0000000000940008 0000000000000400 d AttribFuncsARB
0000000000940408 0000000000000200 d AttribFuncsNV
0000000000940608 0000000000000038 d table_set
0000000000940640 0000000000003d38 d values
0000000000944378 0000000000000030 d markers.0
00000000009443a8 0000000000000120 d inst_desc
00000000009444c8 0000000000000200 d update_functions
00000000009446c8 00000000000000d0 V vtable for glsl_to_tgsi_visitor
0000000000944798 0000000000000140 V vtable for ir_control_flow_info_visitor
00000000009448d8 0000000000000030 V vtable for ast_array_specifier
0000000000944908 0000000000000038 V vtable for ast_expression_bin
0000000000944940 0000000000000140 d ast_expression::operator_string(ast_operators)::operators
0000000000944a80 0000000000000038 V vtable for ast_function_expression
0000000000944ab8 0000000000000038 V vtable for ast_aggregate_initializer
0000000000944af0 0000000000000140 V vtable for read_from_write_only_variable_visitor
0000000000944c30 0000000000000038 V vtable for ast_expression
0000000000944c68 0000000000000140 V vtable for interface_block_usage_visitor
0000000000944da8 0000000000000030 V vtable for ast_interface_block
0000000000944dd8 0000000000000030 V vtable for ast_tcs_output_layout
0000000000944e08 0000000000000030 V vtable for ast_gs_input_layout
0000000000944e38 0000000000000030 V vtable for ast_cs_input_layout
0000000000944e68 0000000000000030 V vtable for ast_warnings_toggle
0000000000944e98 0000000000000020 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000944eb8 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000944ef8 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000944f38 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000944f78 0000000000000020 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000944f98 0000000000000020 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000944fb8 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000944ff8 0000000000000020 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000945018 0000000000000020 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000945038 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000945078 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
00000000009450b8 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
00000000009450f8 0000000000000020 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000945118 0000000000000020 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000945138 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000945178 0000000000000020 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000945198 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
00000000009451d8 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000945218 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000945258 0000000000000020 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000945278 0000000000000020 d get_type_name_for_precision_qualifier(glsl_type const*)::names
0000000000945298 0000000000000040 d get_type_name_for_precision_qualifier(glsl_type const*)::names
00000000009452d8 0000000000000020 d ast_declarator_list::hir(exec_list*, _mesa_glsl_parse_state*)::precision_names
00000000009452f8 0000000000000030 V vtable for ast_type_specifier
0000000000945328 0000000000000720 d builtin_type_versions
0000000000945a48 0000000000000038 d deprecated_types
0000000000945a80 0000000000000078 d gl_Fog_elements
0000000000945af8 00000000000000a8 d gl_Point_elements
0000000000945ba0 0000000000000048 d gl_DepthRange_elements
0000000000945be8 0000000000000018 d gl_LightModel_elements
0000000000945c00 0000000000000120 d gl_LightSource_elements
0000000000945d20 0000000000000078 d gl_BackMaterial_elements
0000000000945d98 0000000000000078 d gl_FrontMaterial_elements
0000000000945e10 0000000000000420 d _mesa_builtin_uniform_desc
0000000000946230 0000000000000048 d gl_BackLightProduct_elements
0000000000946278 0000000000000048 d gl_FrontLightProduct_elements
00000000009462c0 0000000000000018 d gl_BackLightModelProduct_elements
00000000009462d8 0000000000000018 d gl_FrontLightModelProduct_elements
00000000009462f0 0000000000000140 V vtable for ir_array_refcount_visitor
0000000000946430 0000000000000140 V vtable for ir_function_can_inline_visitor
0000000000946570 0000000000000140 d vtable for (anonymous namespace)::has_recursion_visitor
00000000009466b0 0000000000000140 d vtable for (anonymous namespace)::ir_set_program_inouts_visitor
00000000009467f0 0000000000000140 V vtable for ir_variable_refcount_visitor
0000000000946930 0000000000000140 V vtable for link_uniform_block_active_visitor
0000000000946a70 0000000000000140 d vtable for (anonymous namespace)::lower_discard_visitor
0000000000946bb0 0000000000000140 d vtable for (anonymous namespace)::ir_if_to_cond_assign_visitor
0000000000946cf0 0000000000000148 d vtable for (anonymous namespace)::lower_64bit_visitor
0000000000946e38 0000000000000140 d vtable for (anonymous namespace)::ir_mat_op_to_vec_visitor
0000000000946f78 0000000000000148 V vtable for lower_offset_array_visitor
00000000009470c0 0000000000000158 d vtable for (anonymous namespace)::lower_packing_builtins_visitor
0000000000947218 0000000000000148 d vtable for (anonymous namespace)::deref_replacer
0000000000947360 0000000000000140 d vtable for (anonymous namespace)::find_variable_index
00000000009474a0 0000000000000148 d vtable for (anonymous namespace)::variable_index_to_cond_assign_visitor
00000000009475e8 0000000000000140 d vtable for (anonymous namespace)::ir_vec_index_to_cond_assign_visitor
0000000000947728 0000000000000148 d vtable for (anonymous namespace)::lower_vector_visitor
0000000000947870 0000000000000140 d vtable for (anonymous namespace)::output_read_remover
00000000009479b0 0000000000000028 D nv50_miptree_vtbl
00000000009479d8 0000000000000048 V vtable for nv50_ir::LValue
0000000000947a20 0000000000000048 V vtable for nv50_ir::Symbol
0000000000947a68 0000000000000048 V vtable for nv50_ir::ImmediateValue
0000000000947ab0 0000000000000048 V vtable for nv50_ir::Value
0000000000947af8 0000000000000028 V vtable for nv50_ir::Instruction
0000000000947b20 0000000000000028 V vtable for nv50_ir::TexInstruction
0000000000947b48 0000000000000028 V vtable for nv50_ir::CmpInstruction
0000000000947b70 0000000000000028 V vtable for nv50_ir::FlowInstruction
0000000000947b98 0000000000000020 V vtable for nv50_ir::DeepClonePolicy<nv50_ir::Function>
0000000000947bb8 0000000000000028 d vtable for (anonymous namespace)::Converter::BindArgumentsPass
0000000000947be0 0000000000000020 V vtable for nv50_ir::Graph
0000000000947c00 0000000000000040 V vtable for nv50_ir::DFSIterator
0000000000947c40 0000000000000040 V vtable for nv50_ir::CFGIterator
0000000000947c80 0000000000000028 V vtable for nv50_ir::CopyPropagation
0000000000947ca8 0000000000000028 V vtable for nv50_ir::MergeSplits
0000000000947cd0 0000000000000028 V vtable for nv50_ir::LoadPropagation
0000000000947cf8 0000000000000028 V vtable for nv50_ir::IndirectPropagation
0000000000947d20 0000000000000028 V vtable for nv50_ir::ConstantFolding
0000000000947d48 0000000000000028 V vtable for nv50_ir::ModifierFolding
0000000000947d70 0000000000000028 V vtable for nv50_ir::AlgebraicOpt
0000000000947d98 0000000000000028 V vtable for nv50_ir::LateAlgebraicOpt
0000000000947dc0 0000000000000028 V vtable for nv50_ir::Split64BitOpPreRA
0000000000947de8 0000000000000028 V vtable for nv50_ir::MemoryOpt
0000000000947e10 0000000000000028 V vtable for nv50_ir::FlatteningPass
0000000000947e38 0000000000000028 V vtable for nv50_ir::PostRaLoadPropagation
0000000000947e60 0000000000000028 V vtable for nv50_ir::GlobalCSE
0000000000947e88 0000000000000028 V vtable for nv50_ir::LocalCSE
0000000000947eb0 0000000000000028 V vtable for nv50_ir::DeadCodeElim
0000000000947ed8 0000000000000020 V vtable for nv50_ir::ShallowClonePolicy<nv50_ir::Function>
0000000000947ef8 00000000000003f0 D nv50_ir::operationStr
00000000009482e8 0000000000000030 d nv50_ir::pixldOpStr
0000000000948318 0000000000000010 d nv50_ir::subfmOpStr
0000000000948328 0000000000000080 d nv50_ir::texMaskStr
00000000009483a8 00000000000000c0 d nv50_ir::CondCodeStr
0000000000948468 0000000000000070 d nv50_ir::DataTypeStr
00000000009484d8 0000000000000170 d nv50_ir::SemanticStr
0000000000948648 0000000000000010 d nv50_ir::rcprsqOpStr
0000000000948658 0000000000000040 d nv50_ir::RoundModeStr
0000000000948698 0000000000000050 d nv50_ir::atomSubOpStr
00000000009486e8 0000000000000018 d nv50_ir::ldstSubOpStr
0000000000948700 0000000000000020 d nv50_ir::gatherCompStr
0000000000948720 0000000000000020 d nv50_ir::xmadOpCModeStr
0000000000948740 0000000000000028 d nv50_ir::barOpStr
0000000000948768 0000000000000038 d nv50_ir::cctlOpStr
00000000009487a0 0000000000000010 d nv50_ir::emitOpStr
00000000009487b0 0000000000000080 d nv50_ir::interpStr
0000000000948830 0000000000000020 d nv50_ir::shflOpStr
0000000000948850 0000000000000028 V vtable for nv50_ir::RegAlloc::PhiMovesPass
0000000000948878 0000000000000028 V vtable for nv50_ir::RegAlloc::ArgumentMovesPass
00000000009488a0 0000000000000028 V vtable for nv50_ir::RegAlloc::BuildIntervalsPass
00000000009488c8 0000000000000028 V vtable for nv50_ir::RegAlloc::InsertConstraintsPass
00000000009488f0 0000000000000020 V vtable for nv50_ir::DominatorTree
0000000000948910 0000000000000048 V vtable for nv50_ir::CodeEmitter
0000000000948958 0000000000000050 V vtable for nv50_ir::DLList::Iterator
00000000009489a8 00000000000000d8 V vtable for nv50_ir::TargetGM107
0000000000948a80 0000000000000700 D nv50_ir::gm107_builtin_code
0000000000949180 0000000000000020 D nv50_ir::gm107_builtin_offsets
00000000009491a0 0000000000000190 D nv50_ir::gf100_builtin_code
0000000000949330 0000000000001590 D nv50_ir::gk104_builtin_code
000000000094a8c0 00000000000005a8 D nv50_ir::gk110_builtin_code
000000000094ae68 0000000000000020 D nv50_ir::gf100_builtin_offsets
000000000094ae88 0000000000000020 D nv50_ir::gk104_builtin_offsets
000000000094aea8 0000000000000020 D nv50_ir::gk110_builtin_offsets
000000000094aec8 00000000000005a0 d InstInfo
000000000094b468 00000000000007e8 d yytname
000000000094bc50 0000000000000158 V vtable for ir_expression_flattening_visitor
000000000094bda8 0000000000000001 d first.1
000000000094bdb0 0000000000000078 d file_names
000000000094be28 0000000000000048 V vtable for nv50_ir::CodeEmitterGM107
000000000094be70 0000000000000028 V vtable for nv50_ir::SchedDataCalculatorGM107
000000000094be98 0000000000000028 V vtable for nv50_ir::GM107LegalizeSSA
000000000094bec0 0000000000000030 V vtable for nv50_ir::GM107LoweringPass
000000000094bef0 0000000000000028 V vtable for nv50_ir::NVC0LegalizeSSA
000000000094bf18 0000000000000028 V vtable for nv50_ir::NVC0LegalizePostRA
000000000094bf40 0000000000000030 V vtable for nv50_ir::NVC0LoweringPass
000000000094bf70 00000000000000b8 V vtable for nv50_ir::TargetNVC0
000000000094c028 0000000000000004 d next_dynamic_slot
000000000094c02c 0000000000000004 d debug.0
000000000094c030 0000000000003a50 D table_noop_array
000000000094fa80 0000000000003250 d public_entries
0000000000952cd0 0000000000000004 V __nx_nv_transfermem_size
0000000000952cd8 0000000000000008 V __nx_applet_init_timeout
0000000000952ce0 0000000000000001 V __nx_applet_auto_notifyrunning
0000000000952ce4 0000000000000004 V __nx_applet_type
0000000000952ce8 0000000000000004 d g_deviceState
0000000000952cec 0000000000000004 d g_ctrl_fd
0000000000952cf0 0000000000000004 d g_ctrlgpu_fd
0000000000952cf4 0000000000000004 d g_nvmap_fd
0000000000952cf8 0000000000000100 d romFS_devoptab
0000000000952df8 0000000000000001 V __nx_fsdev_support_cwd
0000000000952dfc 0000000000000004 V __nx_fsdev_direntry_cache_size
0000000000952e00 0000000000000100 d fsdev_devoptab
0000000000952f00 0000000000000004 d g_viServiceType
0000000000952f04 0000000000000004 V __nx_vi_stray_layer_flags
0000000000952f08 0000000000000004 V __nx_fs_num_sessions
0000000000952f10 0000000000000008 V __nx_exception_stack_size
0000000000952f18 0000000000000018 V typeinfo for __gnu_cxx::__concurrence_lock_error
0000000000952f30 0000000000000018 V typeinfo for __gnu_cxx::__concurrence_unlock_error
0000000000952f48 0000000000000018 V typeinfo for __gnu_cxx::__concurrence_broadcast_error
0000000000952f60 0000000000000018 V typeinfo for __gnu_cxx::__concurrence_wait_error
0000000000952f78 0000000000000028 V vtable for __gnu_cxx::__concurrence_lock_error
0000000000952fa0 0000000000000028 V vtable for __gnu_cxx::__concurrence_unlock_error
0000000000952fc8 0000000000000028 V vtable for __gnu_cxx::__concurrence_broadcast_error
0000000000952ff0 0000000000000028 V vtable for __gnu_cxx::__concurrence_wait_error
0000000000953018 0000000000000008 V DW.ref.__gxx_personality_v0
0000000000953020 0000000000000018 V typeinfo for __cxxabiv1::__si_class_type_info
0000000000953038 0000000000000058 V vtable for __cxxabiv1::__si_class_type_info
0000000000953090 0000000000000010 V typeinfo for std::type_info
00000000009530a0 0000000000000010 V typeinfo for std::locale::facet
00000000009530b0 0000000000000110 D std::locale::_S_twinned_facets
00000000009531c0 0000000000000018 V typeinfo for std::__moneypunct_cache<char, true>
00000000009531d8 0000000000000018 V typeinfo for std::__moneypunct_cache<char, false>
00000000009531f0 0000000000000018 V typeinfo for std::__moneypunct_cache<wchar_t, true>
0000000000953208 0000000000000018 V typeinfo for std::__moneypunct_cache<wchar_t, false>
0000000000953220 0000000000000020 V vtable for std::__moneypunct_cache<char, true>
0000000000953240 0000000000000020 V vtable for std::__moneypunct_cache<char, false>
0000000000953260 0000000000000020 V vtable for std::__moneypunct_cache<wchar_t, true>
0000000000953280 0000000000000020 V vtable for std::__moneypunct_cache<wchar_t, false>
00000000009532a0 0000000000000018 V typeinfo for std::__numpunct_cache<char>
00000000009532b8 0000000000000018 V typeinfo for std::__numpunct_cache<wchar_t>
00000000009532d0 0000000000000020 V vtable for std::__numpunct_cache<char>
00000000009532f0 0000000000000020 V vtable for std::__numpunct_cache<wchar_t>
0000000000953310 0000000000000010 V typeinfo for std::codecvt_base
0000000000953320 0000000000000038 V typeinfo for std::__codecvt_abstract_base<char16_t, char, _mbstate_t>
0000000000953358 0000000000000018 V typeinfo for std::codecvt<char16_t, char, _mbstate_t>
0000000000953370 0000000000000038 V typeinfo for std::__codecvt_abstract_base<char32_t, char, _mbstate_t>
00000000009533a8 0000000000000018 V typeinfo for std::codecvt<char32_t, char, _mbstate_t>
00000000009533c0 0000000000000038 V typeinfo for std::__codecvt_abstract_base<char16_t, char8_t, _mbstate_t>
00000000009533f8 0000000000000018 V typeinfo for std::codecvt<char16_t, char8_t, _mbstate_t>
0000000000953410 0000000000000038 V typeinfo for std::__codecvt_abstract_base<char32_t, char8_t, _mbstate_t>
0000000000953448 0000000000000018 V typeinfo for std::codecvt<char32_t, char8_t, _mbstate_t>
0000000000953460 0000000000000058 V vtable for std::__codecvt_abstract_base<char16_t, char, _mbstate_t>
00000000009534b8 0000000000000058 V vtable for std::__codecvt_abstract_base<char32_t, char, _mbstate_t>
0000000000953510 0000000000000058 V vtable for std::__codecvt_abstract_base<char16_t, char8_t, _mbstate_t>
0000000000953568 0000000000000058 V vtable for std::__codecvt_abstract_base<char32_t, char8_t, _mbstate_t>
00000000009535c0 0000000000000058 V vtable for std::codecvt<char16_t, char, _mbstate_t>
0000000000953618 0000000000000058 V vtable for std::codecvt<char32_t, char, _mbstate_t>
0000000000953670 0000000000000058 V vtable for std::codecvt<char16_t, char8_t, _mbstate_t>
00000000009536c8 0000000000000058 V vtable for std::codecvt<char32_t, char8_t, _mbstate_t>
0000000000953720 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::numpunct_shim<char>
0000000000953758 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::collate_shim<char>
0000000000953790 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, true>
00000000009537c8 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, false>
0000000000953800 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::money_get_shim<char>
0000000000953838 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::money_put_shim<char>
0000000000953870 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::messages_shim<char>
00000000009538a8 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::numpunct_shim<wchar_t>
00000000009538e0 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::collate_shim<wchar_t>
0000000000953918 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, true>
0000000000953950 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, false>
0000000000953988 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::money_get_shim<wchar_t>
00000000009539c0 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::money_put_shim<wchar_t>
00000000009539f8 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>
0000000000953a30 0000000000000010 V typeinfo for std::locale::facet::__shim
0000000000953a40 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::time_get_shim<char>
0000000000953a78 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>
0000000000953ab0 0000000000000048 d vtable for std::__facet_shims::(anonymous namespace)::numpunct_shim<char>
0000000000953af8 0000000000000038 d vtable for std::__facet_shims::(anonymous namespace)::collate_shim<char>
0000000000953b30 0000000000000068 d vtable for std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, true>
0000000000953b98 0000000000000068 d vtable for std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, false>
0000000000953c00 0000000000000030 d vtable for std::__facet_shims::(anonymous namespace)::money_get_shim<char>
0000000000953c30 0000000000000030 d vtable for std::__facet_shims::(anonymous namespace)::money_put_shim<char>
0000000000953c60 0000000000000038 d vtable for std::__facet_shims::(anonymous namespace)::messages_shim<char>
0000000000953c98 0000000000000048 d vtable for std::__facet_shims::(anonymous namespace)::numpunct_shim<wchar_t>
0000000000953ce0 0000000000000038 d vtable for std::__facet_shims::(anonymous namespace)::collate_shim<wchar_t>
0000000000953d18 0000000000000068 d vtable for std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, true>
0000000000953d80 0000000000000068 d vtable for std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, false>
0000000000953de8 0000000000000030 d vtable for std::__facet_shims::(anonymous namespace)::money_get_shim<wchar_t>
0000000000953e18 0000000000000030 d vtable for std::__facet_shims::(anonymous namespace)::money_put_shim<wchar_t>
0000000000953e48 0000000000000038 d vtable for std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>
0000000000953e80 0000000000000050 d vtable for std::__facet_shims::(anonymous namespace)::time_get_shim<char>
0000000000953ed0 0000000000000050 d vtable for std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>
0000000000953f20 0000000000000008 V DW.ref._ZTIN10__cxxabiv115__forced_unwindE
0000000000953f28 0000000000000010 V typeinfo for std::ctype_base
0000000000953f38 0000000000000038 V typeinfo for std::ctype<char>
0000000000953f70 0000000000000018 V typeinfo for std::ctype<wchar_t>
0000000000953f88 0000000000000060 V vtable for std::ctype<char>
0000000000953fe8 0000000000000080 V vtable for std::ctype<wchar_t>
0000000000954068 0000000000000010 V typeinfo for std::money_base
0000000000954078 0000000000000010 V typeinfo for std::messages_base
0000000000954088 0000000000000010 V typeinfo for std::time_base
0000000000954098 0000000000000018 V typeinfo for std::__cxx11::collate<char>
00000000009540b0 0000000000000018 V typeinfo for std::__cxx11::numpunct<char>
00000000009540c8 0000000000000038 V typeinfo for std::__cxx11::moneypunct<char, true>
0000000000954100 0000000000000038 V typeinfo for std::__cxx11::moneypunct<char, false>
0000000000954138 0000000000000038 V typeinfo for std::__cxx11::messages<char>
0000000000954170 0000000000000018 V typeinfo for std::__cxx11::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0000000000954188 0000000000000018 V typeinfo for std::__cxx11::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
00000000009541a0 0000000000000038 V typeinfo for std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
00000000009541d8 0000000000000038 V vtable for std::__cxx11::collate<char>
0000000000954210 0000000000000048 V vtable for std::__cxx11::numpunct<char>
0000000000954258 0000000000000068 V vtable for std::__cxx11::moneypunct<char, true>
00000000009542c0 0000000000000068 V vtable for std::__cxx11::moneypunct<char, false>
0000000000954328 0000000000000038 V vtable for std::__cxx11::messages<char>
0000000000954360 0000000000000030 V vtable for std::__cxx11::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0000000000954390 0000000000000030 V vtable for std::__cxx11::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
00000000009543c0 0000000000000058 V vtable for std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0000000000954418 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::numpunct_shim<char>
0000000000954450 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::collate_shim<char>
0000000000954488 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, true>
00000000009544c0 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, false>
00000000009544f8 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::money_get_shim<char>
0000000000954530 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::money_put_shim<char>
0000000000954568 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::messages_shim<char>
00000000009545a0 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::numpunct_shim<wchar_t>
00000000009545d8 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::collate_shim<wchar_t>
0000000000954610 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, true>
0000000000954648 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, false>
0000000000954680 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::money_get_shim<wchar_t>
00000000009546b8 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::money_put_shim<wchar_t>
00000000009546f0 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>
0000000000954728 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::time_get_shim<char>
0000000000954760 0000000000000038 d typeinfo for std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>
0000000000954798 0000000000000048 d vtable for std::__facet_shims::(anonymous namespace)::numpunct_shim<char>
00000000009547e0 0000000000000038 d vtable for std::__facet_shims::(anonymous namespace)::collate_shim<char>
0000000000954818 0000000000000068 d vtable for std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, true>
0000000000954880 0000000000000068 d vtable for std::__facet_shims::(anonymous namespace)::moneypunct_shim<char, false>
00000000009548e8 0000000000000030 d vtable for std::__facet_shims::(anonymous namespace)::money_get_shim<char>
0000000000954918 0000000000000030 d vtable for std::__facet_shims::(anonymous namespace)::money_put_shim<char>
0000000000954948 0000000000000038 d vtable for std::__facet_shims::(anonymous namespace)::messages_shim<char>
0000000000954980 0000000000000048 d vtable for std::__facet_shims::(anonymous namespace)::numpunct_shim<wchar_t>
00000000009549c8 0000000000000038 d vtable for std::__facet_shims::(anonymous namespace)::collate_shim<wchar_t>
0000000000954a00 0000000000000068 d vtable for std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, true>
0000000000954a68 0000000000000068 d vtable for std::__facet_shims::(anonymous namespace)::moneypunct_shim<wchar_t, false>
0000000000954ad0 0000000000000030 d vtable for std::__facet_shims::(anonymous namespace)::money_get_shim<wchar_t>
0000000000954b00 0000000000000030 d vtable for std::__facet_shims::(anonymous namespace)::money_put_shim<wchar_t>
0000000000954b30 0000000000000038 d vtable for std::__facet_shims::(anonymous namespace)::messages_shim<wchar_t>
0000000000954b68 0000000000000058 d vtable for std::__facet_shims::(anonymous namespace)::time_get_shim<char>
0000000000954bc0 0000000000000058 d vtable for std::__facet_shims::(anonymous namespace)::time_get_shim<wchar_t>
0000000000954c18 0000000000000018 V typeinfo for std::__cxx11::collate<wchar_t>
0000000000954c30 0000000000000018 V typeinfo for std::__cxx11::numpunct<wchar_t>
0000000000954c48 0000000000000038 V typeinfo for std::__cxx11::moneypunct<wchar_t, true>
0000000000954c80 0000000000000038 V typeinfo for std::__cxx11::moneypunct<wchar_t, false>
0000000000954cb8 0000000000000038 V typeinfo for std::__cxx11::messages<wchar_t>
0000000000954cf0 0000000000000018 V typeinfo for std::__cxx11::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0000000000954d08 0000000000000018 V typeinfo for std::__cxx11::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0000000000954d20 0000000000000038 V typeinfo for std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0000000000954d58 0000000000000038 V vtable for std::__cxx11::collate<wchar_t>
0000000000954d90 0000000000000048 V vtable for std::__cxx11::numpunct<wchar_t>
0000000000954dd8 0000000000000068 V vtable for std::__cxx11::moneypunct<wchar_t, true>
0000000000954e40 0000000000000068 V vtable for std::__cxx11::moneypunct<wchar_t, false>
0000000000954ea8 0000000000000038 V vtable for std::__cxx11::messages<wchar_t>
0000000000954ee0 0000000000000030 V vtable for std::__cxx11::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0000000000954f10 0000000000000030 V vtable for std::__cxx11::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0000000000954f40 0000000000000058 V vtable for std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0000000000954f98 0000000000000018 V typeinfo for __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >
0000000000954fb0 0000000000000018 V typeinfo for __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >
0000000000954fc8 0000000000000080 V vtable for __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >
0000000000955048 0000000000000080 V vtable for __gnu_cxx::stdio_sync_filebuf<wchar_t, std::char_traits<wchar_t> >
00000000009550c8 0000000000000018 V typeinfo for std::basic_ios<char, std::char_traits<char> >
00000000009550e0 0000000000000018 V typeinfo for std::basic_ios<wchar_t, std::char_traits<wchar_t> >
00000000009550f8 0000000000000020 V vtable for std::basic_ios<char, std::char_traits<char> >
0000000000955118 0000000000000020 V vtable for std::basic_ios<wchar_t, std::char_traits<wchar_t> >
0000000000955138 0000000000000010 V typeinfo for std::ios_base
0000000000955148 0000000000000020 V vtable for std::ios_base
0000000000955168 0000000000000001 D std::ios_base::Init::_S_synced_with_stdio
0000000000955170 0000000000000028 V typeinfo for std::istream
0000000000955198 0000000000000028 V typeinfo for std::basic_istream<wchar_t, std::char_traits<wchar_t> >
00000000009551c0 0000000000000010 V VTT for std::istream
00000000009551d0 0000000000000050 V vtable for std::istream
0000000000955220 0000000000000010 V VTT for std::basic_istream<wchar_t, std::char_traits<wchar_t> >
0000000000955230 0000000000000050 V vtable for std::basic_istream<wchar_t, std::char_traits<wchar_t> >
0000000000955280 0000000000000018 V typeinfo for std::collate<char>
0000000000955298 0000000000000018 V typeinfo for std::numpunct<char>
00000000009552b0 0000000000000018 V typeinfo for std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
00000000009552c8 0000000000000018 V typeinfo for std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
00000000009552e0 0000000000000018 V typeinfo for std::__timepunct_cache<char>
00000000009552f8 0000000000000018 V typeinfo for std::__timepunct<char>
0000000000955310 0000000000000038 V typeinfo for std::moneypunct<char, true>
0000000000955348 0000000000000038 V typeinfo for std::moneypunct<char, false>
0000000000955380 0000000000000038 V typeinfo for std::messages<char>
00000000009553b8 0000000000000038 V typeinfo for std::__codecvt_abstract_base<char, char, _mbstate_t>
00000000009553f0 0000000000000018 V typeinfo for std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0000000000955408 0000000000000018 V typeinfo for std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
0000000000955420 0000000000000018 V typeinfo for std::time_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
0000000000955438 0000000000000038 V typeinfo for std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0000000000955470 0000000000000038 V vtable for std::collate<char>
00000000009554a8 0000000000000048 V vtable for std::numpunct<char>
00000000009554f0 0000000000000078 V vtable for std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0000000000955568 0000000000000060 V vtable for std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
00000000009555c8 0000000000000020 V vtable for std::__timepunct_cache<char>
00000000009555e8 0000000000000020 V vtable for std::__timepunct<char>
0000000000955608 0000000000000068 V vtable for std::moneypunct<char, true>
0000000000955670 0000000000000068 V vtable for std::moneypunct<char, false>
00000000009556d8 0000000000000038 V vtable for std::messages<char>
0000000000955710 0000000000000058 V vtable for std::__codecvt_abstract_base<char, char, _mbstate_t>
0000000000955768 0000000000000030 V vtable for std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0000000000955798 0000000000000030 V vtable for std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
00000000009557c8 0000000000000028 V vtable for std::time_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >
00000000009557f0 0000000000000050 V vtable for std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >
0000000000955840 0000000000000028 V typeinfo for std::ostream
0000000000955868 0000000000000028 V typeinfo for std::basic_ostream<wchar_t, std::char_traits<wchar_t> >
0000000000955890 0000000000000010 V VTT for std::ostream
00000000009558a0 0000000000000050 V vtable for std::ostream
00000000009558f0 0000000000000010 V VTT for std::basic_ostream<wchar_t, std::char_traits<wchar_t> >
0000000000955900 0000000000000050 V vtable for std::basic_ostream<wchar_t, std::char_traits<wchar_t> >
0000000000955950 0000000000000010 V typeinfo for std::basic_streambuf<char, std::char_traits<char> >
0000000000955960 0000000000000010 V typeinfo for std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >
0000000000955970 0000000000000080 V vtable for std::basic_streambuf<char, std::char_traits<char> >
00000000009559f0 0000000000000080 V vtable for std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >
0000000000955a70 0000000000000018 V typeinfo for std::collate<wchar_t>
0000000000955a88 0000000000000038 V typeinfo for std::__ctype_abstract_base<wchar_t>
0000000000955ac0 0000000000000018 V typeinfo for std::numpunct<wchar_t>
0000000000955ad8 0000000000000018 V typeinfo for std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0000000000955af0 0000000000000018 V typeinfo for std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0000000000955b08 0000000000000018 V typeinfo for std::__timepunct_cache<wchar_t>
0000000000955b20 0000000000000018 V typeinfo for std::__timepunct<wchar_t>
0000000000955b38 0000000000000038 V typeinfo for std::moneypunct<wchar_t, true>
0000000000955b70 0000000000000038 V typeinfo for std::moneypunct<wchar_t, false>
0000000000955ba8 0000000000000038 V typeinfo for std::messages<wchar_t>
0000000000955be0 0000000000000038 V typeinfo for std::__codecvt_abstract_base<wchar_t, char, _mbstate_t>
0000000000955c18 0000000000000018 V typeinfo for std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0000000000955c30 0000000000000018 V typeinfo for std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0000000000955c48 0000000000000018 V typeinfo for std::time_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0000000000955c60 0000000000000038 V typeinfo for std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0000000000955c98 0000000000000038 V vtable for std::collate<wchar_t>
0000000000955cd0 0000000000000080 V vtable for std::__ctype_abstract_base<wchar_t>
0000000000955d50 0000000000000048 V vtable for std::numpunct<wchar_t>
0000000000955d98 0000000000000078 V vtable for std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0000000000955e10 0000000000000060 V vtable for std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0000000000955e70 0000000000000020 V vtable for std::__timepunct_cache<wchar_t>
0000000000955e90 0000000000000020 V vtable for std::__timepunct<wchar_t>
0000000000955eb0 0000000000000068 V vtable for std::moneypunct<wchar_t, true>
0000000000955f18 0000000000000068 V vtable for std::moneypunct<wchar_t, false>
0000000000955f80 0000000000000038 V vtable for std::messages<wchar_t>
0000000000955fb8 0000000000000058 V vtable for std::__codecvt_abstract_base<wchar_t, char, _mbstate_t>
0000000000956010 0000000000000030 V vtable for std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0000000000956040 0000000000000030 V vtable for std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0000000000956070 0000000000000028 V vtable for std::time_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
0000000000956098 0000000000000050 V vtable for std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >
00000000009560e8 0000000000000018 V typeinfo for std::bad_alloc
0000000000956100 0000000000000028 V vtable for std::bad_alloc
0000000000956128 0000000000000018 V typeinfo for std::bad_array_new_length
0000000000956140 0000000000000028 V vtable for std::bad_array_new_length
0000000000956168 0000000000000018 V typeinfo for std::bad_cast
0000000000956180 0000000000000028 V vtable for std::bad_cast
00000000009561a8 0000000000000018 V typeinfo for __cxxabiv1::__class_type_info
00000000009561c0 0000000000000058 V vtable for __cxxabiv1::__class_type_info
0000000000956218 0000000000000010 V typeinfo for std::exception
0000000000956228 0000000000000018 V typeinfo for std::bad_exception
0000000000956240 0000000000000010 V typeinfo for __cxxabiv1::__forced_unwind
0000000000956250 0000000000000010 V typeinfo for __cxxabiv1::__foreign_exception
0000000000956260 0000000000000028 V vtable for std::bad_exception
0000000000956288 0000000000000008 D __cxxabiv1::__unexpected_handler
0000000000956290 0000000000000018 V typeinfo for __cxxabiv1::__vmi_class_type_info
00000000009562a8 0000000000000058 V vtable for __cxxabiv1::__vmi_class_type_info
0000000000956300 0000000000000018 V typeinfo for std::codecvt<char, char, _mbstate_t>
0000000000956318 0000000000000018 V typeinfo for std::codecvt<wchar_t, char, _mbstate_t>
0000000000956330 0000000000000058 V vtable for std::codecvt<char, char, _mbstate_t>
0000000000956388 0000000000000058 V vtable for std::codecvt<wchar_t, char, _mbstate_t>
00000000009563e0 0000000000000008 D std::__num_base::_S_atoms_out
00000000009563e8 0000000000000008 D std::__num_base::_S_atoms_in
00000000009563f0 0000000000000008 D std::money_base::_S_atoms
00000000009563f8 0000000000000070 D std::__timepunct_cache<wchar_t>::_S_timezones
0000000000956468 0000000000000070 D std::__timepunct_cache<char>::_S_timezones
00000000009564d8 0000000000000018 V typeinfo for std::logic_error
00000000009564f0 0000000000000018 V typeinfo for std::length_error
0000000000956508 0000000000000018 V typeinfo for std::out_of_range
0000000000956520 0000000000000018 V typeinfo for std::runtime_error
0000000000956538 0000000000000028 V vtable for std::logic_error
0000000000956560 0000000000000028 V vtable for std::length_error
0000000000956588 0000000000000028 V vtable for std::out_of_range
00000000009565b0 0000000000000028 V vtable for std::runtime_error
00000000009565d8 0000000000000018 V typeinfo for std::ios_base::failure[abi:cxx11]
00000000009565f0 0000000000000018 V typeinfo for std::__ios_failure
0000000000956608 0000000000000028 V typeinfo for std::__iosfail_type_info
0000000000956630 0000000000000028 V vtable for std::ios_base::failure[abi:cxx11]
0000000000956658 0000000000000028 V vtable for std::__ios_failure
0000000000956680 0000000000000058 V vtable for std::__iosfail_type_info
00000000009566d8 0000000000000018 d typeinfo for (anonymous namespace)::io_error_category
00000000009566f0 0000000000000050 d vtable for (anonymous namespace)::io_error_category
0000000000956740 0000000000000008 d (anonymous namespace)::io_category_instance
0000000000956748 0000000000000010 V typeinfo for std::_V2::error_category
0000000000956758 0000000000000018 V typeinfo for std::system_error
0000000000956770 0000000000000028 V vtable for std::system_error
0000000000956798 0000000000000008 D __cxxabiv1::__terminate_handler
00000000009567a0 0000000000000018 V typeinfo for std::ios_base::failure
00000000009567b8 0000000000000028 V vtable for std::ios_base::failure
00000000009567e0 0000000000000008 D environ
00000000009567e8 0000000000000008 D __malloc_sbrk_base
00000000009567f0 0000000000000008 D __malloc_trim_threshold
00000000009567f8 0000000000000810 D __malloc_av_
0000000000957008 0000000000000018 D __sglue
0000000000957020 0000000000000058 d tzinfo
0000000000957078 00000000000001a8 D __global_locale
0000000000957220 00000000000001a8 D __C_locale
00000000009573c8 0000000000000020 D __default_locale
00000000009573f0 0000000000000038 d categories
0000000000957428 00000000000001f8 D _C_time_locale
0000000000957620 0000000000000008 D _impure_ptr
0000000000957628 0000000000000160 D _impure_data
0000000000957788 00000000000007b0 d caseconv_table
0000000000957f38 0000000000000010 D _tzname
0000000000957f50 0000000000000400 d _current_working_directory
0000000000958350 0000000000002000 d handles
000000000095a350 0000000000000010 d __stderr_handle
000000000095a360 0000000000000010 d __stdout_handle
000000000095a370 0000000000000010 d __stdin_handle
000000000095a380 0000000000000118 D devoptab_list
000000000095a498 0000000000000100 D dotab_stdnull
000000000095a598 0000000000000004 d defaultDevice
000000000095a5a0 B __bss_start__
000000000095a5a0 b completed.1
000000000095a5a8 b object.0
000000000095a5d8 0000000000000008 B CSnake::c_pTextureHead
000000000095a5e0 0000000000000008 B CSnake::c_pTextureBody
000000000095a5e8 0000000000000008 B CSnake::c_pTextureTail
000000000095a5f0 0000000000000004 B CText::c_colFont
000000000095a5f8 0000000000000008 B CText::c_pFont
000000000095a600 0000000000000004 b initialized
000000000095a608 0000000000000010 b Gif89
000000000095a618 000000000000031c b GifScreen
000000000095a934 0000000000000004 b ZeroDataBlock
000000000095a938 0000000000000100 b buf.9898
000000000095aa38 0000000000000118 b buf.9926
000000000095ab50 0000000000000004 b clear_code.9952
000000000095ab54 0000000000000004 b code_size.9946
000000000095ab58 0000000000000004 b curbit.9927
000000000095ab5c 0000000000000004 b done.9929
000000000095ab60 0000000000000004 b end_code.9953
000000000095ab64 0000000000000004 b firstcode.9950
000000000095ab68 0000000000000004 b fresh.9943
000000000095ab6c 0000000000000004 b last_byte.9930
000000000095ab70 0000000000000004 b lastbit.9928
000000000095ab74 0000000000000004 b max_code.9948
000000000095ab78 0000000000000004 b max_code_size.9949
000000000095ab7c 0000000000000004 b oldcode.9951
000000000095ab80 0000000000000004 b set_code_size.9947
000000000095ab88 0000000000000008 b sp.9956
000000000095ab90 0000000000008000 b stack.9955
0000000000962b90 0000000000008000 b table.9954
000000000096ab90 0000000000000090 b lib
000000000096ac20 00000000000000f0 b lib
000000000096ad10 0000000000000004 b buflen
000000000096ad18 0000000000000008 b error
000000000096ad20 0000000000000008 b linebuf
000000000096ad28 0000000000000028 b lib
000000000096ad50 0000000000000004 b TTF_initialized
000000000096ad58 0000000000000008 b library
000000000096ad60 0000000000000004 b audio_device
000000000096ad64 0000000000000004 b audio_opened
000000000096ad68 0000000000000008 b channel_done_callback
000000000096ad70 0000000000000008 b chunk_decoders
000000000096ad78 0000000000000008 b mix_channel
000000000096ad80 0000000000000008 b mix_postmix
000000000096ad88 0000000000000008 b mix_postmix_data
000000000096ad90 0000000000000020 b mixer
000000000096adb0 0000000000000008 b music_data
000000000096adb8 0000000000000004 b num_channels
000000000096adbc 0000000000000004 b num_decoders
000000000096adc0 0000000000000008 b posteffects
000000000096adc8 0000000000000004 b reserved_channels
000000000096adcc 0000000000000004 b ms_per_step
000000000096add0 0000000000000008 B music_cmd
000000000096add8 0000000000000008 b music_decoders
000000000096ade0 0000000000000008 b music_finished_hook
000000000096ade8 0000000000000008 b music_playing
000000000096adf0 0000000000000004 b num_decoders
000000000096adf8 0000000000000008 b soundfont_paths
000000000096ae00 0000000000000048 b modplug
000000000096ae48 0000000000000038 b settings
000000000096ae80 0000000000000088 b mpg123
000000000096af08 0000000000000058 b vorbis
000000000096af60 0000000000000040 b opus
000000000096afa0 0000000000000100 b def_instr_name
000000000096b0a0 0000000000000004 b rcf_count.10150
000000000096b0a4 0000000000000004 B _Mix_effects_max_speed
000000000096b0a8 0000000000000008 b pathlist
000000000096b0b0 0000000000000001 b lastchan.10105
000000000096b0b1 0000000000000001 b laststatus.10104
000000000096b0b2 0000000000000001 b nrpn.10106
000000000096b0b8 0000000000000010 b rpn_lsb.10108
000000000096b0c8 0000000000000010 b rpn_msb.10107
000000000096b0d8 0000000000000008 b pos_args_array
000000000096b0e0 0000000000000008 b pos_args_global
000000000096b0e8 0000000000000004 b position_channels
000000000096b0f0 0000000000000020 b SDL_SubsystemRefCount
000000000096b110 0000000000000004 b SDL_bInMainQuit
000000000096b118 0000000000000008 b assertion_mutex
000000000096b120 0000000000000008 b triggered_assertions
000000000096b128 0000000000000008 b SDL_hints
000000000096b130 0000000000000008 b SDL_log_userdata
000000000096b138 0000000000000008 b SDL_loglevels
000000000096b140 0000000000000080 b open_devices
000000000096b1c0 00000000000000d0 b current_audio
000000000096b290 0000000000000008 b ResamplerFilterDifference
000000000096b298 0000000000000008 b ResamplerFilter
000000000096b2a0 0000000000000004 b ResampleFilterSpinlock
000000000096b2a4 0000000000000004 b converters_chosen.0
000000000096b2a8 0000000000000008 B SDL_Convert_F32_to_S32
000000000096b2b0 0000000000000008 B SDL_Convert_F32_to_U16
000000000096b2b8 0000000000000008 B SDL_Convert_F32_to_S16
000000000096b2c0 0000000000000008 B SDL_Convert_F32_to_U8
000000000096b2c8 0000000000000008 B SDL_Convert_F32_to_S8
000000000096b2d0 0000000000000008 B SDL_Convert_S32_to_F32
000000000096b2d8 0000000000000008 B SDL_Convert_U16_to_F32
000000000096b2e0 0000000000000008 B SDL_Convert_S16_to_F32
000000000096b2e8 0000000000000008 B SDL_Convert_U8_to_F32
000000000096b2f0 0000000000000008 B SDL_Convert_S8_to_F32
000000000096b2f8 0000000000000004 b checked.0
000000000096b2fc 0000000000000004 b SDL_DoEventLogging
000000000096b300 0000000000000800 b SDL_disabled_events
000000000096bb00 0000000000000004 b SDL_event_watchers_removed
000000000096bb04 0000000000000004 b SDL_event_watchers_dispatching
000000000096bb08 0000000000000004 b SDL_event_watchers_count
000000000096bb10 0000000000000008 b SDL_event_watchers
000000000096bb18 0000000000000018 b SDL_EventOK
000000000096bb30 0000000000000008 b SDL_event_watchers_lock
000000000096bb38 0000000000000004 b recordAll
000000000096bb3c 0000000000000004 b SDL_numGestureTouches
000000000096bb40 0000000000000008 b SDL_gestureTouch
000000000096bb48 0000000000000c10 b SDL_keyboard
000000000096c758 0000000000000004 b track_mouse_down
000000000096c760 00000000000000e8 b SDL_mouse
000000000096c848 0000000000000004 b send_quit_pending
000000000096c850 0000000000000008 b track_touchid
000000000096c858 0000000000000008 b track_fingerid
000000000096c860 0000000000000004 b finger_touching
000000000096c868 0000000000000008 b SDL_touchDevices
000000000096c870 0000000000000004 b SDL_num_touch
000000000096c878 0000000000000008 b SDL_haptics
000000000096c880 0000000000000010 b SDL_ignored_controllers
000000000096c890 0000000000000010 b SDL_allowed_controllers
000000000096c8a0 0000000000000008 b s_pXInputMapping
000000000096c8a8 0000000000000008 b s_pDefaultMapping
000000000096c8b0 0000000000000008 b s_pSupportedControllers
000000000096c8b8 0000000000000008 b SDL_gamecontrollers
000000000096c8c0 0000000000000008 b SDL_joystick_players
000000000096c8c8 0000000000000004 b SDL_joystick_player_count
000000000096c8d0 0000000000000008 b SDL_joystick_lock
000000000096c8d8 0000000000000004 b SDL_updating_joystick
000000000096c8e0 0000000000000008 b SDL_joysticks
000000000096c8e8 0000000000000004 b SDL_joystick_allows_background_events
000000000096c8ec 0000000000000001 b texture_magic
000000000096c8ed 0000000000000001 b renderer_magic
000000000096c8f0 0000000000000008 b SDL_sensor_lock
000000000096c8f8 0000000000000004 b SDL_updating_sensor
000000000096c900 0000000000000008 b SDL_sensors
000000000096c908 0000000000000084 b SDL_global_errbuf.0
000000000096c98c 0000000000000004 b tls_lock.1
000000000096c990 0000000000000004 b tls_being_created.2
000000000096c994 0000000000000004 b tls_errbuf.3
000000000096c998 0000000000000004 b tls_lock.4
000000000096c9a0 0000000000000004 b SDL_tls_id.5
000000000096c9a8 0000000000000008 b SDL_generic_TLS
000000000096c9b0 0000000000000008 b SDL_generic_TLS_mutex
000000000096c9c0 00000000000000d0 b SDL_timer_data
000000000096ca90 0000000000000004 b formats_lock
000000000096ca98 0000000000000008 b formats
000000000096caa0 0000000000000008 b _this
000000000096caa8 0000000000000004 b lock.0
000000000096caac 0000000000000004 b generic_local_storage
000000000096cab0 0000000000000004 b operationMode
000000000096cab8 0000000000000008 b switch_window
000000000096cac0 00000000000003c0 b state
000000000096ce80 0000000000000008 b start
000000000096ce88 0000000000000001 b started
000000000096ce90 0000000000000008 b g_VJoys
000000000096cea0 0000000000000040 b procname.0
000000000096cee0 0000000000000200 b keys
000000000096d0e0 0000000000000008 b last_timestamp
000000000096d0e8 0000000000000008 b prev_buttons
000000000096d0f0 0000000000000001 b kbdShown
000000000096d0f1 0000000000000001 b kbdInited
000000000096d0f8 0000000000000048 b kbdAppearArg
000000000096d140 00000000000005d8 b kbd
000000000096d718 0000000000000290 b touchStateOld
000000000096d9a8 0000000000000290 b touchState
000000000096dc38 0000000000000004 b seq
000000000096dc3c 0000000000000004 B ModPlug::gSampleSize
000000000096dc40 0000000000000004 B CSoundFile::gdwSysInfo
000000000096dc44 0000000000000004 B CSoundFile::gnCPUUsage
000000000096dc48 0000000000000008 B CSoundFile::gpSndMixHook
000000000096dc50 0000000000000004 B CSoundFile::gdwSoundSetup
000000000096dc58 0000000000000008 B CSoundFile::gpMixPluginCreateProc
000000000096dc60 0000000000000004 B CSoundFile::gnVUMeter
000000000096dc64 0000000000000004 B gbInitPlugins
000000000096dc68 0000000000000004 B gnDryLOfsVol
000000000096dc6c 0000000000000004 B gnDryROfsVol
000000000096dc70 0000000000000004 B gnReverbSend
000000000096dc74 0000000000000004 B gnRvbLOfsVol
000000000096dc78 0000000000000004 B gnRvbROfsVol
000000000096dc80 0000000000000100 b XBassDelay
000000000096dd80 0000000000000004 b nXBassMask
000000000096dd88 0000000000000100 b XBassBuffer
000000000096de88 0000000000000020 b gRvbLowPass
000000000096dea8 0000000000000004 b nDolbyDepth
000000000096deac 0000000000000004 b nFilterAttn
000000000096deb0 0000000000000004 b nReverbSize
000000000096deb8 0000000000025800 b ReverbBuffer
00000000009936b8 0000000000000004 b nReverbSize2
00000000009936bc 0000000000000004 b nReverbSize3
00000000009936c0 0000000000000004 b nReverbSize4
00000000009936c4 0000000000000004 b nSurroundPos
00000000009936c8 0000000000000004 b nXBassDlyPos
00000000009936d0 000000000001cad0 b ReverbBuffer2
00000000009b01a0 0000000000014310 b ReverbBuffer3
00000000009c44b0 000000000000dd0c b ReverbBuffer4
00000000009d21bc 0000000000000004 b nSurroundSize
00000000009d21c0 0000000000009600 b SurroundBuffer
00000000009db7c0 0000000000000004 b nDolbyHiFltPos
00000000009db7c4 0000000000000004 b nDolbyHiFltSum
00000000009db7c8 0000000000000004 b nDolbyLoDlyPos
00000000009db7cc 0000000000000004 b nDolbyLoFltPos
00000000009db7d0 0000000000000004 b nDolbyLoFltSum
00000000009db7d4 0000000000000004 b nReverbLoDlyPos
00000000009db7d8 0000000000000004 b nReverbLoFltPos
00000000009db7dc 0000000000000004 b nReverbLoFltSum
00000000009db7e0 0000000000000004 b nXBassBufferPos
00000000009db7e4 0000000000000004 b nReverbBufferPos
00000000009db7e8 0000000000000004 b nReverbBufferPos2
00000000009db7ec 0000000000000004 b nReverbBufferPos3
00000000009db7f0 0000000000000004 b nReverbBufferPos4
00000000009db7f8 0000000000000100 b DolbyLoFilterDelay
00000000009db8f8 0000000000000100 b DolbyHiFilterBuffer
00000000009db9f8 0000000000000100 b DolbyLoFilterBuffer
00000000009dbaf8 0000000000000100 b ReverbLoFilterDelay
00000000009dbbf8 0000000000000100 b ReverbLoFilterBuffer
00000000009dbcf8 0000000000000004 b nLeftNR
00000000009dbcfc 0000000000000004 b nRightNR
00000000009dbd00 0000000000000004 b gRvbLPPos
00000000009dbd04 0000000000000004 b gRvbLPSum
00000000009dbd08 0000000000000004 b nXBassSum
00000000009dbd10 0000000000001000 B MixRearBuffer
00000000009dcd10 0000000000001000 B MixReverbBuffer
00000000009ddd10 0000000000002000 B MixSoundBuffer
00000000009dfd10 0000000000002000 B CzCUBICSPLINE::lut
00000000009e1d10 0000000000008010 B CzWINDOWEDFIR::lut
00000000009e9d20 0000000000000001 B sfir
00000000009e9d28 0000000000000001 B sspline
00000000009e9d30 0000000000000780 b chordnotes
00000000009ea4b0 0000000000000004 b chordsnamed
00000000009ea4b4 0000000000000001 b global_part
00000000009ea4b8 0000000000000004 b global_voiceno
00000000009ea4bc 0000000000000004 b global_songstart
00000000009ea4c0 0000000000000004 b global_octave_shift
00000000009ea4c4 0000000000000004 b global_tempo_factor
00000000009ea4c8 0000000000000004 b global_tempo_divider
00000000009ea4d0 0000000000000140 b chordlen
00000000009ea610 0000000000000280 b chordname
00000000009ea890 0000000000000004 b abc_partpat_to_orderlist(unsigned char (*) [2], char const*, _ABCHANDLE*, unsigned char**, int)::ordersize
00000000009ea898 0000000000000400 b pathforpat
00000000009eac98 00000000000000bf b pat_gm_used
00000000009ead58 0000000000000400 b timiditycfg
00000000009eb158 000000000002fc00 b midipat
0000000000a1ad58 00000000000000bf b pat_loops
0000000000a1ae18 0000000000000028 b pat_gm_name::buf
0000000000a1ae40 0000000000000004 b pat_readpat(int, char*, int)::readlasttime
0000000000a1ae48 0000000000000008 b pat_readpat(int, char*, int)::opt
0000000000a1ae50 0000000000000008 b pat_readpat(int, char*, int)::mmpat
0000000000a1ae58 0000000000000004 b pat_readpat(int, char*, int)::wavesize
0000000000a1ae60 0000000000000008 b GetCoeffs
0000000000a1ae68 0000000000000008 B WebPApplyAlphaMultiply
0000000000a1ae70 0000000000000008 B WebPApplyAlphaMultiply4444
0000000000a1ae78 0000000000000008 B WebPDispatchAlpha
0000000000a1ae80 0000000000000008 B WebPDispatchAlphaToGreen
0000000000a1ae88 0000000000000008 B WebPExtractAlpha
0000000000a1ae90 0000000000000008 B WebPExtractGreen
0000000000a1ae98 0000000000000008 B WebPHasAlpha32b
0000000000a1aea0 0000000000000008 B WebPHasAlpha8b
0000000000a1aea8 0000000000000010 b WebPInitAlphaProcessing_body_lock.1
0000000000a1aeb8 0000000000000008 B WebPMultARGBRow
0000000000a1aec0 0000000000000008 B WebPMultRow
0000000000a1aec8 0000000000000008 B WebPPackRGB
0000000000a1aed0 0000000000000008 B VP8DitherCombine8x8
0000000000a1aed8 0000000000000010 b VP8DspInit_body_lock.1
0000000000a1aee8 0000000000000008 B VP8HFilter16
0000000000a1aef0 0000000000000008 B VP8HFilter16i
0000000000a1aef8 0000000000000008 B VP8HFilter8
0000000000a1af00 0000000000000008 B VP8HFilter8i
0000000000a1af08 0000000000000038 B VP8PredChroma8
0000000000a1af40 0000000000000038 B VP8PredLuma16
0000000000a1af78 0000000000000050 B VP8PredLuma4
0000000000a1afc8 0000000000000008 B VP8SimpleHFilter16
0000000000a1afd0 0000000000000008 B VP8SimpleHFilter16i
0000000000a1afd8 0000000000000008 B VP8SimpleVFilter16
0000000000a1afe0 0000000000000008 B VP8SimpleVFilter16i
0000000000a1afe8 0000000000000008 B VP8Transform
0000000000a1aff0 0000000000000008 B VP8TransformAC3
0000000000a1aff8 0000000000000008 B VP8TransformDC
0000000000a1b000 0000000000000008 B VP8TransformDCUV
0000000000a1b008 0000000000000008 B VP8TransformUV
0000000000a1b010 0000000000000008 B VP8TransformWHT
0000000000a1b018 0000000000000008 B VP8VFilter16
0000000000a1b020 0000000000000008 B VP8VFilter16i
0000000000a1b028 0000000000000008 B VP8VFilter8
0000000000a1b030 0000000000000008 B VP8VFilter8i
0000000000a1b038 0000000000000010 b VP8FiltersInit_body_lock.1
0000000000a1b048 0000000000000020 B WebPFilters
0000000000a1b068 0000000000000020 B WebPUnfilters
0000000000a1b088 0000000000000008 B VP8LAddGreenToBlueAndRed
0000000000a1b090 0000000000000008 B VP8LConvertBGRAToBGR
0000000000a1b098 0000000000000008 B VP8LConvertBGRAToRGB
0000000000a1b0a0 0000000000000008 B VP8LConvertBGRAToRGB565
0000000000a1b0a8 0000000000000008 B VP8LConvertBGRAToRGBA
0000000000a1b0b0 0000000000000008 B VP8LConvertBGRAToRGBA4444
0000000000a1b0b8 0000000000000010 b VP8LDspInit_body_lock.1
0000000000a1b0c8 0000000000000008 B VP8LMapColor32b
0000000000a1b0d0 0000000000000008 B VP8LMapColor8b
0000000000a1b0d8 0000000000000080 B VP8LPredictors
0000000000a1b158 0000000000000080 B VP8LPredictorsAdd
0000000000a1b1d8 0000000000000080 B VP8LPredictorsAdd_C
0000000000a1b258 0000000000000080 B VP8LPredictors_C
0000000000a1b2d8 0000000000000008 B VP8LTransformColorInverse
0000000000a1b2e0 0000000000000010 b WebPRescalerDspInit_body_lock.1
0000000000a1b2f0 0000000000000008 B WebPRescalerExportRowExpand
0000000000a1b2f8 0000000000000008 B WebPRescalerExportRowShrink
0000000000a1b300 0000000000000008 B WebPRescalerImportRowExpand
0000000000a1b308 0000000000000008 B WebPRescalerImportRowShrink
0000000000a1b310 0000000000000010 b WebPInitUpsamplers_body_lock.1
0000000000a1b320 0000000000000010 b WebPInitYUV444Converters_body_lock.3
0000000000a1b330 0000000000000068 B WebPUpsamplers
0000000000a1b398 0000000000000068 B WebPYUV444Converters
0000000000a1b400 0000000000000008 B WebPConvertARGBToUV
0000000000a1b408 0000000000000008 B WebPConvertARGBToY
0000000000a1b410 0000000000000008 B WebPConvertBGR24ToY
0000000000a1b418 0000000000000008 B WebPConvertRGB24ToY
0000000000a1b420 0000000000000008 B WebPConvertRGBA32ToUV
0000000000a1b428 0000000000000010 b WebPInitConvertARGBToYUV_body_lock.1
0000000000a1b438 0000000000000010 b WebPInitSamplers_body_lock.3
0000000000a1b448 0000000000000068 B WebPSamplers
0000000000a1b4b0 0000000000000008 B WebPSharpYUVFilterRow
0000000000a1b4b8 0000000000000008 B WebPSharpYUVUpdateRGB
0000000000a1b4c0 0000000000000008 B WebPSharpYUVUpdateY
0000000000a1b4c8 0000000000000030 b dummy_thread
0000000000a1b4f8 0000000000000008 b _eglDriver
0000000000a1b500 0000000000000010 b _eglModuleMutex
0000000000a1b510 0000000000000010 b _eglGlobalMutex
0000000000a1b520 0000000000000004 b drifb_ID
0000000000a1b528 0000000000000010 b nouveau_screen_mutex
0000000000a1b538 0000000000000004 b id.1
0000000000a1b53c 0000000000000004 b id.0
0000000000a1b540 0000000000001000 b buf.10
0000000000a1c540 0000000000000040 b rest.3
0000000000a1c580 0000000000000001 b value.7
0000000000a1c588 0000000000000010 B OneTimeLock
0000000000a1c598 0000000000000400 B _mesa_ubyte_to_float_color_tab
0000000000a1c998 0000000000000001 b initialized.0
0000000000a1c9a0 0000000000000010 b DynamicIDMutex
0000000000a1c9b0 0000000000000004 b oom_msg_id.0
0000000000a1c9b8 000000000000063c b InstSize
0000000000a1cff4 0000000000000001 b tableInitialized.70
0000000000a1cff8 0000000000000008 b LogFile
0000000000a1d000 0000000000000004 b error_msg_id.1
0000000000a1d004 0000000000000004 b numCalls.2
0000000000a1d008 0000000000000110 B _mesa_extension_override_disables
0000000000a1d118 0000000000000110 B _mesa_extension_override_enables
0000000000a1d228 0000000000000088 b unrecognized_extensions
0000000000a1d2b0 0000000000000001 b warned.0
0000000000a1d2b8 00000000000004d8 b DummyFramebuffer
0000000000a1d790 0000000000000058 b DummyRenderbuffer
0000000000a1d7e8 00000000000004d8 b IncompleteFramebuffer
0000000000a1dcc0 0000000000000004 b msg_id.1
0000000000a1dcc4 0000000000000004 b msg_id.2
0000000000a1dcc8 0000000000000008 b format_array_format_table
0000000000a1dcd0 0000000000000004 b format_array_format_table_exists
0000000000a1dcd4 0000000000000004 b msg_id.0
0000000000a1dcd8 00000000000012c8 B driDispatchRemapTable
0000000000a1efa0 0000000000000001 b initialized.0
0000000000a1efa8 0000000000000008 b path.0
0000000000a1efb0 0000000000000001 b read_env_var.1
0000000000a1efb4 0000000000000004 b msg_id.1
0000000000a1efb8 0000000000000001 b initialized.1
0000000000a1efb9 0000000000000001 b initialized.3
0000000000a1efc0 0000000000000bc0 b table.0
0000000000a1fb80 0000000000000bc0 b table.2
0000000000a20740 0000000000000014 b token_tmp
0000000000a20754 0000000000000001 b value.0
0000000000a20758 0000000000000004 B ST_DEBUG
0000000000a20760 0000000000000008 b value.0
0000000000a20768 0000000000000008 b guard variable for (anonymous namespace)::builtin_builder::add_image_function(char const*, char const*, ir_function_signature* ((anonymous namespace)::builtin_builder::*)(glsl_type const*, unsigned int, unsigned int), unsigned int, unsigned int, ir_intrinsic_id)::types
0000000000a20770 0000000000000004 b builtin_users
0000000000a20778 0000000000000010 b builtins_lock
0000000000a20788 0000000000000010 b builtins
0000000000a20798 0000000000000108 b (anonymous namespace)::builtin_builder::add_image_function(char const*, char const*, ir_function_signature* ((anonymous namespace)::builtin_builder::*)(glsl_type const*, unsigned int, unsigned int), unsigned int, unsigned int, ir_intrinsic_id)::types
0000000000a208a0 0000000000000001 B ir_variable::temporaries_allocate_names
0000000000a208a4 0000000000000004 B glcpp_parser_debug
0000000000a208a8 0000000000000008 b guard variable for glsl_type::vec(unsigned int)::ts
0000000000a208b0 0000000000000008 b guard variable for glsl_type::bvec(unsigned int)::ts
0000000000a208b8 0000000000000008 b guard variable for glsl_type::dvec(unsigned int)::ts
0000000000a208c0 0000000000000008 b guard variable for glsl_type::ivec(unsigned int)::ts
0000000000a208c8 0000000000000008 b guard variable for glsl_type::uvec(unsigned int)::ts
0000000000a208d0 0000000000000008 b guard variable for glsl_type::i8vec(unsigned int)::ts
0000000000a208d8 0000000000000008 b guard variable for glsl_type::u8vec(unsigned int)::ts
0000000000a208e0 0000000000000008 b guard variable for glsl_type::f16vec(unsigned int)::ts
0000000000a208e8 0000000000000008 b guard variable for glsl_type::i16vec(unsigned int)::ts
0000000000a208f0 0000000000000008 b guard variable for glsl_type::i64vec(unsigned int)::ts
0000000000a208f8 0000000000000008 b guard variable for glsl_type::u16vec(unsigned int)::ts
0000000000a20900 0000000000000008 b guard variable for glsl_type::u64vec(unsigned int)::ts
0000000000a20908 0000000000000004 b glsl_type_users
0000000000a20910 0000000000000030 B glsl_type::_bool_type
0000000000a20940 0000000000000030 B glsl_type::_mat2_type
0000000000a20970 0000000000000030 B glsl_type::_mat3_type
0000000000a209a0 0000000000000030 B glsl_type::_mat4_type
0000000000a209d0 0000000000000030 B glsl_type::_uint_type
0000000000a20a00 0000000000000030 B glsl_type::_vec2_type
0000000000a20a30 0000000000000030 B glsl_type::_vec3_type
0000000000a20a60 0000000000000030 B glsl_type::_vec4_type
0000000000a20a90 0000000000000030 B glsl_type::_vec8_type
0000000000a20ac0 0000000000000030 B glsl_type::_void_type
0000000000a20af0 0000000000000010 B glsl_type::hash_mutex
0000000000a20b00 0000000000000030 B glsl_type::_bvec2_type
0000000000a20b30 0000000000000030 B glsl_type::_bvec3_type
0000000000a20b60 0000000000000030 B glsl_type::_bvec4_type
0000000000a20b90 0000000000000030 B glsl_type::_bvec8_type
0000000000a20bc0 0000000000000030 B glsl_type::_dmat2_type
0000000000a20bf0 0000000000000030 B glsl_type::_dmat3_type
0000000000a20c20 0000000000000030 B glsl_type::_dmat4_type
0000000000a20c50 0000000000000030 B glsl_type::_dvec2_type
0000000000a20c80 0000000000000030 B glsl_type::_dvec3_type
0000000000a20cb0 0000000000000030 B glsl_type::_dvec4_type
0000000000a20ce0 0000000000000030 B glsl_type::_dvec8_type
0000000000a20d10 0000000000000030 B glsl_type::_error_type
0000000000a20d40 0000000000000030 B glsl_type::_float_type
0000000000a20d70 0000000000000030 B glsl_type::_ivec2_type
0000000000a20da0 0000000000000030 B glsl_type::_ivec3_type
0000000000a20dd0 0000000000000030 B glsl_type::_ivec4_type
0000000000a20e00 0000000000000030 B glsl_type::_ivec8_type
0000000000a20e30 0000000000000030 B glsl_type::_uvec2_type
0000000000a20e60 0000000000000030 B glsl_type::_uvec3_type
0000000000a20e90 0000000000000030 B glsl_type::_uvec4_type
0000000000a20ec0 0000000000000030 B glsl_type::_uvec8_type
0000000000a20ef0 0000000000000030 B glsl_type::_vec16_type
0000000000a20f20 0000000000000008 B glsl_type::array_types
0000000000a20f28 0000000000000030 B glsl_type::_bvec16_type
0000000000a20f58 0000000000000030 B glsl_type::_double_type
0000000000a20f88 0000000000000030 B glsl_type::_dvec16_type
0000000000a20fb8 0000000000000030 B glsl_type::_i8vec2_type
0000000000a20fe8 0000000000000030 B glsl_type::_i8vec3_type
0000000000a21018 0000000000000030 B glsl_type::_i8vec4_type
0000000000a21048 0000000000000030 B glsl_type::_i8vec8_type
0000000000a21078 0000000000000030 B glsl_type::_int8_t_type
0000000000a210a8 0000000000000030 B glsl_type::_ivec16_type
0000000000a210d8 0000000000000030 B glsl_type::_mat2x3_type
0000000000a21108 0000000000000030 B glsl_type::_mat2x4_type
0000000000a21138 0000000000000030 B glsl_type::_mat3x2_type
0000000000a21168 0000000000000030 B glsl_type::_mat3x4_type
0000000000a21198 0000000000000030 B glsl_type::_mat4x2_type
0000000000a211c8 0000000000000030 B glsl_type::_mat4x3_type
0000000000a211f8 0000000000000030 B glsl_type::_u8vec2_type
0000000000a21228 0000000000000030 B glsl_type::_u8vec3_type
0000000000a21258 0000000000000030 B glsl_type::_u8vec4_type
0000000000a21288 0000000000000030 B glsl_type::_u8vec8_type
0000000000a212b8 0000000000000030 B glsl_type::_uvec16_type
0000000000a212e8 0000000000000008 B glsl_type::struct_types
0000000000a212f0 0000000000000030 B glsl_type::_dmat2x3_type
0000000000a21320 0000000000000030 B glsl_type::_dmat2x4_type
0000000000a21350 0000000000000030 B glsl_type::_dmat3x2_type
0000000000a21380 0000000000000030 B glsl_type::_dmat3x4_type
0000000000a213b0 0000000000000030 B glsl_type::_dmat4x2_type
0000000000a213e0 0000000000000030 B glsl_type::_dmat4x3_type
0000000000a21410 0000000000000030 B glsl_type::_f16mat2_type
0000000000a21440 0000000000000030 B glsl_type::_f16mat3_type
0000000000a21470 0000000000000030 B glsl_type::_f16mat4_type
0000000000a214a0 0000000000000030 B glsl_type::_f16vec2_type
0000000000a214d0 0000000000000030 B glsl_type::_f16vec3_type
0000000000a21500 0000000000000030 B glsl_type::_f16vec4_type
0000000000a21530 0000000000000030 B glsl_type::_f16vec8_type
0000000000a21560 0000000000000030 B glsl_type::_i16vec2_type
0000000000a21590 0000000000000030 B glsl_type::_i16vec3_type
0000000000a215c0 0000000000000030 B glsl_type::_i16vec4_type
0000000000a215f0 0000000000000030 B glsl_type::_i16vec8_type
0000000000a21620 0000000000000030 B glsl_type::_i64vec2_type
0000000000a21650 0000000000000030 B glsl_type::_i64vec3_type
0000000000a21680 0000000000000030 B glsl_type::_i64vec4_type
0000000000a216b0 0000000000000030 B glsl_type::_i64vec8_type
0000000000a216e0 0000000000000030 B glsl_type::_i8vec16_type
0000000000a21710 0000000000000030 B glsl_type::_image1D_type
0000000000a21740 0000000000000030 B glsl_type::_image2D_type
0000000000a21770 0000000000000030 B glsl_type::_image3D_type
0000000000a217a0 0000000000000030 B glsl_type::_int16_t_type
0000000000a217d0 0000000000000030 B glsl_type::_int64_t_type
0000000000a21800 0000000000000030 B glsl_type::_sampler_type
0000000000a21830 0000000000000030 B glsl_type::_u16vec2_type
0000000000a21860 0000000000000030 B glsl_type::_u16vec3_type
0000000000a21890 0000000000000030 B glsl_type::_u16vec4_type
0000000000a218c0 0000000000000030 B glsl_type::_u16vec8_type
0000000000a218f0 0000000000000030 B glsl_type::_u64vec2_type
0000000000a21920 0000000000000030 B glsl_type::_u64vec3_type
0000000000a21950 0000000000000030 B glsl_type::_u64vec4_type
0000000000a21980 0000000000000030 B glsl_type::_u64vec8_type
0000000000a219b0 0000000000000030 B glsl_type::_u8vec16_type
0000000000a219e0 0000000000000030 B glsl_type::_uint8_t_type
0000000000a21a10 0000000000000030 B glsl_type::_f16vec16_type
0000000000a21a40 0000000000000030 B glsl_type::_i16vec16_type
0000000000a21a70 0000000000000030 B glsl_type::_i64vec16_type
0000000000a21aa0 0000000000000030 B glsl_type::_iimage1D_type
0000000000a21ad0 0000000000000030 B glsl_type::_iimage2D_type
0000000000a21b00 0000000000000030 B glsl_type::_iimage3D_type
0000000000a21b30 0000000000000030 B glsl_type::_u16vec16_type
0000000000a21b60 0000000000000030 B glsl_type::_u64vec16_type
0000000000a21b90 0000000000000030 B glsl_type::_uimage1D_type
0000000000a21bc0 0000000000000030 B glsl_type::_uimage2D_type
0000000000a21bf0 0000000000000030 B glsl_type::_uimage3D_type
0000000000a21c20 0000000000000030 B glsl_type::_uint16_t_type
0000000000a21c50 0000000000000030 B glsl_type::_uint64_t_type
0000000000a21c80 0000000000000008 B glsl_type::function_types
0000000000a21c88 0000000000000030 B glsl_type::_f16mat2x3_type
0000000000a21cb8 0000000000000030 B glsl_type::_f16mat2x4_type
0000000000a21ce8 0000000000000030 B glsl_type::_f16mat3x2_type
0000000000a21d18 0000000000000030 B glsl_type::_f16mat3x4_type
0000000000a21d48 0000000000000030 B glsl_type::_f16mat4x2_type
0000000000a21d78 0000000000000030 B glsl_type::_f16mat4x3_type
0000000000a21da8 0000000000000030 B glsl_type::_float16_t_type
0000000000a21dd8 0000000000000030 B glsl_type::_image2DMS_type
0000000000a21e08 0000000000000030 B glsl_type::_imageCube_type
0000000000a21e38 0000000000000030 B glsl_type::_sampler1D_type
0000000000a21e68 0000000000000030 B glsl_type::_sampler2D_type
0000000000a21e98 0000000000000030 B glsl_type::_sampler3D_type
0000000000a21ec8 0000000000000008 B glsl_type::interface_types
0000000000a21ed0 0000000000000030 B glsl_type::_iimage2DMS_type
0000000000a21f00 0000000000000030 B glsl_type::_iimageCube_type
0000000000a21f30 0000000000000030 B glsl_type::_isampler1D_type
0000000000a21f60 0000000000000030 B glsl_type::_isampler2D_type
0000000000a21f90 0000000000000030 B glsl_type::_isampler3D_type
0000000000a21fc0 0000000000000030 B glsl_type::_uimage2DMS_type
0000000000a21ff0 0000000000000030 B glsl_type::_uimageCube_type
0000000000a22020 0000000000000030 B glsl_type::_usampler1D_type
0000000000a22050 0000000000000030 B glsl_type::_usampler2D_type
0000000000a22080 0000000000000030 B glsl_type::_usampler3D_type
0000000000a220b0 0000000000000008 B glsl_type::subroutine_types
0000000000a220b8 0000000000000030 B glsl_type::_atomic_uint_type
0000000000a220e8 0000000000000030 B glsl_type::_image2DRect_type
0000000000a22118 0000000000000030 B glsl_type::_imageBuffer_type
0000000000a22148 0000000000000030 B glsl_type::_sampler2DMS_type
0000000000a22178 0000000000000030 B glsl_type::_samplerCube_type
0000000000a221a8 0000000000000030 B glsl_type::_iimage2DRect_type
0000000000a221d8 0000000000000030 B glsl_type::_iimageBuffer_type
0000000000a22208 0000000000000030 B glsl_type::_image1DArray_type
0000000000a22238 0000000000000030 B glsl_type::_image2DArray_type
0000000000a22268 0000000000000030 B glsl_type::_isampler2DMS_type
0000000000a22298 0000000000000030 B glsl_type::_isamplerCube_type
0000000000a222c8 0000000000000030 B glsl_type::_subpassInput_type
0000000000a222f8 0000000000000030 B glsl_type::_uimage2DRect_type
0000000000a22328 0000000000000030 B glsl_type::_uimageBuffer_type
0000000000a22358 0000000000000030 B glsl_type::_usampler2DMS_type
0000000000a22388 0000000000000030 B glsl_type::_usamplerCube_type
0000000000a223b8 0000000000000030 B glsl_type::_iimage1DArray_type
0000000000a223e8 0000000000000030 B glsl_type::_iimage2DArray_type
0000000000a22418 0000000000000030 B glsl_type::_isubpassInput_type
0000000000a22448 0000000000000030 B glsl_type::_sampler2DRect_type
0000000000a22478 0000000000000030 B glsl_type::_samplerBuffer_type
0000000000a224a8 0000000000000030 B glsl_type::_uimage1DArray_type
0000000000a224d8 0000000000000030 B glsl_type::_uimage2DArray_type
0000000000a22508 0000000000000030 B glsl_type::_usubpassInput_type
0000000000a22538 0000000000000030 B glsl_type::_image2DMSArray_type
0000000000a22568 0000000000000030 B glsl_type::_imageCubeArray_type
0000000000a22598 0000000000000030 B glsl_type::_isampler2DRect_type
0000000000a225c8 0000000000000030 B glsl_type::_isamplerBuffer_type
0000000000a225f8 0000000000000030 B glsl_type::_sampler1DArray_type
0000000000a22628 0000000000000030 B glsl_type::_sampler2DArray_type
0000000000a22658 0000000000000030 B glsl_type::_subpassInputMS_type
0000000000a22688 0000000000000030 B glsl_type::_usampler2DRect_type
0000000000a226b8 0000000000000030 B glsl_type::_usamplerBuffer_type
0000000000a226e8 0000000000000030 B glsl_type::_iimage2DMSArray_type
0000000000a22718 0000000000000030 B glsl_type::_iimageCubeArray_type
0000000000a22748 0000000000000030 B glsl_type::_isampler1DArray_type
0000000000a22778 0000000000000030 B glsl_type::_isampler2DArray_type
0000000000a227a8 0000000000000030 B glsl_type::_isubpassInputMS_type
0000000000a227d8 0000000000000030 B glsl_type::_sampler1DShadow_type
0000000000a22808 0000000000000030 B glsl_type::_sampler2DShadow_type
0000000000a22838 0000000000000030 B glsl_type::_uimage2DMSArray_type
0000000000a22868 0000000000000030 B glsl_type::_uimageCubeArray_type
0000000000a22898 0000000000000030 B glsl_type::_usampler1DArray_type
0000000000a228c8 0000000000000030 B glsl_type::_usampler2DArray_type
0000000000a228f8 0000000000000030 B glsl_type::_usubpassInputMS_type
0000000000a22928 0000000000000008 B glsl_type::explicit_matrix_types
0000000000a22930 0000000000000030 B glsl_type::_sampler2DMSArray_type
0000000000a22960 0000000000000030 B glsl_type::_samplerCubeArray_type
0000000000a22990 0000000000000030 B glsl_type::_isampler2DMSArray_type
0000000000a229c0 0000000000000030 B glsl_type::_isamplerCubeArray_type
0000000000a229f0 0000000000000030 B glsl_type::_samplerCubeShadow_type
0000000000a22a20 0000000000000030 B glsl_type::_usampler2DMSArray_type
0000000000a22a50 0000000000000030 B glsl_type::_usamplerCubeArray_type
0000000000a22a80 0000000000000030 B glsl_type::_samplerExternalOES_type
0000000000a22ab0 0000000000000030 B glsl_type::_sampler2DRectShadow_type
0000000000a22ae0 0000000000000030 B glsl_type::_sampler1DArrayShadow_type
0000000000a22b10 0000000000000030 B glsl_type::_sampler2DArrayShadow_type
0000000000a22b40 0000000000000030 B glsl_type::_samplerCubeArrayShadow_type
0000000000a22b70 0000000000000030 B glsl_type::_int_type
0000000000a22ba0 0000000000000030 b glsl_type::vec(unsigned int)::ts
0000000000a22bd0 0000000000000030 b glsl_type::bvec(unsigned int)::ts
0000000000a22c00 0000000000000030 b glsl_type::dvec(unsigned int)::ts
0000000000a22c30 0000000000000030 b glsl_type::ivec(unsigned int)::ts
0000000000a22c60 0000000000000030 b glsl_type::uvec(unsigned int)::ts
0000000000a22c90 0000000000000030 b glsl_type::i8vec(unsigned int)::ts
0000000000a22cc0 0000000000000030 b glsl_type::u8vec(unsigned int)::ts
0000000000a22cf0 0000000000000030 b glsl_type::f16vec(unsigned int)::ts
0000000000a22d20 0000000000000030 b glsl_type::i16vec(unsigned int)::ts
0000000000a22d50 0000000000000030 b glsl_type::i64vec(unsigned int)::ts
0000000000a22d80 0000000000000030 b glsl_type::u16vec(unsigned int)::ts
0000000000a22db0 0000000000000030 b glsl_type::u64vec(unsigned int)::ts
0000000000a22de0 0000000000000400 b views.0
0000000000a231e0 0000000000000100 b zeros.1
0000000000a232e0 0000000000000080 b error_tokens
0000000000a23360 0000000000000004 b id.0
0000000000a23368 0000000000000080 b buffer.1
0000000000a233e8 0000000000000004 B nouveau_mesa_debug
0000000000a233ec 0000000000000004 b id.1
0000000000a233f0 0000000000000004 b id.0
0000000000a233f8 0000000000000008 b fout.0
0000000000a23400 0000000000000008 b loc
0000000000a23408 0000000000000004 b cpu_once_flag
0000000000a23410 0000000000000014 B util_cpu_caps
0000000000a23428 0000000000000018 b address_reg
0000000000a23440 0000000000000018 b undef_dst
0000000000a23458 0000000000000018 b undef_src
0000000000a23470 0000000000000050 b buf.0
0000000000a234c0 000000000000000a b s.4
0000000000a234d0 0000000000000014 b s.6
0000000000a234e8 0000000000000014 b s.9
0000000000a23500 0000000000000064 b str.3
0000000000a23568 00000000000003f0 B _mesa_DummyProgram
0000000000a23958 00000000000000c8 b DummyShader
0000000000a23a20 00000000000000a0 b DummyBufferObject
0000000000a23ac0 0000000000000001 b disable.2
0000000000a23ac4 0000000000000004 b id.0
0000000000a23ac8 0000000000000004 b id.1
0000000000a23acc 0000000000000001 b read.3
0000000000a23ad0 0000000000000004 b warnCount.0
0000000000a23ad8 0000000000000004 b DummySemaphoreObject
0000000000a23adc 0000000000000004 b count.0
0000000000a23ae0 0000000000000078 b inv_tab
0000000000a23b58 0000000000004800 b CachedShaders
0000000000a28358 0000000000000004 b NumCachedShaders
0000000000a28360 0000000000000020 b address_reg
0000000000a28380 0000000000000020 b address_reg2
0000000000a283a0 0000000000000020 b sampler_reladdr
0000000000a283c0 0000000000000020 b undef_dst
0000000000a283e0 0000000000000020 b undef_src
0000000000a28400 0000000000000004 b glsl_to_tgsi_visitor::visit(ir_constant*)::in_array
0000000000a28408 00000000000000f0 b gl_FogParameters_fields
0000000000a284f8 0000000000000090 b gl_LightProducts_fields
0000000000a28588 0000000000000150 b gl_PointParameters_fields
0000000000a286d8 0000000000000030 b gl_LightModelProducts_fields
0000000000a28708 00000000000000f0 b gl_MaterialParameters_fields
0000000000a287f8 0000000000000090 b gl_DepthRangeParameters_fields
0000000000a28888 0000000000000030 b gl_LightModelParameters_fields
0000000000a288b8 0000000000000240 b gl_LightSourceParameters_fields
0000000000a28af8 0000000000000030 B glsl_type::_struct_gl_FogParameters_type
0000000000a28b28 0000000000000030 B glsl_type::_struct_gl_LightProducts_type
0000000000a28b58 0000000000000030 B glsl_type::_struct_gl_PointParameters_type
0000000000a28b88 0000000000000030 B glsl_type::_struct_gl_LightModelProducts_type
0000000000a28bb8 0000000000000030 B glsl_type::_struct_gl_MaterialParameters_type
0000000000a28be8 0000000000000030 B glsl_type::_struct_gl_DepthRangeParameters_type
0000000000a28c18 0000000000000030 B glsl_type::_struct_gl_LightModelParameters_type
0000000000a28c48 0000000000000030 B glsl_type::_struct_gl_LightSourceParameters_type
0000000000a28c78 0000000000000008 b nv50_ir::colour
0000000000a28c80 0000000000000121 B nv50_ir::GCRA::relDegree
0000000000a28da8 0000000000000014 b s.0
0000000000a28dbc 0000000000000001 b value.0
0000000000a28dc0 0000000000000010 b dynamic_mutex.0
0000000000a28dd0 0000000000001800 b dynamic_stubs
0000000000a2a5d0 0000000000000004 b flag.1
0000000000a2a5d4 0000000000000004 b num_dynamic_stubs
0000000000a2a5d8 0000000000000008 b nop_handler
0000000000a2a5e0 0000000000000008 b g_psmGuard
0000000000a2a5e8 0000000000000010 b g_psmSrv
0000000000a2a5f8 0000000000000008 b g_nvGuard
0000000000a2a600 0000000000000028 b g_nvTransfermem
0000000000a2a628 0000000000000010 b g_nvSrvClone
0000000000a2a638 0000000000000010 b g_nvSrv
0000000000a2a648 0000000000000008 b g_smGuard
0000000000a2a650 0000000000000008 b g_smOverridesNum
0000000000a2a658 0000000000000180 b g_smOverrides
0000000000a2a7d8 0000000000000010 b g_smSrv
0000000000a2a7e8 0000000000000008 b g_appletGuard
0000000000a2a7f0 0000000000000001 b g_appletInfoInitialized
0000000000a2a7f8 0000000000000050 b g_appletInfo
0000000000a2a848 0000000000000004 b g_appletCpuBoostMode
0000000000a2a84c 0000000000000004 b g_appletThemeColorType
0000000000a2a850 000000000000000c b g_appletLibraryAppletLaunchableEvent
0000000000a2a85c 0000000000000001 b g_appletSuspendedTickInitialized
0000000000a2a860 0000000000000008 b g_appletSuspendedTick
0000000000a2a868 0000000000000008 b g_appletInitTickBase
0000000000a2a870 000000000000000c b g_appletSuspendedTickEvent
0000000000a2a87c 0000000000000001 b g_appletCopyrightInitialized
0000000000a2a880 0000000000000028 b g_appletCopyrightTmem
0000000000a2a8a8 0000000000000004 b g_appletRecordingInitialized
0000000000a2a8b0 0000000000000028 b g_appletRecordingTmem
0000000000a2a8d8 0000000000000018 b g_appletFirstHook
0000000000a2a8f0 0000000000000001 b g_appletNotifiedRunning
0000000000a2a8f1 0000000000000001 b g_appletFocusState
0000000000a2a8f4 0000000000000004 b g_appletPerformanceMode
0000000000a2a8f8 0000000000000001 b g_appletOperationMode
0000000000a2a900 0000000000000008 b g_appletResourceUserId
0000000000a2a908 000000000000000c b g_appletMessageEvent
0000000000a2a918 0000000000000010 b g_appletIDebugFunctions
0000000000a2a928 0000000000000010 b g_appletIDisplayController
0000000000a2a938 0000000000000010 b g_appletIAudioController
0000000000a2a948 0000000000000010 b g_appletIWindowController
0000000000a2a958 0000000000000010 b g_appletISelfController
0000000000a2a968 0000000000000010 b g_appletICommonStateGetter
0000000000a2a978 0000000000000010 b g_appletILibraryAppletCreator
0000000000a2a988 0000000000000010 b g_appletIProcessWindingController
0000000000a2a998 0000000000000010 b g_appletILibraryAppletSelfAccessor
0000000000a2a9a8 0000000000000010 b g_appletIApplicationCreator
0000000000a2a9b8 0000000000000010 b g_appletIGlobalStateController
0000000000a2a9c8 0000000000000010 b g_appletIFunctions
0000000000a2a9d8 0000000000000010 b g_appletIAppletCommonFunctions
0000000000a2a9e8 0000000000000004 b g_appletExitProcessResult
0000000000a2a9ec 0000000000000001 b g_appletExitProcessFlag
0000000000a2a9ed 0000000000000001 b g_appletLeftInitialized
0000000000a2a9f0 0000000000000010 b g_appletProxySession
0000000000a2aa00 0000000000000010 b g_appletSrv
0000000000a2aa10 0000000000000004 V __nx_applet_exit_mode
0000000000a2aa18 0000000000000008 V __nx_applet_PerformanceConfiguration
0000000000a2aa20 0000000000000080 V __nx_applet_AppletAttribute
0000000000a2aaa0 0000000000000008 b g_audoutGuard
0000000000a2aaa8 0000000000000004 b g_pcmFormat
0000000000a2aaac 0000000000000004 b g_channelCount
0000000000a2aab0 0000000000000004 b g_sampleRate
0000000000a2aab8 000000000000000c b g_audoutBufferEvent
0000000000a2aac8 0000000000000010 b g_audoutIAudioOut
0000000000a2aad8 0000000000000010 b g_audoutSrv
0000000000a2aae8 0000000000000008 b g_hidGuard
0000000000a2aaf0 0000000000000008 b g_sevenSixAxisSensorBuffer
0000000000a2aaf8 0000000000000004 b g_hidVibrationMutex
0000000000a2ab00 0000000000000020 b g_hidSharedmem
0000000000a2ab20 0000000000000010 b g_hidIActiveVibrationDeviceList
0000000000a2ab30 0000000000000010 b g_hidIAppletResource
0000000000a2ab40 0000000000000010 b g_hidSrv
0000000000a2ab50 0000000000000008 b g_nvFenceGuard
0000000000a2ab58 0000000000000300 b g_NvEvents
0000000000a2ae58 0000000000000008 b g_NvEventUsedMask
0000000000a2ae60 0000000000000008 b g_nvGpuGuard
0000000000a2ae68 0000000000000004 b g_tpc_masks
0000000000a2ae70 0000000000000028 b g_zcull_info
0000000000a2ae98 0000000000000004 b g_zcull_ctx_size
0000000000a2aea0 00000000000000a0 b g_gpu_characteristics
0000000000a2af40 0000000000000008 b g_nvMapGuard
0000000000a2af48 0000000000000080 b g_defaultWin
0000000000a2afc8 0000000000000010 b g_viLayer
0000000000a2afd8 0000000000000050 b g_viDisplay
0000000000a2b028 0000000000000004 b g_hosVersion
0000000000a2b030 0000000000000008 b g_userIdStorage
0000000000a2b040 0000000000000010 b g_randomSeed
0000000000a2b050 0000000000000001 b g_hasRandomSeed
0000000000a2b054 0000000000000004 b g_lastLoadResult
0000000000a2b058 0000000000000008 b g_nextLoadArgv
0000000000a2b060 0000000000000008 b g_nextLoadPath
0000000000a2b068 0000000000000004 b g_processHandle
0000000000a2b070 0000000000000018 b g_syscallHints
0000000000a2b088 0000000000000008 b g_overrideArgv
0000000000a2b090 0000000000000008 b g_overrideHeapSize
0000000000a2b098 0000000000000008 b g_overrideHeapAddr
0000000000a2b0a0 0000000000000008 b g_loaderRetAddr
0000000000a2b0a8 0000000000000004 b g_mainThreadHandle
0000000000a2b0b0 0000000000000008 b g_loaderInfoSize
0000000000a2b0b8 0000000000000008 b g_loaderInfo
0000000000a2b0c0 0000000000000001 b g_isNso
0000000000a2b0c8 0000000000000008 V __romfs_path
0000000000a2b0d0 0000000000003b00 b romfs_mounts
0000000000a2ebd0 0000000000000001 b romfs_initialised
0000000000a2ebd8 0000000000002800 b fsdev_fsdevices
0000000000a313d8 0000000000000004 b fsdev_fsdevice_cwd
0000000000a313dc 0000000000000001 b fsdev_initialised
0000000000a313e0 B __stack_top
0000000000a313e8 0000000000000001 b g_IsLegacyKernel
0000000000a313f0 0000000000000008 b g_Reservations
0000000000a313f8 0000000000000010 b g_StackRegion
0000000000a31408 0000000000000010 b g_AslrRegion
0000000000a31418 0000000000000010 b g_HeapRegion
0000000000a31428 0000000000000010 b g_AliasRegion
0000000000a31438 0000000000000004 b g_VirtmemMutex
0000000000a3143c 0000000000000004 b g_randMutex
0000000000a31440 0000000000000001 b g_randInit
0000000000a31450 0000000000000040 b g_chacha
0000000000a31490 0000000000000008 b g_viGuard
0000000000a31498 0000000000000010 b g_viIHOSBinderDriverIndirect
0000000000a314a8 0000000000000010 b g_viIManagerDisplayService
0000000000a314b8 0000000000000010 b g_viISystemDisplayService
0000000000a314c8 0000000000000010 b g_viIHOSBinderDriverRelay
0000000000a314d8 0000000000000010 b g_viIApplicationDisplayService
0000000000a314e8 0000000000000010 b g_viRootService
0000000000a314f8 0000000000000008 V __nx_vi_layer_id
0000000000a31500 0000000000000008 b g_apmGuard
0000000000a31508 0000000000000010 b g_apmISession
0000000000a31518 0000000000000010 b g_apmSrv
0000000000a31528 0000000000000008 b g_fsGuard
0000000000a31530 0000000000000054 b g_fsSessionMgr
0000000000a31588 0000000000000010 b g_fsSrv
0000000000a315a0 0000000000000054 b g_bsdSessionMgr
0000000000a315f8 0000000000000008 b g_timeGuard
0000000000a31600 0000000000000020 b g_timeSharedmem
0000000000a31620 0000000000000010 b g_timeLocalSystemClock
0000000000a31630 0000000000000010 b g_timeTimeZoneService
0000000000a31640 0000000000000010 b g_timeSteadyClock
0000000000a31650 0000000000000010 b g_timeNetworkSystemClock
0000000000a31660 0000000000000010 b g_timeUserSystemClock
0000000000a31670 0000000000000010 b g_timeSrv
0000000000a31680 0000000000000004 V __nx_time_service_type
0000000000a31684 0000000000000001 b g_libappletJumpFlag
0000000000a31690 0000000000000340 B __nx_exceptiondump
0000000000a319d0 0000000000000004 V __nx_exception_ignoredebug
0000000000a319e0 0000000000000400 V __nx_exception_stack
0000000000a31de0 0000000000000008 V __nx_heap_size
0000000000a31de8 0000000000000008 b __bootticks
0000000000a31df0 0000000000000008 b __boottime
0000000000a31df8 0000000000000004 V __nx_time_type
0000000000a31e00 0000000000000008 b g_argv_empty
0000000000a31e08 0000000000000008 B __system_argv
0000000000a31e10 0000000000000004 B __system_argc
0000000000a31e20 00000000000000d8 b g_tlsDestructors
0000000000a31ef8 0000000000000008 b g_tlsUsageMask
0000000000a31f00 0000000000000038 b g_mainThread
0000000000a31f38 0000000000000008 b g_threadList
0000000000a31f40 0000000000000004 b g_threadMutex
0000000000a31f48 0000000000000008 b g_setsysGuard
0000000000a31f50 0000000000000010 b g_setsysSrv
0000000000a31f60 0000000000000004 B __nxlink_host
0000000000a31f68 0000000000000004 b (anonymous namespace)::get_static_cond()::once
0000000000a31f70 0000000000000010 b (anonymous namespace)::fake_cond
0000000000a31f80 0000000000000008 b (anonymous namespace)::static_cond
0000000000a31f88 0000000000000004 b (anonymous namespace)::get_static_mutex()::once
0000000000a31f90 0000000000000010 b (anonymous namespace)::fake_mutex
0000000000a31fa0 0000000000000008 b (anonymous namespace)::static_mutex
0000000000a31fb0 0000000000000050 B __gnu_internal::buf_wcerr_sync
0000000000a32000 0000000000000050 B __gnu_internal::buf_wcin_sync
0000000000a32050 0000000000000050 B __gnu_internal::buf_wcout_sync
0000000000a320a0 0000000000000050 B __gnu_internal::buf_cerr_sync
0000000000a320f0 0000000000000050 B __gnu_internal::buf_cin_sync
0000000000a32140 0000000000000050 B __gnu_internal::buf_cout_sync
0000000000a32190 0000000000000001 b std::__ioinit
0000000000a32198 0000000000000110 B std::wclog
0000000000a322a8 0000000000000110 B std::wcerr
0000000000a323b8 0000000000000110 B std::wcout
0000000000a324c8 0000000000000118 B std::wcin
0000000000a325e0 0000000000000110 B std::clog
0000000000a326f0 0000000000000110 B std::cerr
0000000000a32800 0000000000000110 B std::cout
0000000000a32910 0000000000000118 B std::cin
0000000000a32a28 0000000000000004 B std::locale::id::_S_refcount
0000000000a32a30 0000000000000004 B std::locale::facet::_S_once
0000000000a32a38 0000000000000008 B std::locale::facet::_S_c_locale
0000000000a32a40 0000000000000004 B std::locale::_S_once
0000000000a32a48 0000000000000008 B std::locale::_S_global
0000000000a32a50 0000000000000008 B std::locale::_S_classic
0000000000a32a58 0000000000000008 b guard variable for (anonymous namespace)::get_locale_cache_mutex()::locale_cache_mutex
0000000000a32a60 0000000000000010 b (anonymous namespace)::get_locale_cache_mutex()::locale_cache_mutex
0000000000a32a70 0000000000000190 b (anonymous namespace)::timepunct_cache_w
0000000000a32c00 00000000000000a0 b (anonymous namespace)::moneypunct_cache_wf
0000000000a32ca0 00000000000000a0 b (anonymous namespace)::moneypunct_cache_wt
0000000000a32d40 0000000000000150 b (anonymous namespace)::numpunct_cache_w
0000000000a32e90 0000000000000190 b (anonymous namespace)::timepunct_cache_c
0000000000a33020 0000000000000070 b (anonymous namespace)::moneypunct_cache_cf
0000000000a33090 0000000000000070 b (anonymous namespace)::moneypunct_cache_ct
0000000000a33100 0000000000000090 b (anonymous namespace)::numpunct_cache_c
0000000000a33190 0000000000000010 b (anonymous namespace)::codecvt_c32_c8
0000000000a331a0 0000000000000010 b (anonymous namespace)::codecvt_c16_c8
0000000000a331b0 0000000000000010 b (anonymous namespace)::codecvt_c32
0000000000a331c0 0000000000000010 b (anonymous namespace)::codecvt_c16
0000000000a331d0 0000000000000020 b (anonymous namespace)::messages_w
0000000000a331f0 0000000000000010 b (anonymous namespace)::time_put_w
0000000000a33200 0000000000000010 b (anonymous namespace)::time_get_w
0000000000a33210 0000000000000028 b (anonymous namespace)::timepunct_w
0000000000a33240 0000000000000010 b (anonymous namespace)::money_put_w
0000000000a33250 0000000000000010 b (anonymous namespace)::money_get_w
0000000000a33260 0000000000000018 b (anonymous namespace)::moneypunct_wf
0000000000a33280 0000000000000018 b (anonymous namespace)::moneypunct_wt
0000000000a332a0 0000000000000018 b (anonymous namespace)::codecvt_w
0000000000a332c0 0000000000000010 b (anonymous namespace)::num_put_w
0000000000a332d0 0000000000000010 b (anonymous namespace)::num_get_w
0000000000a332e0 0000000000000018 b (anonymous namespace)::numpunct_w
0000000000a33300 0000000000000018 b (anonymous namespace)::collate_w
0000000000a33320 00000000000004f0 b (anonymous namespace)::ctype_w
0000000000a33810 0000000000000020 b (anonymous namespace)::messages_c
0000000000a33830 0000000000000010 b (anonymous namespace)::time_put_c
0000000000a33840 0000000000000010 b (anonymous namespace)::time_get_c
0000000000a33850 0000000000000028 b (anonymous namespace)::timepunct_c
0000000000a33880 0000000000000010 b (anonymous namespace)::money_put_c
0000000000a33890 0000000000000010 b (anonymous namespace)::money_get_c
0000000000a338a0 0000000000000018 b (anonymous namespace)::moneypunct_cf
0000000000a338c0 0000000000000018 b (anonymous namespace)::moneypunct_ct
0000000000a338e0 0000000000000018 b (anonymous namespace)::codecvt_c
0000000000a33900 0000000000000010 b (anonymous namespace)::num_put_c
0000000000a33910 0000000000000010 b (anonymous namespace)::num_get_c
0000000000a33920 0000000000000018 b (anonymous namespace)::numpunct_c
0000000000a33940 0000000000000018 b (anonymous namespace)::collate_c
0000000000a33960 0000000000000240 b (anonymous namespace)::ctype_c
0000000000a33ba0 0000000000000180 b (anonymous namespace)::cache_vec
0000000000a33d20 0000000000000180 b (anonymous namespace)::facet_vec
0000000000a33ea0 000000000000000c b (anonymous namespace)::name_c
0000000000a33eb0 0000000000000030 b (anonymous namespace)::name_vec
0000000000a33ee0 0000000000000008 b (anonymous namespace)::c_locale
0000000000a33ef0 0000000000000028 b (anonymous namespace)::c_locale_impl
0000000000a33f18 0000000000000008 b guard variable for (anonymous namespace)::get_locale_mutex()::locale_mutex
0000000000a33f20 0000000000000010 b (anonymous namespace)::get_locale_mutex()::locale_mutex
0000000000a33f30 0000000000000008 B std::codecvt<char32_t, char8_t, _mbstate_t>::id
0000000000a33f38 0000000000000008 B std::codecvt<char16_t, char8_t, _mbstate_t>::id
0000000000a33f40 0000000000000008 B std::codecvt<char32_t, char, _mbstate_t>::id
0000000000a33f48 0000000000000008 B std::codecvt<char16_t, char, _mbstate_t>::id
0000000000a33f50 0000000000000020 b std::(anonymous namespace)::messages_w
0000000000a33f70 0000000000000010 b std::(anonymous namespace)::time_get_w
0000000000a33f80 0000000000000010 b std::(anonymous namespace)::money_put_w
0000000000a33f90 0000000000000010 b std::(anonymous namespace)::money_get_w
0000000000a33fa0 0000000000000018 b std::(anonymous namespace)::moneypunct_wf
0000000000a33fc0 0000000000000018 b std::(anonymous namespace)::moneypunct_wt
0000000000a33fe0 0000000000000018 b std::(anonymous namespace)::numpunct_w
0000000000a34000 0000000000000018 b std::(anonymous namespace)::collate_w
0000000000a34020 0000000000000020 b std::(anonymous namespace)::messages_c
0000000000a34040 0000000000000010 b std::(anonymous namespace)::time_get_c
0000000000a34050 0000000000000010 b std::(anonymous namespace)::money_put_c
0000000000a34060 0000000000000010 b std::(anonymous namespace)::money_get_c
0000000000a34070 0000000000000018 b std::(anonymous namespace)::moneypunct_cf
0000000000a34090 0000000000000018 b std::(anonymous namespace)::moneypunct_ct
0000000000a340b0 0000000000000018 b std::(anonymous namespace)::numpunct_c
0000000000a340d0 0000000000000018 b std::(anonymous namespace)::collate_c
0000000000a340e8 0000000000000020 V std::string::_Rep::_S_empty_rep_storage
0000000000a34108 0000000000000020 V std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_S_empty_rep_storage
0000000000a34128 0000000000000008 B std::ctype<wchar_t>::id
0000000000a34130 0000000000000008 B std::ctype<char>::id
0000000000a34138 0000000000000008 V guard variable for std::__cxx11::collate<char>::id
0000000000a34140 0000000000000008 V guard variable for std::__cxx11::messages<char>::id
0000000000a34148 0000000000000008 V guard variable for std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
0000000000a34150 0000000000000008 V guard variable for std::__cxx11::numpunct<char>::id
0000000000a34158 0000000000000008 V guard variable for std::__cxx11::moneypunct<char, true>::id
0000000000a34160 0000000000000008 V guard variable for std::__cxx11::moneypunct<char, false>::id
0000000000a34168 0000000000000008 V guard variable for std::__cxx11::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::id
0000000000a34170 0000000000000008 V guard variable for std::__cxx11::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
0000000000a34178 0000000000000008 V std::__cxx11::collate<char>::id
0000000000a34180 0000000000000008 V std::__cxx11::messages<char>::id
0000000000a34188 0000000000000008 V std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
0000000000a34190 0000000000000008 V std::__cxx11::numpunct<char>::id
0000000000a34198 0000000000000008 V std::__cxx11::moneypunct<char, true>::id
0000000000a341a0 0000000000000008 V std::__cxx11::moneypunct<char, false>::id
0000000000a341a8 0000000000000008 V std::__cxx11::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::id
0000000000a341b0 0000000000000008 V std::__cxx11::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
0000000000a341b8 0000000000000008 V guard variable for std::__cxx11::collate<wchar_t>::id
0000000000a341c0 0000000000000008 V guard variable for std::__cxx11::messages<wchar_t>::id
0000000000a341c8 0000000000000008 V guard variable for std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0000000000a341d0 0000000000000008 V guard variable for std::__cxx11::numpunct<wchar_t>::id
0000000000a341d8 0000000000000008 V guard variable for std::__cxx11::moneypunct<wchar_t, true>::id
0000000000a341e0 0000000000000008 V guard variable for std::__cxx11::moneypunct<wchar_t, false>::id
0000000000a341e8 0000000000000008 V guard variable for std::__cxx11::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0000000000a341f0 0000000000000008 V guard variable for std::__cxx11::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0000000000a341f8 0000000000000008 V std::__cxx11::collate<wchar_t>::id
0000000000a34200 0000000000000008 V std::__cxx11::messages<wchar_t>::id
0000000000a34208 0000000000000008 V std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0000000000a34210 0000000000000008 V std::__cxx11::numpunct<wchar_t>::id
0000000000a34218 0000000000000008 V std::__cxx11::moneypunct<wchar_t, true>::id
0000000000a34220 0000000000000008 V std::__cxx11::moneypunct<wchar_t, false>::id
0000000000a34228 0000000000000008 V std::__cxx11::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0000000000a34230 0000000000000008 V std::__cxx11::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0000000000a34238 0000000000000004 B std::ios_base::Init::_S_refcount
0000000000a34240 0000000000000008 V guard variable for std::collate<char>::id
0000000000a34248 0000000000000008 V guard variable for std::messages<char>::id
0000000000a34250 0000000000000008 V guard variable for std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
0000000000a34258 0000000000000008 V guard variable for std::time_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::id
0000000000a34260 0000000000000008 V guard variable for std::__timepunct<char>::id
0000000000a34268 0000000000000008 V guard variable for std::numpunct<char>::id
0000000000a34270 0000000000000008 V guard variable for std::moneypunct<char, true>::id
0000000000a34278 0000000000000008 V guard variable for std::moneypunct<char, false>::id
0000000000a34280 0000000000000008 V guard variable for std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::id
0000000000a34288 0000000000000008 V guard variable for std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
0000000000a34290 0000000000000008 V guard variable for std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::id
0000000000a34298 0000000000000008 V guard variable for std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
0000000000a342a0 0000000000000008 V std::collate<char>::id
0000000000a342a8 0000000000000008 V std::messages<char>::id
0000000000a342b0 0000000000000008 V std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
0000000000a342b8 0000000000000008 V std::time_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::id
0000000000a342c0 0000000000000008 V std::__timepunct<char>::id
0000000000a342c8 0000000000000008 V std::numpunct<char>::id
0000000000a342d0 0000000000000008 V std::moneypunct<char, true>::id
0000000000a342d8 0000000000000008 V std::moneypunct<char, false>::id
0000000000a342e0 0000000000000008 V std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::id
0000000000a342e8 0000000000000008 V std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
0000000000a342f0 0000000000000008 V std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::id
0000000000a342f8 0000000000000008 V std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
0000000000a34300 0000000000000008 V guard variable for std::collate<wchar_t>::id
0000000000a34308 0000000000000008 V guard variable for std::messages<wchar_t>::id
0000000000a34310 0000000000000008 V guard variable for std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0000000000a34318 0000000000000008 V guard variable for std::time_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0000000000a34320 0000000000000008 V guard variable for std::__timepunct<wchar_t>::id
0000000000a34328 0000000000000008 V guard variable for std::numpunct<wchar_t>::id
0000000000a34330 0000000000000008 V guard variable for std::moneypunct<wchar_t, true>::id
0000000000a34338 0000000000000008 V guard variable for std::moneypunct<wchar_t, false>::id
0000000000a34340 0000000000000008 V guard variable for std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0000000000a34348 0000000000000008 V guard variable for std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0000000000a34350 0000000000000008 V guard variable for std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0000000000a34358 0000000000000008 V guard variable for std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0000000000a34360 0000000000000008 V std::collate<wchar_t>::id
0000000000a34368 0000000000000008 V std::messages<wchar_t>::id
0000000000a34370 0000000000000008 V std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0000000000a34378 0000000000000008 V std::time_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0000000000a34380 0000000000000008 V std::__timepunct<wchar_t>::id
0000000000a34388 0000000000000008 V std::numpunct<wchar_t>::id
0000000000a34390 0000000000000008 V std::moneypunct<wchar_t, true>::id
0000000000a34398 0000000000000008 V std::moneypunct<wchar_t, false>::id
0000000000a343a0 0000000000000008 V std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0000000000a343a8 0000000000000008 V std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0000000000a343b0 0000000000000008 V std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0000000000a343b8 0000000000000008 V std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
0000000000a343c0 0000000000000028 b (anonymous namespace)::emergency_pool
0000000000a343e8 0000000000000004 b init
0000000000a343ec 0000000000000001 B __eh_globals_init::_S_init
0000000000a343f0 0000000000000010 b (anonymous namespace)::eh_globals
0000000000a34400 0000000000000008 b (anonymous namespace)::__new_handler
0000000000a34408 0000000000000008 B std::codecvt<wchar_t, char, _mbstate_t>::id
0000000000a34410 0000000000000008 B std::codecvt<char, char, _mbstate_t>::id
0000000000a34418 0000000000000004 b once_regsizes.0
0000000000a34420 0000000000000062 b dwarf_reg_size_table
0000000000a34488 0000000000000010 b object_mutex
0000000000a34498 0000000000000008 b seen_objects
0000000000a344a0 0000000000000008 b unseen_objects
0000000000a344a8 0000000000000004 b alloced.0
0000000000a344b0 0000000000000008 b initial_env
0000000000a344b8 000000000000000c b __env_recursive_mutex
0000000000a344c8 0000000000000028 B __malloc_current_mallinfo
0000000000a344f0 0000000000000008 B __malloc_max_total_mem
0000000000a344f8 0000000000000008 B __malloc_max_sbrked_mem
0000000000a34500 0000000000000008 B __malloc_top_pad
0000000000a34508 000000000000000c b __malloc_recursive_mutex
0000000000a34518 000000000000000c b __sfp_recursive_mutex
0000000000a34528 0000000000000228 B __sf
0000000000a34750 0000000000000008 B __stdio_exit_handler
0000000000a34760 00000000000000e0 b saved_categories.0
0000000000a34840 00000000000000e0 b new_categories.1
0000000000a34920 00000000000000e7 b global_locale_string
0000000000a34a08 0000000000000318 B __atexit0
0000000000a34d20 0000000000000008 B __atexit
0000000000a34d28 000000000000000c B __atexit_recursive_mutex
0000000000a34d34 0000000000000004 b __tz_mutex
0000000000a34d38 0000000000000008 b prev_tzenv
0000000000a34d40 000000000000000c b __tzname_dst
0000000000a34d50 000000000000000c b __tzname_std
0000000000a34d60 0000000000000008 B _timezone
0000000000a34d68 0000000000000004 B _daylight
0000000000a34d70 0000000000000400 b temp_cwd
0000000000a35170 0000000000000004 b __hndl_lock
0000000000a35178 0000000000000008 B fake_heap_start
0000000000a35180 0000000000000008 B fake_heap_end
0000000000a35188 0000000000000004 b __pthread_once_cv
0000000000a3518c 0000000000000004 b __pthread_once_lock
0000000000a35190 0000000000000008 b heap_start.0
0000000000a35198 0000000000000020 B music_spec
0000000000a351b8 0000000000000400 B master_drumset
0000000000a355b8 0000000000000400 B master_tonebank
0000000000a359b8 B __tls_start
0000000000a35de8 B __bss_end__
0000000000a35de8 A __end__
0000000000a35de8 B __tls_end
0000000000a36000 A __argdata__
